;; Function fe51_mul (fe51_mul, funcdef_no=380, decl_uid=17481, cgraph_uid=381, symbol_order=381)

__attribute__((access ("^0[5]^1[5]^2[5]", )))
void fe51_mul (uint64_t * h, const uint64_t * f, const uint64_t * g)
{
  uint64_t g4;
  uint64_t g3;
  uint64_t g2;
  uint64_t g1;
  uint64_t g0;
  uint64_t f_i;
  u128 h4;
  u128 h3;
  u128 h2;
  u128 h1;
  u128 h0;
  __int128 unsigned _1;
  __int128 unsigned _2;
  __int128 unsigned _3;
  __int128 unsigned _4;
  __int128 unsigned _5;
  __int128 unsigned _6;
  __int128 unsigned _7;
  __int128 unsigned _8;
  __int128 unsigned _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  __int128 unsigned _12;
  __int128 unsigned _13;
  __int128 unsigned _14;
  __int128 unsigned _15;
  __int128 unsigned _16;
  __int128 unsigned _17;
  __int128 unsigned _18;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _21;
  __int128 unsigned _22;
  __int128 unsigned _23;
  __int128 unsigned _24;
  __int128 unsigned _25;
  __int128 unsigned _26;
  __int128 unsigned _27;
  __int128 unsigned _28;
  __int128 unsigned _29;
  __int128 unsigned _30;
  __int128 unsigned _31;
  long long unsigned int _32;
  __int128 unsigned _33;
  long long unsigned int _34;
  __int128 unsigned _35;
  long long unsigned int _36;
  __int128 unsigned _37;
  long long unsigned int _38;
  long long unsigned int _39;
  __int128 unsigned _40;
  long long unsigned int _41;
  long long unsigned int _42;
  long long unsigned int _43;
  long long unsigned int _44;
  long long unsigned int _45;
  __int128 unsigned _62;
  unsigned long _63;
  unsigned long _64;
  unsigned long _65;
  unsigned long _66;
  unsigned long _67;
  __int128 unsigned _70;
  unsigned long _71;
  unsigned long _72;
  unsigned long _73;
  unsigned long _74;
  unsigned long _75;
  __int128 unsigned _78;
  unsigned long _79;
  unsigned long _80;
  unsigned long _81;
  unsigned long _82;
  unsigned long _83;
  __int128 unsigned _86;
  unsigned long _88;
  unsigned long _90;
  unsigned long _91;
  __int128 unsigned _112;
  __int128 unsigned _113;
  __int128 unsigned _114;
  unsigned long _115;
  unsigned long _116;
  unsigned long _117;
  unsigned long _118;
  unsigned long _119;
  unsigned long _120;
  unsigned long _121;
  unsigned long _122;
  unsigned long _123;
  unsigned long _124;
  unsigned long _125;
  unsigned long _126;
  unsigned long _127;
  unsigned long _128;
  unsigned long _129;
  unsigned long _130;
  unsigned long _131;
  unsigned long _132;
  unsigned long _133;
  unsigned long _134;
  unsigned long _135;
  unsigned long _136;
  __int128 unsigned _137;
  __int128 unsigned _138;
  __int128 unsigned _139;
  __int128 unsigned _140;
  __int128 unsigned _141;
  __int128 unsigned _142;
  __int128 unsigned _143;
  __int128 unsigned _144;
  __int128 unsigned _145;
  __int128 unsigned _146;
  __int128 unsigned _147;
  __int128 unsigned _148;
  __int128 unsigned _149;
  __int128 unsigned _150;
  __int128 unsigned _151;
  __int128 unsigned _152;
  __int128 unsigned _153;
  __int128 unsigned _154;
  unsigned long _155;
  unsigned long _156;
  unsigned long _157;
  unsigned long _158;
  unsigned long _159;
  unsigned long _160;
  unsigned long _161;
  unsigned long _162;
  unsigned long _163;
  unsigned long _164;

  <bb 2> [local count: 1073741824]:
  f_i_48 = *f_47(D);
  _1 = (__int128 unsigned) f_i_48;
  g0_50 = *g_49(D);
  _2 = (__int128 unsigned) g0_50;
  _63 = (unsigned long) _1;
  _71 = (unsigned long) _2;
  h0_51 = _63 w* _71;
  g1_52 = MEM[(const uint64_t *)g_49(D) + 8B];
  _3 = (__int128 unsigned) g1_52;
  _79 = (unsigned long) _1;
  _65 = (unsigned long) _3;
  h1_53 = _79 w* _65;
  g2_54 = MEM[(const uint64_t *)g_49(D) + 16B];
  _4 = (__int128 unsigned) g2_54;
  _73 = (unsigned long) _1;
  _81 = (unsigned long) _4;
  h2_55 = _73 w* _81;
  g3_56 = MEM[(const uint64_t *)g_49(D) + 24B];
  _5 = (__int128 unsigned) g3_56;
  _66 = (unsigned long) _1;
  _74 = (unsigned long) _5;
  h3_57 = _66 w* _74;
  g4_58 = MEM[(const uint64_t *)g_49(D) + 32B];
  _6 = (__int128 unsigned) g4_58;
  _82 = (unsigned long) _1;
  _90 = (unsigned long) _6;
  h4_59 = _82 w* _90;
  f_i_60 = MEM[(const uint64_t *)f_47(D) + 8B];
  _7 = (__int128 unsigned) f_i_60;
  g4_61 = g4_58 * 19;
  _8 = (__int128 unsigned) g4_61;
  _64 = (unsigned long) _7;
  _72 = (unsigned long) _8;
  _62 = _64 w* _72;
  _139 = h0_51 + _62;
  _80 = (unsigned long) _2;
  _88 = (unsigned long) _7;
  _9 = _80 w* _88;
  _150 = _9 + h1_53;
  _67 = (unsigned long) _3;
  _75 = (unsigned long) _7;
  _10 = _67 w* _75;
  _142 = _10 + h2_55;
  _83 = (unsigned long) _4;
  _91 = (unsigned long) _7;
  _11 = _83 w* _91;
  _146 = _11 + h3_57;
  _136 = (unsigned long) _5;
  _135 = (unsigned long) _7;
  _12 = _136 w* _135;
  _154 = _12 + h4_59;
  f_i_68 = MEM[(const uint64_t *)f_47(D) + 16B];
  _13 = (__int128 unsigned) f_i_68;
  g3_69 = g3_56 * 19;
  _14 = (__int128 unsigned) g3_69;
  _134 = (unsigned long) _13;
  _133 = (unsigned long) _14;
  _70 = _134 w* _133;
  _132 = (unsigned long) _8;
  _131 = (unsigned long) _13;
  _15 = _132 w* _131;
  _130 = (unsigned long) _2;
  _129 = (unsigned long) _13;
  _16 = _130 w* _129;
  _128 = (unsigned long) _3;
  _127 = (unsigned long) _13;
  _17 = _128 w* _127;
  _126 = (unsigned long) _4;
  _125 = (unsigned long) _13;
  _18 = _126 w* _125;
  f_i_76 = MEM[(const uint64_t *)f_47(D) + 24B];
  _19 = (__int128 unsigned) f_i_76;
  g2_77 = g2_54 * 19;
  _20 = (__int128 unsigned) g2_77;
  _124 = (unsigned long) _19;
  _123 = (unsigned long) _20;
  _78 = _124 w* _123;
  _138 = _70 + _78;
  _122 = (unsigned long) _14;
  _121 = (unsigned long) _19;
  _21 = _122 w* _121;
  _149 = _15 + _21;
  _120 = (unsigned long) _8;
  _119 = (unsigned long) _19;
  _22 = _120 w* _119;
  _141 = _16 + _22;
  _118 = (unsigned long) _2;
  _117 = (unsigned long) _19;
  _23 = _118 w* _117;
  _145 = _17 + _23;
  _116 = (unsigned long) _3;
  _115 = (unsigned long) _19;
  _24 = _116 w* _115;
  _153 = _18 + _24;
  f_i_84 = MEM[(const uint64_t *)f_47(D) + 32B];
  _25 = (__int128 unsigned) f_i_84;
  g1_85 = g1_52 * 19;
  _26 = (__int128 unsigned) g1_85;
  _155 = (unsigned long) _25;
  _156 = (unsigned long) _26;
  _86 = _155 w* _156;
  _137 = _86 + _139;
  h0_87 = _137 + _138;
  _157 = (unsigned long) _20;
  _158 = (unsigned long) _25;
  _27 = _157 w* _158;
  _148 = _27 + _150;
  _159 = (unsigned long) _14;
  _160 = (unsigned long) _25;
  _28 = _159 w* _160;
  _140 = _28 + _142;
  h2_89 = _140 + _141;
  _161 = (unsigned long) _8;
  _162 = (unsigned long) _25;
  _29 = _161 w* _162;
  _144 = _29 + _146;
  _163 = (unsigned long) _2;
  _164 = (unsigned long) _25;
  _30 = _163 w* _164;
  _152 = _30 + _154;
  _31 = h2_89 >> 51;
  _112 = _31 & 18446744073709551615;
  _143 = _112 + _145;
  h3_92 = _143 + _144;
  _32 = (long long unsigned int) h2_89;
  g2_93 = _32 & 2251799813685247;
  _33 = h0_87 >> 51;
  _113 = _33 & 18446744073709551615;
  _147 = _113 + _149;
  h1_94 = _147 + _148;
  _34 = (long long unsigned int) h0_87;
  g0_95 = _34 & 2251799813685247;
  _35 = h3_92 >> 51;
  _114 = _35 & 18446744073709551615;
  _151 = _114 + _153;
  h4_96 = _151 + _152;
  _36 = (long long unsigned int) h3_92;
  g3_97 = _36 & 2251799813685247;
  _37 = h1_94 >> 51;
  _38 = (long long unsigned int) _37;
  g2_98 = _38 + g2_93;
  _39 = (long long unsigned int) h1_94;
  g1_99 = _39 & 2251799813685247;
  _40 = h4_96 >> 51;
  _41 = (long long unsigned int) _40;
  _42 = _41 * 19;
  g0_100 = _42 + g0_95;
  _43 = (long long unsigned int) h4_96;
  g4_101 = _43 & 2251799813685247;
  _44 = g2_98 >> 51;
  g3_102 = _44 + g3_97;
  g2_103 = g2_98 & 2251799813685247;
  _45 = g0_100 >> 51;
  g1_104 = _45 + g1_99;
  g0_105 = g0_100 & 2251799813685247;
  *h_106(D) = g0_105;
  MEM[(uint64_t *)h_106(D) + 8B] = g1_104;
  MEM[(uint64_t *)h_106(D) + 16B] = g2_103;
  MEM[(uint64_t *)h_106(D) + 24B] = g3_102;
  MEM[(uint64_t *)h_106(D) + 32B] = g4_101;
  return;

}



;; Function fe51_sq (fe51_sq, funcdef_no=381, decl_uid=17496, cgraph_uid=382, symbol_order=382)

__attribute__((access ("^0[5]^1[5]", )))
void fe51_sq (uint64_t * h, const uint64_t * f)
{
  u128 h4;
  u128 h3;
  u128 h2;
  u128 h1;
  u128 h0;
  uint64_t g4;
  uint64_t g3;
  uint64_t g2;
  uint64_t g1;
  uint64_t g0;
  __int128 unsigned _1;
  __int128 unsigned _2;
  __int128 unsigned _3;
  __int128 unsigned _4;
  __int128 unsigned _5;
  __int128 unsigned _6;
  __int128 unsigned _7;
  __int128 unsigned _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  __int128 unsigned _12;
  __int128 unsigned _13;
  long long unsigned int _14;
  __int128 unsigned _15;
  __int128 unsigned _16;
  unsigned long _17;
  __int128 unsigned _18;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _21;
  long long unsigned int _22;
  __int128 unsigned _23;
  long long unsigned int _24;
  __int128 unsigned _25;
  long long unsigned int _26;
  __int128 unsigned _27;
  long long unsigned int _28;
  long long unsigned int _29;
  __int128 unsigned _30;
  long long unsigned int _31;
  long long unsigned int _32;
  long long unsigned int _33;
  long long unsigned int _34;
  long long unsigned int _35;
  __int128 unsigned _49;
  __int128 unsigned _51;
  unsigned long _52;
  unsigned long _53;
  unsigned long _55;
  unsigned long _56;
  unsigned long _57;
  __int128 unsigned _58;
  __int128 unsigned _60;
  unsigned long _61;
  unsigned long _63;
  unsigned long _66;
  __int128 unsigned _87;
  __int128 unsigned _88;
  __int128 unsigned powmult_89;
  __int128 unsigned _90;
  __int128 unsigned powmult_91;
  __int128 unsigned powmult_92;
  unsigned long _93;
  unsigned long _94;
  unsigned long _95;
  unsigned long _96;
  unsigned long _97;
  unsigned long _98;
  unsigned long _99;
  unsigned long _100;
  unsigned long _101;
  unsigned long _102;
  unsigned long _103;
  unsigned long _104;
  unsigned long _105;
  unsigned long _106;
  unsigned long _107;
  unsigned long _108;
  unsigned long _109;
  unsigned long _110;
  unsigned long _111;
  unsigned long _112;
  unsigned long _113;
  __int128 unsigned _114;
  __int128 unsigned _115;
  __int128 unsigned _116;
  __int128 unsigned _117;
  __int128 unsigned _118;
  __int128 unsigned _119;

  <bb 2> [local count: 1073741824]:
  g0_38 = *f_37(D);
  g1_39 = MEM[(const uint64_t *)f_37(D) + 8B];
  g2_40 = MEM[(const uint64_t *)f_37(D) + 16B];
  g3_41 = MEM[(const uint64_t *)f_37(D) + 24B];
  g4_42 = MEM[(const uint64_t *)f_37(D) + 32B];
  _1 = (__int128 unsigned) g0_38;
  _52 = (unsigned long) _1;
  _55 = (unsigned long) _1;
  powmult_92 = _52 w* _55;
  g0_44 = g0_38 * 2;
  _2 = (__int128 unsigned) g0_44;
  _3 = (__int128 unsigned) g1_39;
  _61 = (unsigned long) _2;
  _66 = (unsigned long) _3;
  h1_45 = _61 w* _66;
  _4 = (__int128 unsigned) g2_40;
  _56 = (unsigned long) _2;
  _63 = (unsigned long) _4;
  h2_46 = _56 w* _63;
  _5 = (__int128 unsigned) g3_41;
  _113 = (unsigned long) _2;
  _112 = (unsigned long) _5;
  h3_47 = _113 w* _112;
  _6 = (__int128 unsigned) g4_42;
  _111 = (unsigned long) _2;
  _110 = (unsigned long) _6;
  h4_48 = _111 w* _110;
  g4_50 = g4_42 * 19;
  _7 = (__int128 unsigned) g4_50;
  _109 = (unsigned long) _6;
  _108 = (unsigned long) _7;
  _51 = _109 w* _108;
  _115 = h3_47 + _51;
  _107 = (unsigned long) _3;
  _106 = (unsigned long) _3;
  powmult_91 = _107 w* _106;
  g1_54 = g1_39 * 2;
  _9 = (__int128 unsigned) g1_54;
  _105 = (unsigned long) _4;
  _104 = (unsigned long) _9;
  _10 = _105 w* _104;
  _103 = (unsigned long) _5;
  _102 = (unsigned long) _9;
  _11 = _103 w* _102;
  _119 = _11 + h4_48;
  _101 = (unsigned long) _7;
  _100 = (unsigned long) _9;
  _12 = _101 w* _100;
  g3_59 = g3_41 * 19;
  _13 = (__int128 unsigned) g3_59;
  _99 = (unsigned long) _5;
  _98 = (unsigned long) _13;
  _60 = _99 w* _98;
  _117 = h1_45 + _60;
  _14 = g3_41 * 2;
  _15 = (__int128 unsigned) _14;
  _97 = (unsigned long) _7;
  _96 = (unsigned long) _15;
  _16 = _97 w* _96;
  _90 = _16 + h2_46;
  h2_62 = _90 + powmult_91;
  _95 = (unsigned long) _4;
  _94 = (unsigned long) _4;
  powmult_89 = _95 w* _94;
  g2_64 = g2_40 * 2;
  _18 = (__int128 unsigned) g2_64;
  _93 = (unsigned long) _13;
  _57 = (unsigned long) _18;
  _19 = _93 w* _57;
  _88 = _12 + _19;
  h0_65 = _88 + powmult_92;
  _53 = (unsigned long) _7;
  _17 = (unsigned long) _18;
  _20 = _53 w* _17;
  _21 = h2_62 >> 51;
  _58 = _21 & 18446744073709551615;
  _114 = _10 + _58;
  h3_67 = _114 + _115;
  _22 = (long long unsigned int) h2_62;
  g2_68 = _22 & 2251799813685247;
  _23 = h0_65 >> 51;
  _49 = _23 & 18446744073709551615;
  _116 = _20 + _49;
  h1_69 = _116 + _117;
  _24 = (long long unsigned int) h0_65;
  g0_70 = _24 & 2251799813685247;
  _25 = h3_67 >> 51;
  _87 = _25 & 18446744073709551615;
  _118 = _87 + powmult_89;
  h4_71 = _118 + _119;
  _26 = (long long unsigned int) h3_67;
  g3_72 = _26 & 2251799813685247;
  _27 = h1_69 >> 51;
  _28 = (long long unsigned int) _27;
  g2_73 = _28 + g2_68;
  _29 = (long long unsigned int) h1_69;
  g1_74 = _29 & 2251799813685247;
  _30 = h4_71 >> 51;
  _31 = (long long unsigned int) _30;
  _32 = _31 * 19;
  g0_75 = _32 + g0_70;
  _33 = (long long unsigned int) h4_71;
  g4_76 = _33 & 2251799813685247;
  _34 = g2_73 >> 51;
  g3_77 = _34 + g3_72;
  g2_78 = g2_73 & 2251799813685247;
  _35 = g0_75 >> 51;
  g1_79 = _35 + g1_74;
  g0_80 = g0_75 & 2251799813685247;
  *h_81(D) = g0_80;
  MEM[(uint64_t *)h_81(D) + 8B] = g1_79;
  MEM[(uint64_t *)h_81(D) + 16B] = g2_78;
  MEM[(uint64_t *)h_81(D) + 24B] = g3_77;
  MEM[(uint64_t *)h_81(D) + 32B] = g4_76;
  return;

}

;; Function fe_mul (fe_mul, funcdef_no=400, decl_uid=17701, cgraph_uid=401, symbol_order=406)

__attribute__((access ("^0[10]^1[10]^2[10]", )))
void fe_mul (int32_t * h, const int32_t * f, const int32_t * g)
{
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t h9;
  int64_t h8;
  int64_t h7;
  int64_t h6;
  int64_t h5;
  int64_t h4;
  int64_t h3;
  int64_t h2;
  int64_t h1;
  int64_t h0;
  int64_t f1g9_38;
  int64_t f1g8;
  int64_t f1g7_2;
  int64_t f1g6;
  int64_t f1g5_2;
  int64_t f1g4;
  int64_t f1g3_2;
  int64_t f1g2;
  int64_t f1g1_2;
  int64_t f1g0;
  int32_t f9_2;
  int32_t f7_2;
  int32_t f5_2;
  int32_t f3_2;
  int32_t f1_2;
  int32_t g9_19;
  int32_t g8_19;
  int32_t g7_19;
  int32_t g6_19;
  int32_t g5_19;
  int32_t g4_19;
  int32_t g3_19;
  int32_t g2_19;
  int32_t g1_19;
  int32_t g9;
  int32_t g8;
  int32_t g7;
  int32_t g6;
  int32_t g5;
  int32_t g4;
  int32_t g3;
  int32_t g2;
  int32_t g1;
  int32_t g0;
  int32_t f9;
  int32_t f8;
  int32_t f7;
  int32_t f6;
  int32_t f5;
  int32_t f4;
  int32_t f3;
  int32_t f2;
  int32_t f1;
  int32_t f0;
  long long int _35;
  long long int _36;
  long long int _37;
  long long int _38;
  long long int _39;
  long long int _40;
  long long int _41;
  long long int _42;
  long long int _43;
  long long int _44;
  long long int _45;
  long long int _46;
  long long int _47;
  long long int _48;
  long long int _49;
  long long int _50;
  long long int _51;
  long long int _52;
  long long int _53;
  long long int _54;
  long long int _55;
  long long int _56;
  long long int _57;
  long long int _58;
  long long int _59;
  long long int _60;
  long long int _61;
  long long int _62;
  long long int _63;
  long long int _64;
  long long int _65;
  long long int _66;
  long long int _67;
  long long int _68;
  long long int _69;
  long long int _70;
  long long int _71;
  long long int _72;
  long long int _73;
  long long int _74;
  long long int _75;
  long long int _76;
  long long int _77;
  long long int _78;
  long long int _79;
  long long int _80;
  long long int _81;
  long long int _82;
  long long int _83;
  long long int _84;
  long long int _85;
  long long int _86;
  long long int _87;
  long long int _88;
  long long int _89;
  long long int _90;
  long long int _91;
  long long int _92;
  long long int _93;
  long long int _94;
  long long int _95;
  long long int _96;
  long long int _97;
  long long int _98;
  long long int _99;
  long long int _100;
  long long int _101;
  long long int _102;
  long long int _103;
  long long int _104;
  long long int _105;
  long long int _106;
  long long int _107;
  long long int _108;
  long long int _109;
  long long int _110;
  long long int _111;
  long long int _112;
  long long int _113;
  long long int _114;
  long long int _115;
  long long int _116;
  long long int _117;
  long long int _118;
  long long int _119;
  long long int _120;
  long long int _121;
  long long int _122;
  long long int _123;
  long long int _124;
  long long int _125;
  long long int _126;
  long long int _127;
  long long int _128;
  long long int _129;
  long long int _130;
  long long int _131;
  long long int _132;
  long long int _133;
  long long int _134;
  long long int _135;
  long long int _136;
  long long int _137;
  long long int _138;
  long long int _139;
  int _140;
  int _141;
  int _142;
  int _143;
  int _144;
  int _145;
  int _146;
  int _147;
  int _148;
  int _149;

  <bb 2> [local count: 1073741824]:
  f0_152 = *f_151(D);
  f1_153 = MEM[(const int32_t *)f_151(D) + 4B];
  f2_154 = MEM[(const int32_t *)f_151(D) + 8B];
  f3_155 = MEM[(const int32_t *)f_151(D) + 12B];
  f4_156 = MEM[(const int32_t *)f_151(D) + 16B];
  f5_157 = MEM[(const int32_t *)f_151(D) + 20B];
  f6_158 = MEM[(const int32_t *)f_151(D) + 24B];
  f7_159 = MEM[(const int32_t *)f_151(D) + 28B];
  f8_160 = MEM[(const int32_t *)f_151(D) + 32B];
  f9_161 = MEM[(const int32_t *)f_151(D) + 36B];
  g0_163 = *g_162(D);
  g1_164 = MEM[(const int32_t *)g_162(D) + 4B];
  g2_165 = MEM[(const int32_t *)g_162(D) + 8B];
  g3_166 = MEM[(const int32_t *)g_162(D) + 12B];
  g4_167 = MEM[(const int32_t *)g_162(D) + 16B];
  g5_168 = MEM[(const int32_t *)g_162(D) + 20B];
  g6_169 = MEM[(const int32_t *)g_162(D) + 24B];
  g7_170 = MEM[(const int32_t *)g_162(D) + 28B];
  g8_171 = MEM[(const int32_t *)g_162(D) + 32B];
  g9_172 = MEM[(const int32_t *)g_162(D) + 36B];
  g1_19_173 = g1_164 * 19;
  g2_19_174 = g2_165 * 19;
  g3_19_175 = g3_166 * 19;
  g4_19_176 = g4_167 * 19;
  g5_19_177 = g5_168 * 19;
  g6_19_178 = g6_169 * 19;
  g7_19_179 = g7_170 * 19;
  g8_19_180 = g8_171 * 19;
  g9_19_181 = g9_172 * 19;
  f1_2_182 = f1_153 * 2;
  f3_2_183 = f3_155 * 2;
  f5_2_184 = f5_157 * 2;
  f7_2_185 = f7_159 * 2;
  f9_2_186 = f9_161 * 2;
  f1g0_197 = g0_163 w* f1_153;
  f1g1_2_198 = g1_164 w* f1_2_182;
  f1g2_199 = g2_165 w* f1_153;
  f1g3_2_200 = g3_166 w* f1_2_182;
  f1g4_201 = g4_167 w* f1_153;
  f1g5_2_202 = g5_168 w* f1_2_182;
  f1g6_203 = g6_169 w* f1_153;
  f1g7_2_204 = g7_170 w* f1_2_182;
  f1g8_205 = g8_171 w* f1_153;
  f1g9_38_206 = f1_2_182 w* g9_19_181;
  _35 = WIDEN_MULT_PLUS_EXPR <f0_152, g0_163, f1g9_38_206>;
  _36 = WIDEN_MULT_PLUS_EXPR <f2_154, g8_19_180, _35>;
  _37 = WIDEN_MULT_PLUS_EXPR <f3_2_183, g7_19_179, _36>;
  _38 = WIDEN_MULT_PLUS_EXPR <f4_156, g6_19_178, _37>;
  _39 = WIDEN_MULT_PLUS_EXPR <f5_2_184, g5_19_177, _38>;
  _40 = WIDEN_MULT_PLUS_EXPR <f6_158, g4_19_176, _39>;
  _41 = WIDEN_MULT_PLUS_EXPR <f7_2_185, g3_19_175, _40>;
  _42 = WIDEN_MULT_PLUS_EXPR <f8_160, g2_19_174, _41>;
  h0_287 = WIDEN_MULT_PLUS_EXPR <f9_2_186, g1_19_173, _42>;
  _43 = WIDEN_MULT_PLUS_EXPR <f0_152, g1_164, f1g0_197>;
  _44 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f2_154, _43>;
  _45 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f3_155, _44>;
  _46 = WIDEN_MULT_PLUS_EXPR <g7_19_179, f4_156, _45>;
  _47 = WIDEN_MULT_PLUS_EXPR <g6_19_178, f5_157, _46>;
  _48 = WIDEN_MULT_PLUS_EXPR <g5_19_177, f6_158, _47>;
  _49 = WIDEN_MULT_PLUS_EXPR <g4_19_176, f7_159, _48>;
  _50 = WIDEN_MULT_PLUS_EXPR <g3_19_175, f8_160, _49>;
  h1_288 = WIDEN_MULT_PLUS_EXPR <g2_19_174, f9_161, _50>;
  _51 = WIDEN_MULT_PLUS_EXPR <f0_152, g2_165, f1g1_2_198>;
  _52 = WIDEN_MULT_PLUS_EXPR <g0_163, f2_154, _51>;
  _53 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f3_2_183, _52>;
  _54 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f4_156, _53>;
  _55 = WIDEN_MULT_PLUS_EXPR <g7_19_179, f5_2_184, _54>;
  _56 = WIDEN_MULT_PLUS_EXPR <g6_19_178, f6_158, _55>;
  _57 = WIDEN_MULT_PLUS_EXPR <g5_19_177, f7_2_185, _56>;
  _58 = WIDEN_MULT_PLUS_EXPR <g4_19_176, f8_160, _57>;
  h2_289 = WIDEN_MULT_PLUS_EXPR <g3_19_175, f9_2_186, _58>;
  _59 = WIDEN_MULT_PLUS_EXPR <f0_152, g3_166, f1g2_199>;
  _60 = WIDEN_MULT_PLUS_EXPR <g1_164, f2_154, _59>;
  _61 = WIDEN_MULT_PLUS_EXPR <g0_163, f3_155, _60>;
  _62 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f4_156, _61>;
  _63 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f5_157, _62>;
  _64 = WIDEN_MULT_PLUS_EXPR <g7_19_179, f6_158, _63>;
  _65 = WIDEN_MULT_PLUS_EXPR <g6_19_178, f7_159, _64>;
  _66 = WIDEN_MULT_PLUS_EXPR <g5_19_177, f8_160, _65>;
  h3_290 = WIDEN_MULT_PLUS_EXPR <g4_19_176, f9_161, _66>;
  _67 = WIDEN_MULT_PLUS_EXPR <f0_152, g4_167, f1g3_2_200>;
  _68 = WIDEN_MULT_PLUS_EXPR <g2_165, f2_154, _67>;
  _69 = WIDEN_MULT_PLUS_EXPR <g1_164, f3_2_183, _68>;
  _70 = WIDEN_MULT_PLUS_EXPR <g0_163, f4_156, _69>;
  _71 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f5_2_184, _70>;
  _72 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f6_158, _71>;
  _73 = WIDEN_MULT_PLUS_EXPR <g7_19_179, f7_2_185, _72>;
  _74 = WIDEN_MULT_PLUS_EXPR <g6_19_178, f8_160, _73>;
  h4_291 = WIDEN_MULT_PLUS_EXPR <g5_19_177, f9_2_186, _74>;
  _75 = WIDEN_MULT_PLUS_EXPR <f0_152, g5_168, f1g4_201>;
  _76 = WIDEN_MULT_PLUS_EXPR <g3_166, f2_154, _75>;
  _77 = WIDEN_MULT_PLUS_EXPR <g2_165, f3_155, _76>;
  _78 = WIDEN_MULT_PLUS_EXPR <g1_164, f4_156, _77>;
  _79 = WIDEN_MULT_PLUS_EXPR <g0_163, f5_157, _78>;
  _80 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f6_158, _79>;
  _81 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f7_159, _80>;
  _82 = WIDEN_MULT_PLUS_EXPR <g7_19_179, f8_160, _81>;
  h5_292 = WIDEN_MULT_PLUS_EXPR <g6_19_178, f9_161, _82>;
  _83 = WIDEN_MULT_PLUS_EXPR <f0_152, g6_169, f1g5_2_202>;
  _84 = WIDEN_MULT_PLUS_EXPR <g4_167, f2_154, _83>;
  _85 = WIDEN_MULT_PLUS_EXPR <g3_166, f3_2_183, _84>;
  _86 = WIDEN_MULT_PLUS_EXPR <g2_165, f4_156, _85>;
  _87 = WIDEN_MULT_PLUS_EXPR <g1_164, f5_2_184, _86>;
  _88 = WIDEN_MULT_PLUS_EXPR <g0_163, f6_158, _87>;
  _89 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f7_2_185, _88>;
  _90 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f8_160, _89>;
  h6_293 = WIDEN_MULT_PLUS_EXPR <g7_19_179, f9_2_186, _90>;
  _91 = WIDEN_MULT_PLUS_EXPR <f0_152, g7_170, f1g6_203>;
  _92 = WIDEN_MULT_PLUS_EXPR <g5_168, f2_154, _91>;
  _93 = WIDEN_MULT_PLUS_EXPR <g4_167, f3_155, _92>;
  _94 = WIDEN_MULT_PLUS_EXPR <g3_166, f4_156, _93>;
  _95 = WIDEN_MULT_PLUS_EXPR <g2_165, f5_157, _94>;
  _96 = WIDEN_MULT_PLUS_EXPR <g1_164, f6_158, _95>;
  _97 = WIDEN_MULT_PLUS_EXPR <g0_163, f7_159, _96>;
  _98 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f8_160, _97>;
  h7_294 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f9_161, _98>;
  _99 = WIDEN_MULT_PLUS_EXPR <f0_152, g8_171, f1g7_2_204>;
  _100 = WIDEN_MULT_PLUS_EXPR <g6_169, f2_154, _99>;
  _101 = WIDEN_MULT_PLUS_EXPR <g5_168, f3_2_183, _100>;
  _102 = WIDEN_MULT_PLUS_EXPR <g4_167, f4_156, _101>;
  _103 = WIDEN_MULT_PLUS_EXPR <g3_166, f5_2_184, _102>;
  _104 = WIDEN_MULT_PLUS_EXPR <g2_165, f6_158, _103>;
  _105 = WIDEN_MULT_PLUS_EXPR <g1_164, f7_2_185, _104>;
  _106 = WIDEN_MULT_PLUS_EXPR <g0_163, f8_160, _105>;
  h8_295 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f9_2_186, _106>;
  _107 = WIDEN_MULT_PLUS_EXPR <f0_152, g9_172, f1g8_205>;
  _108 = WIDEN_MULT_PLUS_EXPR <g7_170, f2_154, _107>;
  _109 = WIDEN_MULT_PLUS_EXPR <g6_169, f3_155, _108>;
  _110 = WIDEN_MULT_PLUS_EXPR <g5_168, f4_156, _109>;
  _111 = WIDEN_MULT_PLUS_EXPR <g4_167, f5_157, _110>;
  _112 = WIDEN_MULT_PLUS_EXPR <g3_166, f6_158, _111>;
  _113 = WIDEN_MULT_PLUS_EXPR <g2_165, f7_159, _112>;
  _114 = WIDEN_MULT_PLUS_EXPR <g1_164, f8_160, _113>;
  h9_296 = WIDEN_MULT_PLUS_EXPR <g0_163, f9_161, _114>;
  carry0_297 = h0_287 + 33554432;
  _115 = carry0_297 >> 26;
  h1_298 = _115 + h1_288;
  _116 = carry0_297 & -67108864;
  h0_299 = h0_287 - _116;
  carry4_300 = h4_291 + 33554432;
  _117 = carry4_300 >> 26;
  h5_301 = _117 + h5_292;
  _118 = carry4_300 & -67108864;
  h4_302 = h4_291 - _118;
  carry1_303 = h1_298 + 16777216;
  _119 = carry1_303 >> 25;
  h2_304 = _119 + h2_289;
  _120 = carry1_303 & -33554432;
  h1_305 = h1_298 - _120;
  carry5_306 = h5_301 + 16777216;
  _121 = carry5_306 >> 25;
  h6_307 = _121 + h6_293;
  _122 = carry5_306 & -33554432;
  h5_308 = h5_301 - _122;
  carry2_309 = h2_304 + 33554432;
  _123 = carry2_309 >> 26;
  h3_310 = _123 + h3_290;
  _124 = carry2_309 & -67108864;
  h2_311 = h2_304 - _124;
  carry6_312 = h6_307 + 33554432;
  _125 = carry6_312 >> 26;
  h7_313 = _125 + h7_294;
  _126 = carry6_312 & -67108864;
  h6_314 = h6_307 - _126;
  carry3_315 = h3_310 + 16777216;
  _127 = carry3_315 >> 25;
  h4_316 = _127 + h4_302;
  _128 = carry3_315 & -33554432;
  h3_317 = h3_310 - _128;
  carry7_318 = h7_313 + 16777216;
  _129 = carry7_318 >> 25;
  h8_319 = _129 + h8_295;
  _130 = carry7_318 & -33554432;
  h7_320 = h7_313 - _130;
  carry4_321 = h4_316 + 33554432;
  _131 = carry4_321 >> 26;
  h5_322 = _131 + h5_308;
  _132 = carry4_321 & -67108864;
  h4_323 = h4_316 - _132;
  carry8_324 = h8_319 + 33554432;
  _133 = carry8_324 >> 26;
  h9_325 = _133 + h9_296;
  _134 = carry8_324 & -67108864;
  h8_326 = h8_319 - _134;
  carry9_327 = h9_325 + 16777216;
  _135 = carry9_327 >> 25;
  _136 = _135 * 19;
  h0_328 = _136 + h0_299;
  _137 = carry9_327 & -33554432;
  h9_329 = h9_325 - _137;
  carry0_330 = h0_328 + 33554432;
  _138 = carry0_330 >> 26;
  h1_331 = _138 + h1_305;
  _139 = carry0_330 & -67108864;
  h0_332 = h0_328 - _139;
  _140 = (int) h0_332;
  *h_333(D) = _140;
  _141 = (int) h1_331;
  MEM[(int32_t *)h_333(D) + 4B] = _141;
  _142 = (int) h2_311;
  MEM[(int32_t *)h_333(D) + 8B] = _142;
  _143 = (int) h3_317;
  MEM[(int32_t *)h_333(D) + 12B] = _143;
  _144 = (int) h4_323;
  MEM[(int32_t *)h_333(D) + 16B] = _144;
  _145 = (int) h5_322;
  MEM[(int32_t *)h_333(D) + 20B] = _145;
  _146 = (int) h6_314;
  MEM[(int32_t *)h_333(D) + 24B] = _146;
  _147 = (int) h7_320;
  MEM[(int32_t *)h_333(D) + 28B] = _147;
  _148 = (int) h8_326;
  MEM[(int32_t *)h_333(D) + 32B] = _148;
  _149 = (int) h9_329;
  MEM[(int32_t *)h_333(D) + 36B] = _149;
  return;

}



;; Function fe_sq (fe_sq, funcdef_no=401, decl_uid=17859, cgraph_uid=402, symbol_order=407)

__attribute__((access ("^0[10]^1[10]", )))
void fe_sq (int32_t * h, const int32_t * f)
{
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t h9;
  int64_t h8;
  int64_t h7;
  int64_t h6;
  int64_t h5;
  int64_t h4;
  int64_t h3;
  int64_t h2;
  int64_t h1;
  int64_t h0;
  int64_t f2f9_38;
  int64_t f1f9_76;
  int64_t f1f8_2;
  int64_t f1f7_4;
  int64_t f1f6_2;
  int64_t f1f5_4;
  int64_t f1f4_2;
  int64_t f1f3_4;
  int64_t f1f2_2;
  int64_t f1f1_2;
  int32_t f9_38;
  int32_t f8_19;
  int32_t f7_38;
  int32_t f6_19;
  int32_t f5_38;
  int32_t f7_2;
  int32_t f6_2;
  int32_t f5_2;
  int32_t f4_2;
  int32_t f3_2;
  int32_t f2_2;
  int32_t f1_2;
  int32_t f0_2;
  int32_t f9;
  int32_t f8;
  int32_t f7;
  int32_t f6;
  int32_t f5;
  int32_t f4;
  int32_t f3;
  int32_t f2;
  int32_t f1;
  int32_t f0;
  long long int _24;
  long long int _25;
  long long int _26;
  long long int _27;
  long long int _28;
  long long int _29;
  long long int _30;
  long long int _31;
  long long int _32;
  long long int _33;
  long long int _34;
  long long int _35;
  long long int _36;
  long long int _37;
  long long int _38;
  long long int _39;
  long long int _40;
  long long int _41;
  long long int _42;
  long long int _43;
  long long int _44;
  long long int _45;
  long long int _46;
  long long int _47;
  long long int _48;
  long long int _49;
  long long int _50;
  long long int _51;
  long long int _52;
  long long int _53;
  long long int _54;
  long long int _55;
  long long int _56;
  long long int _57;
  long long int _58;
  long long int _59;
  long long int _60;
  long long int _61;
  long long int _62;
  long long int _63;
  long long int _64;
  long long int _65;
  long long int _66;
  long long int _67;
  long long int _68;
  long long int _69;
  long long int _70;
  long long int _71;
  long long int _72;
  long long int _73;
  long long int _74;
  long long int _75;
  long long int _76;
  long long int _77;
  long long int _78;
  long long int _79;
  long long int _80;
  long long int _81;
  long long int _82;
  long long int _83;
  int _84;
  int _85;
  int _86;
  int _87;
  int _88;
  int _89;
  int _90;
  int _91;
  int _92;
  int _93;

  <bb 2> [local count: 1073741824]:
  f0_96 = *f_95(D);
  f1_97 = MEM[(const int32_t *)f_95(D) + 4B];
  f2_98 = MEM[(const int32_t *)f_95(D) + 8B];
  f3_99 = MEM[(const int32_t *)f_95(D) + 12B];
  f4_100 = MEM[(const int32_t *)f_95(D) + 16B];
  f5_101 = MEM[(const int32_t *)f_95(D) + 20B];
  f6_102 = MEM[(const int32_t *)f_95(D) + 24B];
  f7_103 = MEM[(const int32_t *)f_95(D) + 28B];
  f8_104 = MEM[(const int32_t *)f_95(D) + 32B];
  f9_105 = MEM[(const int32_t *)f_95(D) + 36B];
  f0_2_106 = f0_96 * 2;
  f1_2_107 = f1_97 * 2;
  f2_2_108 = f2_98 * 2;
  f3_2_109 = f3_99 * 2;
  f4_2_110 = f4_100 * 2;
  f5_2_111 = f5_101 * 2;
  f6_2_112 = f6_102 * 2;
  f7_2_113 = f7_103 * 2;
  f5_38_114 = f5_101 * 38;
  f6_19_115 = f6_102 * 19;
  f7_38_116 = f7_103 * 38;
  f8_19_117 = f8_104 * 19;
  f9_38_118 = f9_105 * 38;
  f1f1_2_129 = f1_97 w* f1_2_107;
  f1f2_2_130 = f2_98 w* f1_2_107;
  f1f3_4_131 = f1_2_107 w* f3_2_109;
  f1f4_2_132 = f4_100 w* f1_2_107;
  f1f5_4_133 = f1_2_107 w* f5_2_111;
  f1f6_2_134 = f6_102 w* f1_2_107;
  f1f7_4_135 = f1_2_107 w* f7_2_113;
  f1f8_2_136 = f8_104 w* f1_2_107;
  f1f9_76_137 = f1_2_107 w* f9_38_118;
  f2f9_38_145 = f2_98 w* f9_38_118;
  _24 = WIDEN_MULT_PLUS_EXPR <f0_96, f0_96, f1f9_76_137>;
  _25 = WIDEN_MULT_PLUS_EXPR <f2_2_108, f8_19_117, _24>;
  _26 = WIDEN_MULT_PLUS_EXPR <f3_2_109, f7_38_116, _25>;
  _27 = WIDEN_MULT_PLUS_EXPR <f4_2_110, f6_19_115, _26>;
  h0_174 = WIDEN_MULT_PLUS_EXPR <f5_101, f5_38_114, _27>;
  _28 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f1_97, f2f9_38_145>;
  _29 = WIDEN_MULT_PLUS_EXPR <f3_2_109, f8_19_117, _28>;
  _30 = WIDEN_MULT_PLUS_EXPR <f4_100, f7_38_116, _29>;
  h1_175 = WIDEN_MULT_PLUS_EXPR <f5_2_111, f6_19_115, _30>;
  _31 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f2_98, f1f1_2_129>;
  _32 = WIDEN_MULT_PLUS_EXPR <f3_2_109, f9_38_118, _31>;
  _33 = WIDEN_MULT_PLUS_EXPR <f8_19_117, f4_2_110, _32>;
  _34 = WIDEN_MULT_PLUS_EXPR <f5_2_111, f7_38_116, _33>;
  h2_176 = WIDEN_MULT_PLUS_EXPR <f6_102, f6_19_115, _34>;
  _35 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f3_99, f1f2_2_130>;
  _36 = WIDEN_MULT_PLUS_EXPR <f4_100, f9_38_118, _35>;
  _37 = WIDEN_MULT_PLUS_EXPR <f5_2_111, f8_19_117, _36>;
  h3_177 = WIDEN_MULT_PLUS_EXPR <f6_102, f7_38_116, _37>;
  _38 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f4_100, f1f3_4_131>;
  _39 = WIDEN_MULT_PLUS_EXPR <f2_98, f2_98, _38>;
  _40 = WIDEN_MULT_PLUS_EXPR <f5_2_111, f9_38_118, _39>;
  _41 = WIDEN_MULT_PLUS_EXPR <f8_19_117, f6_2_112, _40>;
  h4_178 = WIDEN_MULT_PLUS_EXPR <f7_103, f7_38_116, _41>;
  _42 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f5_101, f1f4_2_132>;
  _43 = WIDEN_MULT_PLUS_EXPR <f3_99, f2_2_108, _42>;
  _44 = WIDEN_MULT_PLUS_EXPR <f6_102, f9_38_118, _43>;
  h5_179 = WIDEN_MULT_PLUS_EXPR <f7_2_113, f8_19_117, _44>;
  _45 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f6_102, f1f5_4_133>;
  _46 = WIDEN_MULT_PLUS_EXPR <f4_100, f2_2_108, _45>;
  _47 = WIDEN_MULT_PLUS_EXPR <f3_99, f3_2_109, _46>;
  _48 = WIDEN_MULT_PLUS_EXPR <f7_2_113, f9_38_118, _47>;
  h6_180 = WIDEN_MULT_PLUS_EXPR <f8_104, f8_19_117, _48>;
  _49 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f7_103, f1f6_2_134>;
  _50 = WIDEN_MULT_PLUS_EXPR <f5_101, f2_2_108, _49>;
  _51 = WIDEN_MULT_PLUS_EXPR <f4_100, f3_2_109, _50>;
  h7_181 = WIDEN_MULT_PLUS_EXPR <f8_104, f9_38_118, _51>;
  _52 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f8_104, f1f7_4_135>;
  _53 = WIDEN_MULT_PLUS_EXPR <f6_102, f2_2_108, _52>;
  _54 = WIDEN_MULT_PLUS_EXPR <f3_2_109, f5_2_111, _53>;
  _55 = WIDEN_MULT_PLUS_EXPR <f4_100, f4_100, _54>;
  h8_182 = WIDEN_MULT_PLUS_EXPR <f9_105, f9_38_118, _55>;
  _56 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f9_105, f1f8_2_136>;
  _57 = WIDEN_MULT_PLUS_EXPR <f7_103, f2_2_108, _56>;
  _58 = WIDEN_MULT_PLUS_EXPR <f6_102, f3_2_109, _57>;
  h9_183 = WIDEN_MULT_PLUS_EXPR <f5_101, f4_2_110, _58>;
  carry0_184 = h0_174 + 33554432;
  _59 = carry0_184 >> 26;
  h1_185 = _59 + h1_175;
  _60 = carry0_184 & -67108864;
  h0_186 = h0_174 - _60;
  carry4_187 = h4_178 + 33554432;
  _61 = carry4_187 >> 26;
  h5_188 = _61 + h5_179;
  _62 = carry4_187 & -67108864;
  h4_189 = h4_178 - _62;
  carry1_190 = h1_185 + 16777216;
  _63 = carry1_190 >> 25;
  h2_191 = _63 + h2_176;
  _64 = carry1_190 & -33554432;
  h1_192 = h1_185 - _64;
  carry5_193 = h5_188 + 16777216;
  _65 = carry5_193 >> 25;
  h6_194 = _65 + h6_180;
  _66 = carry5_193 & -33554432;
  h5_195 = h5_188 - _66;
  carry2_196 = h2_191 + 33554432;
  _67 = carry2_196 >> 26;
  h3_197 = _67 + h3_177;
  _68 = carry2_196 & -67108864;
  h2_198 = h2_191 - _68;
  carry6_199 = h6_194 + 33554432;
  _69 = carry6_199 >> 26;
  h7_200 = _69 + h7_181;
  _70 = carry6_199 & -67108864;
  h6_201 = h6_194 - _70;
  carry3_202 = h3_197 + 16777216;
  _71 = carry3_202 >> 25;
  h4_203 = _71 + h4_189;
  _72 = carry3_202 & -33554432;
  h3_204 = h3_197 - _72;
  carry7_205 = h7_200 + 16777216;
  _73 = carry7_205 >> 25;
  h8_206 = _73 + h8_182;
  _74 = carry7_205 & -33554432;
  h7_207 = h7_200 - _74;
  carry4_208 = h4_203 + 33554432;
  _75 = carry4_208 >> 26;
  h5_209 = _75 + h5_195;
  _76 = carry4_208 & -67108864;
  h4_210 = h4_203 - _76;
  carry8_211 = h8_206 + 33554432;
  _77 = carry8_211 >> 26;
  h9_212 = _77 + h9_183;
  _78 = carry8_211 & -67108864;
  h8_213 = h8_206 - _78;
  carry9_214 = h9_212 + 16777216;
  _79 = carry9_214 >> 25;
  _80 = _79 * 19;
  h0_215 = _80 + h0_186;
  _81 = carry9_214 & -33554432;
  h9_216 = h9_212 - _81;
  carry0_217 = h0_215 + 33554432;
  _82 = carry0_217 >> 26;
  h1_218 = _82 + h1_192;
  _83 = carry0_217 & -67108864;
  h0_219 = h0_215 - _83;
  _84 = (int) h0_219;
  *h_220(D) = _84;
  _85 = (int) h1_218;
  MEM[(int32_t *)h_220(D) + 4B] = _85;
  _86 = (int) h2_198;
  MEM[(int32_t *)h_220(D) + 8B] = _86;
  _87 = (int) h3_204;
  MEM[(int32_t *)h_220(D) + 12B] = _87;
  _88 = (int) h4_210;
  MEM[(int32_t *)h_220(D) + 16B] = _88;
  _89 = (int) h5_209;
  MEM[(int32_t *)h_220(D) + 20B] = _89;
  _90 = (int) h6_201;
  MEM[(int32_t *)h_220(D) + 24B] = _90;
  _91 = (int) h7_207;
  MEM[(int32_t *)h_220(D) + 28B] = _91;
  _92 = (int) h8_213;
  MEM[(int32_t *)h_220(D) + 32B] = _92;
  _93 = (int) h9_216;
  MEM[(int32_t *)h_220(D) + 36B] = _93;
  return;

}

;; Function x25519_sc_reduce (x25519_sc_reduce, funcdef_no=432, decl_uid=18386, cgraph_uid=433, symbol_order=443)

void x25519_sc_reduce (uint8_t * s)
{
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  int64_t carry16;
  int64_t carry15;
  int64_t carry14;
  int64_t carry13;
  int64_t carry12;
  int64_t carry11;
  int64_t carry10;
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t s23;
  int64_t s22;
  int64_t s21;
  int64_t s20;
  int64_t s19;
  int64_t s18;
  int64_t s17;
  int64_t s16;
  int64_t s15;
  int64_t s14;
  int64_t s13;
  int64_t s12;
  int64_t s11;
  int64_t s10;
  int64_t s9;
  int64_t s8;
  int64_t s7;
  int64_t s6;
  int64_t s5;
  int64_t s4;
  int64_t s3;
  int64_t s2;
  int64_t s1;
  int64_t s0;
  long long unsigned int _1;
  long long unsigned int _2;
  long long unsigned int _3;
  long long unsigned int _4;
  long long unsigned int _5;
  long long unsigned int _6;
  long long unsigned int _7;
  long long unsigned int _9;
  long long unsigned int _10;
  long long unsigned int _11;
  long long unsigned int _12;
  long long unsigned int _13;
  long long unsigned int _14;
  long long unsigned int _15;
  long long unsigned int _17;
  long long unsigned int _18;
  long long unsigned int _19;
  long long unsigned int _20;
  long long unsigned int _21;
  long long unsigned int _22;
  long long unsigned int _23;
  long long int _60;
  long long int _62;
  long long int _64;
  long long int _65;
  long long int _66;
  long long int _67;
  long long int _68;
  long long int _69;
  long long int _70;
  long long int _71;
  long long int _72;
  long long int _74;
  long long int _75;
  long long int _76;
  long long int _77;
  long long int _78;
  long long int _79;
  long long int _80;
  long long int _81;
  long long int _82;
  long long int _83;
  long long int _84;
  long long int _85;
  long long int _86;
  long long int _87;
  long long int _88;
  long long int _89;
  long long int _90;
  long long int _91;
  long long int _92;
  long long int _93;
  long long int _94;
  long long int _95;
  long long int _96;
  long long int _97;
  long long int _98;
  long long int _99;
  long long int _100;
  long long int _101;
  long long int _102;
  long long int _103;
  long long int _104;
  long long int _105;
  long long int _106;
  long long int _107;
  long long int _108;
  long long int _109;
  long long int _110;
  long long int _111;
  long long int _112;
  long long int _113;
  long long int _114;
  long long int _115;
  long long int _116;
  long long int _117;
  long long int _118;
  long long int _119;
  long long int _120;
  long long int _121;
  long long int _122;
  long long int _123;
  long long int _124;
  long long int _125;
  long long int _126;
  long long int _127;
  long long int _128;
  long long int _129;
  long long int _130;
  long long int _131;
  long long int _132;
  long long int _133;
  long long int _134;
  long long int _135;
  long long int _136;
  long long int _137;
  long long int _138;
  long long int _139;
  long long int _140;
  long long int _141;
  long long int _142;
  long long int _143;
  long long int _144;
  long long int _145;
  long long int _146;
  long long int _147;
  long long int _148;
  long long int _149;
  long long int _150;
  long long int _151;
  long long int _152;
  long long int _153;
  long long int _154;
  long long int _155;
  long long int _156;
  long long int _157;
  long long int _158;
  long long int _159;
  long long int _160;
  long long int _161;
  long long int _162;
  long long int _163;
  long long int _164;
  long long int _165;
  long long int _166;
  long long int _167;
  long long int _168;
  long long int _169;
  long long int _170;
  long long int _171;
  long long int _172;
  long long int _173;
  long long int _174;
  long long int _175;
  long long int _176;
  unsigned char _177;
  long long int _178;
  unsigned char _179;
  long long int _180;
  signed char _181;
  signed char _182;
  signed char _183;
  signed char _184;
  unsigned char _185;
  long long int _186;
  unsigned char _187;
  long long int _188;
  unsigned char _189;
  long long int _190;
  signed char _191;
  signed char _192;
  signed char _193;
  signed char _194;
  unsigned char _195;
  long long int _196;
  unsigned char _197;
  long long int _198;
  signed char _199;
  signed char _200;
  signed char _201;
  signed char _202;
  unsigned char _203;
  long long int _204;
  unsigned char _205;
  long long int _206;
  unsigned char _207;
  long long int _208;
  signed char _209;
  signed char _210;
  signed char _211;
  signed char _212;
  unsigned char _213;
  long long int _214;
  unsigned char _215;
  long long int _216;
  unsigned char _217;
  long long int _218;
  signed char _219;
  signed char _220;
  signed char _221;
  signed char _222;
  unsigned char _223;
  long long int _224;
  unsigned char _225;
  long long int _226;
  signed char _227;
  signed char _228;
  signed char _229;
  signed char _230;
  unsigned char _231;
  long long int _232;
  unsigned char _233;
  long long int _234;
  unsigned char _235;
  long long int _236;
  signed char _237;
  signed char _238;
  signed char _239;
  signed char _240;
  unsigned char _241;
  long long int _242;
  unsigned char _243;
  long long int _244;
  unsigned char _245;
  unsigned char _246;
  long long int _247;
  unsigned char _248;
  long long int _249;
  signed char _250;
  signed char _251;
  signed char _252;
  signed char _253;
  unsigned char _254;
  long long int _255;
  unsigned char _256;
  long long int _257;
  unsigned char _258;
  long long int _259;
  signed char _260;
  signed char _261;
  signed char _262;
  signed char _263;
  unsigned char _264;
  long long int _265;
  unsigned char _266;
  long long int _267;
  signed char _268;
  signed char _269;
  signed char _270;
  signed char _271;
  unsigned char _272;
  long long int _273;
  unsigned char _274;
  long long int _275;
  unsigned char _276;
  long long int _277;
  unsigned char _278;
  long long unsigned int _329;
  long long unsigned int _336;
  long long unsigned int _343;
  long long unsigned int _350;
  long long unsigned int _357;
  long long unsigned int _364;
  long long unsigned int _404;
  long long unsigned int _411;
  long long unsigned int _418;
  long long unsigned int _425;
  long long unsigned int _432;
  long long unsigned int _439;
  long long unsigned int _474;
  long long unsigned int _482;
  long long unsigned int _517;
  long long unsigned int _525;
  unsigned char _595;
  long long unsigned int _596;
  long long unsigned int _597;
  unsigned char _599;
  long long unsigned int _600;
  long long unsigned int _601;
  unsigned char _611;
  long long unsigned int _612;
  unsigned char _627;
  long long unsigned int _628;
  long long unsigned int _629;
  unsigned char _631;
  long long unsigned int _632;
  long long unsigned int _633;
  unsigned char _643;
  long long unsigned int _644;
  unsigned char _647;
  unsigned char _649;
  long long unsigned int _650;
  long long unsigned int _651;
  unsigned char _653;
  long long unsigned int _654;
  long long unsigned int _655;
  unsigned char _657;
  long long unsigned int _658;
  long long unsigned int _659;
  unsigned char _661;
  long long unsigned int _662;
  long long unsigned int _663;
  unsigned char _673;
  long long unsigned int _674;
  unsigned char _677;
  long long unsigned int _678;
  long long unsigned int _679;
  unsigned char _681;
  long long unsigned int _682;
  long long unsigned int _683;
  unsigned int load_dst_688;
  unsigned char _693;
  long long unsigned int _694;
  unsigned int load_dst_700;
  unsigned char _709;
  long long unsigned int _710;
  long long unsigned int _711;
  unsigned int load_dst_712;
  unsigned char _713;
  long long unsigned int _714;
  long long unsigned int _715;
  unsigned int load_dst_720;
  unsigned char _725;
  long long unsigned int _726;
  unsigned char _729;
  unsigned char _731;
  long long unsigned int _732;
  long long unsigned int _733;
  unsigned int load_dst_734;
  unsigned char _735;
  long long unsigned int _736;
  long long unsigned int _737;
  unsigned char _739;
  long long unsigned int _740;
  long long unsigned int _741;
  unsigned int load_dst_742;
  unsigned char _743;
  long long unsigned int _744;
  long long unsigned int _745;
  unsigned int load_dst_750;
  unsigned char _755;
  long long unsigned int _756;
  unsigned char _759;
  long long unsigned int _760;
  long long unsigned int _761;
  unsigned int load_dst_762;
  unsigned char _763;
  long long unsigned int _764;
  long long unsigned int _765;
  unsigned int load_dst_770;
  unsigned char _775;
  long long unsigned int _776;
  unsigned int load_dst_782;
  unsigned char _791;
  long long unsigned int _792;
  long long unsigned int _793;
  unsigned int load_dst_794;
  unsigned char _795;
  long long unsigned int _796;
  long long unsigned int _797;
  unsigned int load_dst_802;
  unsigned char _807;
  long long unsigned int _808;
  unsigned char _811;
  unsigned char _813;
  long long unsigned int _814;
  long long unsigned int _815;
  unsigned int load_dst_816;
  unsigned char _817;
  long long unsigned int _818;
  long long unsigned int _819;
  long long unsigned int _821;
  long long unsigned int _822;
  long long unsigned int _823;
  long long unsigned int _824;
  long long unsigned int _825;
  long long unsigned int _863;
  long long unsigned int _865;
  long long unsigned int _868;
  long long unsigned int _870;
  long long unsigned int _871;
  long long unsigned int _873;
  long long unsigned int _876;
  long long unsigned int _878;
  long long unsigned int _879;
  long long unsigned int _881;
  long long unsigned int _884;
  signed int _2160;
  signed int _2161;
  signed int _2162;
  signed int _2163;
  signed int _2164;
  signed int _2165;
  signed int _2166;
  signed int _2167;
  long long int _2168;
  signed int _2169;
  signed int _2170;
  signed int _2171;
  signed int _2172;
  signed int _2173;
  signed int _2174;
  long long int _2175;
  signed int _2176;
  signed int _2177;
  signed int _2178;
  signed int _2179;
  signed int _2180;
  signed int _2181;
  long long int _2182;
  signed int _2183;
  signed int _2184;
  signed int _2185;
  signed int _2186;
  signed int _2187;
  long long int _2188;
  signed int _2189;
  signed int _2190;
  signed int _2191;
  signed int _2192;
  signed int _2193;
  signed int _2194;
  long long int _2195;
  signed int _2196;
  long long int _2197;
  signed int _2198;
  long long int _2199;
  signed int _2200;
  long long int _2201;
  signed int _2202;
  long long int _2203;
  signed int _2204;
  long long int _2205;
  signed int _2206;
  long long int _2207;
  vector(16) unsigned char _2208;
  vector(16) unsigned char _2209;
  signed int _2210;
  signed int _2212;

  <bb 2> [local count: 1073741824]:
  _811 = MEM[(const uint8_t *)s_280(D)];
  result_812 = (uint64_t) _811;
  _813 = MEM[(const uint8_t *)s_280(D) + 1B];
  _814 = (long long unsigned int) _813;
  _815 = _814 << 8;
  load_dst_688 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 2B];
  result_810 = (uint64_t) load_dst_688;
  _817 = MEM[(const uint8_t *)s_280(D) + 2B];
  _818 = (long long unsigned int) _817;
  _819 = _818 << 16;
  _863 = _815 | _819;
  result_820 = result_812 | _863;
  _525 = result_820 & 2097151;
  s0_282 = (int64_t) _525;
  _807 = MEM[(const uint8_t *)s_280(D) + 5B];
  _808 = (long long unsigned int) _807;
  _1 = result_810 >> 5;
  _482 = _1 & 2097151;
  s1_284 = (int64_t) _482;
  _791 = MEM[(const uint8_t *)s_280(D) + 6B];
  _792 = (long long unsigned int) _791;
  _793 = _792 << 8;
  load_dst_700 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 7B];
  result_790 = (uint64_t) load_dst_700;
  _795 = MEM[(const uint8_t *)s_280(D) + 7B];
  _796 = (long long unsigned int) _795;
  _797 = _796 << 16;
  _865 = _793 | _797;
  result_798 = _808 | _865;
  _2 = result_798 >> 2;
  _517 = _2 & 2097151;
  s2_286 = (int64_t) _517;
  load_dst_712 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 10B];
  result_778 = (uint64_t) load_dst_712;
  _3 = result_790 >> 7;
  _439 = _3 & 2097151;
  s3_288 = (int64_t) _439;
  _775 = MEM[(const uint8_t *)s_280(D) + 13B];
  _776 = (long long unsigned int) _775;
  _4 = result_778 >> 4;
  _474 = _4 & 2097151;
  s4_290 = (int64_t) _474;
  _759 = MEM[(const uint8_t *)s_280(D) + 14B];
  _760 = (long long unsigned int) _759;
  _761 = _760 << 8;
  load_dst_720 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 15B];
  result_758 = (uint64_t) load_dst_720;
  _763 = MEM[(const uint8_t *)s_280(D) + 15B];
  _764 = (long long unsigned int) _763;
  _765 = _764 << 16;
  _868 = _761 | _765;
  result_766 = _776 | _868;
  _5 = result_766 >> 1;
  _432 = _5 & 2097151;
  s5_292 = (int64_t) _432;
  _755 = MEM[(const uint8_t *)s_280(D) + 18B];
  _756 = (long long unsigned int) _755;
  _6 = result_758 >> 6;
  _425 = _6 & 2097151;
  _739 = MEM[(const uint8_t *)s_280(D) + 19B];
  _740 = (long long unsigned int) _739;
  _741 = _740 << 8;
  _743 = MEM[(const uint8_t *)s_280(D) + 20B];
  _744 = (long long unsigned int) _743;
  _745 = _744 << 16;
  _870 = _741 | _745;
  result_746 = _756 | _870;
  _7 = result_746 >> 3;
  _729 = MEM[(const uint8_t *)s_280(D) + 21B];
  result_730 = (uint64_t) _729;
  _731 = MEM[(const uint8_t *)s_280(D) + 22B];
  _732 = (long long unsigned int) _731;
  _733 = _732 << 8;
  load_dst_734 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 23B];
  result_728 = (uint64_t) load_dst_734;
  _735 = MEM[(const uint8_t *)s_280(D) + 23B];
  _736 = (long long unsigned int) _735;
  _737 = _736 << 16;
  _871 = _733 | _737;
  result_738 = result_730 | _871;
  _418 = result_738 & 2097151;
  _725 = MEM[(const uint8_t *)s_280(D) + 26B];
  _726 = (long long unsigned int) _725;
  _9 = result_728 >> 5;
  _411 = _9 & 2097151;
  _709 = MEM[(const uint8_t *)s_280(D) + 27B];
  _710 = (long long unsigned int) _709;
  _711 = _710 << 8;
  load_dst_742 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 28B];
  result_708 = (uint64_t) load_dst_742;
  _713 = MEM[(const uint8_t *)s_280(D) + 28B];
  _714 = (long long unsigned int) _713;
  _715 = _714 << 16;
  _873 = _711 | _715;
  result_716 = _726 | _873;
  _10 = result_716 >> 2;
  _404 = _10 & 2097151;
  load_dst_750 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 31B];
  result_696 = (uint64_t) load_dst_750;
  _11 = result_708 >> 7;
  _364 = _11 & 2097151;
  _693 = MEM[(const uint8_t *)s_280(D) + 34B];
  _694 = (long long unsigned int) _693;
  _12 = result_696 >> 4;
  _357 = _12 & 2097151;
  _677 = MEM[(const uint8_t *)s_280(D) + 35B];
  _678 = (long long unsigned int) _677;
  _679 = _678 << 8;
  load_dst_762 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 36B];
  result_676 = (uint64_t) load_dst_762;
  _681 = MEM[(const uint8_t *)s_280(D) + 36B];
  _682 = (long long unsigned int) _681;
  _683 = _682 << 16;
  _876 = _679 | _683;
  result_684 = _694 | _876;
  _13 = result_684 >> 1;
  _350 = _13 & 2097151;
  _673 = MEM[(const uint8_t *)s_280(D) + 39B];
  _674 = (long long unsigned int) _673;
  _14 = result_676 >> 6;
  _343 = _14 & 2097151;
  _657 = MEM[(const uint8_t *)s_280(D) + 40B];
  _658 = (long long unsigned int) _657;
  _659 = _658 << 8;
  _661 = MEM[(const uint8_t *)s_280(D) + 41B];
  _662 = (long long unsigned int) _661;
  _663 = _662 << 16;
  _878 = _659 | _663;
  result_664 = _674 | _878;
  _15 = result_664 >> 3;
  _647 = MEM[(const uint8_t *)s_280(D) + 42B];
  result_648 = (uint64_t) _647;
  _649 = MEM[(const uint8_t *)s_280(D) + 43B];
  _650 = (long long unsigned int) _649;
  _651 = _650 << 8;
  load_dst_770 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 44B];
  result_646 = (uint64_t) load_dst_770;
  _653 = MEM[(const uint8_t *)s_280(D) + 44B];
  _654 = (long long unsigned int) _653;
  _655 = _654 << 16;
  _879 = _651 | _655;
  result_656 = result_648 | _879;
  _336 = result_656 & 2097151;
  _643 = MEM[(const uint8_t *)s_280(D) + 47B];
  _644 = (long long unsigned int) _643;
  _17 = result_646 >> 5;
  _329 = _17 & 2097151;
  s17_312 = (int64_t) _329;
  _627 = MEM[(const uint8_t *)s_280(D) + 48B];
  _628 = (long long unsigned int) _627;
  _629 = _628 << 8;
  load_dst_782 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 49B];
  result_626 = (uint64_t) load_dst_782;
  _631 = MEM[(const uint8_t *)s_280(D) + 49B];
  _632 = (long long unsigned int) _631;
  _633 = _632 << 16;
  _881 = _629 | _633;
  result_634 = _644 | _881;
  _18 = result_634 >> 2;
  _821 = _18 & 2097151;
  s18_314 = (int64_t) _821;
  load_dst_794 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 52B];
  result_614 = (uint64_t) load_dst_794;
  _19 = result_626 >> 7;
  _822 = _19 & 2097151;
  s19_316 = (int64_t) _822;
  _611 = MEM[(const uint8_t *)s_280(D) + 55B];
  _612 = (long long unsigned int) _611;
  _20 = result_614 >> 4;
  _823 = _20 & 2097151;
  s20_318 = (int64_t) _823;
  _595 = MEM[(const uint8_t *)s_280(D) + 56B];
  _596 = (long long unsigned int) _595;
  _597 = _596 << 8;
  load_dst_802 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 57B];
  result_594 = (uint64_t) load_dst_802;
  _599 = MEM[(const uint8_t *)s_280(D) + 57B];
  _600 = (long long unsigned int) _599;
  _601 = _600 << 16;
  _884 = _597 | _601;
  result_602 = _612 | _884;
  _21 = result_602 >> 1;
  _824 = _21 & 2097151;
  s21_320 = (int64_t) _824;
  _22 = result_594 >> 6;
  _825 = _22 & 2097151;
  s22_321 = (int64_t) _825;
  load_dst_816 = MEM <unsigned int> [(const uint8_t *)s_280(D) + 60B];
  result_298 = (uint64_t) load_dst_816;
  _23 = result_298 >> 3;
  s23_322 = (int64_t) _23;
  _2212 = (signed int) s23_322;
  _2207 = (long long int) _364;
  s11_323 = WIDEN_MULT_PLUS_EXPR <_2212, 666643, _2207>;
  _2206 = (signed int) s23_322;
  _2205 = (long long int) _357;
  s12_324 = WIDEN_MULT_PLUS_EXPR <_2206, 470296, _2205>;
  _2204 = (signed int) s23_322;
  _2203 = (long long int) _350;
  s13_325 = WIDEN_MULT_PLUS_EXPR <_2204, 654183, _2203>;
  _2202 = (signed int) s23_322;
  _2201 = (long long int) _343;
  s14_326 = WIDEN_MULT_PLUS_EXPR <_2202, -997805, _2201>;
  _2200 = (signed int) s23_322;
  _2199 = (long long int) _15;
  s15_327 = WIDEN_MULT_PLUS_EXPR <_2200, 136657, _2199>;
  _2198 = (signed int) s23_322;
  _2197 = (long long int) _336;
  s16_328 = WIDEN_MULT_PLUS_EXPR <_2198, -683901, _2197>;
  _2196 = (signed int) s22_321;
  _2195 = (long long int) _404;
  s10_330 = WIDEN_MULT_PLUS_EXPR <_2196, 666643, _2195>;
  _2194 = (signed int) s22_321;
  s11_331 = WIDEN_MULT_PLUS_EXPR <_2194, 470296, s11_323>;
  _2193 = (signed int) s22_321;
  s12_332 = WIDEN_MULT_PLUS_EXPR <_2193, 654183, s12_324>;
  _2192 = (signed int) s22_321;
  s13_333 = WIDEN_MULT_PLUS_EXPR <_2192, -997805, s13_325>;
  _2191 = (signed int) s22_321;
  s14_334 = WIDEN_MULT_PLUS_EXPR <_2191, 136657, s14_326>;
  _2190 = (signed int) s22_321;
  s15_335 = WIDEN_MULT_PLUS_EXPR <_2190, -683901, s15_327>;
  _2189 = (signed int) s21_320;
  _2188 = (long long int) _411;
  s9_337 = WIDEN_MULT_PLUS_EXPR <_2189, 666643, _2188>;
  _2187 = (signed int) s21_320;
  s10_338 = WIDEN_MULT_PLUS_EXPR <_2187, 470296, s10_330>;
  _2186 = (signed int) s21_320;
  s11_339 = WIDEN_MULT_PLUS_EXPR <_2186, 654183, s11_331>;
  _2210 = (signed int) s21_320;
  s12_340 = WIDEN_MULT_PLUS_EXPR <_2210, -997805, s12_332>;
  _2185 = (signed int) s21_320;
  s13_341 = WIDEN_MULT_PLUS_EXPR <_2185, 136657, s13_333>;
  _2184 = (signed int) s21_320;
  s14_342 = WIDEN_MULT_PLUS_EXPR <_2184, -683901, s14_334>;
  _2183 = (signed int) s20_318;
  _2182 = (long long int) _418;
  s8_344 = WIDEN_MULT_PLUS_EXPR <_2183, 666643, _2182>;
  _2181 = (signed int) s20_318;
  s9_345 = WIDEN_MULT_PLUS_EXPR <_2181, 470296, s9_337>;
  _2180 = (signed int) s20_318;
  s10_346 = WIDEN_MULT_PLUS_EXPR <_2180, 654183, s10_338>;
  _2179 = (signed int) s20_318;
  s11_347 = WIDEN_MULT_PLUS_EXPR <_2179, -997805, s11_339>;
  _2178 = (signed int) s20_318;
  s12_348 = WIDEN_MULT_PLUS_EXPR <_2178, 136657, s12_340>;
  _2177 = (signed int) s20_318;
  s13_349 = WIDEN_MULT_PLUS_EXPR <_2177, -683901, s13_341>;
  _2176 = (signed int) s19_316;
  _2175 = (long long int) _7;
  s7_351 = WIDEN_MULT_PLUS_EXPR <_2176, 666643, _2175>;
  _2174 = (signed int) s19_316;
  s8_352 = WIDEN_MULT_PLUS_EXPR <_2174, 470296, s8_344>;
  _2173 = (signed int) s19_316;
  s9_353 = WIDEN_MULT_PLUS_EXPR <_2173, 654183, s9_345>;
  _2172 = (signed int) s19_316;
  s10_354 = WIDEN_MULT_PLUS_EXPR <_2172, -997805, s10_346>;
  _2171 = (signed int) s19_316;
  s11_355 = WIDEN_MULT_PLUS_EXPR <_2171, 136657, s11_347>;
  _2170 = (signed int) s19_316;
  s12_356 = WIDEN_MULT_PLUS_EXPR <_2170, -683901, s12_348>;
  _2169 = (signed int) s18_314;
  _2168 = (long long int) _425;
  s6_358 = WIDEN_MULT_PLUS_EXPR <_2169, 666643, _2168>;
  _2167 = (signed int) s18_314;
  s7_359 = WIDEN_MULT_PLUS_EXPR <_2167, 470296, s7_351>;
  _2166 = (signed int) s18_314;
  s8_360 = WIDEN_MULT_PLUS_EXPR <_2166, 654183, s8_352>;
  _2165 = (signed int) s18_314;
  s9_361 = WIDEN_MULT_PLUS_EXPR <_2165, -997805, s9_353>;
  _2164 = (signed int) s18_314;
  s10_362 = WIDEN_MULT_PLUS_EXPR <_2164, 136657, s10_354>;
  _2163 = (signed int) s18_314;
  s11_363 = WIDEN_MULT_PLUS_EXPR <_2163, -683901, s11_355>;
  _60 = s6_358 + 1048576;
  carry6_365 = _60 >> 21;
  s7_366 = s7_359 + carry6_365;
  _2162 = (signed int) carry6_365;
  s6_367 = WIDEN_MULT_MINUS_EXPR <_2162, 2097152, s6_358>;
  _62 = s8_360 + 1048576;
  carry8_368 = _62 >> 21;
  s9_369 = s9_361 + carry8_368;
  _2161 = (signed int) carry8_368;
  s8_370 = WIDEN_MULT_MINUS_EXPR <_2161, 2097152, s8_360>;
  _64 = s10_362 + 1048576;
  carry10_371 = _64 >> 21;
  s11_372 = s11_363 + carry10_371;
  _65 = carry10_371 * 2097152;
  s10_373 = s10_362 - _65;
  _66 = s12_356 + 1048576;
  carry12_374 = _66 >> 21;
  s13_375 = s13_349 + carry12_374;
  _67 = carry12_374 * 2097152;
  s12_376 = s12_356 - _67;
  _68 = s14_342 + 1048576;
  carry14_377 = _68 >> 21;
  s15_378 = s15_335 + carry14_377;
  _69 = carry14_377 * 2097152;
  s14_379 = s14_342 - _69;
  _70 = s16_328 + 1048576;
  carry16_380 = _70 >> 21;
  s17_381 = s17_312 + carry16_380;
  _71 = carry16_380 * 2097152;
  s16_382 = s16_328 - _71;
  _72 = s7_366 + 1048576;
  carry7_383 = _72 >> 21;
  s8_384 = s8_370 + carry7_383;
  _2160 = (signed int) carry7_383;
  s7_385 = WIDEN_MULT_MINUS_EXPR <_2160, 2097152, s7_366>;
  _74 = s9_369 + 1048576;
  carry9_386 = _74 >> 21;
  s10_387 = s10_373 + carry9_386;
  _75 = carry9_386 * 2097152;
  s9_388 = s9_369 - _75;
  _76 = s11_372 + 1048576;
  carry11_389 = _76 >> 21;
  s12_390 = s12_376 + carry11_389;
  _77 = carry11_389 * 2097152;
  s11_391 = s11_372 - _77;
  _78 = s13_375 + 1048576;
  carry13_392 = _78 >> 21;
  s14_393 = s14_379 + carry13_392;
  _79 = carry13_392 * 2097152;
  s13_394 = s13_375 - _79;
  _80 = s15_378 + 1048576;
  carry15_395 = _80 >> 21;
  s16_396 = s16_382 + carry15_395;
  _81 = carry15_395 * 2097152;
  s15_397 = s15_378 - _81;
  _82 = s17_381 * 666643;
  s5_398 = _82 + s5_292;
  _83 = s17_381 * 470296;
  s6_399 = _83 + s6_367;
  _84 = s17_381 * 654183;
  s7_400 = _84 + s7_385;
  _85 = s17_381 * -997805;
  s8_401 = _85 + s8_384;
  _86 = s17_381 * 136657;
  s9_402 = _86 + s9_388;
  _87 = s17_381 * -683901;
  s10_403 = _87 + s10_387;
  _88 = s16_396 * 666643;
  s4_405 = _88 + s4_290;
  _89 = s16_396 * 470296;
  s5_406 = _89 + s5_398;
  _90 = s16_396 * 654183;
  s6_407 = _90 + s6_399;
  _91 = s16_396 * -997805;
  s7_408 = _91 + s7_400;
  _92 = s16_396 * 136657;
  s8_409 = _92 + s8_401;
  _93 = s16_396 * -683901;
  s9_410 = _93 + s9_402;
  _94 = s15_397 * 666643;
  s3_412 = _94 + s3_288;
  _95 = s15_397 * 470296;
  s4_413 = _95 + s4_405;
  _96 = s15_397 * 654183;
  s5_414 = _96 + s5_406;
  _97 = s15_397 * -997805;
  s6_415 = _97 + s6_407;
  _98 = s15_397 * 136657;
  s7_416 = _98 + s7_408;
  _99 = s15_397 * -683901;
  s8_417 = _99 + s8_409;
  _100 = s14_393 * 666643;
  s2_419 = _100 + s2_286;
  _101 = s14_393 * 470296;
  s3_420 = _101 + s3_412;
  _102 = s14_393 * 654183;
  s4_421 = _102 + s4_413;
  _103 = s14_393 * -997805;
  s5_422 = _103 + s5_414;
  _104 = s14_393 * 136657;
  s6_423 = _104 + s6_415;
  _105 = s14_393 * -683901;
  s7_424 = _105 + s7_416;
  _106 = s13_394 * 666643;
  s1_426 = _106 + s1_284;
  _107 = s13_394 * 470296;
  s2_427 = _107 + s2_419;
  _108 = s13_394 * 654183;
  s3_428 = _108 + s3_420;
  _109 = s13_394 * -997805;
  s4_429 = _109 + s4_421;
  _110 = s13_394 * 136657;
  s5_430 = _110 + s5_422;
  _111 = s13_394 * -683901;
  s6_431 = _111 + s6_423;
  _112 = s12_390 * 666643;
  s0_433 = _112 + s0_282;
  _113 = s12_390 * 470296;
  s1_434 = _113 + s1_426;
  _114 = s12_390 * 654183;
  s2_435 = _114 + s2_427;
  _115 = s12_390 * -997805;
  s3_436 = _115 + s3_428;
  _116 = s12_390 * 136657;
  s4_437 = _116 + s4_429;
  _117 = s12_390 * -683901;
  s5_438 = _117 + s5_430;
  _118 = s0_433 + 1048576;
  carry0_440 = _118 >> 21;
  s1_441 = s1_434 + carry0_440;
  _119 = carry0_440 * 2097152;
  s0_442 = s0_433 - _119;
  _120 = s2_435 + 1048576;
  carry2_443 = _120 >> 21;
  s3_444 = s3_436 + carry2_443;
  _121 = carry2_443 * 2097152;
  s2_445 = s2_435 - _121;
  _122 = s4_437 + 1048576;
  carry4_446 = _122 >> 21;
  s5_447 = s5_438 + carry4_446;
  _123 = carry4_446 * 2097152;
  s4_448 = s4_437 - _123;
  _124 = s6_431 + 1048576;
  carry6_449 = _124 >> 21;
  s7_450 = s7_424 + carry6_449;
  _125 = carry6_449 * 2097152;
  s6_451 = s6_431 - _125;
  _126 = s8_417 + 1048576;
  carry8_452 = _126 >> 21;
  s9_453 = s9_410 + carry8_452;
  _127 = carry8_452 * 2097152;
  s8_454 = s8_417 - _127;
  _128 = s10_403 + 1048576;
  carry10_455 = _128 >> 21;
  s11_456 = s11_391 + carry10_455;
  _129 = carry10_455 * 2097152;
  s10_457 = s10_403 - _129;
  _130 = s1_441 + 1048576;
  carry1_458 = _130 >> 21;
  s2_459 = s2_445 + carry1_458;
  _131 = carry1_458 * 2097152;
  s1_460 = s1_441 - _131;
  _132 = s3_444 + 1048576;
  carry3_461 = _132 >> 21;
  s4_462 = s4_448 + carry3_461;
  _133 = carry3_461 * 2097152;
  s3_463 = s3_444 - _133;
  _134 = s5_447 + 1048576;
  carry5_464 = _134 >> 21;
  s6_465 = s6_451 + carry5_464;
  _135 = carry5_464 * 2097152;
  s5_466 = s5_447 - _135;
  _136 = s7_450 + 1048576;
  carry7_467 = _136 >> 21;
  s8_468 = s8_454 + carry7_467;
  _137 = carry7_467 * 2097152;
  s7_469 = s7_450 - _137;
  _138 = s9_453 + 1048576;
  carry9_470 = _138 >> 21;
  s10_471 = s10_457 + carry9_470;
  _139 = carry9_470 * 2097152;
  s9_472 = s9_453 - _139;
  _140 = s11_456 + 1048576;
  carry11_473 = _140 >> 21;
  _141 = carry11_473 * 2097152;
  s11_475 = s11_456 - _141;
  _142 = carry11_473 * 666643;
  s0_476 = _142 + s0_442;
  _143 = carry11_473 * 470296;
  s1_477 = _143 + s1_460;
  _144 = carry11_473 * 654183;
  s2_478 = _144 + s2_459;
  _145 = carry11_473 * -997805;
  s3_479 = _145 + s3_463;
  _146 = carry11_473 * 136657;
  s4_480 = _146 + s4_462;
  _147 = carry11_473 * -683901;
  s5_481 = _147 + s5_466;
  carry0_483 = s0_476 >> 21;
  s1_484 = s1_477 + carry0_483;
  _148 = carry0_483 * 2097152;
  s0_485 = s0_476 - _148;
  carry1_486 = s1_484 >> 21;
  s2_487 = s2_478 + carry1_486;
  _149 = carry1_486 * 2097152;
  s1_488 = s1_484 - _149;
  carry2_489 = s2_487 >> 21;
  s3_490 = s3_479 + carry2_489;
  _150 = carry2_489 * 2097152;
  s2_491 = s2_487 - _150;
  carry3_492 = s3_490 >> 21;
  s4_493 = s4_480 + carry3_492;
  _151 = carry3_492 * 2097152;
  s3_494 = s3_490 - _151;
  carry4_495 = s4_493 >> 21;
  s5_496 = s5_481 + carry4_495;
  _152 = carry4_495 * 2097152;
  s4_497 = s4_493 - _152;
  carry5_498 = s5_496 >> 21;
  s6_499 = s6_465 + carry5_498;
  _153 = carry5_498 * 2097152;
  s5_500 = s5_496 - _153;
  carry6_501 = s6_499 >> 21;
  s7_502 = s7_469 + carry6_501;
  _154 = carry6_501 * 2097152;
  s6_503 = s6_499 - _154;
  carry7_504 = s7_502 >> 21;
  s8_505 = s8_468 + carry7_504;
  _155 = carry7_504 * 2097152;
  s7_506 = s7_502 - _155;
  carry8_507 = s8_505 >> 21;
  s9_508 = s9_472 + carry8_507;
  _156 = carry8_507 * 2097152;
  s8_509 = s8_505 - _156;
  carry9_510 = s9_508 >> 21;
  s10_511 = s10_471 + carry9_510;
  _157 = carry9_510 * 2097152;
  s9_512 = s9_508 - _157;
  carry10_513 = s10_511 >> 21;
  s11_514 = s11_475 + carry10_513;
  _158 = carry10_513 * 2097152;
  s10_515 = s10_511 - _158;
  carry11_516 = s11_514 >> 21;
  _159 = carry11_516 * 2097152;
  s11_518 = s11_514 - _159;
  _160 = carry11_516 * 666643;
  s0_519 = _160 + s0_485;
  _161 = carry11_516 * 470296;
  s1_520 = _161 + s1_488;
  _162 = carry11_516 * 654183;
  s2_521 = _162 + s2_491;
  _163 = carry11_516 * -997805;
  s3_522 = _163 + s3_494;
  _164 = carry11_516 * 136657;
  s4_523 = _164 + s4_497;
  _165 = carry11_516 * -683901;
  s5_524 = _165 + s5_500;
  carry0_526 = s0_519 >> 21;
  s1_527 = s1_520 + carry0_526;
  _166 = carry0_526 * 2097152;
  s0_528 = s0_519 - _166;
  carry1_529 = s1_527 >> 21;
  s2_530 = s2_521 + carry1_529;
  _167 = carry1_529 * 2097152;
  s1_531 = s1_527 - _167;
  carry2_532 = s2_530 >> 21;
  s3_533 = s3_522 + carry2_532;
  _168 = carry2_532 * 2097152;
  s2_534 = s2_530 - _168;
  carry3_535 = s3_533 >> 21;
  s4_536 = s4_523 + carry3_535;
  _169 = carry3_535 * 2097152;
  s3_537 = s3_533 - _169;
  carry4_538 = s4_536 >> 21;
  s5_539 = s5_524 + carry4_538;
  _170 = carry4_538 * 2097152;
  s4_540 = s4_536 - _170;
  carry5_541 = s5_539 >> 21;
  s6_542 = s6_503 + carry5_541;
  _171 = carry5_541 * 2097152;
  s5_543 = s5_539 - _171;
  carry6_544 = s6_542 >> 21;
  s7_545 = s7_506 + carry6_544;
  _172 = carry6_544 * 2097152;
  s6_546 = s6_542 - _172;
  carry7_547 = s7_545 >> 21;
  s8_548 = s8_509 + carry7_547;
  _173 = carry7_547 * 2097152;
  s7_549 = s7_545 - _173;
  carry8_550 = s8_548 >> 21;
  s9_551 = s9_512 + carry8_550;
  _174 = carry8_550 * 2097152;
  s8_552 = s8_548 - _174;
  carry9_553 = s9_551 >> 21;
  s10_554 = s10_515 + carry9_553;
  _175 = carry9_553 * 2097152;
  s9_555 = s9_551 - _175;
  carry10_556 = s10_554 >> 21;
  s11_557 = s11_518 + carry10_556;
  _176 = carry10_556 * 2097152;
  s10_558 = s10_554 - _176;
  _177 = (unsigned char) s0_528;
  _178 = s0_528 >> 8;
  _179 = (unsigned char) _178;
  _180 = s0_528 >> 16;
  _181 = (signed char) _180;
  _182 = (signed char) s1_531;
  _183 = _182 << 5;
  _184 = _181 | _183;
  _185 = (unsigned char) _184;
  _186 = s1_531 >> 3;
  _187 = (unsigned char) _186;
  _188 = s1_531 >> 11;
  _189 = (unsigned char) _188;
  _190 = s1_531 >> 19;
  _191 = (signed char) _190;
  _192 = (signed char) s2_534;
  _193 = _192 << 2;
  _194 = _191 | _193;
  _195 = (unsigned char) _194;
  _196 = s2_534 >> 6;
  _197 = (unsigned char) _196;
  _198 = s2_534 >> 14;
  _199 = (signed char) _198;
  _200 = (signed char) s3_537;
  _201 = _200 << 7;
  _202 = _199 | _201;
  _203 = (unsigned char) _202;
  _204 = s3_537 >> 1;
  _205 = (unsigned char) _204;
  _206 = s3_537 >> 9;
  _207 = (unsigned char) _206;
  _208 = s3_537 >> 17;
  _209 = (signed char) _208;
  _210 = (signed char) s4_540;
  _211 = _210 << 4;
  _212 = _209 | _211;
  _213 = (unsigned char) _212;
  _214 = s4_540 >> 4;
  _215 = (unsigned char) _214;
  _216 = s4_540 >> 12;
  _217 = (unsigned char) _216;
  _218 = s4_540 >> 20;
  _219 = (signed char) _218;
  _220 = (signed char) s5_543;
  _221 = _220 << 1;
  _222 = _219 | _221;
  _223 = (unsigned char) _222;
  _224 = s5_543 >> 7;
  _225 = (unsigned char) _224;
  _226 = s5_543 >> 15;
  _227 = (signed char) _226;
  _228 = (signed char) s6_546;
  _229 = _228 << 6;
  _230 = _227 | _229;
  _231 = (unsigned char) _230;
  _2209 = {_177, _179, _185, _187, _189, _195, _197, _203, _205, _207, _213, _215, _217, _223, _225, _231};
  _232 = s6_546 >> 2;
  _233 = (unsigned char) _232;
  _234 = s6_546 >> 10;
  _235 = (unsigned char) _234;
  _236 = s6_546 >> 18;
  _237 = (signed char) _236;
  _238 = (signed char) s7_549;
  _239 = _238 << 3;
  _240 = _237 | _239;
  _241 = (unsigned char) _240;
  _242 = s7_549 >> 5;
  _243 = (unsigned char) _242;
  _244 = s7_549 >> 13;
  _245 = (unsigned char) _244;
  _246 = (unsigned char) s8_552;
  _247 = s8_552 >> 8;
  _248 = (unsigned char) _247;
  _249 = s8_552 >> 16;
  _250 = (signed char) _249;
  _251 = (signed char) s9_555;
  _252 = _251 << 5;
  _253 = _250 | _252;
  _254 = (unsigned char) _253;
  _255 = s9_555 >> 3;
  _256 = (unsigned char) _255;
  _257 = s9_555 >> 11;
  _258 = (unsigned char) _257;
  _259 = s9_555 >> 19;
  _260 = (signed char) _259;
  _261 = (signed char) s10_558;
  _262 = _261 << 2;
  _263 = _260 | _262;
  _264 = (unsigned char) _263;
  _265 = s10_558 >> 6;
  _266 = (unsigned char) _265;
  _267 = s10_558 >> 14;
  _268 = (signed char) _267;
  _269 = (signed char) s11_557;
  _270 = _269 << 7;
  _271 = _268 | _270;
  _272 = (unsigned char) _271;
  _273 = s11_557 >> 1;
  _274 = (unsigned char) _273;
  _275 = s11_557 >> 9;
  _276 = (unsigned char) _275;
  _277 = s11_557 >> 17;
  _278 = (unsigned char) _277;
  _2208 = {_233, _235, _241, _243, _245, _246, _248, _254, _256, _258, _264, _266, _272, _274, _276, _278};
  MEM <vector(16) unsigned char> [(uint8_t *)s_280(D)] = _2209;
  MEM <vector(16) unsigned char> [(uint8_t *)s_280(D) + 16B] = _2208;
  return;

}

;; Function x25519_scalar_mult (x25519_scalar_mult, funcdef_no=390, decl_uid=17598, cgraph_uid=391, symbol_order=391)

Removing basic block 22
Removing basic block 23
Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 27
Removing basic block 28
Removing basic block 29
__attribute__((access ("^0[32]^1[32]^2[32]", )))
void x25519_scalar_mult (uint8_t * out, const uint8_t * scalar, const uint8_t * point)
{
  vector(2) long long unsigned int vect__97.717;
  vector(2) long long unsigned int vect__86.714;
  vector(2) long long unsigned int vect_z2_765.713;
  vector(2) long long unsigned int vect_z2_765.712;
  vector(2) long long unsigned int vect__691.709;
  vector(2) long long unsigned int vect_z3_730.708;
  vector(2) long long unsigned int vect_z3_730.707;
  long long unsigned int tmp1$32;
  long long unsigned int tmp1$24;
  long long unsigned int tmp1$16;
  long long unsigned int tmp1$8;
  long long unsigned int tmp1;
  long long unsigned int tmp0$32;
  long long unsigned int tmp0$24;
  long long unsigned int tmp0$16;
  long long unsigned int tmp0$8;
  long long unsigned int tmp0;
  long long unsigned int z3$32;
  long long unsigned int z3$24;
  long long unsigned int z3$16;
  long long unsigned int z3$8;
  long long unsigned int z3;
  long long unsigned int x3$32;
  long long unsigned int x3$24;
  long long unsigned int x3$16;
  long long unsigned int x3$8;
  long long unsigned int x3;
  long long unsigned int z2$32;
  long long unsigned int z2$24;
  long long unsigned int z2$16;
  long long unsigned int z2$8;
  long long unsigned int z2;
  long long unsigned int x2$32;
  long long unsigned int x2$24;
  long long unsigned int x2$16;
  long long unsigned int x2$8;
  long long unsigned int x2;
  uint64_t t0[5];
  uint64_t t1[5];
  uint64_t t2[5];
  uint64_t t3[5];
  uint64_t h0;
  uint64_t h1;
  uint64_t h2;
  uint64_t h3;
  uint64_t h4;
  uint64_t q;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  uint64_t h0;
  uint64_t h1;
  uint64_t h2;
  uint64_t h3;
  uint64_t h4;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  unsigned int b;
  int pos;
  unsigned int swap;
  uint8_t e[32];
  uint64_t tmp1[5];
  uint64_t tmp0[5];
  uint64_t z3[5];
  uint64_t x3[5];
  uint64_t z2[5];
  uint64_t x2[5];
  uint64_t x1[5];
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  int _8;
  int _9;
  int _10;
  int _22;
  long long unsigned int _56;
  long long unsigned int _58;
  long long unsigned int _60;
  long long unsigned int _62;
  long long unsigned int _64;
  long long unsigned int _68;
  long long unsigned int _72;
  int _75;
  long long unsigned int _76;
  unsigned char pretmp_79;
  long long unsigned int _80;
  unsigned char prephitmp_83;
  long long unsigned int _84;
  long long unsigned int _94;
  long long unsigned int _109;
  long long unsigned int _110;
  long long unsigned int _111;
  long long unsigned int _112;
  long long unsigned int _113;
  long long unsigned int _114;
  long long unsigned int _115;
  long long unsigned int _116;
  long long unsigned int _117;
  long long unsigned int _118;
  long long unsigned int _119;
  long long unsigned int _123;
  long long unsigned int _127;
  unsigned int _130;
  long long unsigned int _131;
  long long unsigned int _135;
  long long unsigned int _139;
  vector(16) unsigned char _142;
  long long unsigned int _143;
  vector(16) unsigned char _146;
  long long unsigned int _147;
  long long unsigned int _151;
  long long unsigned int _155;
  long long unsigned int _159;
  unsigned int ivtmp_252;
  unsigned int ivtmp_254;
  unsigned int ivtmp_255;
  unsigned int ivtmp_256;
  unsigned int ivtmp_257;
  unsigned int ivtmp_258;
  unsigned int ivtmp_259;
  unsigned int ivtmp_260;
  unsigned char _262;
  long long unsigned int _263;
  long long unsigned int _264;
  unsigned char _266;
  long long unsigned int _267;
  long long unsigned int _268;
  unsigned char _270;
  long long unsigned int _271;
  long long unsigned int _272;
  unsigned int ivtmp_274;
  unsigned int ivtmp_275;
  unsigned int ivtmp_276;
  unsigned int ivtmp_277;
  unsigned int ivtmp_278;
  unsigned int ivtmp_280;
  unsigned int ivtmp_281;
  unsigned char _288;
  long long unsigned int _289;
  long long unsigned int _290;
  unsigned char _292;
  long long unsigned int _293;
  long long unsigned int _294;
  unsigned char _311;
  long long unsigned int _312;
  long long unsigned int _313;
  unsigned char _315;
  long long unsigned int _316;
  long long unsigned int _317;
  unsigned char _319;
  long long unsigned int _320;
  long long unsigned int _321;
  unsigned char _338;
  long long unsigned int _339;
  long long unsigned int _340;
  unsigned char _342;
  long long unsigned int _343;
  long long unsigned int _344;
  unsigned char _361;
  long long unsigned int _362;
  long long unsigned int _363;
  unsigned char _365;
  long long unsigned int _366;
  long long unsigned int _367;
  long long unsigned int _369;
  long long unsigned int _371;
  long long unsigned int _374;
  long long unsigned int _377;
  long long unsigned int _380;
  __int128 unsigned _384;
  __int128 unsigned _387;
  __int128 unsigned _390;
  __int128 unsigned _393;
  __int128 unsigned _396;
  __int128 unsigned _398;
  long long unsigned int _400;
  __int128 unsigned _402;
  long long unsigned int _404;
  __int128 unsigned _406;
  long long unsigned int _408;
  __int128 unsigned _410;
  long long unsigned int _411;
  long long unsigned int _413;
  __int128 unsigned _415;
  long long unsigned int _416;
  long long unsigned int _419;
  long long unsigned int _421;
  long long unsigned int _424;
  long long unsigned int _432;
  long long unsigned int _434;
  long long unsigned int _436;
  long long unsigned int _438;
  long long unsigned int _440;
  long long unsigned int _444;
  long long unsigned int _447;
  long long unsigned int _450;
  long long unsigned int _453;
  unsigned char _457;
  long long unsigned int _458;
  unsigned char _459;
  long long unsigned int _460;
  unsigned char _461;
  long long unsigned int _462;
  unsigned char _463;
  long long unsigned int _464;
  unsigned char _465;
  long long unsigned int _466;
  unsigned char _467;
  long long unsigned int _468;
  unsigned char _469;
  unsigned char _470;
  unsigned char _471;
  unsigned char _472;
  long long unsigned int _473;
  unsigned char _474;
  long long unsigned int _475;
  unsigned char _476;
  long long unsigned int _477;
  unsigned char _478;
  long long unsigned int _479;
  unsigned char _480;
  long long unsigned int _481;
  unsigned char _482;
  long long unsigned int _483;
  unsigned char _484;
  unsigned char _485;
  unsigned char _486;
  unsigned char _487;
  long long unsigned int _488;
  unsigned char _489;
  long long unsigned int _490;
  unsigned char _491;
  long long unsigned int _492;
  unsigned char _493;
  long long unsigned int _494;
  unsigned char _495;
  long long unsigned int _496;
  unsigned char _497;
  long long unsigned int _498;
  unsigned char _499;
  long long unsigned int _500;
  unsigned char _501;
  unsigned char _502;
  unsigned char _503;
  unsigned char _504;
  long long unsigned int _505;
  unsigned char _506;
  long long unsigned int _507;
  unsigned char _508;
  long long unsigned int _509;
  unsigned char _510;
  long long unsigned int _511;
  unsigned char _512;
  long long unsigned int _513;
  unsigned char _514;
  long long unsigned int _515;
  unsigned char _516;
  unsigned char _517;
  unsigned char _518;
  unsigned char _519;
  long long unsigned int _520;
  unsigned char _521;
  long long unsigned int _522;
  unsigned char _523;
  long long unsigned int _524;
  unsigned char _525;
  long long unsigned int _526;
  unsigned char _527;
  long long unsigned int _528;
  unsigned char _529;
  long long unsigned int _530;
  unsigned char _531;
  unsigned int ivtmp_633;
  long long unsigned int _635;
  long long unsigned int _638;
  long long unsigned int _650;
  long long unsigned int _653;
  long long unsigned int _663;
  long long unsigned int _665;
  long long unsigned int _668;
  long long unsigned int _676;
  long long unsigned int _678;
  long long unsigned int _680;
  long long unsigned int _682;
  long long unsigned int _683;
  long long unsigned int _685;
  long long unsigned int _686;
  long long unsigned int _687;
  long long unsigned int _688;
  long long unsigned int _689;
  long long unsigned int _690;
  long long unsigned int _695;
  long long unsigned int _697;
  long long unsigned int _698;
  long long unsigned int _700;
  long long unsigned int _706;
  long long unsigned int _708;
  _Bool _709;
  long long unsigned int _710;
  long long unsigned int _713;
  long long unsigned int _714;
  long long unsigned int _717;
  long long unsigned int _721;
  long long unsigned int _723;
  long long unsigned int _725;
  long long unsigned int _728;
  long long unsigned int _740;
  long long unsigned int _743;
  long long unsigned int _755;
  long long unsigned int _756;
  long long unsigned int _758;
  long long unsigned int _759;
  long long unsigned int _762;
  long long unsigned int _766;
  long long unsigned int _768;
  long long unsigned int _770;
  long long unsigned int _771;
  long long unsigned int _773;
  long long unsigned int _774;
  unsigned long _782;
  unsigned long _783;
  unsigned long _784;
  unsigned long _785;
  unsigned int load_dst_801;
  unsigned int load_dst_802;
  unsigned int load_dst_803;
  unsigned int load_dst_804;
  unsigned int load_dst_805;
  unsigned int _856;
  unsigned long _860;

  <bb 2> [local count: 1808007]:
  MEM <unsigned char[32]> [(char * {ref-all})&e] = MEM <unsigned char[32]> [(char * {ref-all})scalar_16(D)];
  _1 = e[0];
  _2 = _1 & 248;
  e[0] = _2;
  _3 = e[31];
  _4 = _3 & 127;
  _5 = _4 | 64;
  e[31] = _5;
  load_dst_801 = MEM <unsigned int> [(const uint8_t *)point_20(D)];
  result_261 = (uint64_t) load_dst_801;
  _262 = MEM[(const uint8_t *)point_20(D) + 4B];
  _263 = (long long unsigned int) _262;
  _264 = _263 << 32;
  _266 = MEM[(const uint8_t *)point_20(D) + 5B];
  _267 = (long long unsigned int) _266;
  _268 = _267 << 40;
  _771 = _264 | _268;
  _270 = MEM[(const uint8_t *)point_20(D) + 6B];
  _271 = (long long unsigned int) _270;
  _272 = _271 << 48;
  _774 = result_261 | _272;
  result_273 = _771 | _774;
  load_dst_802 = MEM <unsigned int> [(const uint8_t *)point_20(D) + 7B];
  result_287 = (uint64_t) load_dst_802;
  _288 = MEM[(const uint8_t *)point_20(D) + 11B];
  _289 = (long long unsigned int) _288;
  _290 = _289 << 32;
  _292 = MEM[(const uint8_t *)point_20(D) + 12B];
  _293 = (long long unsigned int) _292;
  _294 = _293 << 40;
  _768 = _290 | _294;
  result_295 = result_287 | _768;
  h1_296 = result_295 << 5;
  load_dst_803 = MEM <unsigned int> [(const uint8_t *)point_20(D) + 13B];
  result_310 = (uint64_t) load_dst_803;
  _311 = MEM[(const uint8_t *)point_20(D) + 17B];
  _312 = (long long unsigned int) _311;
  _313 = _312 << 32;
  _315 = MEM[(const uint8_t *)point_20(D) + 18B];
  _316 = (long long unsigned int) _315;
  _317 = _316 << 40;
  _762 = _313 | _317;
  _319 = MEM[(const uint8_t *)point_20(D) + 19B];
  _320 = (long long unsigned int) _319;
  _321 = _320 << 48;
  _766 = result_310 | _321;
  result_322 = _762 | _766;
  h2_323 = result_322 << 2;
  load_dst_804 = MEM <unsigned int> [(const uint8_t *)point_20(D) + 20B];
  result_337 = (uint64_t) load_dst_804;
  _338 = MEM[(const uint8_t *)point_20(D) + 24B];
  _339 = (long long unsigned int) _338;
  _340 = _339 << 32;
  _342 = MEM[(const uint8_t *)point_20(D) + 25B];
  _343 = (long long unsigned int) _342;
  _344 = _343 << 40;
  _759 = _340 | _344;
  result_345 = result_337 | _759;
  h3_346 = result_345 << 7;
  load_dst_805 = MEM <unsigned int> [(const uint8_t *)point_20(D) + 26B];
  result_360 = (uint64_t) load_dst_805;
  _361 = MEM[(const uint8_t *)point_20(D) + 30B];
  _362 = (long long unsigned int) _361;
  _363 = _362 << 32;
  _365 = MEM[(const uint8_t *)point_20(D) + 31B];
  _366 = (long long unsigned int) _365;
  _367 = _366 << 40;
  _756 = _363 | _367;
  result_368 = result_360 | _756;
  _369 = result_368 << 4;
  h4_370 = _369 & 2251799813685232;
  _371 = result_273 >> 51;
  h1_372 = h1_296 | _371;
  h0_373 = result_273 & 2251799813685247;
  _374 = h1_372 >> 51;
  h2_375 = h2_323 | _374;
  h1_376 = h1_372 & 2251799813685247;
  _377 = h2_375 >> 51;
  h3_378 = h3_346 | _377;
  h2_379 = h2_375 & 2251799813685247;
  _380 = h3_378 >> 51;
  h4_381 = h4_370 | _380;
  h3_382 = h3_378 & 2251799813685247;
  MEM[(uint64_t *)&x1] = h0_373;
  MEM[(uint64_t *)&x1 + 8B] = h1_376;
  MEM[(uint64_t *)&x1 + 16B] = h2_379;
  MEM[(uint64_t *)&x1 + 24B] = h3_382;
  MEM[(uint64_t *)&x1 + 32B] = h4_381;

  <bb 3> [local count: 178992761]:
  # swap_636 = PHI <b_36(4), 0(2)>
  # pos_639 = PHI <pos_49(4), 254(2)>
  # x2_555 = PHI <x2_129(4), 1(2)>
  # x2$8_546 = PHI <x2$8_132(4), 0(2)>
  # x2$16_642 = PHI <x2$16_133(4), 0(2)>
  # x2$24_554 = PHI <x2$24_136(4), 0(2)>
  # x2$32_544 = PHI <x2$32_137(4), 0(2)>
  # z2_672 = PHI <z2_836(4), 0(2)>
  # z2$8_553 = PHI <z2$8_837(4), 0(2)>
  # z2$16_542 = PHI <z2$16_838(4), 0(2)>
  # z2$24_702 = PHI <z2$24_839(4), 0(2)>
  # z2$32_552 = PHI <z2$32_840(4), 0(2)>
  # x3_540 = PHI <x3_796(4), h0_373(2)>
  # x3$8_732 = PHI <x3$8_797(4), h1_376(2)>
  # x3$16_551 = PHI <x3$16_798(4), h2_379(2)>
  # x3$24_538 = PHI <x3$24_799(4), h3_382(2)>
  # x3$32_711 = PHI <x3$32_800(4), h4_381(2)>
  # z3_550 = PHI <z3_816(4), 1(2)>
  # z3$8_536 = PHI <z3$8_817(4), 0(2)>
  # z3$16_726 = PHI <z3$16_818(4), 0(2)>
  # z3$24_549 = PHI <z3$24_819(4), 0(2)>
  # z3$32_534 = PHI <z3$32_820(4), 0(2)>
  # prephitmp_83 = PHI <pretmp_79(4), _5(2)>
  _8 = (int) prephitmp_83;
  _9 = pos_639 & 7;
  _10 = _8 >> _9;
  _22 = _10 & 1;
  b_36 = (unsigned int) _22;
  swap_37 = b_36 ^ swap_636;
  _709 = (_Bool) swap_37;
  _710 = _709 ? x3_540 : x2_555;
  _713 = _709 ? x2_555 : x3_540;
  _725 = _709 ? x3$8_732 : x2$8_546;
  _728 = _709 ? x2$8_546 : x3$8_732;
  _740 = _709 ? x3$16_551 : x2$16_642;
  _743 = _709 ? x2$16_642 : x3$16_551;
  _755 = _709 ? x3$24_538 : x2$24_554;
  _758 = _709 ? x2$24_554 : x3$24_538;
  _770 = _709 ? x3$32_711 : x2$32_544;
  _773 = _709 ? x2$32_544 : x3$32_711;
  _635 = _709 ? z3_550 : z2_672;
  _638 = _709 ? z2_672 : z3_550;
  _650 = _709 ? z3$8_536 : z2$8_553;
  _653 = _709 ? z2$8_553 : z3$8_536;
  _665 = _709 ? z3$16_726 : z2$16_542;
  _668 = _709 ? z2$16_542 : z3$16_726;
  _680 = _709 ? z3$24_549 : z2$24_702;
  _683 = _709 ? z2$24_702 : z3$24_549;
  _695 = _709 ? z3$32_534 : z2$32_552;
  _698 = _709 ? z2$32_552 : z3$32_534;
  _663 = _713 + 4503599627370458;
  _143 = _663 - _638;
  _676 = _728 + 4503599627370494;
  _147 = _676 - _653;
  _678 = _743 + 4503599627370494;
  _151 = _678 - _668;
  _682 = _758 + 4503599627370494;
  _155 = _682 - _683;
  _685 = _773 + 4503599627370494;
  _159 = _685 - _698;
  _686 = _710 + 4503599627370458;
  _123 = _686 - _635;
  _687 = _725 + 4503599627370494;
  _127 = _687 - _650;
  _688 = _740 + 4503599627370494;
  _131 = _688 - _665;
  _689 = _755 + 4503599627370494;
  _135 = _689 - _680;
  _690 = _770 + 4503599627370494;
  _139 = _690 - _695;
  _115 = _635 + _710;
  _116 = _650 + _725;
  _117 = _665 + _740;
  _118 = _680 + _755;
  _119 = _695 + _770;
  _110 = _638 + _713;
  _111 = _653 + _728;
  _112 = _668 + _743;
  _113 = _683 + _758;
  _114 = _698 + _773;
  MEM <uint64_t> [(uint64_t[5] *)&tmp0] = _143;
  MEM <uint64_t> [(uint64_t[5] *)&tmp0 + 8B] = _147;
  MEM <uint64_t> [(uint64_t[5] *)&tmp0 + 16B] = _151;
  MEM <uint64_t> [(uint64_t[5] *)&tmp0 + 24B] = _155;
  MEM <uint64_t> [(uint64_t[5] *)&tmp0 + 32B] = _159;
  MEM <uint64_t> [(uint64_t[5] *)&x2] = _115;
  MEM <uint64_t> [(uint64_t[5] *)&x2 + 8B] = _116;
  MEM <uint64_t> [(uint64_t[5] *)&x2 + 16B] = _117;
  MEM <uint64_t> [(uint64_t[5] *)&x2 + 24B] = _118;
  MEM <uint64_t> [(uint64_t[5] *)&x2 + 32B] = _119;
  fe51_mul (&z3, &tmp0, &x2);
  vect_z3_730.707_431 = MEM <vector(2) long long unsigned int> [(uint64_t[5] *)&z3];
  vect_z3_730.708_430 = MEM <vector(2) long long unsigned int> [(uint64_t[5] *)&z3 + 16B];
  vect__691.709_429 = vect_z3_730.707_431 + { 4503599627370458, 4503599627370494 };
  vect__691.709_428 = vect_z3_730.708_430 + { 4503599627370494, 4503599627370494 };
  z3$32_735 = MEM <uint64_t> [(uint64_t[5] *)&z3 + 32B];
  MEM <uint64_t> [(uint64_t[5] *)&z2] = _110;
  MEM <uint64_t> [(uint64_t[5] *)&z2 + 8B] = _111;
  MEM <uint64_t> [(uint64_t[5] *)&z2 + 16B] = _112;
  MEM <uint64_t> [(uint64_t[5] *)&z2 + 24B] = _113;
  MEM <uint64_t> [(uint64_t[5] *)&z2 + 32B] = _114;
  MEM <uint64_t> [(uint64_t[5] *)&tmp1] = _123;
  MEM <uint64_t> [(uint64_t[5] *)&tmp1 + 8B] = _127;
  MEM <uint64_t> [(uint64_t[5] *)&tmp1 + 16B] = _131;
  MEM <uint64_t> [(uint64_t[5] *)&tmp1 + 24B] = _135;
  MEM <uint64_t> [(uint64_t[5] *)&tmp1 + 32B] = _139;
  fe51_mul (&z2, &z2, &tmp1);
  vect_z2_765.712_425 = MEM <vector(2) long long unsigned int> [(uint64_t[5] *)&z2];
  vect_z2_765.713_422 = MEM <vector(2) long long unsigned int> [(uint64_t[5] *)&z2 + 16B];
  vect__97.717_253 = vect_z2_765.712_425 + vect_z3_730.707_431;
  vect__97.717_158 = vect_z2_765.713_422 + vect_z3_730.708_430;
  vect__86.714_352 = vect__691.709_429 - vect_z2_765.712_425;
  vect__86.714_329 = vect__691.709_428 - vect_z2_765.713_422;
  z2$32_775 = MEM <uint64_t> [(uint64_t[5] *)&z2 + 32B];
  fe51_sq (&tmp0, &tmp1);
  tmp0_644 = MEM <uint64_t> [(uint64_t[5] *)&tmp0];
  tmp0$8_645 = MEM <uint64_t> [(uint64_t[5] *)&tmp0 + 8B];
  tmp0$16_647 = MEM <uint64_t> [(uint64_t[5] *)&tmp0 + 16B];
  tmp0$24_649 = MEM <uint64_t> [(uint64_t[5] *)&tmp0 + 24B];
  tmp0$32_652 = MEM <uint64_t> [(uint64_t[5] *)&tmp0 + 32B];
  fe51_sq (&tmp1, &x2);
  tmp1_673 = MEM <uint64_t> [(uint64_t[5] *)&tmp1];
  tmp1$8_674 = MEM <uint64_t> [(uint64_t[5] *)&tmp1 + 8B];
  tmp1$16_675 = MEM <uint64_t> [(uint64_t[5] *)&tmp1 + 16B];
  tmp1$24_677 = MEM <uint64_t> [(uint64_t[5] *)&tmp1 + 24B];
  tmp1$32_679 = MEM <uint64_t> [(uint64_t[5] *)&tmp1 + 32B];
  _109 = z3$32_735 + z2$32_775;
  _697 = z3$32_735 + 4503599627370494;
  _94 = _697 - z2$32_775;
  fe51_mul (&x2, &tmp1, &tmp0);
  x2_129 = MEM <uint64_t> [(uint64_t[5] *)&x2];
  x2$8_132 = MEM <uint64_t> [(uint64_t[5] *)&x2 + 8B];
  x2$16_133 = MEM <uint64_t> [(uint64_t[5] *)&x2 + 16B];
  x2$24_136 = MEM <uint64_t> [(uint64_t[5] *)&x2 + 24B];
  x2$32_137 = MEM <uint64_t> [(uint64_t[5] *)&x2 + 32B];
  _700 = tmp1_673 + 4503599627370458;
  _68 = _700 - tmp0_644;
  _706 = tmp1$8_674 + 4503599627370494;
  _72 = _706 - tmp0$8_645;
  _708 = tmp1$16_675 + 4503599627370494;
  _76 = _708 - tmp0$16_647;
  _714 = tmp1$24_677 + 4503599627370494;
  _80 = _714 - tmp0$24_649;
  _717 = tmp1$32_679 + 4503599627370494;
  _84 = _717 - tmp0$32_652;
  MEM <vector(2) long long unsigned int> [(uint64_t[5] *)&z2] = vect__86.714_352;
  MEM <vector(2) long long unsigned int> [(uint64_t[5] *)&z2 + 16B] = vect__86.714_329;
  MEM <uint64_t> [(uint64_t[5] *)&z2 + 32B] = _94;
  fe51_sq (&z2, &z2);
  _384 = (__int128 unsigned) _68;
  _860 = (unsigned long) _384;
  h0_385 = _860 w* 121666;
  _387 = (__int128 unsigned) _72;
  _782 = (unsigned long) _387;
  h1_388 = _782 w* 121666;
  _390 = (__int128 unsigned) _76;
  _783 = (unsigned long) _390;
  h2_391 = _783 w* 121666;
  _393 = (__int128 unsigned) _80;
  _784 = (unsigned long) _393;
  h3_394 = _784 w* 121666;
  _396 = (__int128 unsigned) _84;
  _785 = (unsigned long) _396;
  h4_397 = _785 w* 121666;
  _398 = h2_391 >> 51;
  h3_399 = h3_394 + _398;
  _400 = (long long unsigned int) h2_391;
  g2_401 = _400 & 2251799813685247;
  _402 = h0_385 >> 51;
  h1_403 = h1_388 + _402;
  _404 = (long long unsigned int) h0_385;
  g0_405 = _404 & 2251799813685247;
  _406 = h3_399 >> 51;
  h4_407 = h4_397 + _406;
  _408 = (long long unsigned int) h3_399;
  g3_409 = _408 & 2251799813685247;
  _410 = h1_403 >> 51;
  _411 = (long long unsigned int) _410;
  g2_412 = g2_401 + _411;
  _413 = (long long unsigned int) h1_403;
  g1_414 = _413 & 2251799813685247;
  _415 = h4_407 >> 51;
  _416 = (long long unsigned int) _415;
  _856 = (unsigned int) _416;
  g0_418 = WIDEN_MULT_PLUS_EXPR <_856, 19, g0_405>;
  _419 = (long long unsigned int) h4_407;
  g4_420 = _419 & 2251799813685247;
  _421 = g2_412 >> 51;
  _723 = g3_409 + tmp0$24_649;
  g2_423 = g2_412 & 2251799813685247;
  _424 = g0_418 >> 51;
  _721 = g1_414 + tmp0$8_645;
  g0_426 = g0_418 & 2251799813685247;
  MEM <vector(2) long long unsigned int> [(uint64_t[5] *)&x3] = vect__97.717_253;
  MEM <vector(2) long long unsigned int> [(uint64_t[5] *)&x3 + 16B] = vect__97.717_158;
  MEM <uint64_t> [(uint64_t[5] *)&x3 + 32B] = _109;
  fe51_sq (&x3, &x3);
  x3_796 = MEM <uint64_t> [(uint64_t[5] *)&x3];
  x3$8_797 = MEM <uint64_t> [(uint64_t[5] *)&x3 + 8B];
  x3$16_798 = MEM <uint64_t> [(uint64_t[5] *)&x3 + 16B];
  x3$24_799 = MEM <uint64_t> [(uint64_t[5] *)&x3 + 24B];
  x3$32_800 = MEM <uint64_t> [(uint64_t[5] *)&x3 + 32B];
  _56 = g0_426 + tmp0_644;
  _58 = _424 + _721;
  _60 = g2_423 + tmp0$16_647;
  _62 = _421 + _723;
  _64 = g4_420 + tmp0$32_652;
  fe51_mul (&z3, &x1, &z2);
  z3_816 = MEM <uint64_t> [(uint64_t[5] *)&z3];
  z3$8_817 = MEM <uint64_t> [(uint64_t[5] *)&z3 + 8B];
  z3$16_818 = MEM <uint64_t> [(uint64_t[5] *)&z3 + 16B];
  z3$24_819 = MEM <uint64_t> [(uint64_t[5] *)&z3 + 24B];
  z3$32_820 = MEM <uint64_t> [(uint64_t[5] *)&z3 + 32B];
  MEM <uint64_t> [(uint64_t[5] *)&tmp1] = _68;
  MEM <uint64_t> [(uint64_t[5] *)&tmp1 + 8B] = _72;
  MEM <uint64_t> [(uint64_t[5] *)&tmp1 + 16B] = _76;
  MEM <uint64_t> [(uint64_t[5] *)&tmp1 + 24B] = _80;
  MEM <uint64_t> [(uint64_t[5] *)&tmp1 + 32B] = _84;
  MEM <uint64_t> [(uint64_t[5] *)&tmp0] = _56;
  MEM <uint64_t> [(uint64_t[5] *)&tmp0 + 8B] = _58;
  MEM <uint64_t> [(uint64_t[5] *)&tmp0 + 16B] = _60;
  MEM <uint64_t> [(uint64_t[5] *)&tmp0 + 24B] = _62;
  MEM <uint64_t> [(uint64_t[5] *)&tmp0 + 32B] = _64;
  fe51_mul (&z2, &tmp1, &tmp0);
  z2_836 = MEM <uint64_t> [(uint64_t[5] *)&z2];
  z2$8_837 = MEM <uint64_t> [(uint64_t[5] *)&z2 + 8B];
  z2$16_838 = MEM <uint64_t> [(uint64_t[5] *)&z2 + 16B];
  z2$24_839 = MEM <uint64_t> [(uint64_t[5] *)&z2 + 24B];
  z2$32_840 = MEM <uint64_t> [(uint64_t[5] *)&z2 + 32B];
  pos_49 = pos_639 + -1;
  if (pos_49 != -1)
    goto <bb 4>; [98.99%]
  else
    goto <bb 5>; [1.01%]

  <bb 4> [local count: 177184754]:
  _75 = pos_49 >> 3;
  pretmp_79 = e[_75];
  goto <bb 3>; [100.00%]

  <bb 5> [local count: 1808007]:
  fe51_sq (&t0, &z2);
  fe51_sq (&t1, &t0);
  fe51_sq (&t1, &t1);
  fe51_mul (&t1, &z2, &t1);
  fe51_mul (&t0, &t0, &t1);
  fe51_sq (&t2, &t0);
  fe51_mul (&t1, &t1, &t2);
  fe51_sq (&t2, &t1);

  <bb 6> [local count: 7232028]:
  # ivtmp_280 = PHI <ivtmp_281(6), 4(5)>
  fe51_sq (&t2, &t2);
  ivtmp_281 = ivtmp_280 + 4294967295;
  if (ivtmp_281 != 0)
    goto <bb 6>; [75.00%]
  else
    goto <bb 7>; [25.00%]

  <bb 7> [local count: 1808007]:
  fe51_mul (&t1, &t2, &t1);
  fe51_sq (&t2, &t1);

  <bb 8> [local count: 16272063]:
  # ivtmp_277 = PHI <ivtmp_278(8), 9(7)>
  fe51_sq (&t2, &t2);
  ivtmp_278 = ivtmp_277 + 4294967295;
  if (ivtmp_278 != 0)
    goto <bb 8>; [88.89%]
  else
    goto <bb 9>; [11.11%]

  <bb 9> [local count: 1808007]:
  fe51_mul (&t2, &t2, &t1);
  fe51_sq (&t3, &t2);

  <bb 10> [local count: 34352135]:
  # ivtmp_275 = PHI <ivtmp_276(10), 19(9)>
  fe51_sq (&t3, &t3);
  ivtmp_276 = ivtmp_275 + 4294967295;
  if (ivtmp_276 != 0)
    goto <bb 10>; [94.74%]
  else
    goto <bb 11>; [5.26%]

  <bb 11> [local count: 1808007]:
  fe51_mul (&t2, &t3, &t2);

  <bb 12> [local count: 18082060]:
  # ivtmp_260 = PHI <ivtmp_274(12), 10(11)>
  fe51_sq (&t2, &t2);
  ivtmp_274 = ivtmp_260 + 4294967295;
  if (ivtmp_274 != 0)
    goto <bb 12>; [90.00%]
  else
    goto <bb 13>; [10.00%]

  <bb 13> [local count: 1808007]:
  fe51_mul (&t1, &t2, &t1);
  fe51_sq (&t2, &t1);

  <bb 14> [local count: 88592328]:
  # ivtmp_258 = PHI <ivtmp_259(14), 49(13)>
  fe51_sq (&t2, &t2);
  ivtmp_259 = ivtmp_258 + 4294967295;
  if (ivtmp_259 != 0)
    goto <bb 14>; [97.96%]
  else
    goto <bb 15>; [2.04%]

  <bb 15> [local count: 1808007]:
  fe51_mul (&t2, &t2, &t1);
  fe51_sq (&t3, &t2);

  <bb 16> [local count: 178992731]:
  # ivtmp_633 = PHI <ivtmp_257(16), 99(15)>
  fe51_sq (&t3, &t3);
  ivtmp_257 = ivtmp_633 + 4294967295;
  if (ivtmp_257 != 0)
    goto <bb 16>; [98.99%]
  else
    goto <bb 17>; [1.01%]

  <bb 17> [local count: 1808007]:
  fe51_mul (&t2, &t3, &t2);

  <bb 18> [local count: 90437265]:
  # ivtmp_255 = PHI <ivtmp_256(18), 50(17)>
  fe51_sq (&t2, &t2);
  ivtmp_256 = ivtmp_255 + 4294967295;
  if (ivtmp_256 != 0)
    goto <bb 18>; [98.00%]
  else
    goto <bb 19>; [2.00%]

  <bb 19> [local count: 1808007]:
  fe51_mul (&t1, &t2, &t1);

  <bb 20> [local count: 9037866]:
  # ivtmp_252 = PHI <ivtmp_254(20), 5(19)>
  fe51_sq (&t1, &t1);
  ivtmp_254 = ivtmp_252 + 4294967295;
  if (ivtmp_254 != 0)
    goto <bb 20>; [80.00%]
  else
    goto <bb 21>; [20.00%]

  <bb 21> [local count: 1808007]:
  fe51_mul (&z2, &t1, &t0);
  t0 ={v} {CLOBBER(eos)};
  t1 ={v} {CLOBBER(eos)};
  t2 ={v} {CLOBBER(eos)};
  t3 ={v} {CLOBBER(eos)};
  fe51_mul (&x2, &x2, &z2);
  x2_876 = MEM <uint64_t> [(uint64_t[5] *)&x2];
  x2$8_877 = MEM <uint64_t> [(uint64_t[5] *)&x2 + 8B];
  x2$16_878 = MEM <uint64_t> [(uint64_t[5] *)&x2 + 16B];
  x2$24_879 = MEM <uint64_t> [(uint64_t[5] *)&x2 + 24B];
  x2$32_880 = MEM <uint64_t> [(uint64_t[5] *)&x2 + 32B];
  _432 = x2_876 + 19;
  q_433 = _432 >> 51;
  _434 = q_433 + x2$8_877;
  q_435 = _434 >> 51;
  _436 = q_435 + x2$16_878;
  q_437 = _436 >> 51;
  _438 = q_437 + x2$24_879;
  q_439 = _438 >> 51;
  _440 = q_439 + x2$32_880;
  q_441 = _440 >> 51;
  _130 = (unsigned int) q_441;
  h0_443 = WIDEN_MULT_PLUS_EXPR <_130, 19, x2_876>;
  _444 = h0_443 >> 51;
  h1_445 = _444 + x2$8_877;
  h0_446 = h0_443 & 2251799813685247;
  _447 = h1_445 >> 51;
  h2_448 = _447 + x2$16_878;
  h1_449 = h1_445 & 2251799813685247;
  _450 = h2_448 >> 51;
  h3_451 = _450 + x2$24_879;
  h2_452 = h2_448 & 2251799813685247;
  _453 = h3_451 >> 51;
  h4_454 = _453 + x2$32_880;
  h3_455 = h3_451 & 2251799813685247;
  h4_456 = h4_454 & 2251799813685247;
  _457 = (unsigned char) h0_446;
  _458 = h0_446 >> 8;
  _459 = (unsigned char) _458;
  _460 = h0_446 >> 16;
  _461 = (unsigned char) _460;
  _462 = h0_446 >> 24;
  _463 = (unsigned char) _462;
  _464 = h0_446 >> 32;
  _465 = (unsigned char) _464;
  _466 = h0_446 >> 40;
  _467 = (unsigned char) _466;
  _468 = h0_446 >> 48;
  _469 = (unsigned char) _468;
  _470 = (unsigned char) h1_449;
  _471 = _470 << 3;
  _472 = _469 | _471;
  _473 = h1_449 >> 5;
  _474 = (unsigned char) _473;
  _475 = h1_449 >> 13;
  _476 = (unsigned char) _475;
  _477 = h1_449 >> 21;
  _478 = (unsigned char) _477;
  _479 = h1_449 >> 29;
  _480 = (unsigned char) _479;
  _481 = h1_449 >> 37;
  _482 = (unsigned char) _481;
  _483 = h1_449 >> 45;
  _484 = (unsigned char) _483;
  _485 = (unsigned char) h2_452;
  _486 = _485 << 6;
  _487 = _484 | _486;
  _488 = h2_452 >> 2;
  _489 = (unsigned char) _488;
  _490 = h2_452 >> 10;
  _491 = (unsigned char) _490;
  _492 = h2_452 >> 18;
  _493 = (unsigned char) _492;
  _142 = {_457, _459, _461, _463, _465, _467, _472, _474, _476, _478, _480, _482, _487, _489, _491, _493};
  _494 = h2_452 >> 26;
  _495 = (unsigned char) _494;
  _496 = h2_452 >> 34;
  _497 = (unsigned char) _496;
  _498 = h2_452 >> 42;
  _499 = (unsigned char) _498;
  _500 = h2_452 >> 50;
  _501 = (unsigned char) _500;
  _502 = (unsigned char) h3_455;
  _503 = _502 << 1;
  _504 = _501 | _503;
  _505 = h3_455 >> 7;
  _506 = (unsigned char) _505;
  _507 = h3_455 >> 15;
  _508 = (unsigned char) _507;
  _509 = h3_455 >> 23;
  _510 = (unsigned char) _509;
  _511 = h3_455 >> 31;
  _512 = (unsigned char) _511;
  _513 = h3_455 >> 39;
  _514 = (unsigned char) _513;
  _515 = h3_455 >> 47;
  _516 = (unsigned char) _515;
  _517 = (unsigned char) h4_456;
  _518 = _517 << 4;
  _519 = _516 | _518;
  _520 = h4_456 >> 4;
  _521 = (unsigned char) _520;
  _522 = h4_456 >> 12;
  _523 = (unsigned char) _522;
  _524 = h4_456 >> 20;
  _525 = (unsigned char) _524;
  _526 = h4_456 >> 28;
  _527 = (unsigned char) _526;
  _528 = h4_456 >> 36;
  _529 = (unsigned char) _528;
  _530 = h4_456 >> 44;
  _531 = (unsigned char) _530;
  _146 = {_495, _497, _499, _504, _506, _508, _510, _512, _514, _519, _521, _523, _525, _527, _529, _531};
  MEM <vector(16) unsigned char> [(uint8_t *)out_25(D)] = _142;
  MEM <vector(16) unsigned char> [(uint8_t *)out_25(D) + 16B] = _146;
  OPENSSL_cleanse (&e, 32);
  x1 ={v} {CLOBBER(eos)};
  e ={v} {CLOBBER(eos)};
  return;

}

;; Function fe_invert (fe_invert, funcdef_no=402, decl_uid=17961, cgraph_uid=403, symbol_order=408)

Removing basic block 19
Removing basic block 20
Removing basic block 21
Removing basic block 22
Removing basic block 23
Removing basic block 24
Removing basic block 25
Removing basic block 26
__attribute__((access ("^0[10]^1[10]", )))
void fe_invert (int32_t * out, const int32_t * z)
{
  vector(2) int vect_t3$32_3.833;
  vector(2) int vect_t3$32_344.832;
  vector(2) int vect_t3$32_374.829;
  vector(4) int vect_t3_16.824;
  vector(4) int vect_t3_336.823;
  vector(4) int vect_t3_336.822;
  vector(4) int vect_t3_366.819;
  vector(4) int vect_t3_366.818;
  int t3$36;
  int t3$32;
  int t3$28;
  int t3$24;
  int t3$20;
  int t3$16;
  int t3$12;
  int t3$8;
  int t3$4;
  int t3;
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t h9;
  int64_t h8;
  int64_t h7;
  int64_t h6;
  int64_t h5;
  int64_t h4;
  int64_t h3;
  int64_t h2;
  int64_t h1;
  int64_t h0;
  int64_t f2f9_38;
  int64_t f1f9_76;
  int64_t f1f8_2;
  int64_t f1f7_4;
  int64_t f1f6_2;
  int64_t f1f5_4;
  int64_t f1f4_2;
  int64_t f1f3_4;
  int64_t f1f2_2;
  int64_t f1f1_2;
  int32_t f9_38;
  int32_t f8_19;
  int32_t f7_38;
  int32_t f6_19;
  int32_t f5_38;
  int32_t f7_2;
  int32_t f6_2;
  int32_t f5_2;
  int32_t f4_2;
  int32_t f3_2;
  int32_t f2_2;
  int32_t f1_2;
  int32_t f0_2;
  int32_t t3[10];
  int32_t t2[10];
  int32_t t1[10];
  int32_t t0[10];
  long long int _163;
  long long int _164;
  long long int _165;
  long long int _166;
  long long int _168;
  long long int _169;
  long long int _170;
  long long int _172;
  long long int _173;
  long long int _174;
  long long int _175;
  long long int _177;
  long long int _178;
  long long int _179;
  long long int _181;
  long long int _182;
  long long int _183;
  long long int _184;
  long long int _186;
  long long int _187;
  long long int _188;
  long long int _190;
  long long int _191;
  long long int _192;
  long long int _193;
  long long int _195;
  long long int _196;
  long long int _197;
  long long int _199;
  long long int _200;
  long long int _201;
  long long int _202;
  long long int _204;
  long long int _205;
  long long int _206;
  long long int _209;
  long long int _211;
  long long int _214;
  long long int _216;
  long long int _219;
  long long int _221;
  long long int _224;
  long long int _226;
  long long int _229;
  long long int _231;
  long long int _234;
  long long int _236;
  long long int _239;
  long long int _241;
  long long int _244;
  long long int _246;
  long long int _249;
  long long int _251;
  long long int _254;
  long long int _256;
  long long int _259;
  long long int _260;
  long long int _262;
  long long int _265;
  long long int _267;
  int _269;
  int _270;
  int _271;
  int _272;
  int _273;
  int _274;
  int _275;
  int _276;
  int _277;
  int _278;
  unsigned int ivtmp_942;
  unsigned int ivtmp_943;
  unsigned int ivtmp_944;
  unsigned int ivtmp_945;
  unsigned int ivtmp_946;
  unsigned int ivtmp_947;
  unsigned int ivtmp_948;
  unsigned int ivtmp_949;
  unsigned int ivtmp_950;
  unsigned int ivtmp_951;
  unsigned int ivtmp_952;
  unsigned int ivtmp_953;
  unsigned int ivtmp_954;
  unsigned int ivtmp_955;
  unsigned int ivtmp_956;
  unsigned int ivtmp_957;

  <bb 2> [local count: 10737416]:
  fe_sq (&t0, z_18(D));
  fe_sq (&t1, &t0);
  fe_sq (&t1, &t1);
  fe_mul (&t1, z_18(D), &t1);
  fe_mul (&t0, &t0, &t1);
  fe_sq (&t2, &t0);
  fe_mul (&t1, &t1, &t2);
  fe_sq (&t2, &t1);

  <bb 3> [local count: 42949663]:
  # ivtmp_943 = PHI <ivtmp_942(3), 4(2)>
  fe_sq (&t2, &t2);
  ivtmp_942 = ivtmp_943 + 4294967295;
  if (ivtmp_942 != 0)
    goto <bb 3>; [75.00%]
  else
    goto <bb 4>; [25.00%]

  <bb 4> [local count: 10737416]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t2, &t1);

  <bb 5> [local count: 96636742]:
  # ivtmp_945 = PHI <ivtmp_944(5), 9(4)>
  fe_sq (&t2, &t2);
  ivtmp_944 = ivtmp_945 + 4294967295;
  if (ivtmp_944 != 0)
    goto <bb 5>; [88.89%]
  else
    goto <bb 6>; [11.11%]

  <bb 6> [local count: 10737416]:
  fe_mul (&t2, &t2, &t1);
  fe_sq (&t3, &t2);
  vect_t3_336.822_794 = MEM <vector(4) int> [(int32_t[10] *)&t3];
  vect_t3_336.823_793 = MEM <vector(4) int> [(int32_t[10] *)&t3 + 16B];
  vect_t3$32_344.832_787 = MEM <vector(2) int> [(int32_t[10] *)&t3 + 32B];

  <bb 7> [local count: 204010917]:
  # ivtmp_947 = PHI <ivtmp_946(7), 19(6)>
  # vect_t3_16.824_792 = PHI <vect_t3_366.818_796(7), vect_t3_336.822_794(6)>
  # vect_t3_16.824_791 = PHI <vect_t3_366.819_795(7), vect_t3_336.823_793(6)>
  # vect_t3$32_3.833_786 = PHI <vect_t3$32_374.829_788(7), vect_t3$32_344.832_787(6)>
  MEM <vector(4) int> [(int32_t[10] *)&t3] = vect_t3_16.824_792;
  MEM <vector(4) int> [(int32_t[10] *)&t3 + 16B] = vect_t3_16.824_791;
  MEM <vector(2) int> [(int32_t[10] *)&t3 + 32B] = vect_t3$32_3.833_786;
  fe_sq (&t3, &t3);
  vect_t3_366.818_796 = MEM <vector(4) int> [(int32_t[10] *)&t3];
  vect_t3_366.819_795 = MEM <vector(4) int> [(int32_t[10] *)&t3 + 16B];
  vect_t3$32_374.829_788 = MEM <vector(2) int> [(int32_t[10] *)&t3 + 32B];
  ivtmp_946 = ivtmp_947 + 4294967295;
  if (ivtmp_946 != 0)
    goto <bb 7>; [94.74%]
  else
    goto <bb 8>; [5.26%]

  <bb 8> [local count: 10737416]:
  fe_mul (&t2, &t3, &t2);

  <bb 9> [local count: 107385977]:
  # ivtmp_949 = PHI <ivtmp_948(9), 10(8)>
  fe_sq (&t2, &t2);
  ivtmp_948 = ivtmp_949 + 4294967295;
  if (ivtmp_948 != 0)
    goto <bb 9>; [90.00%]
  else
    goto <bb 10>; [10.00%]

  <bb 10> [local count: 10737416]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t2, &t1);

  <bb 11> [local count: 526133297]:
  # ivtmp_951 = PHI <ivtmp_950(11), 49(10)>
  fe_sq (&t2, &t2);
  ivtmp_950 = ivtmp_951 + 4294967295;
  if (ivtmp_950 != 0)
    goto <bb 11>; [97.96%]
  else
    goto <bb 12>; [2.04%]

  <bb 12> [local count: 10737416]:
  fe_mul (&t2, &t2, &t1);
  fe_sq (&t3, &t2);
  t3_396 = MEM <int32_t> [(int32_t[10] *)&t3];
  t3$4_397 = MEM <int32_t> [(int32_t[10] *)&t3 + 4B];
  t3$8_398 = MEM <int32_t> [(int32_t[10] *)&t3 + 8B];
  t3$12_399 = MEM <int32_t> [(int32_t[10] *)&t3 + 12B];
  t3$16_400 = MEM <int32_t> [(int32_t[10] *)&t3 + 16B];
  t3$20_401 = MEM <int32_t> [(int32_t[10] *)&t3 + 20B];
  t3$24_402 = MEM <int32_t> [(int32_t[10] *)&t3 + 24B];
  t3$28_403 = MEM <int32_t> [(int32_t[10] *)&t3 + 28B];
  t3$32_404 = MEM <int32_t> [(int32_t[10] *)&t3 + 32B];
  t3$36_405 = MEM <int32_t> [(int32_t[10] *)&t3 + 36B];

  <bb 13> [local count: 1063004408]:
  # t3_8 = PHI <_269(13), t3_396(12)>
  # t3$4_15 = PHI <_270(13), t3$4_397(12)>
  # t3$8_291 = PHI <_271(13), t3$8_398(12)>
  # t3$12_6 = PHI <_272(13), t3$12_399(12)>
  # t3$16_13 = PHI <_273(13), t3$16_400(12)>
  # t3$20_295 = PHI <_274(13), t3$20_401(12)>
  # t3$24_4 = PHI <_275(13), t3$24_402(12)>
  # t3$28_11 = PHI <_276(13), t3$28_403(12)>
  # t3$32_299 = PHI <_277(13), t3$32_404(12)>
  # t3$36_2 = PHI <_278(13), t3$36_405(12)>
  # ivtmp_953 = PHI <ivtmp_952(13), 99(12)>
  f0_2_72 = t3_8 * 2;
  f1_2_73 = t3$4_15 * 2;
  f2_2_74 = t3$8_291 * 2;
  f3_2_75 = t3$12_6 * 2;
  f4_2_76 = t3$16_13 * 2;
  f5_2_77 = t3$20_295 * 2;
  f6_2_78 = t3$24_4 * 2;
  f7_2_79 = t3$28_11 * 2;
  f5_38_80 = t3$20_295 * 38;
  f6_19_81 = t3$24_4 * 19;
  f7_38_82 = t3$28_11 * 38;
  f8_19_83 = t3$32_299 * 19;
  f9_38_84 = t3$36_2 * 38;
  f1f1_2_107 = t3$4_15 w* f1_2_73;
  f1f2_2_108 = t3$8_291 w* f1_2_73;
  f1f3_4_110 = f1_2_73 w* f3_2_75;
  f1f4_2_111 = t3$16_13 w* f1_2_73;
  f1f5_4_113 = f1_2_73 w* f5_2_77;
  f1f6_2_114 = t3$24_4 w* f1_2_73;
  f1f7_4_116 = f1_2_73 w* f7_2_79;
  f1f8_2_117 = t3$32_299 w* f1_2_73;
  f1f9_76_119 = f1_2_73 w* f9_38_84;
  f2f9_38_129 = t3$8_291 w* f9_38_84;
  _163 = WIDEN_MULT_PLUS_EXPR <t3_8, t3_8, f1f9_76_119>;
  _164 = WIDEN_MULT_PLUS_EXPR <f2_2_74, f8_19_83, _163>;
  _165 = WIDEN_MULT_PLUS_EXPR <f3_2_75, f7_38_82, _164>;
  _166 = WIDEN_MULT_PLUS_EXPR <f4_2_76, f6_19_81, _165>;
  h0_167 = WIDEN_MULT_PLUS_EXPR <t3$20_295, f5_38_80, _166>;
  _168 = WIDEN_MULT_PLUS_EXPR <f0_2_72, t3$4_15, f2f9_38_129>;
  _169 = WIDEN_MULT_PLUS_EXPR <f3_2_75, f8_19_83, _168>;
  _170 = WIDEN_MULT_PLUS_EXPR <t3$16_13, f7_38_82, _169>;
  h1_171 = WIDEN_MULT_PLUS_EXPR <f5_2_77, f6_19_81, _170>;
  _172 = WIDEN_MULT_PLUS_EXPR <f0_2_72, t3$8_291, f1f1_2_107>;
  _173 = WIDEN_MULT_PLUS_EXPR <f3_2_75, f9_38_84, _172>;
  _174 = WIDEN_MULT_PLUS_EXPR <f8_19_83, f4_2_76, _173>;
  _175 = WIDEN_MULT_PLUS_EXPR <f5_2_77, f7_38_82, _174>;
  h2_176 = WIDEN_MULT_PLUS_EXPR <t3$24_4, f6_19_81, _175>;
  _177 = WIDEN_MULT_PLUS_EXPR <f0_2_72, t3$12_6, f1f2_2_108>;
  _178 = WIDEN_MULT_PLUS_EXPR <t3$16_13, f9_38_84, _177>;
  _179 = WIDEN_MULT_PLUS_EXPR <f5_2_77, f8_19_83, _178>;
  h3_180 = WIDEN_MULT_PLUS_EXPR <t3$24_4, f7_38_82, _179>;
  _181 = WIDEN_MULT_PLUS_EXPR <f0_2_72, t3$16_13, f1f3_4_110>;
  _182 = WIDEN_MULT_PLUS_EXPR <t3$8_291, t3$8_291, _181>;
  _183 = WIDEN_MULT_PLUS_EXPR <f5_2_77, f9_38_84, _182>;
  _184 = WIDEN_MULT_PLUS_EXPR <f8_19_83, f6_2_78, _183>;
  h4_185 = WIDEN_MULT_PLUS_EXPR <t3$28_11, f7_38_82, _184>;
  _186 = WIDEN_MULT_PLUS_EXPR <f0_2_72, t3$20_295, f1f4_2_111>;
  _187 = WIDEN_MULT_PLUS_EXPR <t3$12_6, f2_2_74, _186>;
  _188 = WIDEN_MULT_PLUS_EXPR <t3$24_4, f9_38_84, _187>;
  h5_189 = WIDEN_MULT_PLUS_EXPR <f7_2_79, f8_19_83, _188>;
  _190 = WIDEN_MULT_PLUS_EXPR <f0_2_72, t3$24_4, f1f5_4_113>;
  _191 = WIDEN_MULT_PLUS_EXPR <t3$16_13, f2_2_74, _190>;
  _192 = WIDEN_MULT_PLUS_EXPR <t3$12_6, f3_2_75, _191>;
  _193 = WIDEN_MULT_PLUS_EXPR <f7_2_79, f9_38_84, _192>;
  h6_194 = WIDEN_MULT_PLUS_EXPR <t3$32_299, f8_19_83, _193>;
  _195 = WIDEN_MULT_PLUS_EXPR <f0_2_72, t3$28_11, f1f6_2_114>;
  _196 = WIDEN_MULT_PLUS_EXPR <t3$20_295, f2_2_74, _195>;
  _197 = WIDEN_MULT_PLUS_EXPR <t3$16_13, f3_2_75, _196>;
  h7_198 = WIDEN_MULT_PLUS_EXPR <t3$32_299, f9_38_84, _197>;
  _199 = WIDEN_MULT_PLUS_EXPR <f0_2_72, t3$32_299, f1f7_4_116>;
  _200 = WIDEN_MULT_PLUS_EXPR <t3$24_4, f2_2_74, _199>;
  _201 = WIDEN_MULT_PLUS_EXPR <f3_2_75, f5_2_77, _200>;
  _202 = WIDEN_MULT_PLUS_EXPR <t3$16_13, t3$16_13, _201>;
  h8_203 = WIDEN_MULT_PLUS_EXPR <t3$36_2, f9_38_84, _202>;
  _204 = WIDEN_MULT_PLUS_EXPR <f0_2_72, t3$36_2, f1f8_2_117>;
  _205 = WIDEN_MULT_PLUS_EXPR <t3$28_11, f2_2_74, _204>;
  _206 = WIDEN_MULT_PLUS_EXPR <t3$24_4, f3_2_75, _205>;
  h9_207 = WIDEN_MULT_PLUS_EXPR <t3$20_295, f4_2_76, _206>;
  carry0_208 = h0_167 + 33554432;
  _209 = carry0_208 >> 26;
  h1_210 = h1_171 + _209;
  _211 = carry0_208 & -67108864;
  h0_212 = h0_167 - _211;
  carry4_213 = h4_185 + 33554432;
  _214 = carry4_213 >> 26;
  h5_215 = h5_189 + _214;
  _216 = carry4_213 & -67108864;
  h4_217 = h4_185 - _216;
  carry1_218 = h1_210 + 16777216;
  _219 = carry1_218 >> 25;
  h2_220 = h2_176 + _219;
  _221 = carry1_218 & -33554432;
  h1_222 = h1_210 - _221;
  carry5_223 = h5_215 + 16777216;
  _224 = carry5_223 >> 25;
  h6_225 = h6_194 + _224;
  _226 = carry5_223 & -33554432;
  h5_227 = h5_215 - _226;
  carry2_228 = h2_220 + 33554432;
  _229 = carry2_228 >> 26;
  h3_230 = h3_180 + _229;
  _231 = carry2_228 & -67108864;
  h2_232 = h2_220 - _231;
  carry6_233 = h6_225 + 33554432;
  _234 = carry6_233 >> 26;
  h7_235 = h7_198 + _234;
  _236 = carry6_233 & -67108864;
  h6_237 = h6_225 - _236;
  carry3_238 = h3_230 + 16777216;
  _239 = carry3_238 >> 25;
  h4_240 = h4_217 + _239;
  _241 = carry3_238 & -33554432;
  h3_242 = h3_230 - _241;
  carry7_243 = h7_235 + 16777216;
  _244 = carry7_243 >> 25;
  h8_245 = h8_203 + _244;
  _246 = carry7_243 & -33554432;
  h7_247 = h7_235 - _246;
  carry4_248 = h4_240 + 33554432;
  _249 = carry4_248 >> 26;
  h5_250 = h5_227 + _249;
  _251 = carry4_248 & -67108864;
  h4_252 = h4_240 - _251;
  carry8_253 = h8_245 + 33554432;
  _254 = carry8_253 >> 26;
  h9_255 = h9_207 + _254;
  _256 = carry8_253 & -67108864;
  h8_257 = h8_245 - _256;
  carry9_258 = h9_255 + 16777216;
  _259 = carry9_258 >> 25;
  _260 = _259 * 19;
  h0_261 = h0_212 + _260;
  _262 = carry9_258 & -33554432;
  h9_263 = h9_255 - _262;
  carry0_264 = h0_261 + 33554432;
  _265 = carry0_264 >> 26;
  h1_266 = h1_222 + _265;
  _267 = carry0_264 & -67108864;
  h0_268 = h0_261 - _267;
  _269 = (int) h0_268;
  _270 = (int) h1_266;
  _271 = (int) h2_232;
  _272 = (int) h3_242;
  _273 = (int) h4_252;
  _274 = (int) h5_250;
  _275 = (int) h6_237;
  _276 = (int) h7_247;
  _277 = (int) h8_257;
  _278 = (int) h9_263;
  ivtmp_952 = ivtmp_953 + 4294967295;
  if (ivtmp_952 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 14>; [1.01%]

  <bb 14> [local count: 10737416]:
  MEM <int32_t> [(int32_t[10] *)&t3] = _269;
  MEM <int32_t> [(int32_t[10] *)&t3 + 4B] = _270;
  MEM <int32_t> [(int32_t[10] *)&t3 + 8B] = _271;
  MEM <int32_t> [(int32_t[10] *)&t3 + 12B] = _272;
  MEM <int32_t> [(int32_t[10] *)&t3 + 16B] = _273;
  MEM <int32_t> [(int32_t[10] *)&t3 + 20B] = _274;
  MEM <int32_t> [(int32_t[10] *)&t3 + 24B] = _275;
  MEM <int32_t> [(int32_t[10] *)&t3 + 28B] = _276;
  MEM <int32_t> [(int32_t[10] *)&t3 + 32B] = _277;
  MEM <int32_t> [(int32_t[10] *)&t3 + 36B] = _278;
  fe_mul (&t2, &t3, &t2);
  fe_sq (&t2, &t2);

  <bb 15> [local count: 526133297]:
  # ivtmp_955 = PHI <ivtmp_954(15), 49(14)>
  fe_sq (&t2, &t2);
  ivtmp_954 = ivtmp_955 + 4294967295;
  if (ivtmp_954 != 0)
    goto <bb 15>; [97.96%]
  else
    goto <bb 16>; [2.04%]

  <bb 16> [local count: 10737416]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t1, &t1);

  <bb 17> [local count: 42949663]:
  # ivtmp_957 = PHI <ivtmp_956(17), 4(16)>
  fe_sq (&t1, &t1);
  ivtmp_956 = ivtmp_957 + 4294967295;
  if (ivtmp_956 != 0)
    goto <bb 17>; [75.00%]
  else
    goto <bb 18>; [25.00%]

  <bb 18> [local count: 10737416]:
  fe_mul (out_40(D), &t1, &t0);
  t0 ={v} {CLOBBER(eos)};
  t1 ={v} {CLOBBER(eos)};
  t2 ={v} {CLOBBER(eos)};
  return;

}
