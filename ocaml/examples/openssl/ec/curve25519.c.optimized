
;; Function load_7 (load_7, funcdef_no=388, decl_uid=17147, cgraph_uid=389, symbol_order=389)

uint64_t load_7 (const uint8_t * in)
{
  uint64_t result;
  long unsigned int _1;
  unsigned char _11;
  long unsigned int _12;
  long unsigned int _13;
  unsigned char _14;
  long unsigned int _15;
  long unsigned int _16;
  unsigned char _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _22;
  unsigned int load_dst_23;

  <bb 2> [local count: 1073741824]:
  load_dst_23 = MEM <unsigned int> [(const uint8_t *)in_21(D)];
  result_25 = (uint64_t) load_dst_23;
  _11 = MEM[(const uint8_t *)in_21(D) + 4B];
  _12 = (long unsigned int) _11;
  _13 = _12 << 32;
  _14 = MEM[(const uint8_t *)in_21(D) + 5B];
  _15 = (long unsigned int) _14;
  _16 = _15 << 40;
  _1 = _13 | _16;
  _17 = MEM[(const uint8_t *)in_21(D) + 6B];
  _18 = (long unsigned int) _17;
  _19 = _18 << 48;
  _22 = _19 | result_25;
  result_28 = _1 | _22;
  return result_28;

}



;; Function load_6 (load_6, funcdef_no=389, decl_uid=17151, cgraph_uid=390, symbol_order=390)

uint64_t load_6 (const uint8_t * in)
{
  uint64_t result;
  long unsigned int _1;
  unsigned char _11;
  long unsigned int _12;
  long unsigned int _13;
  unsigned char _14;
  long unsigned int _15;
  long unsigned int _16;
  unsigned int load_dst_20;

  <bb 2> [local count: 1073741824]:
  load_dst_20 = MEM <unsigned int> [(const uint8_t *)in_18(D)];
  result_22 = (uint64_t) load_dst_20;
  _11 = MEM[(const uint8_t *)in_18(D) + 4B];
  _12 = (long unsigned int) _11;
  _13 = _12 << 32;
  _14 = MEM[(const uint8_t *)in_18(D) + 5B];
  _15 = (long unsigned int) _14;
  _16 = _15 << 40;
  _1 = _13 | _16;
  result_24 = _1 | result_22;
  return result_24;

}



;; Function fe51_frombytes (fe51_frombytes, funcdef_no=390, decl_uid=17156, cgraph_uid=391, symbol_order=391)

__attribute__((access ("^0[5]", )))
void fe51_frombytes (uint64_t * h, const uint8_t * s)
{
  uint64_t h4;
  uint64_t h3;
  uint64_t h2;
  uint64_t h1;
  uint64_t h0;
  const uint8_t * _1;
  long unsigned int _2;
  const uint8_t * _3;
  long unsigned int _4;
  const uint8_t * _5;
  long unsigned int _6;
  const uint8_t * _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;

  <bb 2> [local count: 1073741824]:
  h0_16 = load_7 (s_15(D));
  _1 = s_15(D) + 7;
  _2 = load_6 (_1);
  h1_17 = _2 << 5;
  _3 = s_15(D) + 13;
  _4 = load_7 (_3);
  h2_18 = _4 << 2;
  _5 = s_15(D) + 20;
  _6 = load_6 (_5);
  h3_19 = _6 << 7;
  _7 = s_15(D) + 26;
  _8 = load_6 (_7);
  _9 = _8 << 4;
  h4_20 = _9 & 2251799813685232;
  _10 = h0_16 >> 51;
  h1_21 = _10 | h1_17;
  h0_22 = h0_16 & 2251799813685247;
  _11 = h1_21 >> 51;
  h2_23 = _11 | h2_18;
  h1_24 = h1_21 & 2251799813685247;
  _12 = h2_23 >> 51;
  h3_25 = _12 | h3_19;
  h2_26 = h2_23 & 2251799813685247;
  _13 = h3_25 >> 51;
  h4_27 = _13 | h4_20;
  h3_28 = h3_25 & 2251799813685247;
  *h_29(D) = h0_22;
  MEM[(uint64_t *)h_29(D) + 8B] = h1_24;
  MEM[(uint64_t *)h_29(D) + 16B] = h2_26;
  MEM[(uint64_t *)h_29(D) + 24B] = h3_28;
  MEM[(uint64_t *)h_29(D) + 32B] = h4_27;
  return;

}



;; Function fe51_tobytes (fe51_tobytes, funcdef_no=391, decl_uid=17165, cgraph_uid=392, symbol_order=392)

__attribute__((access ("^1[5]", )))
void fe51_tobytes (uint8_t * s, const uint64_t * h)
{
  uint64_t q;
  uint64_t h4;
  uint64_t h3;
  uint64_t h2;
  uint64_t h1;
  uint64_t h0;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  unsigned char _11;
  long unsigned int _12;
  unsigned char _13;
  long unsigned int _14;
  unsigned char _15;
  long unsigned int _16;
  unsigned char _17;
  long unsigned int _18;
  unsigned char _19;
  long unsigned int _20;
  unsigned char _21;
  long unsigned int _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  long unsigned int _27;
  unsigned char _28;
  long unsigned int _29;
  unsigned char _30;
  long unsigned int _31;
  unsigned char _32;
  long unsigned int _33;
  unsigned char _34;
  long unsigned int _35;
  unsigned char _36;
  long unsigned int _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  long unsigned int _42;
  unsigned char _43;
  long unsigned int _44;
  unsigned char _45;
  long unsigned int _46;
  unsigned char _47;
  long unsigned int _48;
  unsigned char _49;
  long unsigned int _50;
  unsigned char _51;
  long unsigned int _52;
  unsigned char _53;
  long unsigned int _54;
  unsigned char _55;
  unsigned char _56;
  unsigned char _57;
  unsigned char _58;
  long unsigned int _59;
  unsigned char _60;
  long unsigned int _61;
  unsigned char _62;
  long unsigned int _63;
  unsigned char _64;
  long unsigned int _65;
  unsigned char _66;
  long unsigned int _67;
  unsigned char _68;
  long unsigned int _69;
  unsigned char _70;
  unsigned char _71;
  unsigned char _72;
  unsigned char _73;
  long unsigned int _74;
  unsigned char _75;
  long unsigned int _76;
  unsigned char _77;
  long unsigned int _78;
  unsigned char _79;
  long unsigned int _80;
  unsigned char _81;
  long unsigned int _82;
  unsigned char _83;
  long unsigned int _84;
  unsigned char _85;
  vector(16) unsigned char _205;
  vector(16) unsigned char _206;
  unsigned int _209;

  <bb 2> [local count: 1073741824]:
  h0_88 = *h_87(D);
  h1_89 = MEM[(const uint64_t *)h_87(D) + 8B];
  h2_90 = MEM[(const uint64_t *)h_87(D) + 16B];
  h3_91 = MEM[(const uint64_t *)h_87(D) + 24B];
  h4_92 = MEM[(const uint64_t *)h_87(D) + 32B];
  _1 = h0_88 + 19;
  q_93 = _1 >> 51;
  _2 = h1_89 + q_93;
  q_94 = _2 >> 51;
  _3 = h2_90 + q_94;
  q_95 = _3 >> 51;
  _4 = h3_91 + q_95;
  q_96 = _4 >> 51;
  _5 = h4_92 + q_96;
  q_97 = _5 >> 51;
  _209 = (unsigned int) q_97;
  h0_98 = WIDEN_MULT_PLUS_EXPR <_209, 19, h0_88>;
  _7 = h0_98 >> 51;
  h1_99 = _7 + h1_89;
  h0_100 = h0_98 & 2251799813685247;
  _8 = h1_99 >> 51;
  h2_101 = _8 + h2_90;
  h1_102 = h1_99 & 2251799813685247;
  _9 = h2_101 >> 51;
  h3_103 = _9 + h3_91;
  h2_104 = h2_101 & 2251799813685247;
  _10 = h3_103 >> 51;
  h4_105 = _10 + h4_92;
  h3_106 = h3_103 & 2251799813685247;
  h4_107 = h4_105 & 2251799813685247;
  _11 = (unsigned char) h0_100;
  _12 = h0_100 >> 8;
  _13 = (unsigned char) _12;
  _14 = h0_100 >> 16;
  _15 = (unsigned char) _14;
  _16 = h0_100 >> 24;
  _17 = (unsigned char) _16;
  _18 = h0_100 >> 32;
  _19 = (unsigned char) _18;
  _20 = h0_100 >> 40;
  _21 = (unsigned char) _20;
  _22 = h0_100 >> 48;
  _23 = (unsigned char) _22;
  _24 = (unsigned char) h1_102;
  _25 = _24 << 3;
  _26 = _23 | _25;
  _27 = h1_102 >> 5;
  _28 = (unsigned char) _27;
  _29 = h1_102 >> 13;
  _30 = (unsigned char) _29;
  _31 = h1_102 >> 21;
  _32 = (unsigned char) _31;
  _33 = h1_102 >> 29;
  _34 = (unsigned char) _33;
  _35 = h1_102 >> 37;
  _36 = (unsigned char) _35;
  _37 = h1_102 >> 45;
  _38 = (unsigned char) _37;
  _39 = (unsigned char) h2_104;
  _40 = _39 << 6;
  _41 = _38 | _40;
  _42 = h2_104 >> 2;
  _43 = (unsigned char) _42;
  _44 = h2_104 >> 10;
  _45 = (unsigned char) _44;
  _46 = h2_104 >> 18;
  _47 = (unsigned char) _46;
  _206 = {_11, _13, _15, _17, _19, _21, _26, _28, _30, _32, _34, _36, _41, _43, _45, _47};
  _48 = h2_104 >> 26;
  _49 = (unsigned char) _48;
  _50 = h2_104 >> 34;
  _51 = (unsigned char) _50;
  _52 = h2_104 >> 42;
  _53 = (unsigned char) _52;
  _54 = h2_104 >> 50;
  _55 = (unsigned char) _54;
  _56 = (unsigned char) h3_106;
  _57 = _56 << 1;
  _58 = _55 | _57;
  _59 = h3_106 >> 7;
  _60 = (unsigned char) _59;
  _61 = h3_106 >> 15;
  _62 = (unsigned char) _61;
  _63 = h3_106 >> 23;
  _64 = (unsigned char) _63;
  _65 = h3_106 >> 31;
  _66 = (unsigned char) _65;
  _67 = h3_106 >> 39;
  _68 = (unsigned char) _67;
  _69 = h3_106 >> 47;
  _70 = (unsigned char) _69;
  _71 = (unsigned char) h4_107;
  _72 = _71 << 4;
  _73 = _70 | _72;
  _74 = h4_107 >> 4;
  _75 = (unsigned char) _74;
  _76 = h4_107 >> 12;
  _77 = (unsigned char) _76;
  _78 = h4_107 >> 20;
  _79 = (unsigned char) _78;
  _80 = h4_107 >> 28;
  _81 = (unsigned char) _80;
  _82 = h4_107 >> 36;
  _83 = (unsigned char) _82;
  _84 = h4_107 >> 44;
  _85 = (unsigned char) _84;
  _205 = {_49, _51, _53, _58, _60, _62, _64, _66, _68, _73, _75, _77, _79, _81, _83, _85};
  MEM <vector(16) unsigned char> [(uint8_t *)s_108(D)] = _206;
  MEM <vector(16) unsigned char> [(uint8_t *)s_108(D) + 16B] = _205;
  return;

}



;; Function fe51_mul (fe51_mul, funcdef_no=392, decl_uid=17177, cgraph_uid=393, symbol_order=393)

__attribute__((access ("^0[5]^1[5]^2[5]", )))
void fe51_mul (uint64_t * h, const uint64_t * f, const uint64_t * g)
{
  uint64_t g4;
  uint64_t g3;
  uint64_t g2;
  uint64_t g1;
  uint64_t g0;
  uint64_t f_i;
  u128 h4;
  u128 h3;
  u128 h2;
  u128 h1;
  u128 h0;
  __int128 unsigned _1;
  __int128 unsigned _2;
  __int128 unsigned _3;
  __int128 unsigned _4;
  __int128 unsigned _5;
  __int128 unsigned _6;
  __int128 unsigned _7;
  __int128 unsigned _8;
  __int128 unsigned _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  __int128 unsigned _12;
  __int128 unsigned _13;
  __int128 unsigned _14;
  __int128 unsigned _15;
  __int128 unsigned _16;
  __int128 unsigned _17;
  __int128 unsigned _18;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _21;
  __int128 unsigned _22;
  __int128 unsigned _23;
  __int128 unsigned _24;
  __int128 unsigned _25;
  __int128 unsigned _26;
  __int128 unsigned _27;
  __int128 unsigned _28;
  __int128 unsigned _29;
  __int128 unsigned _30;
  __int128 unsigned _31;
  long unsigned int _32;
  __int128 unsigned _33;
  long unsigned int _34;
  __int128 unsigned _35;
  long unsigned int _36;
  __int128 unsigned _37;
  long unsigned int _38;
  long unsigned int _39;
  __int128 unsigned _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  __int128 unsigned _62;
  unsigned long _63;
  unsigned long _64;
  unsigned long _65;
  unsigned long _66;
  unsigned long _67;
  __int128 unsigned _70;
  unsigned long _71;
  unsigned long _72;
  unsigned long _73;
  unsigned long _74;
  unsigned long _75;
  __int128 unsigned _78;
  unsigned long _79;
  unsigned long _80;
  unsigned long _81;
  unsigned long _82;
  unsigned long _83;
  __int128 unsigned _86;
  unsigned long _88;
  unsigned long _90;
  unsigned long _91;
  __int128 unsigned _112;
  __int128 unsigned _113;
  __int128 unsigned _114;
  unsigned long _115;
  unsigned long _116;
  unsigned long _117;
  unsigned long _118;
  unsigned long _119;
  unsigned long _120;
  unsigned long _121;
  unsigned long _122;
  unsigned long _123;
  unsigned long _124;
  unsigned long _125;
  unsigned long _126;
  unsigned long _127;
  unsigned long _128;
  unsigned long _129;
  unsigned long _130;
  unsigned long _131;
  unsigned long _132;
  unsigned long _133;
  unsigned long _134;
  unsigned long _135;
  unsigned long _136;
  __int128 unsigned _137;
  __int128 unsigned _138;
  __int128 unsigned _139;
  __int128 unsigned _140;
  __int128 unsigned _141;
  __int128 unsigned _142;
  __int128 unsigned _143;
  __int128 unsigned _144;
  __int128 unsigned _145;
  __int128 unsigned _146;
  __int128 unsigned _147;
  __int128 unsigned _148;
  __int128 unsigned _149;
  __int128 unsigned _150;
  __int128 unsigned _151;
  __int128 unsigned _152;
  __int128 unsigned _153;
  __int128 unsigned _154;
  unsigned long _155;
  unsigned long _156;
  unsigned long _157;
  unsigned long _158;
  unsigned long _159;
  unsigned long _160;
  unsigned long _161;
  unsigned long _162;
  unsigned long _163;
  unsigned long _164;

  <bb 2> [local count: 1073741824]:
  f_i_48 = *f_47(D);
  _1 = (__int128 unsigned) f_i_48;
  g0_50 = *g_49(D);
  _2 = (__int128 unsigned) g0_50;
  _63 = (unsigned long) _1;
  _71 = (unsigned long) _2;
  h0_51 = _63 w* _71;
  g1_52 = MEM[(const uint64_t *)g_49(D) + 8B];
  _3 = (__int128 unsigned) g1_52;
  _79 = (unsigned long) _1;
  _65 = (unsigned long) _3;
  h1_53 = _79 w* _65;
  g2_54 = MEM[(const uint64_t *)g_49(D) + 16B];
  _4 = (__int128 unsigned) g2_54;
  _73 = (unsigned long) _1;
  _81 = (unsigned long) _4;
  h2_55 = _73 w* _81;
  g3_56 = MEM[(const uint64_t *)g_49(D) + 24B];
  _5 = (__int128 unsigned) g3_56;
  _66 = (unsigned long) _1;
  _74 = (unsigned long) _5;
  h3_57 = _66 w* _74;
  g4_58 = MEM[(const uint64_t *)g_49(D) + 32B];
  _6 = (__int128 unsigned) g4_58;
  _82 = (unsigned long) _1;
  _90 = (unsigned long) _6;
  h4_59 = _82 w* _90;
  f_i_60 = MEM[(const uint64_t *)f_47(D) + 8B];
  _7 = (__int128 unsigned) f_i_60;
  g4_61 = g4_58 * 19;
  _8 = (__int128 unsigned) g4_61;
  _64 = (unsigned long) _7;
  _72 = (unsigned long) _8;
  _62 = _64 w* _72;
  _139 = h0_51 + _62;
  _80 = (unsigned long) _2;
  _88 = (unsigned long) _7;
  _9 = _80 w* _88;
  _150 = _9 + h1_53;
  _67 = (unsigned long) _3;
  _75 = (unsigned long) _7;
  _10 = _67 w* _75;
  _142 = _10 + h2_55;
  _83 = (unsigned long) _4;
  _91 = (unsigned long) _7;
  _11 = _83 w* _91;
  _146 = _11 + h3_57;
  _136 = (unsigned long) _5;
  _135 = (unsigned long) _7;
  _12 = _136 w* _135;
  _154 = _12 + h4_59;
  f_i_68 = MEM[(const uint64_t *)f_47(D) + 16B];
  _13 = (__int128 unsigned) f_i_68;
  g3_69 = g3_56 * 19;
  _14 = (__int128 unsigned) g3_69;
  _134 = (unsigned long) _13;
  _133 = (unsigned long) _14;
  _70 = _134 w* _133;
  _132 = (unsigned long) _8;
  _131 = (unsigned long) _13;
  _15 = _132 w* _131;
  _130 = (unsigned long) _2;
  _129 = (unsigned long) _13;
  _16 = _130 w* _129;
  _128 = (unsigned long) _3;
  _127 = (unsigned long) _13;
  _17 = _128 w* _127;
  _126 = (unsigned long) _4;
  _125 = (unsigned long) _13;
  _18 = _126 w* _125;
  f_i_76 = MEM[(const uint64_t *)f_47(D) + 24B];
  _19 = (__int128 unsigned) f_i_76;
  g2_77 = g2_54 * 19;
  _20 = (__int128 unsigned) g2_77;
  _124 = (unsigned long) _19;
  _123 = (unsigned long) _20;
  _78 = _124 w* _123;
  _138 = _70 + _78;
  _122 = (unsigned long) _14;
  _121 = (unsigned long) _19;
  _21 = _122 w* _121;
  _149 = _15 + _21;
  _120 = (unsigned long) _8;
  _119 = (unsigned long) _19;
  _22 = _120 w* _119;
  _141 = _16 + _22;
  _118 = (unsigned long) _2;
  _117 = (unsigned long) _19;
  _23 = _118 w* _117;
  _145 = _17 + _23;
  _116 = (unsigned long) _3;
  _115 = (unsigned long) _19;
  _24 = _116 w* _115;
  _153 = _18 + _24;
  f_i_84 = MEM[(const uint64_t *)f_47(D) + 32B];
  _25 = (__int128 unsigned) f_i_84;
  g1_85 = g1_52 * 19;
  _26 = (__int128 unsigned) g1_85;
  _155 = (unsigned long) _25;
  _156 = (unsigned long) _26;
  _86 = _155 w* _156;
  _137 = _86 + _139;
  h0_87 = _137 + _138;
  _157 = (unsigned long) _20;
  _158 = (unsigned long) _25;
  _27 = _157 w* _158;
  _148 = _27 + _150;
  _159 = (unsigned long) _14;
  _160 = (unsigned long) _25;
  _28 = _159 w* _160;
  _140 = _28 + _142;
  h2_89 = _140 + _141;
  _161 = (unsigned long) _8;
  _162 = (unsigned long) _25;
  _29 = _161 w* _162;
  _144 = _29 + _146;
  _163 = (unsigned long) _2;
  _164 = (unsigned long) _25;
  _30 = _163 w* _164;
  _152 = _30 + _154;
  _31 = h2_89 >> 51;
  _112 = _31 & 18446744073709551615;
  _143 = _112 + _145;
  h3_92 = _143 + _144;
  _32 = (long unsigned int) h2_89;
  g2_93 = _32 & 2251799813685247;
  _33 = h0_87 >> 51;
  _113 = _33 & 18446744073709551615;
  _147 = _113 + _149;
  h1_94 = _147 + _148;
  _34 = (long unsigned int) h0_87;
  g0_95 = _34 & 2251799813685247;
  _35 = h3_92 >> 51;
  _114 = _35 & 18446744073709551615;
  _151 = _114 + _153;
  h4_96 = _151 + _152;
  _36 = (long unsigned int) h3_92;
  g3_97 = _36 & 2251799813685247;
  _37 = h1_94 >> 51;
  _38 = (long unsigned int) _37;
  g2_98 = _38 + g2_93;
  _39 = (long unsigned int) h1_94;
  g1_99 = _39 & 2251799813685247;
  _40 = h4_96 >> 51;
  _41 = (long unsigned int) _40;
  _42 = _41 * 19;
  g0_100 = _42 + g0_95;
  _43 = (long unsigned int) h4_96;
  g4_101 = _43 & 2251799813685247;
  _44 = g2_98 >> 51;
  g3_102 = _44 + g3_97;
  g2_103 = g2_98 & 2251799813685247;
  _45 = g0_100 >> 51;
  g1_104 = _45 + g1_99;
  g0_105 = g0_100 & 2251799813685247;
  *h_106(D) = g0_105;
  MEM[(uint64_t *)h_106(D) + 8B] = g1_104;
  MEM[(uint64_t *)h_106(D) + 16B] = g2_103;
  MEM[(uint64_t *)h_106(D) + 24B] = g3_102;
  MEM[(uint64_t *)h_106(D) + 32B] = g4_101;
  return;

}



;; Function fe51_sq (fe51_sq, funcdef_no=393, decl_uid=17192, cgraph_uid=394, symbol_order=394)

__attribute__((access ("^0[5]^1[5]", )))
void fe51_sq (uint64_t * h, const uint64_t * f)
{
  u128 h4;
  u128 h3;
  u128 h2;
  u128 h1;
  u128 h0;
  uint64_t g4;
  uint64_t g3;
  uint64_t g2;
  uint64_t g1;
  uint64_t g0;
  __int128 unsigned _1;
  __int128 unsigned _2;
  __int128 unsigned _3;
  __int128 unsigned _4;
  __int128 unsigned _5;
  __int128 unsigned _6;
  __int128 unsigned _7;
  __int128 unsigned _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  __int128 unsigned _12;
  __int128 unsigned _13;
  long unsigned int _14;
  __int128 unsigned _15;
  __int128 unsigned _16;
  unsigned long _17;
  __int128 unsigned _18;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _21;
  long unsigned int _22;
  __int128 unsigned _23;
  long unsigned int _24;
  __int128 unsigned _25;
  long unsigned int _26;
  __int128 unsigned _27;
  long unsigned int _28;
  long unsigned int _29;
  __int128 unsigned _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  __int128 unsigned _49;
  __int128 unsigned _51;
  unsigned long _52;
  unsigned long _53;
  unsigned long _55;
  unsigned long _56;
  unsigned long _57;
  __int128 unsigned _58;
  __int128 unsigned _60;
  unsigned long _61;
  unsigned long _63;
  unsigned long _66;
  __int128 unsigned _87;
  __int128 unsigned _88;
  __int128 unsigned powmult_89;
  __int128 unsigned _90;
  __int128 unsigned powmult_91;
  __int128 unsigned powmult_92;
  unsigned long _93;
  unsigned long _94;
  unsigned long _95;
  unsigned long _96;
  unsigned long _97;
  unsigned long _98;
  unsigned long _99;
  unsigned long _100;
  unsigned long _101;
  unsigned long _102;
  unsigned long _103;
  unsigned long _104;
  unsigned long _105;
  unsigned long _106;
  unsigned long _107;
  unsigned long _108;
  unsigned long _109;
  unsigned long _110;
  unsigned long _111;
  unsigned long _112;
  unsigned long _113;
  __int128 unsigned _114;
  __int128 unsigned _115;
  __int128 unsigned _116;
  __int128 unsigned _117;
  __int128 unsigned _118;
  __int128 unsigned _119;

  <bb 2> [local count: 1073741824]:
  g0_38 = *f_37(D);
  g1_39 = MEM[(const uint64_t *)f_37(D) + 8B];
  g2_40 = MEM[(const uint64_t *)f_37(D) + 16B];
  g3_41 = MEM[(const uint64_t *)f_37(D) + 24B];
  g4_42 = MEM[(const uint64_t *)f_37(D) + 32B];
  _1 = (__int128 unsigned) g0_38;
  _52 = (unsigned long) _1;
  _55 = (unsigned long) _1;
  powmult_92 = _52 w* _55;
  g0_44 = g0_38 * 2;
  _2 = (__int128 unsigned) g0_44;
  _3 = (__int128 unsigned) g1_39;
  _61 = (unsigned long) _2;
  _66 = (unsigned long) _3;
  h1_45 = _61 w* _66;
  _4 = (__int128 unsigned) g2_40;
  _56 = (unsigned long) _2;
  _63 = (unsigned long) _4;
  h2_46 = _56 w* _63;
  _5 = (__int128 unsigned) g3_41;
  _113 = (unsigned long) _2;
  _112 = (unsigned long) _5;
  h3_47 = _113 w* _112;
  _6 = (__int128 unsigned) g4_42;
  _111 = (unsigned long) _2;
  _110 = (unsigned long) _6;
  h4_48 = _111 w* _110;
  g4_50 = g4_42 * 19;
  _7 = (__int128 unsigned) g4_50;
  _109 = (unsigned long) _6;
  _108 = (unsigned long) _7;
  _51 = _109 w* _108;
  _115 = h3_47 + _51;
  _107 = (unsigned long) _3;
  _106 = (unsigned long) _3;
  powmult_91 = _107 w* _106;
  g1_54 = g1_39 * 2;
  _9 = (__int128 unsigned) g1_54;
  _105 = (unsigned long) _4;
  _104 = (unsigned long) _9;
  _10 = _105 w* _104;
  _103 = (unsigned long) _5;
  _102 = (unsigned long) _9;
  _11 = _103 w* _102;
  _119 = _11 + h4_48;
  _101 = (unsigned long) _7;
  _100 = (unsigned long) _9;
  _12 = _101 w* _100;
  g3_59 = g3_41 * 19;
  _13 = (__int128 unsigned) g3_59;
  _99 = (unsigned long) _5;
  _98 = (unsigned long) _13;
  _60 = _99 w* _98;
  _117 = h1_45 + _60;
  _14 = g3_41 * 2;
  _15 = (__int128 unsigned) _14;
  _97 = (unsigned long) _7;
  _96 = (unsigned long) _15;
  _16 = _97 w* _96;
  _90 = _16 + h2_46;
  h2_62 = _90 + powmult_91;
  _95 = (unsigned long) _4;
  _94 = (unsigned long) _4;
  powmult_89 = _95 w* _94;
  g2_64 = g2_40 * 2;
  _18 = (__int128 unsigned) g2_64;
  _93 = (unsigned long) _13;
  _57 = (unsigned long) _18;
  _19 = _93 w* _57;
  _88 = _12 + _19;
  h0_65 = _88 + powmult_92;
  _53 = (unsigned long) _7;
  _17 = (unsigned long) _18;
  _20 = _53 w* _17;
  _21 = h2_62 >> 51;
  _58 = _21 & 18446744073709551615;
  _114 = _10 + _58;
  h3_67 = _114 + _115;
  _22 = (long unsigned int) h2_62;
  g2_68 = _22 & 2251799813685247;
  _23 = h0_65 >> 51;
  _49 = _23 & 18446744073709551615;
  _116 = _20 + _49;
  h1_69 = _116 + _117;
  _24 = (long unsigned int) h0_65;
  g0_70 = _24 & 2251799813685247;
  _25 = h3_67 >> 51;
  _87 = _25 & 18446744073709551615;
  _118 = _87 + powmult_89;
  h4_71 = _118 + _119;
  _26 = (long unsigned int) h3_67;
  g3_72 = _26 & 2251799813685247;
  _27 = h1_69 >> 51;
  _28 = (long unsigned int) _27;
  g2_73 = _28 + g2_68;
  _29 = (long unsigned int) h1_69;
  g1_74 = _29 & 2251799813685247;
  _30 = h4_71 >> 51;
  _31 = (long unsigned int) _30;
  _32 = _31 * 19;
  g0_75 = _32 + g0_70;
  _33 = (long unsigned int) h4_71;
  g4_76 = _33 & 2251799813685247;
  _34 = g2_73 >> 51;
  g3_77 = _34 + g3_72;
  g2_78 = g2_73 & 2251799813685247;
  _35 = g0_75 >> 51;
  g1_79 = _35 + g1_74;
  g0_80 = g0_75 & 2251799813685247;
  *h_81(D) = g0_80;
  MEM[(uint64_t *)h_81(D) + 8B] = g1_79;
  MEM[(uint64_t *)h_81(D) + 16B] = g2_78;
  MEM[(uint64_t *)h_81(D) + 24B] = g3_77;
  MEM[(uint64_t *)h_81(D) + 32B] = g4_76;
  return;

}



;; Function fe51_mul121666 (fe51_mul121666, funcdef_no=394, decl_uid=17206, cgraph_uid=395, symbol_order=395)

__attribute__((access ("^0[5]^1[5]", )))
void fe51_mul121666 (uint64_t * h, uint64_t * f)
{
  uint64_t g4;
  uint64_t g3;
  uint64_t g2;
  uint64_t g1;
  uint64_t g0;
  u128 h4;
  u128 h3;
  u128 h2;
  u128 h1;
  u128 h0;
  long unsigned int _1;
  __int128 unsigned _2;
  long unsigned int _3;
  __int128 unsigned _4;
  long unsigned int _5;
  __int128 unsigned _6;
  long unsigned int _7;
  __int128 unsigned _8;
  long unsigned int _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  long unsigned int _12;
  __int128 unsigned _13;
  long unsigned int _14;
  __int128 unsigned _15;
  long unsigned int _16;
  __int128 unsigned _17;
  long unsigned int _18;
  long unsigned int _19;
  __int128 unsigned _20;
  long unsigned int _21;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  unsigned int _55;
  unsigned long _56;
  unsigned long _57;
  unsigned long _58;
  unsigned long _59;
  unsigned long _60;

  <bb 2> [local count: 1073741824]:
  _1 = *f_27(D);
  _2 = (__int128 unsigned) _1;
  _60 = (unsigned long) _2;
  h0_28 = _60 w* 121666;
  _3 = MEM[(uint64_t *)f_27(D) + 8B];
  _4 = (__int128 unsigned) _3;
  _59 = (unsigned long) _4;
  h1_29 = _59 w* 121666;
  _5 = MEM[(uint64_t *)f_27(D) + 16B];
  _6 = (__int128 unsigned) _5;
  _58 = (unsigned long) _6;
  h2_30 = _58 w* 121666;
  _7 = MEM[(uint64_t *)f_27(D) + 24B];
  _8 = (__int128 unsigned) _7;
  _57 = (unsigned long) _8;
  h3_31 = _57 w* 121666;
  _9 = MEM[(uint64_t *)f_27(D) + 32B];
  _10 = (__int128 unsigned) _9;
  _56 = (unsigned long) _10;
  h4_32 = _56 w* 121666;
  _11 = h2_30 >> 51;
  h3_33 = _11 + h3_31;
  _12 = (long unsigned int) h2_30;
  g2_34 = _12 & 2251799813685247;
  _13 = h0_28 >> 51;
  h1_35 = _13 + h1_29;
  _14 = (long unsigned int) h0_28;
  g0_36 = _14 & 2251799813685247;
  _15 = h3_33 >> 51;
  h4_37 = _15 + h4_32;
  _16 = (long unsigned int) h3_33;
  g3_38 = _16 & 2251799813685247;
  _17 = h1_35 >> 51;
  _18 = (long unsigned int) _17;
  g2_39 = _18 + g2_34;
  _19 = (long unsigned int) h1_35;
  g1_40 = _19 & 2251799813685247;
  _20 = h4_37 >> 51;
  _21 = (long unsigned int) _20;
  _55 = (unsigned int) _21;
  g0_41 = WIDEN_MULT_PLUS_EXPR <_55, 19, g0_36>;
  _23 = (long unsigned int) h4_37;
  g4_42 = _23 & 2251799813685247;
  _24 = g2_39 >> 51;
  g3_43 = _24 + g3_38;
  g2_44 = g2_39 & 2251799813685247;
  _25 = g0_41 >> 51;
  g1_45 = _25 + g1_40;
  g0_46 = g0_41 & 2251799813685247;
  *h_47(D) = g0_46;
  MEM[(uint64_t *)h_47(D) + 8B] = g1_45;
  MEM[(uint64_t *)h_47(D) + 16B] = g2_44;
  MEM[(uint64_t *)h_47(D) + 24B] = g3_43;
  MEM[(uint64_t *)h_47(D) + 32B] = g4_42;
  return;

}



;; Function fe51_add (fe51_add, funcdef_no=395, decl_uid=17221, cgraph_uid=396, symbol_order=396)

__attribute__((access ("^0[5]^1[5]^2[5]", )))
void fe51_add (uint64_t * h, const uint64_t * f, const uint64_t * g)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;

  <bb 2> [local count: 1073741824]:
  _1 = *f_17(D);
  _2 = *g_18(D);
  _3 = _1 + _2;
  *h_19(D) = _3;
  _4 = MEM[(const uint64_t *)f_17(D) + 8B];
  _5 = MEM[(const uint64_t *)g_18(D) + 8B];
  _6 = _4 + _5;
  MEM[(uint64_t *)h_19(D) + 8B] = _6;
  _7 = MEM[(const uint64_t *)f_17(D) + 16B];
  _8 = MEM[(const uint64_t *)g_18(D) + 16B];
  _9 = _7 + _8;
  MEM[(uint64_t *)h_19(D) + 16B] = _9;
  _10 = MEM[(const uint64_t *)f_17(D) + 24B];
  _11 = MEM[(const uint64_t *)g_18(D) + 24B];
  _12 = _10 + _11;
  MEM[(uint64_t *)h_19(D) + 24B] = _12;
  _13 = MEM[(const uint64_t *)f_17(D) + 32B];
  _14 = MEM[(const uint64_t *)g_18(D) + 32B];
  _15 = _13 + _14;
  MEM[(uint64_t *)h_19(D) + 32B] = _15;
  return;

}



;; Function fe51_sub (fe51_sub, funcdef_no=396, decl_uid=17226, cgraph_uid=397, symbol_order=397)

__attribute__((access ("^0[5]^1[5]^2[5]", )))
void fe51_sub (uint64_t * h, const uint64_t * f, const uint64_t * g)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;

  <bb 2> [local count: 1073741824]:
  _1 = *f_22(D);
  _2 = *g_23(D);
  _3 = _1 - _2;
  _4 = _3 + 4503599627370458;
  *h_24(D) = _4;
  _5 = MEM[(const uint64_t *)f_22(D) + 8B];
  _6 = MEM[(const uint64_t *)g_23(D) + 8B];
  _7 = _5 - _6;
  _8 = _7 + 4503599627370494;
  MEM[(uint64_t *)h_24(D) + 8B] = _8;
  _9 = MEM[(const uint64_t *)f_22(D) + 16B];
  _10 = MEM[(const uint64_t *)g_23(D) + 16B];
  _11 = _9 - _10;
  _12 = _11 + 4503599627370494;
  MEM[(uint64_t *)h_24(D) + 16B] = _12;
  _13 = MEM[(const uint64_t *)f_22(D) + 24B];
  _14 = MEM[(const uint64_t *)g_23(D) + 24B];
  _15 = _13 - _14;
  _16 = _15 + 4503599627370494;
  MEM[(uint64_t *)h_24(D) + 24B] = _16;
  _17 = MEM[(const uint64_t *)f_22(D) + 32B];
  _18 = MEM[(const uint64_t *)g_23(D) + 32B];
  _19 = _17 - _18;
  _20 = _19 + 4503599627370494;
  MEM[(uint64_t *)h_24(D) + 32B] = _20;
  return;

}



;; Function fe51_0 (fe51_0, funcdef_no=397, decl_uid=17229, cgraph_uid=398, symbol_order=398)

__attribute__((access ("^0[5]", )))
void fe51_0 (uint64_t * h)
{
  <bb 2> [local count: 1073741824]:
  MEM <vector(2) long unsigned int> [(uint64_t *)h_2(D)] = { 0, 0 };
  MEM <vector(2) long unsigned int> [(uint64_t *)h_2(D) + 16B] = { 0, 0 };
  MEM[(uint64_t *)h_2(D) + 32B] = 0;
  return;

}



;; Function fe51_1 (fe51_1, funcdef_no=398, decl_uid=17232, cgraph_uid=399, symbol_order=399)

__attribute__((access ("^0[5]", )))
void fe51_1 (uint64_t * h)
{
  <bb 2> [local count: 1073741824]:
  MEM <vector(2) long unsigned int> [(uint64_t *)h_2(D)] = { 1, 0 };
  MEM <vector(2) long unsigned int> [(uint64_t *)h_2(D) + 16B] = { 0, 0 };
  MEM[(uint64_t *)h_2(D) + 32B] = 0;
  return;

}



;; Function fe51_copy (fe51_copy, funcdef_no=399, decl_uid=17236, cgraph_uid=400, symbol_order=400)

__attribute__((access ("^0[5]^1[5]", )))
void fe51_copy (uint64_t * h, const uint64_t * f)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;

  <bb 2> [local count: 1073741824]:
  _1 = *f_7(D);
  *h_8(D) = _1;
  _2 = MEM[(const uint64_t *)f_7(D) + 8B];
  MEM[(uint64_t *)h_8(D) + 8B] = _2;
  _3 = MEM[(const uint64_t *)f_7(D) + 16B];
  MEM[(uint64_t *)h_8(D) + 16B] = _3;
  _4 = MEM[(const uint64_t *)f_7(D) + 24B];
  MEM[(uint64_t *)h_8(D) + 24B] = _4;
  _5 = MEM[(const uint64_t *)f_7(D) + 32B];
  MEM[(uint64_t *)h_8(D) + 32B] = _5;
  return;

}



;; Function fe51_cswap (fe51_cswap, funcdef_no=400, decl_uid=17241, cgraph_uid=401, symbol_order=401)

__attribute__((access ("^0[5]^1[5]", )))
void fe51_cswap (uint64_t * f, uint64_t * g, unsigned int b)
{
  long unsigned int _1;
  long unsigned int _5;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _16;
  long unsigned int _24;
  long unsigned int _28;
  _Bool _35;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _50;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _68;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int _72;
  long unsigned int _73;
  long unsigned int _75;
  long unsigned int _76;
  long unsigned int _86;
  long unsigned int _88;
  long unsigned int _89;
  long unsigned int _90;
  long unsigned int _91;
  long unsigned int _93;
  long unsigned int _94;

  <bb 2> [local count: 178992760]:
  _1 = (long unsigned int) b_15(D);
  _35 = (_Bool) b_15(D);
  _28 = *f_18(D);
  _24 = *g_19(D);
  _16 = _24 ^ _28;
  _14 = _1 * _16;
  _13 = _35 ? _24 : _28;
  *f_18(D) = _13;
  _39 = *g_19(D);
  _40 = _14 ^ _39;
  *g_19(D) = _40;
  _50 = MEM[(uint64_t *)f_18(D) + 8B];
  _52 = MEM[(uint64_t *)g_19(D) + 8B];
  _53 = _50 ^ _52;
  _54 = _1 * _53;
  _55 = _35 ? _52 : _50;
  MEM[(uint64_t *)f_18(D) + 8B] = _55;
  _57 = MEM[(uint64_t *)g_19(D) + 8B];
  _58 = _54 ^ _57;
  MEM[(uint64_t *)g_19(D) + 8B] = _58;
  _68 = MEM[(uint64_t *)f_18(D) + 16B];
  _70 = MEM[(uint64_t *)g_19(D) + 16B];
  _71 = _68 ^ _70;
  _72 = _1 * _71;
  _73 = _35 ? _70 : _68;
  MEM[(uint64_t *)f_18(D) + 16B] = _73;
  _75 = MEM[(uint64_t *)g_19(D) + 16B];
  _76 = _72 ^ _75;
  MEM[(uint64_t *)g_19(D) + 16B] = _76;
  _86 = MEM[(uint64_t *)f_18(D) + 24B];
  _88 = MEM[(uint64_t *)g_19(D) + 24B];
  _89 = _86 ^ _88;
  _90 = _1 * _89;
  _91 = _35 ? _88 : _86;
  MEM[(uint64_t *)f_18(D) + 24B] = _91;
  _93 = MEM[(uint64_t *)g_19(D) + 24B];
  _94 = _90 ^ _93;
  MEM[(uint64_t *)g_19(D) + 24B] = _94;
  _5 = MEM[(uint64_t *)f_18(D) + 32B];
  _7 = MEM[(uint64_t *)g_19(D) + 32B];
  _8 = _5 ^ _7;
  _9 = _1 * _8;
  _10 = _35 ? _7 : _5;
  MEM[(uint64_t *)f_18(D) + 32B] = _10;
  _11 = MEM[(uint64_t *)g_19(D) + 32B];
  _12 = _9 ^ _11;
  MEM[(uint64_t *)g_19(D) + 32B] = _12;
  return;

}



;; Function fe51_invert (fe51_invert, funcdef_no=401, decl_uid=17252, cgraph_uid=402, symbol_order=402)

Removing basic block 19
Removing basic block 20
Removing basic block 21
Removing basic block 22
Removing basic block 23
Removing basic block 24
Removing basic block 25
Removing basic block 26
__attribute__((access ("^0[5]^1[5]", )))
void fe51_invert (uint64_t * out, const uint64_t * z)
{
  uint64_t t3[5];
  uint64_t t2[5];
  uint64_t t1[5];
  uint64_t t0[5];
  unsigned int ivtmp_4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_7;
  unsigned int ivtmp_8;
  unsigned int ivtmp_11;
  unsigned int ivtmp_12;
  unsigned int ivtmp_13;
  unsigned int ivtmp_14;
  unsigned int ivtmp_15;
  unsigned int ivtmp_16;
  unsigned int ivtmp_61;
  unsigned int ivtmp_63;
  unsigned int ivtmp_65;
  unsigned int ivtmp_67;
  unsigned int ivtmp_69;

  <bb 2> [local count: 10737416]:
  fe51_sq (&t0, z_18(D));
  fe51_sq (&t1, &t0);
  fe51_sq (&t1, &t1);
  fe51_mul (&t1, z_18(D), &t1);
  fe51_mul (&t0, &t0, &t1);
  fe51_sq (&t2, &t0);
  fe51_mul (&t1, &t1, &t2);
  fe51_sq (&t2, &t1);

  <bb 3> [local count: 42949663]:
  # ivtmp_69 = PHI <ivtmp_11(3), 4(2)>
  fe51_sq (&t2, &t2);
  ivtmp_11 = ivtmp_69 + 4294967295;
  if (ivtmp_11 != 0)
    goto <bb 3>; [75.00%]
  else
    goto <bb 4>; [25.00%]

  <bb 4> [local count: 10737416]:
  fe51_mul (&t1, &t2, &t1);
  fe51_sq (&t2, &t1);

  <bb 5> [local count: 96636742]:
  # ivtmp_12 = PHI <ivtmp_4(5), 9(4)>
  fe51_sq (&t2, &t2);
  ivtmp_4 = ivtmp_12 + 4294967295;
  if (ivtmp_4 != 0)
    goto <bb 5>; [88.89%]
  else
    goto <bb 6>; [11.11%]

  <bb 6> [local count: 10737416]:
  fe51_mul (&t2, &t2, &t1);
  fe51_sq (&t3, &t2);

  <bb 7> [local count: 204010917]:
  # ivtmp_5 = PHI <ivtmp_67(7), 19(6)>
  fe51_sq (&t3, &t3);
  ivtmp_67 = ivtmp_5 + 4294967295;
  if (ivtmp_67 != 0)
    goto <bb 7>; [94.74%]
  else
    goto <bb 8>; [5.26%]

  <bb 8> [local count: 10737416]:
  fe51_mul (&t2, &t3, &t2);

  <bb 9> [local count: 107385977]:
  # ivtmp_65 = PHI <ivtmp_13(9), 10(8)>
  fe51_sq (&t2, &t2);
  ivtmp_13 = ivtmp_65 + 4294967295;
  if (ivtmp_13 != 0)
    goto <bb 9>; [90.00%]
  else
    goto <bb 10>; [10.00%]

  <bb 10> [local count: 10737416]:
  fe51_mul (&t1, &t2, &t1);
  fe51_sq (&t2, &t1);

  <bb 11> [local count: 526133297]:
  # ivtmp_14 = PHI <ivtmp_6(11), 49(10)>
  fe51_sq (&t2, &t2);
  ivtmp_6 = ivtmp_14 + 4294967295;
  if (ivtmp_6 != 0)
    goto <bb 11>; [97.96%]
  else
    goto <bb 12>; [2.04%]

  <bb 12> [local count: 10737416]:
  fe51_mul (&t2, &t2, &t1);
  fe51_sq (&t3, &t2);

  <bb 13> [local count: 1063004408]:
  # ivtmp_7 = PHI <ivtmp_63(13), 99(12)>
  fe51_sq (&t3, &t3);
  ivtmp_63 = ivtmp_7 + 4294967295;
  if (ivtmp_63 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 14>; [1.01%]

  <bb 14> [local count: 10737416]:
  fe51_mul (&t2, &t3, &t2);

  <bb 15> [local count: 537090029]:
  # ivtmp_61 = PHI <ivtmp_15(15), 50(14)>
  fe51_sq (&t2, &t2);
  ivtmp_15 = ivtmp_61 + 4294967295;
  if (ivtmp_15 != 0)
    goto <bb 15>; [98.00%]
  else
    goto <bb 16>; [2.00%]

  <bb 16> [local count: 10737416]:
  fe51_mul (&t1, &t2, &t1);

  <bb 17> [local count: 53674198]:
  # ivtmp_16 = PHI <ivtmp_8(17), 5(16)>
  fe51_sq (&t1, &t1);
  ivtmp_8 = ivtmp_16 + 4294967295;
  if (ivtmp_8 != 0)
    goto <bb 17>; [80.00%]
  else
    goto <bb 18>; [20.00%]

  <bb 18> [local count: 10737416]:
  fe51_mul (out_38(D), &t1, &t0);
  t0 ={v} {CLOBBER(eos)};
  t1 ={v} {CLOBBER(eos)};
  t2 ={v} {CLOBBER(eos)};
  t3 ={v} {CLOBBER(eos)};
  return;

}



;; Function load_3 (load_3, funcdef_no=403, decl_uid=17318, cgraph_uid=404, symbol_order=409)

uint64_t load_3 (const uint8_t * in)
{
  uint64_t result;
  unsigned char _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _4;
  unsigned char _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _14;

  <bb 2> [local count: 1073741824]:
  _1 = *in_9(D);
  result_10 = (uint64_t) _1;
  _2 = MEM[(const uint8_t *)in_9(D) + 1B];
  _3 = (long unsigned int) _2;
  _4 = _3 << 8;
  _5 = MEM[(const uint8_t *)in_9(D) + 2B];
  _6 = (long unsigned int) _5;
  _7 = _6 << 16;
  _14 = _4 | _7;
  result_12 = result_10 | _14;
  return result_12;

}



;; Function load_4 (load_4, funcdef_no=404, decl_uid=17322, cgraph_uid=405, symbol_order=410)

uint64_t load_4 (const uint8_t * in)
{
  uint64_t result;
  unsigned int load_dst_14;

  <bb 2> [local count: 1073741824]:
  load_dst_14 = MEM <unsigned int> [(const uint8_t *)in_12(D)];
  result_16 = (uint64_t) load_dst_14;
  return result_16;

}



;; Function fe_frombytes (fe_frombytes, funcdef_no=405, decl_uid=17327, cgraph_uid=406, symbol_order=411)

__attribute__((access ("^0[10]", )))
void fe_frombytes (int32_t * h, const uint8_t * s)
{
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t h9;
  int64_t h8;
  int64_t h7;
  int64_t h6;
  int64_t h5;
  int64_t h4;
  int64_t h3;
  int64_t h2;
  int64_t h1;
  int64_t h0;
  long unsigned int _1;
  const uint8_t * _2;
  long unsigned int _3;
  long int _4;
  const uint8_t * _5;
  long unsigned int _6;
  long int _7;
  const uint8_t * _8;
  long unsigned int _9;
  long int _10;
  const uint8_t * _11;
  long unsigned int _12;
  long int _13;
  const uint8_t * _14;
  long unsigned int _15;
  const uint8_t * _16;
  long unsigned int _17;
  long int _18;
  const uint8_t * _19;
  long unsigned int _20;
  long int _21;
  const uint8_t * _22;
  long unsigned int _23;
  long int _24;
  const uint8_t * _25;
  long unsigned int _26;
  long int _27;
  long int _28;
  long int _29;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  int _50;
  int _51;
  int _52;
  int _53;
  int _54;
  int _55;
  int _56;
  int _57;
  int _58;
  int _59;
  long int _417;
  signed int _418;

  <bb 2> [local count: 1073741824]:
  _1 = load_4 (s_61(D));
  _2 = s_61(D) + 4;
  _3 = load_3 (_2);
  _4 = (long int) _3;
  h1_63 = _4 << 6;
  _5 = s_61(D) + 7;
  _6 = load_3 (_5);
  _7 = (long int) _6;
  h2_64 = _7 << 5;
  _8 = s_61(D) + 10;
  _9 = load_3 (_8);
  _10 = (long int) _9;
  h3_65 = _10 << 3;
  _11 = s_61(D) + 13;
  _12 = load_3 (_11);
  _13 = (long int) _12;
  h4_66 = _13 << 2;
  _14 = s_61(D) + 16;
  _15 = load_4 (_14);
  h5_67 = (int64_t) _15;
  _16 = s_61(D) + 20;
  _17 = load_3 (_16);
  _18 = (long int) _17;
  h6_68 = _18 << 7;
  _19 = s_61(D) + 23;
  _20 = load_3 (_19);
  _21 = (long int) _20;
  h7_69 = _21 << 5;
  _22 = s_61(D) + 26;
  _23 = load_3 (_22);
  _24 = (long int) _23;
  h8_70 = _24 << 4;
  _25 = s_61(D) + 29;
  _26 = load_3 (_25);
  _27 = (long int) _26;
  _28 = _27 << 2;
  h9_71 = _28 & 33554428;
  carry9_72 = h9_71 + 16777216;
  _29 = carry9_72 >> 25;
  _418 = (signed int) _29;
  _417 = (long int) _1;
  h0_73 = WIDEN_MULT_PLUS_EXPR <_418, 19, _417>;
  _31 = carry9_72 & -33554432;
  h9_74 = h9_71 - _31;
  carry1_75 = h1_63 + 16777216;
  _32 = carry1_75 >> 25;
  h2_76 = _32 + h2_64;
  _33 = carry1_75 & -33554432;
  h1_77 = h1_63 - _33;
  carry3_78 = h3_65 + 16777216;
  _34 = carry3_78 >> 25;
  h4_79 = _34 + h4_66;
  _35 = carry3_78 & -33554432;
  h3_80 = h3_65 - _35;
  carry5_81 = h5_67 + 16777216;
  _36 = carry5_81 >> 25;
  h6_82 = _36 + h6_68;
  _37 = carry5_81 & -33554432;
  h5_83 = h5_67 - _37;
  carry7_84 = h7_69 + 16777216;
  _38 = carry7_84 >> 25;
  h8_85 = _38 + h8_70;
  _39 = carry7_84 & -33554432;
  h7_86 = h7_69 - _39;
  carry0_87 = h0_73 + 33554432;
  _40 = carry0_87 >> 26;
  h1_88 = _40 + h1_77;
  _41 = carry0_87 & -67108864;
  h0_89 = h0_73 - _41;
  carry2_90 = h2_76 + 33554432;
  _42 = carry2_90 >> 26;
  h3_91 = _42 + h3_80;
  _43 = carry2_90 & -67108864;
  h2_92 = h2_76 - _43;
  carry4_93 = h4_79 + 33554432;
  _44 = carry4_93 >> 26;
  h5_94 = _44 + h5_83;
  _45 = carry4_93 & -67108864;
  h4_95 = h4_79 - _45;
  carry6_96 = h6_82 + 33554432;
  _46 = carry6_96 >> 26;
  h7_97 = _46 + h7_86;
  _47 = carry6_96 & -67108864;
  h6_98 = h6_82 - _47;
  carry8_99 = h8_85 + 33554432;
  _48 = carry8_99 >> 26;
  h9_100 = _48 + h9_74;
  _49 = carry8_99 & -67108864;
  h8_101 = h8_85 - _49;
  _50 = (int) h0_89;
  *h_102(D) = _50;
  _51 = (int) h1_88;
  MEM[(int32_t *)h_102(D) + 4B] = _51;
  _52 = (int) h2_92;
  MEM[(int32_t *)h_102(D) + 8B] = _52;
  _53 = (int) h3_91;
  MEM[(int32_t *)h_102(D) + 12B] = _53;
  _54 = (int) h4_95;
  MEM[(int32_t *)h_102(D) + 16B] = _54;
  _55 = (int) h5_94;
  MEM[(int32_t *)h_102(D) + 20B] = _55;
  _56 = (int) h6_98;
  MEM[(int32_t *)h_102(D) + 24B] = _56;
  _57 = (int) h7_97;
  MEM[(int32_t *)h_102(D) + 28B] = _57;
  _58 = (int) h8_101;
  MEM[(int32_t *)h_102(D) + 32B] = _58;
  _59 = (int) h9_100;
  MEM[(int32_t *)h_102(D) + 36B] = _59;
  return;

}



;; Function fe_tobytes (fe_tobytes, funcdef_no=406, decl_uid=17351, cgraph_uid=407, symbol_order=412)

__attribute__((access ("^1[10]", )))
void fe_tobytes (uint8_t * s, const int32_t * h)
{
  int32_t q;
  int32_t h9;
  int32_t h8;
  int32_t h7;
  int32_t h6;
  int32_t h5;
  int32_t h4;
  int32_t h3;
  int32_t h2;
  int32_t h1;
  int32_t h0;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  int _16;
  int _17;
  int _18;
  int _19;
  int _20;
  int _21;
  int _22;
  unsigned char _23;
  int _24;
  unsigned char _25;
  int _26;
  unsigned char _27;
  int _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  int _33;
  unsigned char _34;
  int _35;
  unsigned char _36;
  int _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  int _42;
  unsigned char _43;
  int _44;
  unsigned char _45;
  int _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  int _51;
  unsigned char _52;
  int _53;
  unsigned char _54;
  int _55;
  unsigned char _56;
  unsigned char _57;
  unsigned char _58;
  unsigned char _59;
  int _60;
  unsigned char _61;
  int _62;
  unsigned char _63;
  int _64;
  unsigned char _65;
  unsigned char _66;
  int _67;
  unsigned char _68;
  int _69;
  unsigned char _70;
  int _71;
  unsigned char _72;
  unsigned char _73;
  unsigned char _74;
  unsigned char _75;
  int _76;
  unsigned char _77;
  int _78;
  unsigned char _79;
  int _80;
  unsigned char _81;
  unsigned char _82;
  unsigned char _83;
  unsigned char _84;
  int _85;
  unsigned char _86;
  int _87;
  unsigned char _88;
  int _89;
  unsigned char _90;
  unsigned char _91;
  unsigned char _92;
  unsigned char _93;
  int _94;
  unsigned char _95;
  int _96;
  unsigned char _97;
  int _98;
  unsigned char _99;
  unsigned char _100;
  unsigned char _101;
  unsigned char _102;
  int _103;
  unsigned char _104;
  int _105;
  unsigned char _106;
  int _107;
  unsigned char _108;
  vector(16) unsigned char _225;
  vector(16) unsigned char _226;

  <bb 2> [local count: 1073741824]:
  h0_111 = *h_110(D);
  h1_112 = MEM[(const int32_t *)h_110(D) + 4B];
  h2_113 = MEM[(const int32_t *)h_110(D) + 8B];
  h3_114 = MEM[(const int32_t *)h_110(D) + 12B];
  h4_115 = MEM[(const int32_t *)h_110(D) + 16B];
  h5_116 = MEM[(const int32_t *)h_110(D) + 20B];
  h6_117 = MEM[(const int32_t *)h_110(D) + 24B];
  h7_118 = MEM[(const int32_t *)h_110(D) + 28B];
  h8_119 = MEM[(const int32_t *)h_110(D) + 32B];
  h9_120 = MEM[(const int32_t *)h_110(D) + 36B];
  _1 = h9_120 * 19;
  _2 = _1 + 16777216;
  q_121 = _2 >> 25;
  _3 = h0_111 + q_121;
  q_122 = _3 >> 26;
  _4 = h1_112 + q_122;
  q_123 = _4 >> 25;
  _5 = h2_113 + q_123;
  q_124 = _5 >> 26;
  _6 = h3_114 + q_124;
  q_125 = _6 >> 25;
  _7 = h4_115 + q_125;
  q_126 = _7 >> 26;
  _8 = h5_116 + q_126;
  q_127 = _8 >> 25;
  _9 = h6_117 + q_127;
  q_128 = _9 >> 26;
  _10 = h7_118 + q_128;
  q_129 = _10 >> 25;
  _11 = h8_119 + q_129;
  q_130 = _11 >> 26;
  _12 = h9_120 + q_130;
  q_131 = _12 >> 25;
  _13 = q_131 * 19;
  h0_132 = _13 + h0_111;
  _14 = h0_132 >> 26;
  h1_133 = _14 + h1_112;
  h0_134 = h0_132 & 67108863;
  _15 = h1_133 >> 25;
  h2_135 = _15 + h2_113;
  h1_136 = h1_133 & 33554431;
  _16 = h2_135 >> 26;
  h3_137 = _16 + h3_114;
  h2_138 = h2_135 & 67108863;
  _17 = h3_137 >> 25;
  h4_139 = _17 + h4_115;
  h3_140 = h3_137 & 33554431;
  _18 = h4_139 >> 26;
  h5_141 = _18 + h5_116;
  h4_142 = h4_139 & 67108863;
  _19 = h5_141 >> 25;
  h6_143 = _19 + h6_117;
  h5_144 = h5_141 & 33554431;
  _20 = h6_143 >> 26;
  h7_145 = _20 + h7_118;
  h6_146 = h6_143 & 67108863;
  _21 = h7_145 >> 25;
  h8_147 = _21 + h8_119;
  h7_148 = h7_145 & 33554431;
  _22 = h8_147 >> 26;
  h9_149 = _22 + h9_120;
  h8_150 = h8_147 & 67108863;
  h9_151 = h9_149 & 33554431;
  _23 = (unsigned char) h0_134;
  _24 = h0_134 >> 8;
  _25 = (unsigned char) _24;
  _26 = h0_134 >> 16;
  _27 = (unsigned char) _26;
  _28 = h0_134 >> 24;
  _29 = (unsigned char) _28;
  _30 = (unsigned char) h1_136;
  _31 = _30 << 2;
  _32 = _29 | _31;
  _33 = h1_136 >> 6;
  _34 = (unsigned char) _33;
  _35 = h1_136 >> 14;
  _36 = (unsigned char) _35;
  _37 = h1_136 >> 22;
  _38 = (unsigned char) _37;
  _39 = (unsigned char) h2_138;
  _40 = _39 << 3;
  _41 = _38 | _40;
  _42 = h2_138 >> 5;
  _43 = (unsigned char) _42;
  _44 = h2_138 >> 13;
  _45 = (unsigned char) _44;
  _46 = h2_138 >> 21;
  _47 = (unsigned char) _46;
  _48 = (unsigned char) h3_140;
  _49 = _48 << 5;
  _50 = _47 | _49;
  _51 = h3_140 >> 3;
  _52 = (unsigned char) _51;
  _53 = h3_140 >> 11;
  _54 = (unsigned char) _53;
  _55 = h3_140 >> 19;
  _56 = (unsigned char) _55;
  _57 = (unsigned char) h4_142;
  _58 = _57 << 6;
  _59 = _56 | _58;
  _60 = h4_142 >> 2;
  _61 = (unsigned char) _60;
  _62 = h4_142 >> 10;
  _63 = (unsigned char) _62;
  _64 = h4_142 >> 18;
  _65 = (unsigned char) _64;
  _226 = {_23, _25, _27, _32, _34, _36, _41, _43, _45, _50, _52, _54, _59, _61, _63, _65};
  _66 = (unsigned char) h5_144;
  _67 = h5_144 >> 8;
  _68 = (unsigned char) _67;
  _69 = h5_144 >> 16;
  _70 = (unsigned char) _69;
  _71 = h5_144 >> 24;
  _72 = (unsigned char) _71;
  _73 = (unsigned char) h6_146;
  _74 = _73 << 1;
  _75 = _72 | _74;
  _76 = h6_146 >> 7;
  _77 = (unsigned char) _76;
  _78 = h6_146 >> 15;
  _79 = (unsigned char) _78;
  _80 = h6_146 >> 23;
  _81 = (unsigned char) _80;
  _82 = (unsigned char) h7_148;
  _83 = _82 << 3;
  _84 = _81 | _83;
  _85 = h7_148 >> 5;
  _86 = (unsigned char) _85;
  _87 = h7_148 >> 13;
  _88 = (unsigned char) _87;
  _89 = h7_148 >> 21;
  _90 = (unsigned char) _89;
  _91 = (unsigned char) h8_150;
  _92 = _91 << 4;
  _93 = _90 | _92;
  _94 = h8_150 >> 4;
  _95 = (unsigned char) _94;
  _96 = h8_150 >> 12;
  _97 = (unsigned char) _96;
  _98 = h8_150 >> 20;
  _99 = (unsigned char) _98;
  _100 = (unsigned char) h9_151;
  _101 = _100 << 6;
  _102 = _99 | _101;
  _103 = h9_151 >> 2;
  _104 = (unsigned char) _103;
  _105 = h9_151 >> 10;
  _106 = (unsigned char) _105;
  _107 = h9_151 >> 18;
  _108 = (unsigned char) _107;
  _225 = {_66, _68, _70, _75, _77, _79, _84, _86, _88, _93, _95, _97, _102, _104, _106, _108};
  MEM <vector(16) unsigned char> [(uint8_t *)s_152(D)] = _226;
  MEM <vector(16) unsigned char> [(uint8_t *)s_152(D) + 16B] = _225;
  return;

}



;; Function fe_add (fe_add, funcdef_no=410, decl_uid=17377, cgraph_uid=411, symbol_order=416)

__attribute__((access ("^0[10]^1[10]^2[10]", )))
void fe_add (int32_t * h, const int32_t * f, const int32_t * g)
{
  vector(2) int vect__58.217;
  const vector(2) int vect__56.216;
  const vector(2) int vect__54.213;
  vector(4) int vect__8.208;
  const vector(4) int vect__6.207;
  const vector(4) int vect__4.204;
  int _5;
  int _7;
  _Bool _9;
  sizetype _10;
  int _16;
  ssizetype _17;
  const int32_t * _18;
  const int32_t * _28;
  ssizetype _29;
  sizetype _30;
  _Bool _31;
  _Bool _32;
  int _39;
  int _41;
  int _43;
  int _55;
  int _57;
  int _60;
  int _94;
  int _96;
  int _98;
  int _108;
  int _110;
  int _112;
  int _122;
  int _124;
  int _126;
  int _136;
  int _138;
  int _140;
  int _150;
  int _152;
  int _154;
  int _164;
  int _166;
  int _168;
  int _178;
  int _180;
  int _182;

  <bb 2> [local count: 97603128]:
  _18 = f_12(D) + 4;
  _17 = h_14(D) - _18;
  _10 = (sizetype) _17;
  _9 = _10 > 8;
  _28 = g_13(D) + 4;
  _29 = h_14(D) - _28;
  _30 = (sizetype) _29;
  _31 = _30 > 8;
  _32 = _9 & _31;
  if (_32 != 0)
    goto <bb 3>; [80.00%]
  else
    goto <bb 4>; [20.00%]

  <bb 3> [local count: 78082504]:
  vect__4.204_191 = MEM <const vector(4) int> [(const int32_t *)f_12(D)];
  vect__6.207_192 = MEM <const vector(4) int> [(const int32_t *)g_13(D)];
  vect__8.208_193 = vect__4.204_191 + vect__6.207_192;
  MEM <vector(4) int> [(int32_t *)h_14(D)] = vect__8.208_193;
  vect__4.204_67 = MEM <const vector(4) int> [(const int32_t *)f_12(D) + 16B];
  vect__6.207_70 = MEM <const vector(4) int> [(const int32_t *)g_13(D) + 16B];
  vect__8.208_71 = vect__4.204_67 + vect__6.207_70;
  MEM <vector(4) int> [(int32_t *)h_14(D) + 16B] = vect__8.208_71;
  vect__54.213_80 = MEM <const vector(2) int> [(const int32_t *)f_12(D) + 32B];
  vect__56.216_84 = MEM <const vector(2) int> [(const int32_t *)g_13(D) + 32B];
  vect__58.217_85 = vect__54.213_80 + vect__56.216_84;
  MEM <vector(2) int> [(int32_t *)h_14(D) + 32B] = vect__58.217_85;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 19520625]:
  _5 = *f_12(D);
  _7 = *g_13(D);
  _16 = _5 + _7;
  *h_14(D) = _16;
  _55 = MEM[(const int32_t *)f_12(D) + 4B];
  _57 = MEM[(const int32_t *)g_13(D) + 4B];
  _60 = _55 + _57;
  MEM[(int32_t *)h_14(D) + 4B] = _60;
  _94 = MEM[(const int32_t *)f_12(D) + 8B];
  _96 = MEM[(const int32_t *)g_13(D) + 8B];
  _98 = _94 + _96;
  MEM[(int32_t *)h_14(D) + 8B] = _98;
  _108 = MEM[(const int32_t *)f_12(D) + 12B];
  _110 = MEM[(const int32_t *)g_13(D) + 12B];
  _112 = _108 + _110;
  MEM[(int32_t *)h_14(D) + 12B] = _112;
  _122 = MEM[(const int32_t *)f_12(D) + 16B];
  _124 = MEM[(const int32_t *)g_13(D) + 16B];
  _126 = _122 + _124;
  MEM[(int32_t *)h_14(D) + 16B] = _126;
  _136 = MEM[(const int32_t *)f_12(D) + 20B];
  _138 = MEM[(const int32_t *)g_13(D) + 20B];
  _140 = _136 + _138;
  MEM[(int32_t *)h_14(D) + 20B] = _140;
  _150 = MEM[(const int32_t *)f_12(D) + 24B];
  _152 = MEM[(const int32_t *)g_13(D) + 24B];
  _154 = _150 + _152;
  MEM[(int32_t *)h_14(D) + 24B] = _154;
  _164 = MEM[(const int32_t *)f_12(D) + 28B];
  _166 = MEM[(const int32_t *)g_13(D) + 28B];
  _168 = _164 + _166;
  MEM[(int32_t *)h_14(D) + 28B] = _168;
  _178 = MEM[(const int32_t *)f_12(D) + 32B];
  _180 = MEM[(const int32_t *)g_13(D) + 32B];
  _182 = _178 + _180;
  MEM[(int32_t *)h_14(D) + 32B] = _182;
  _39 = MEM[(const int32_t *)f_12(D) + 36B];
  _41 = MEM[(const int32_t *)g_13(D) + 36B];
  _43 = _39 + _41;
  MEM[(int32_t *)h_14(D) + 36B] = _43;

  <bb 5> [local count: 97603128]:
  return;

}



;; Function fe_sub (fe_sub, funcdef_no=411, decl_uid=17387, cgraph_uid=412, symbol_order=417)

__attribute__((access ("^0[10]^1[10]^2[10]", )))
void fe_sub (int32_t * h, const int32_t * f, const int32_t * g)
{
  vector(2) int vect__58.244;
  const vector(2) int vect__56.243;
  const vector(2) int vect__54.240;
  vector(4) int vect__8.235;
  const vector(4) int vect__6.234;
  const vector(4) int vect__4.231;
  int _5;
  int _7;
  _Bool _9;
  sizetype _10;
  int _16;
  ssizetype _17;
  const int32_t * _18;
  const int32_t * _28;
  ssizetype _29;
  sizetype _30;
  _Bool _31;
  _Bool _32;
  int _39;
  int _41;
  int _43;
  int _55;
  int _57;
  int _60;
  int _94;
  int _96;
  int _98;
  int _108;
  int _110;
  int _112;
  int _122;
  int _124;
  int _126;
  int _136;
  int _138;
  int _140;
  int _150;
  int _152;
  int _154;
  int _164;
  int _166;
  int _168;
  int _178;
  int _180;
  int _182;

  <bb 2> [local count: 97603128]:
  _18 = f_12(D) + 4;
  _17 = h_14(D) - _18;
  _10 = (sizetype) _17;
  _9 = _10 > 8;
  _28 = g_13(D) + 4;
  _29 = h_14(D) - _28;
  _30 = (sizetype) _29;
  _31 = _30 > 8;
  _32 = _9 & _31;
  if (_32 != 0)
    goto <bb 3>; [80.00%]
  else
    goto <bb 4>; [20.00%]

  <bb 3> [local count: 78082504]:
  vect__4.231_191 = MEM <const vector(4) int> [(const int32_t *)f_12(D)];
  vect__6.234_192 = MEM <const vector(4) int> [(const int32_t *)g_13(D)];
  vect__8.235_193 = vect__4.231_191 - vect__6.234_192;
  MEM <vector(4) int> [(int32_t *)h_14(D)] = vect__8.235_193;
  vect__4.231_67 = MEM <const vector(4) int> [(const int32_t *)f_12(D) + 16B];
  vect__6.234_70 = MEM <const vector(4) int> [(const int32_t *)g_13(D) + 16B];
  vect__8.235_71 = vect__4.231_67 - vect__6.234_70;
  MEM <vector(4) int> [(int32_t *)h_14(D) + 16B] = vect__8.235_71;
  vect__54.240_80 = MEM <const vector(2) int> [(const int32_t *)f_12(D) + 32B];
  vect__56.243_84 = MEM <const vector(2) int> [(const int32_t *)g_13(D) + 32B];
  vect__58.244_85 = vect__54.240_80 - vect__56.243_84;
  MEM <vector(2) int> [(int32_t *)h_14(D) + 32B] = vect__58.244_85;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 19520625]:
  _5 = *f_12(D);
  _7 = *g_13(D);
  _16 = _5 - _7;
  *h_14(D) = _16;
  _55 = MEM[(const int32_t *)f_12(D) + 4B];
  _57 = MEM[(const int32_t *)g_13(D) + 4B];
  _60 = _55 - _57;
  MEM[(int32_t *)h_14(D) + 4B] = _60;
  _94 = MEM[(const int32_t *)f_12(D) + 8B];
  _96 = MEM[(const int32_t *)g_13(D) + 8B];
  _98 = _94 - _96;
  MEM[(int32_t *)h_14(D) + 8B] = _98;
  _108 = MEM[(const int32_t *)f_12(D) + 12B];
  _110 = MEM[(const int32_t *)g_13(D) + 12B];
  _112 = _108 - _110;
  MEM[(int32_t *)h_14(D) + 12B] = _112;
  _122 = MEM[(const int32_t *)f_12(D) + 16B];
  _124 = MEM[(const int32_t *)g_13(D) + 16B];
  _126 = _122 - _124;
  MEM[(int32_t *)h_14(D) + 16B] = _126;
  _136 = MEM[(const int32_t *)f_12(D) + 20B];
  _138 = MEM[(const int32_t *)g_13(D) + 20B];
  _140 = _136 - _138;
  MEM[(int32_t *)h_14(D) + 20B] = _140;
  _150 = MEM[(const int32_t *)f_12(D) + 24B];
  _152 = MEM[(const int32_t *)g_13(D) + 24B];
  _154 = _150 - _152;
  MEM[(int32_t *)h_14(D) + 24B] = _154;
  _164 = MEM[(const int32_t *)f_12(D) + 28B];
  _166 = MEM[(const int32_t *)g_13(D) + 28B];
  _168 = _164 - _166;
  MEM[(int32_t *)h_14(D) + 28B] = _168;
  _178 = MEM[(const int32_t *)f_12(D) + 32B];
  _180 = MEM[(const int32_t *)g_13(D) + 32B];
  _182 = _178 - _180;
  MEM[(int32_t *)h_14(D) + 32B] = _182;
  _39 = MEM[(const int32_t *)f_12(D) + 36B];
  _41 = MEM[(const int32_t *)g_13(D) + 36B];
  _43 = _39 - _41;
  MEM[(int32_t *)h_14(D) + 36B] = _43;

  <bb 5> [local count: 97603128]:
  return;

}



;; Function fe_mul (fe_mul, funcdef_no=412, decl_uid=17397, cgraph_uid=413, symbol_order=418)

__attribute__((access ("^0[10]^1[10]^2[10]", )))
void fe_mul (int32_t * h, const int32_t * f, const int32_t * g)
{
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t h9;
  int64_t h8;
  int64_t h7;
  int64_t h6;
  int64_t h5;
  int64_t h4;
  int64_t h3;
  int64_t h2;
  int64_t h1;
  int64_t h0;
  int64_t f1g9_38;
  int64_t f1g8;
  int64_t f1g7_2;
  int64_t f1g6;
  int64_t f1g5_2;
  int64_t f1g4;
  int64_t f1g3_2;
  int64_t f1g2;
  int64_t f1g1_2;
  int64_t f1g0;
  int32_t f9_2;
  int32_t f7_2;
  int32_t f5_2;
  int32_t f3_2;
  int32_t f1_2;
  int32_t g9_19;
  int32_t g8_19;
  int32_t g7_19;
  int32_t g6_19;
  int32_t g5_19;
  int32_t g4_19;
  int32_t g3_19;
  int32_t g2_19;
  int32_t g1_19;
  int32_t g9;
  int32_t g8;
  int32_t g7;
  int32_t g6;
  int32_t g5;
  int32_t g4;
  int32_t g3;
  int32_t g2;
  int32_t g1;
  int32_t g0;
  int32_t f9;
  int32_t f8;
  int32_t f7;
  int32_t f6;
  int32_t f5;
  int32_t f4;
  int32_t f3;
  int32_t f2;
  int32_t f1;
  int32_t f0;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  long int _51;
  long int _52;
  long int _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  long int _58;
  long int _59;
  long int _60;
  long int _61;
  long int _62;
  long int _63;
  long int _64;
  long int _65;
  long int _66;
  long int _67;
  long int _68;
  long int _69;
  long int _70;
  long int _71;
  long int _72;
  long int _73;
  long int _74;
  long int _75;
  long int _76;
  long int _77;
  long int _78;
  long int _79;
  long int _80;
  long int _81;
  long int _82;
  long int _83;
  long int _84;
  long int _85;
  long int _86;
  long int _87;
  long int _88;
  long int _89;
  long int _90;
  long int _91;
  long int _92;
  long int _93;
  long int _94;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _100;
  long int _101;
  long int _102;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  long int _112;
  long int _113;
  long int _114;
  long int _115;
  long int _116;
  long int _117;
  long int _118;
  long int _119;
  long int _120;
  long int _121;
  long int _122;
  long int _123;
  long int _124;
  long int _125;
  long int _126;
  long int _127;
  long int _128;
  long int _129;
  long int _130;
  long int _131;
  long int _132;
  long int _133;
  long int _134;
  long int _135;
  long int _136;
  long int _137;
  long int _138;
  long int _139;
  int _140;
  int _141;
  int _142;
  int _143;
  int _144;
  int _145;
  int _146;
  int _147;
  int _148;
  int _149;

  <bb 2> [local count: 1073741824]:
  f0_152 = *f_151(D);
  f1_153 = MEM[(const int32_t *)f_151(D) + 4B];
  f2_154 = MEM[(const int32_t *)f_151(D) + 8B];
  f3_155 = MEM[(const int32_t *)f_151(D) + 12B];
  f4_156 = MEM[(const int32_t *)f_151(D) + 16B];
  f5_157 = MEM[(const int32_t *)f_151(D) + 20B];
  f6_158 = MEM[(const int32_t *)f_151(D) + 24B];
  f7_159 = MEM[(const int32_t *)f_151(D) + 28B];
  f8_160 = MEM[(const int32_t *)f_151(D) + 32B];
  f9_161 = MEM[(const int32_t *)f_151(D) + 36B];
  g0_163 = *g_162(D);
  g1_164 = MEM[(const int32_t *)g_162(D) + 4B];
  g2_165 = MEM[(const int32_t *)g_162(D) + 8B];
  g3_166 = MEM[(const int32_t *)g_162(D) + 12B];
  g4_167 = MEM[(const int32_t *)g_162(D) + 16B];
  g5_168 = MEM[(const int32_t *)g_162(D) + 20B];
  g6_169 = MEM[(const int32_t *)g_162(D) + 24B];
  g7_170 = MEM[(const int32_t *)g_162(D) + 28B];
  g8_171 = MEM[(const int32_t *)g_162(D) + 32B];
  g9_172 = MEM[(const int32_t *)g_162(D) + 36B];
  g1_19_173 = g1_164 * 19;
  g2_19_174 = g2_165 * 19;
  g3_19_175 = g3_166 * 19;
  g4_19_176 = g4_167 * 19;
  g5_19_177 = g5_168 * 19;
  g6_19_178 = g6_169 * 19;
  g7_19_179 = g7_170 * 19;
  g8_19_180 = g8_171 * 19;
  g9_19_181 = g9_172 * 19;
  f1_2_182 = f1_153 * 2;
  f3_2_183 = f3_155 * 2;
  f5_2_184 = f5_157 * 2;
  f7_2_185 = f7_159 * 2;
  f9_2_186 = f9_161 * 2;
  f1g0_197 = g0_163 w* f1_153;
  f1g1_2_198 = g1_164 w* f1_2_182;
  f1g2_199 = g2_165 w* f1_153;
  f1g3_2_200 = g3_166 w* f1_2_182;
  f1g4_201 = g4_167 w* f1_153;
  f1g5_2_202 = g5_168 w* f1_2_182;
  f1g6_203 = g6_169 w* f1_153;
  f1g7_2_204 = g7_170 w* f1_2_182;
  f1g8_205 = g8_171 w* f1_153;
  f1g9_38_206 = f1_2_182 w* g9_19_181;
  _35 = WIDEN_MULT_PLUS_EXPR <f0_152, g0_163, f1g9_38_206>;
  _36 = WIDEN_MULT_PLUS_EXPR <f2_154, g8_19_180, _35>;
  _37 = WIDEN_MULT_PLUS_EXPR <f3_2_183, g7_19_179, _36>;
  _38 = WIDEN_MULT_PLUS_EXPR <f4_156, g6_19_178, _37>;
  _39 = WIDEN_MULT_PLUS_EXPR <f5_2_184, g5_19_177, _38>;
  _40 = WIDEN_MULT_PLUS_EXPR <f6_158, g4_19_176, _39>;
  _41 = WIDEN_MULT_PLUS_EXPR <f7_2_185, g3_19_175, _40>;
  _42 = WIDEN_MULT_PLUS_EXPR <f8_160, g2_19_174, _41>;
  h0_287 = WIDEN_MULT_PLUS_EXPR <f9_2_186, g1_19_173, _42>;
  _43 = WIDEN_MULT_PLUS_EXPR <f0_152, g1_164, f1g0_197>;
  _44 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f2_154, _43>;
  _45 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f3_155, _44>;
  _46 = WIDEN_MULT_PLUS_EXPR <g7_19_179, f4_156, _45>;
  _47 = WIDEN_MULT_PLUS_EXPR <g6_19_178, f5_157, _46>;
  _48 = WIDEN_MULT_PLUS_EXPR <g5_19_177, f6_158, _47>;
  _49 = WIDEN_MULT_PLUS_EXPR <g4_19_176, f7_159, _48>;
  _50 = WIDEN_MULT_PLUS_EXPR <g3_19_175, f8_160, _49>;
  h1_288 = WIDEN_MULT_PLUS_EXPR <g2_19_174, f9_161, _50>;
  _51 = WIDEN_MULT_PLUS_EXPR <f0_152, g2_165, f1g1_2_198>;
  _52 = WIDEN_MULT_PLUS_EXPR <g0_163, f2_154, _51>;
  _53 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f3_2_183, _52>;
  _54 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f4_156, _53>;
  _55 = WIDEN_MULT_PLUS_EXPR <g7_19_179, f5_2_184, _54>;
  _56 = WIDEN_MULT_PLUS_EXPR <g6_19_178, f6_158, _55>;
  _57 = WIDEN_MULT_PLUS_EXPR <g5_19_177, f7_2_185, _56>;
  _58 = WIDEN_MULT_PLUS_EXPR <g4_19_176, f8_160, _57>;
  h2_289 = WIDEN_MULT_PLUS_EXPR <g3_19_175, f9_2_186, _58>;
  _59 = WIDEN_MULT_PLUS_EXPR <f0_152, g3_166, f1g2_199>;
  _60 = WIDEN_MULT_PLUS_EXPR <g1_164, f2_154, _59>;
  _61 = WIDEN_MULT_PLUS_EXPR <g0_163, f3_155, _60>;
  _62 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f4_156, _61>;
  _63 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f5_157, _62>;
  _64 = WIDEN_MULT_PLUS_EXPR <g7_19_179, f6_158, _63>;
  _65 = WIDEN_MULT_PLUS_EXPR <g6_19_178, f7_159, _64>;
  _66 = WIDEN_MULT_PLUS_EXPR <g5_19_177, f8_160, _65>;
  h3_290 = WIDEN_MULT_PLUS_EXPR <g4_19_176, f9_161, _66>;
  _67 = WIDEN_MULT_PLUS_EXPR <f0_152, g4_167, f1g3_2_200>;
  _68 = WIDEN_MULT_PLUS_EXPR <g2_165, f2_154, _67>;
  _69 = WIDEN_MULT_PLUS_EXPR <g1_164, f3_2_183, _68>;
  _70 = WIDEN_MULT_PLUS_EXPR <g0_163, f4_156, _69>;
  _71 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f5_2_184, _70>;
  _72 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f6_158, _71>;
  _73 = WIDEN_MULT_PLUS_EXPR <g7_19_179, f7_2_185, _72>;
  _74 = WIDEN_MULT_PLUS_EXPR <g6_19_178, f8_160, _73>;
  h4_291 = WIDEN_MULT_PLUS_EXPR <g5_19_177, f9_2_186, _74>;
  _75 = WIDEN_MULT_PLUS_EXPR <f0_152, g5_168, f1g4_201>;
  _76 = WIDEN_MULT_PLUS_EXPR <g3_166, f2_154, _75>;
  _77 = WIDEN_MULT_PLUS_EXPR <g2_165, f3_155, _76>;
  _78 = WIDEN_MULT_PLUS_EXPR <g1_164, f4_156, _77>;
  _79 = WIDEN_MULT_PLUS_EXPR <g0_163, f5_157, _78>;
  _80 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f6_158, _79>;
  _81 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f7_159, _80>;
  _82 = WIDEN_MULT_PLUS_EXPR <g7_19_179, f8_160, _81>;
  h5_292 = WIDEN_MULT_PLUS_EXPR <g6_19_178, f9_161, _82>;
  _83 = WIDEN_MULT_PLUS_EXPR <f0_152, g6_169, f1g5_2_202>;
  _84 = WIDEN_MULT_PLUS_EXPR <g4_167, f2_154, _83>;
  _85 = WIDEN_MULT_PLUS_EXPR <g3_166, f3_2_183, _84>;
  _86 = WIDEN_MULT_PLUS_EXPR <g2_165, f4_156, _85>;
  _87 = WIDEN_MULT_PLUS_EXPR <g1_164, f5_2_184, _86>;
  _88 = WIDEN_MULT_PLUS_EXPR <g0_163, f6_158, _87>;
  _89 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f7_2_185, _88>;
  _90 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f8_160, _89>;
  h6_293 = WIDEN_MULT_PLUS_EXPR <g7_19_179, f9_2_186, _90>;
  _91 = WIDEN_MULT_PLUS_EXPR <f0_152, g7_170, f1g6_203>;
  _92 = WIDEN_MULT_PLUS_EXPR <g5_168, f2_154, _91>;
  _93 = WIDEN_MULT_PLUS_EXPR <g4_167, f3_155, _92>;
  _94 = WIDEN_MULT_PLUS_EXPR <g3_166, f4_156, _93>;
  _95 = WIDEN_MULT_PLUS_EXPR <g2_165, f5_157, _94>;
  _96 = WIDEN_MULT_PLUS_EXPR <g1_164, f6_158, _95>;
  _97 = WIDEN_MULT_PLUS_EXPR <g0_163, f7_159, _96>;
  _98 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f8_160, _97>;
  h7_294 = WIDEN_MULT_PLUS_EXPR <g8_19_180, f9_161, _98>;
  _99 = WIDEN_MULT_PLUS_EXPR <f0_152, g8_171, f1g7_2_204>;
  _100 = WIDEN_MULT_PLUS_EXPR <g6_169, f2_154, _99>;
  _101 = WIDEN_MULT_PLUS_EXPR <g5_168, f3_2_183, _100>;
  _102 = WIDEN_MULT_PLUS_EXPR <g4_167, f4_156, _101>;
  _103 = WIDEN_MULT_PLUS_EXPR <g3_166, f5_2_184, _102>;
  _104 = WIDEN_MULT_PLUS_EXPR <g2_165, f6_158, _103>;
  _105 = WIDEN_MULT_PLUS_EXPR <g1_164, f7_2_185, _104>;
  _106 = WIDEN_MULT_PLUS_EXPR <g0_163, f8_160, _105>;
  h8_295 = WIDEN_MULT_PLUS_EXPR <g9_19_181, f9_2_186, _106>;
  _107 = WIDEN_MULT_PLUS_EXPR <f0_152, g9_172, f1g8_205>;
  _108 = WIDEN_MULT_PLUS_EXPR <g7_170, f2_154, _107>;
  _109 = WIDEN_MULT_PLUS_EXPR <g6_169, f3_155, _108>;
  _110 = WIDEN_MULT_PLUS_EXPR <g5_168, f4_156, _109>;
  _111 = WIDEN_MULT_PLUS_EXPR <g4_167, f5_157, _110>;
  _112 = WIDEN_MULT_PLUS_EXPR <g3_166, f6_158, _111>;
  _113 = WIDEN_MULT_PLUS_EXPR <g2_165, f7_159, _112>;
  _114 = WIDEN_MULT_PLUS_EXPR <g1_164, f8_160, _113>;
  h9_296 = WIDEN_MULT_PLUS_EXPR <g0_163, f9_161, _114>;
  carry0_297 = h0_287 + 33554432;
  _115 = carry0_297 >> 26;
  h1_298 = _115 + h1_288;
  _116 = carry0_297 & -67108864;
  h0_299 = h0_287 - _116;
  carry4_300 = h4_291 + 33554432;
  _117 = carry4_300 >> 26;
  h5_301 = _117 + h5_292;
  _118 = carry4_300 & -67108864;
  h4_302 = h4_291 - _118;
  carry1_303 = h1_298 + 16777216;
  _119 = carry1_303 >> 25;
  h2_304 = _119 + h2_289;
  _120 = carry1_303 & -33554432;
  h1_305 = h1_298 - _120;
  carry5_306 = h5_301 + 16777216;
  _121 = carry5_306 >> 25;
  h6_307 = _121 + h6_293;
  _122 = carry5_306 & -33554432;
  h5_308 = h5_301 - _122;
  carry2_309 = h2_304 + 33554432;
  _123 = carry2_309 >> 26;
  h3_310 = _123 + h3_290;
  _124 = carry2_309 & -67108864;
  h2_311 = h2_304 - _124;
  carry6_312 = h6_307 + 33554432;
  _125 = carry6_312 >> 26;
  h7_313 = _125 + h7_294;
  _126 = carry6_312 & -67108864;
  h6_314 = h6_307 - _126;
  carry3_315 = h3_310 + 16777216;
  _127 = carry3_315 >> 25;
  h4_316 = _127 + h4_302;
  _128 = carry3_315 & -33554432;
  h3_317 = h3_310 - _128;
  carry7_318 = h7_313 + 16777216;
  _129 = carry7_318 >> 25;
  h8_319 = _129 + h8_295;
  _130 = carry7_318 & -33554432;
  h7_320 = h7_313 - _130;
  carry4_321 = h4_316 + 33554432;
  _131 = carry4_321 >> 26;
  h5_322 = _131 + h5_308;
  _132 = carry4_321 & -67108864;
  h4_323 = h4_316 - _132;
  carry8_324 = h8_319 + 33554432;
  _133 = carry8_324 >> 26;
  h9_325 = _133 + h9_296;
  _134 = carry8_324 & -67108864;
  h8_326 = h8_319 - _134;
  carry9_327 = h9_325 + 16777216;
  _135 = carry9_327 >> 25;
  _136 = _135 * 19;
  h0_328 = _136 + h0_299;
  _137 = carry9_327 & -33554432;
  h9_329 = h9_325 - _137;
  carry0_330 = h0_328 + 33554432;
  _138 = carry0_330 >> 26;
  h1_331 = _138 + h1_305;
  _139 = carry0_330 & -67108864;
  h0_332 = h0_328 - _139;
  _140 = (int) h0_332;
  *h_333(D) = _140;
  _141 = (int) h1_331;
  MEM[(int32_t *)h_333(D) + 4B] = _141;
  _142 = (int) h2_311;
  MEM[(int32_t *)h_333(D) + 8B] = _142;
  _143 = (int) h3_317;
  MEM[(int32_t *)h_333(D) + 12B] = _143;
  _144 = (int) h4_323;
  MEM[(int32_t *)h_333(D) + 16B] = _144;
  _145 = (int) h5_322;
  MEM[(int32_t *)h_333(D) + 20B] = _145;
  _146 = (int) h6_314;
  MEM[(int32_t *)h_333(D) + 24B] = _146;
  _147 = (int) h7_320;
  MEM[(int32_t *)h_333(D) + 28B] = _147;
  _148 = (int) h8_326;
  MEM[(int32_t *)h_333(D) + 32B] = _148;
  _149 = (int) h9_329;
  MEM[(int32_t *)h_333(D) + 36B] = _149;
  return;

}



;; Function fe_sq (fe_sq, funcdef_no=413, decl_uid=17555, cgraph_uid=414, symbol_order=419)

__attribute__((access ("^0[10]^1[10]", )))
void fe_sq (int32_t * h, const int32_t * f)
{
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t h9;
  int64_t h8;
  int64_t h7;
  int64_t h6;
  int64_t h5;
  int64_t h4;
  int64_t h3;
  int64_t h2;
  int64_t h1;
  int64_t h0;
  int64_t f2f9_38;
  int64_t f1f9_76;
  int64_t f1f8_2;
  int64_t f1f7_4;
  int64_t f1f6_2;
  int64_t f1f5_4;
  int64_t f1f4_2;
  int64_t f1f3_4;
  int64_t f1f2_2;
  int64_t f1f1_2;
  int32_t f9_38;
  int32_t f8_19;
  int32_t f7_38;
  int32_t f6_19;
  int32_t f5_38;
  int32_t f7_2;
  int32_t f6_2;
  int32_t f5_2;
  int32_t f4_2;
  int32_t f3_2;
  int32_t f2_2;
  int32_t f1_2;
  int32_t f0_2;
  int32_t f9;
  int32_t f8;
  int32_t f7;
  int32_t f6;
  int32_t f5;
  int32_t f4;
  int32_t f3;
  int32_t f2;
  int32_t f1;
  int32_t f0;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  long int _51;
  long int _52;
  long int _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  long int _58;
  long int _59;
  long int _60;
  long int _61;
  long int _62;
  long int _63;
  long int _64;
  long int _65;
  long int _66;
  long int _67;
  long int _68;
  long int _69;
  long int _70;
  long int _71;
  long int _72;
  long int _73;
  long int _74;
  long int _75;
  long int _76;
  long int _77;
  long int _78;
  long int _79;
  long int _80;
  long int _81;
  long int _82;
  long int _83;
  int _84;
  int _85;
  int _86;
  int _87;
  int _88;
  int _89;
  int _90;
  int _91;
  int _92;
  int _93;

  <bb 2> [local count: 1073741824]:
  f0_96 = *f_95(D);
  f1_97 = MEM[(const int32_t *)f_95(D) + 4B];
  f2_98 = MEM[(const int32_t *)f_95(D) + 8B];
  f3_99 = MEM[(const int32_t *)f_95(D) + 12B];
  f4_100 = MEM[(const int32_t *)f_95(D) + 16B];
  f5_101 = MEM[(const int32_t *)f_95(D) + 20B];
  f6_102 = MEM[(const int32_t *)f_95(D) + 24B];
  f7_103 = MEM[(const int32_t *)f_95(D) + 28B];
  f8_104 = MEM[(const int32_t *)f_95(D) + 32B];
  f9_105 = MEM[(const int32_t *)f_95(D) + 36B];
  f0_2_106 = f0_96 * 2;
  f1_2_107 = f1_97 * 2;
  f2_2_108 = f2_98 * 2;
  f3_2_109 = f3_99 * 2;
  f4_2_110 = f4_100 * 2;
  f5_2_111 = f5_101 * 2;
  f6_2_112 = f6_102 * 2;
  f7_2_113 = f7_103 * 2;
  f5_38_114 = f5_101 * 38;
  f6_19_115 = f6_102 * 19;
  f7_38_116 = f7_103 * 38;
  f8_19_117 = f8_104 * 19;
  f9_38_118 = f9_105 * 38;
  f1f1_2_129 = f1_97 w* f1_2_107;
  f1f2_2_130 = f2_98 w* f1_2_107;
  f1f3_4_131 = f1_2_107 w* f3_2_109;
  f1f4_2_132 = f4_100 w* f1_2_107;
  f1f5_4_133 = f1_2_107 w* f5_2_111;
  f1f6_2_134 = f6_102 w* f1_2_107;
  f1f7_4_135 = f1_2_107 w* f7_2_113;
  f1f8_2_136 = f8_104 w* f1_2_107;
  f1f9_76_137 = f1_2_107 w* f9_38_118;
  f2f9_38_145 = f2_98 w* f9_38_118;
  _24 = WIDEN_MULT_PLUS_EXPR <f0_96, f0_96, f1f9_76_137>;
  _25 = WIDEN_MULT_PLUS_EXPR <f2_2_108, f8_19_117, _24>;
  _26 = WIDEN_MULT_PLUS_EXPR <f3_2_109, f7_38_116, _25>;
  _27 = WIDEN_MULT_PLUS_EXPR <f4_2_110, f6_19_115, _26>;
  h0_174 = WIDEN_MULT_PLUS_EXPR <f5_101, f5_38_114, _27>;
  _28 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f1_97, f2f9_38_145>;
  _29 = WIDEN_MULT_PLUS_EXPR <f3_2_109, f8_19_117, _28>;
  _30 = WIDEN_MULT_PLUS_EXPR <f4_100, f7_38_116, _29>;
  h1_175 = WIDEN_MULT_PLUS_EXPR <f5_2_111, f6_19_115, _30>;
  _31 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f2_98, f1f1_2_129>;
  _32 = WIDEN_MULT_PLUS_EXPR <f3_2_109, f9_38_118, _31>;
  _33 = WIDEN_MULT_PLUS_EXPR <f8_19_117, f4_2_110, _32>;
  _34 = WIDEN_MULT_PLUS_EXPR <f5_2_111, f7_38_116, _33>;
  h2_176 = WIDEN_MULT_PLUS_EXPR <f6_102, f6_19_115, _34>;
  _35 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f3_99, f1f2_2_130>;
  _36 = WIDEN_MULT_PLUS_EXPR <f4_100, f9_38_118, _35>;
  _37 = WIDEN_MULT_PLUS_EXPR <f5_2_111, f8_19_117, _36>;
  h3_177 = WIDEN_MULT_PLUS_EXPR <f6_102, f7_38_116, _37>;
  _38 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f4_100, f1f3_4_131>;
  _39 = WIDEN_MULT_PLUS_EXPR <f2_98, f2_98, _38>;
  _40 = WIDEN_MULT_PLUS_EXPR <f5_2_111, f9_38_118, _39>;
  _41 = WIDEN_MULT_PLUS_EXPR <f8_19_117, f6_2_112, _40>;
  h4_178 = WIDEN_MULT_PLUS_EXPR <f7_103, f7_38_116, _41>;
  _42 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f5_101, f1f4_2_132>;
  _43 = WIDEN_MULT_PLUS_EXPR <f3_99, f2_2_108, _42>;
  _44 = WIDEN_MULT_PLUS_EXPR <f6_102, f9_38_118, _43>;
  h5_179 = WIDEN_MULT_PLUS_EXPR <f7_2_113, f8_19_117, _44>;
  _45 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f6_102, f1f5_4_133>;
  _46 = WIDEN_MULT_PLUS_EXPR <f4_100, f2_2_108, _45>;
  _47 = WIDEN_MULT_PLUS_EXPR <f3_99, f3_2_109, _46>;
  _48 = WIDEN_MULT_PLUS_EXPR <f7_2_113, f9_38_118, _47>;
  h6_180 = WIDEN_MULT_PLUS_EXPR <f8_104, f8_19_117, _48>;
  _49 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f7_103, f1f6_2_134>;
  _50 = WIDEN_MULT_PLUS_EXPR <f5_101, f2_2_108, _49>;
  _51 = WIDEN_MULT_PLUS_EXPR <f4_100, f3_2_109, _50>;
  h7_181 = WIDEN_MULT_PLUS_EXPR <f8_104, f9_38_118, _51>;
  _52 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f8_104, f1f7_4_135>;
  _53 = WIDEN_MULT_PLUS_EXPR <f6_102, f2_2_108, _52>;
  _54 = WIDEN_MULT_PLUS_EXPR <f3_2_109, f5_2_111, _53>;
  _55 = WIDEN_MULT_PLUS_EXPR <f4_100, f4_100, _54>;
  h8_182 = WIDEN_MULT_PLUS_EXPR <f9_105, f9_38_118, _55>;
  _56 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f9_105, f1f8_2_136>;
  _57 = WIDEN_MULT_PLUS_EXPR <f7_103, f2_2_108, _56>;
  _58 = WIDEN_MULT_PLUS_EXPR <f6_102, f3_2_109, _57>;
  h9_183 = WIDEN_MULT_PLUS_EXPR <f5_101, f4_2_110, _58>;
  carry0_184 = h0_174 + 33554432;
  _59 = carry0_184 >> 26;
  h1_185 = _59 + h1_175;
  _60 = carry0_184 & -67108864;
  h0_186 = h0_174 - _60;
  carry4_187 = h4_178 + 33554432;
  _61 = carry4_187 >> 26;
  h5_188 = _61 + h5_179;
  _62 = carry4_187 & -67108864;
  h4_189 = h4_178 - _62;
  carry1_190 = h1_185 + 16777216;
  _63 = carry1_190 >> 25;
  h2_191 = _63 + h2_176;
  _64 = carry1_190 & -33554432;
  h1_192 = h1_185 - _64;
  carry5_193 = h5_188 + 16777216;
  _65 = carry5_193 >> 25;
  h6_194 = _65 + h6_180;
  _66 = carry5_193 & -33554432;
  h5_195 = h5_188 - _66;
  carry2_196 = h2_191 + 33554432;
  _67 = carry2_196 >> 26;
  h3_197 = _67 + h3_177;
  _68 = carry2_196 & -67108864;
  h2_198 = h2_191 - _68;
  carry6_199 = h6_194 + 33554432;
  _69 = carry6_199 >> 26;
  h7_200 = _69 + h7_181;
  _70 = carry6_199 & -67108864;
  h6_201 = h6_194 - _70;
  carry3_202 = h3_197 + 16777216;
  _71 = carry3_202 >> 25;
  h4_203 = _71 + h4_189;
  _72 = carry3_202 & -33554432;
  h3_204 = h3_197 - _72;
  carry7_205 = h7_200 + 16777216;
  _73 = carry7_205 >> 25;
  h8_206 = _73 + h8_182;
  _74 = carry7_205 & -33554432;
  h7_207 = h7_200 - _74;
  carry4_208 = h4_203 + 33554432;
  _75 = carry4_208 >> 26;
  h5_209 = _75 + h5_195;
  _76 = carry4_208 & -67108864;
  h4_210 = h4_203 - _76;
  carry8_211 = h8_206 + 33554432;
  _77 = carry8_211 >> 26;
  h9_212 = _77 + h9_183;
  _78 = carry8_211 & -67108864;
  h8_213 = h8_206 - _78;
  carry9_214 = h9_212 + 16777216;
  _79 = carry9_214 >> 25;
  _80 = _79 * 19;
  h0_215 = _80 + h0_186;
  _81 = carry9_214 & -33554432;
  h9_216 = h9_212 - _81;
  carry0_217 = h0_215 + 33554432;
  _82 = carry0_217 >> 26;
  h1_218 = _82 + h1_192;
  _83 = carry0_217 & -67108864;
  h0_219 = h0_215 - _83;
  _84 = (int) h0_219;
  *h_220(D) = _84;
  _85 = (int) h1_218;
  MEM[(int32_t *)h_220(D) + 4B] = _85;
  _86 = (int) h2_198;
  MEM[(int32_t *)h_220(D) + 8B] = _86;
  _87 = (int) h3_204;
  MEM[(int32_t *)h_220(D) + 12B] = _87;
  _88 = (int) h4_210;
  MEM[(int32_t *)h_220(D) + 16B] = _88;
  _89 = (int) h5_209;
  MEM[(int32_t *)h_220(D) + 20B] = _89;
  _90 = (int) h6_201;
  MEM[(int32_t *)h_220(D) + 24B] = _90;
  _91 = (int) h7_207;
  MEM[(int32_t *)h_220(D) + 28B] = _91;
  _92 = (int) h8_213;
  MEM[(int32_t *)h_220(D) + 32B] = _92;
  _93 = (int) h9_216;
  MEM[(int32_t *)h_220(D) + 36B] = _93;
  return;

}



;; Function fe_invert (fe_invert, funcdef_no=414, decl_uid=17657, cgraph_uid=415, symbol_order=420)

Removing basic block 19
Removing basic block 20
Removing basic block 21
Removing basic block 22
Removing basic block 23
Removing basic block 24
Removing basic block 25
Removing basic block 26
__attribute__((access ("^0[10]^1[10]", )))
void fe_invert (int32_t * out, const int32_t * z)
{
  int32_t t3[10];
  int32_t t2[10];
  int32_t t1[10];
  int32_t t0[10];
  unsigned int ivtmp_4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_7;
  unsigned int ivtmp_8;
  unsigned int ivtmp_11;
  unsigned int ivtmp_12;
  unsigned int ivtmp_13;
  unsigned int ivtmp_14;
  unsigned int ivtmp_15;
  unsigned int ivtmp_16;
  unsigned int ivtmp_63;
  unsigned int ivtmp_65;
  unsigned int ivtmp_67;
  unsigned int ivtmp_69;
  unsigned int ivtmp_71;

  <bb 2> [local count: 10737416]:
  fe_sq (&t0, z_18(D));
  fe_sq (&t1, &t0);
  fe_sq (&t1, &t1);
  fe_mul (&t1, z_18(D), &t1);
  fe_mul (&t0, &t0, &t1);
  fe_sq (&t2, &t0);
  fe_mul (&t1, &t1, &t2);
  fe_sq (&t2, &t1);

  <bb 3> [local count: 42949663]:
  # ivtmp_71 = PHI <ivtmp_11(3), 4(2)>
  fe_sq (&t2, &t2);
  ivtmp_11 = ivtmp_71 + 4294967295;
  if (ivtmp_11 != 0)
    goto <bb 3>; [75.00%]
  else
    goto <bb 4>; [25.00%]

  <bb 4> [local count: 10737416]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t2, &t1);

  <bb 5> [local count: 96636742]:
  # ivtmp_12 = PHI <ivtmp_4(5), 9(4)>
  fe_sq (&t2, &t2);
  ivtmp_4 = ivtmp_12 + 4294967295;
  if (ivtmp_4 != 0)
    goto <bb 5>; [88.89%]
  else
    goto <bb 6>; [11.11%]

  <bb 6> [local count: 10737416]:
  fe_mul (&t2, &t2, &t1);
  fe_sq (&t3, &t2);

  <bb 7> [local count: 204010917]:
  # ivtmp_5 = PHI <ivtmp_69(7), 19(6)>
  fe_sq (&t3, &t3);
  ivtmp_69 = ivtmp_5 + 4294967295;
  if (ivtmp_69 != 0)
    goto <bb 7>; [94.74%]
  else
    goto <bb 8>; [5.26%]

  <bb 8> [local count: 10737416]:
  fe_mul (&t2, &t3, &t2);

  <bb 9> [local count: 107385977]:
  # ivtmp_67 = PHI <ivtmp_13(9), 10(8)>
  fe_sq (&t2, &t2);
  ivtmp_13 = ivtmp_67 + 4294967295;
  if (ivtmp_13 != 0)
    goto <bb 9>; [90.00%]
  else
    goto <bb 10>; [10.00%]

  <bb 10> [local count: 10737416]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t2, &t1);

  <bb 11> [local count: 526133297]:
  # ivtmp_14 = PHI <ivtmp_6(11), 49(10)>
  fe_sq (&t2, &t2);
  ivtmp_6 = ivtmp_14 + 4294967295;
  if (ivtmp_6 != 0)
    goto <bb 11>; [97.96%]
  else
    goto <bb 12>; [2.04%]

  <bb 12> [local count: 10737416]:
  fe_mul (&t2, &t2, &t1);
  fe_sq (&t3, &t2);

  <bb 13> [local count: 1063004408]:
  # ivtmp_7 = PHI <ivtmp_65(13), 99(12)>
  fe_sq (&t3, &t3);
  ivtmp_65 = ivtmp_7 + 4294967295;
  if (ivtmp_65 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 14>; [1.01%]

  <bb 14> [local count: 10737416]:
  fe_mul (&t2, &t3, &t2);
  fe_sq (&t2, &t2);

  <bb 15> [local count: 526133297]:
  # ivtmp_63 = PHI <ivtmp_15(15), 49(14)>
  fe_sq (&t2, &t2);
  ivtmp_15 = ivtmp_63 + 4294967295;
  if (ivtmp_15 != 0)
    goto <bb 15>; [97.96%]
  else
    goto <bb 16>; [2.04%]

  <bb 16> [local count: 10737416]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t1, &t1);

  <bb 17> [local count: 42949663]:
  # ivtmp_16 = PHI <ivtmp_8(17), 4(16)>
  fe_sq (&t1, &t1);
  ivtmp_8 = ivtmp_16 + 4294967295;
  if (ivtmp_8 != 0)
    goto <bb 17>; [75.00%]
  else
    goto <bb 18>; [25.00%]

  <bb 18> [local count: 10737416]:
  fe_mul (out_40(D), &t1, &t0);
  t0 ={v} {CLOBBER(eos)};
  t1 ={v} {CLOBBER(eos)};
  t2 ={v} {CLOBBER(eos)};
  t3 ={v} {CLOBBER(eos)};
  return;

}



;; Function fe_neg (fe_neg, funcdef_no=415, decl_uid=17698, cgraph_uid=416, symbol_order=421)

__attribute__((access ("^0[10]^1[10]", )))
void fe_neg (int32_t * h, const int32_t * f)
{
  vector(2) int vect__45.322;
  const vector(2) int vect__43.321;
  vector(4) int vect__6.316;
  const vector(4) int vect__4.315;
  int _5;
  const int32_t * _7;
  int _13;
  ssizetype _22;
  sizetype _23;
  int _30;
  int _32;
  int _44;
  int _47;
  int _74;
  int _76;
  int _86;
  int _88;
  int _98;
  int _100;
  int _110;
  int _112;
  int _122;
  int _124;
  int _134;
  int _136;
  int _146;
  int _148;

  <bb 2> [local count: 97603128]:
  _7 = f_10(D) + 4;
  _22 = h_11(D) - _7;
  _23 = (sizetype) _22;
  if (_23 > 8)
    goto <bb 3>; [80.00%]
  else
    goto <bb 4>; [20.00%]

  <bb 3> [local count: 78082504]:
  vect__4.315_156 = MEM <const vector(4) int> [(const int32_t *)f_10(D)];
  vect__6.316_157 = -vect__4.315_156;
  MEM <vector(4) int> [(int32_t *)h_11(D)] = vect__6.316_157;
  vect__4.315_54 = MEM <const vector(4) int> [(const int32_t *)f_10(D) + 16B];
  vect__6.316_55 = -vect__4.315_54;
  MEM <vector(4) int> [(int32_t *)h_11(D) + 16B] = vect__6.316_55;
  vect__43.321_64 = MEM <const vector(2) int> [(const int32_t *)f_10(D) + 32B];
  vect__45.322_65 = -vect__43.321_64;
  MEM <vector(2) int> [(int32_t *)h_11(D) + 32B] = vect__45.322_65;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 19520625]:
  _5 = *f_10(D);
  _13 = -_5;
  *h_11(D) = _13;
  _44 = MEM[(const int32_t *)f_10(D) + 4B];
  _47 = -_44;
  MEM[(int32_t *)h_11(D) + 4B] = _47;
  _74 = MEM[(const int32_t *)f_10(D) + 8B];
  _76 = -_74;
  MEM[(int32_t *)h_11(D) + 8B] = _76;
  _86 = MEM[(const int32_t *)f_10(D) + 12B];
  _88 = -_86;
  MEM[(int32_t *)h_11(D) + 12B] = _88;
  _98 = MEM[(const int32_t *)f_10(D) + 16B];
  _100 = -_98;
  MEM[(int32_t *)h_11(D) + 16B] = _100;
  _110 = MEM[(const int32_t *)f_10(D) + 20B];
  _112 = -_110;
  MEM[(int32_t *)h_11(D) + 20B] = _112;
  _122 = MEM[(const int32_t *)f_10(D) + 24B];
  _124 = -_122;
  MEM[(int32_t *)h_11(D) + 24B] = _124;
  _134 = MEM[(const int32_t *)f_10(D) + 28B];
  _136 = -_134;
  MEM[(int32_t *)h_11(D) + 28B] = _136;
  _146 = MEM[(const int32_t *)f_10(D) + 32B];
  _148 = -_146;
  MEM[(int32_t *)h_11(D) + 32B] = _148;
  _30 = MEM[(const int32_t *)f_10(D) + 36B];
  _32 = -_30;
  MEM[(int32_t *)h_11(D) + 36B] = _32;

  <bb 5> [local count: 97603128]:
  return;

}



;; Function fe_cmov (fe_cmov, funcdef_no=416, decl_uid=17708, cgraph_uid=417, symbol_order=422)

__attribute__((access ("^0[10]^1[10]", )))
void fe_cmov (int32_t * f, const int32_t * g, unsigned int b)
{
  vector(2) int vect__54.353;
  vector(2) int vect_x_53.352;
  vector(2) int vect_x_52.351;
  const vector(2) int vect__51.350;
  vector(2) int vect__49.347;
  vector(4) int vect__6.342;
  vector(4) int vect_x_16.341;
  vector(4) int vect_x_15.340;
  const vector(4) int vect__5.339;
  vector(4) int vect__3.336;
  int32_t x;
  int _4;
  int _15;
  int _18;
  sizetype _20;
  ssizetype _23;
  const int32_t * _24;
  int _30;
  int _34;
  int _36;
  int _39;
  int _50;
  int _52;
  int _56;
  vector(4) int vect_cst__68;
  vector(2) int vect_cst__85;
  int _94;
  int _96;
  int _99;
  int _108;
  int _110;
  int _113;
  int _122;
  int _124;
  int _127;
  int _136;
  int _138;
  int _141;
  int _150;
  int _152;
  int _155;
  int _164;
  int _166;
  int _169;
  int _178;
  int _180;
  int _183;

  <bb 2> [local count: 97603128]:
  b_10 = -b_9(D);
  _30 = (int) b_10;
  _24 = g_14(D) + 4;
  _23 = f_13(D) - _24;
  _20 = (sizetype) _23;
  if (_20 > 8)
    goto <bb 3>; [80.00%]
  else
    goto <bb 4>; [20.00%]

  <bb 3> [local count: 78082504]:
  vect_cst__68 = {_30, _30, _30, _30};
  vect__3.336_192 = MEM <vector(4) int> [(int32_t *)f_13(D)];
  vect__5.339_193 = MEM <const vector(4) int> [(const int32_t *)g_14(D)];
  vect_x_15.340_194 = vect__3.336_192 ^ vect__5.339_193;
  vect_x_16.341_195 = vect_cst__68 & vect_x_15.340_194;
  vect__6.342_196 = vect__3.336_192 ^ vect_x_16.341_195;
  MEM <vector(4) int> [(int32_t *)f_13(D)] = vect__6.342_196;
  vect__3.336_63 = MEM <vector(4) int> [(int32_t *)f_13(D) + 16B];
  vect__5.339_66 = MEM <const vector(4) int> [(const int32_t *)g_14(D) + 16B];
  vect_x_15.340_67 = vect__3.336_63 ^ vect__5.339_66;
  vect_x_16.341_69 = vect_x_15.340_67 & vect_cst__68;
  vect__6.342_70 = vect__3.336_63 ^ vect_x_16.341_69;
  MEM <vector(4) int> [(int32_t *)f_13(D) + 16B] = vect__6.342_70;
  vect_cst__85 = {_30, _30};
  vect__49.347_79 = MEM <vector(2) int> [(int32_t *)f_13(D) + 32B];
  vect__51.350_83 = MEM <const vector(2) int> [(const int32_t *)g_14(D) + 32B];
  vect_x_52.351_84 = vect__49.347_79 ^ vect__51.350_83;
  vect_x_53.352_86 = vect_x_52.351_84 & vect_cst__85;
  vect__54.353_87 = vect__49.347_79 ^ vect_x_53.352_86;
  MEM <vector(2) int> [(int32_t *)f_13(D) + 32B] = vect__54.353_87;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 19520625]:
  _4 = *f_13(D);
  _15 = *g_14(D);
  x_16 = _4 ^ _15;
  x_6 = x_16 & _30;
  _18 = _4 ^ x_6;
  *f_13(D) = _18;
  _50 = MEM[(int32_t *)f_13(D) + 4B];
  _52 = MEM[(const int32_t *)g_14(D) + 4B];
  x_53 = _50 ^ _52;
  x_54 = _30 & x_53;
  _56 = _50 ^ x_54;
  MEM[(int32_t *)f_13(D) + 4B] = _56;
  _94 = MEM[(int32_t *)f_13(D) + 8B];
  _96 = MEM[(const int32_t *)g_14(D) + 8B];
  x_97 = _94 ^ _96;
  x_98 = _30 & x_97;
  _99 = _94 ^ x_98;
  MEM[(int32_t *)f_13(D) + 8B] = _99;
  _108 = MEM[(int32_t *)f_13(D) + 12B];
  _110 = MEM[(const int32_t *)g_14(D) + 12B];
  x_111 = _108 ^ _110;
  x_112 = _30 & x_111;
  _113 = _108 ^ x_112;
  MEM[(int32_t *)f_13(D) + 12B] = _113;
  _122 = MEM[(int32_t *)f_13(D) + 16B];
  _124 = MEM[(const int32_t *)g_14(D) + 16B];
  x_125 = _122 ^ _124;
  x_126 = _30 & x_125;
  _127 = _122 ^ x_126;
  MEM[(int32_t *)f_13(D) + 16B] = _127;
  _136 = MEM[(int32_t *)f_13(D) + 20B];
  _138 = MEM[(const int32_t *)g_14(D) + 20B];
  x_139 = _136 ^ _138;
  x_140 = _30 & x_139;
  _141 = _136 ^ x_140;
  MEM[(int32_t *)f_13(D) + 20B] = _141;
  _150 = MEM[(int32_t *)f_13(D) + 24B];
  _152 = MEM[(const int32_t *)g_14(D) + 24B];
  x_153 = _150 ^ _152;
  x_154 = _30 & x_153;
  _155 = _150 ^ x_154;
  MEM[(int32_t *)f_13(D) + 24B] = _155;
  _164 = MEM[(int32_t *)f_13(D) + 28B];
  _166 = MEM[(const int32_t *)g_14(D) + 28B];
  x_167 = _164 ^ _166;
  x_168 = _30 & x_167;
  _169 = _164 ^ x_168;
  MEM[(int32_t *)f_13(D) + 28B] = _169;
  _178 = MEM[(int32_t *)f_13(D) + 32B];
  _180 = MEM[(const int32_t *)g_14(D) + 32B];
  x_181 = _178 ^ _180;
  x_182 = _30 & x_181;
  _183 = _178 ^ x_182;
  MEM[(int32_t *)f_13(D) + 32B] = _183;
  _34 = MEM[(int32_t *)f_13(D) + 36B];
  _36 = MEM[(const int32_t *)g_14(D) + 36B];
  x_37 = _34 ^ _36;
  x_38 = _30 & x_37;
  _39 = _34 ^ x_38;
  MEM[(int32_t *)f_13(D) + 36B] = _39;

  <bb 5> [local count: 97603128]:
  return;

}



;; Function fe_isnegative (fe_isnegative, funcdef_no=418, decl_uid=17722, cgraph_uid=419, symbol_order=424)

__attribute__((access ("^0[10]", )))
int fe_isnegative (const int32_t * f)
{
  uint8_t s[32];
  unsigned char _1;
  int _5;
  unsigned char _7;

  <bb 2> [local count: 1073741824]:
  fe_tobytes (&s, f_3(D));
  _1 = s[0];
  _7 = _1 & 1;
  _5 = (int) _7;
  s ={v} {CLOBBER(eos)};
  return _5;

}



;; Function fe_sq2 (fe_sq2, funcdef_no=419, decl_uid=17727, cgraph_uid=420, symbol_order=425)

__attribute__((access ("^0[10]^1[10]", )))
void fe_sq2 (int32_t * h, const int32_t * f)
{
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t h9;
  int64_t h8;
  int64_t h7;
  int64_t h6;
  int64_t h5;
  int64_t h4;
  int64_t h3;
  int64_t h2;
  int64_t h1;
  int64_t h0;
  int64_t f2f9_38;
  int64_t f1f9_76;
  int64_t f1f8_2;
  int64_t f1f7_4;
  int64_t f1f6_2;
  int64_t f1f5_4;
  int64_t f1f4_2;
  int64_t f1f3_4;
  int64_t f1f2_2;
  int64_t f1f1_2;
  int32_t f9_38;
  int32_t f8_19;
  int32_t f7_38;
  int32_t f6_19;
  int32_t f5_38;
  int32_t f7_2;
  int32_t f6_2;
  int32_t f5_2;
  int32_t f4_2;
  int32_t f3_2;
  int32_t f2_2;
  int32_t f1_2;
  int32_t f0_2;
  int32_t f9;
  int32_t f8;
  int32_t f7;
  int32_t f6;
  int32_t f5;
  int32_t f4;
  int32_t f3;
  int32_t f2;
  int32_t f1;
  int32_t f0;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  long int _51;
  long int _52;
  long int _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  long int _58;
  long int _59;
  long int _60;
  long int _61;
  long int _62;
  long int _63;
  long int _64;
  long int _65;
  long int _66;
  long int _67;
  long int _68;
  long int _69;
  long int _70;
  long int _71;
  long int _72;
  long int _73;
  long int _74;
  long int _75;
  long int _76;
  long int _77;
  long int _78;
  long int _79;
  long int _80;
  long int _81;
  long int _82;
  long int _83;
  int _84;
  int _85;
  int _86;
  int _87;
  int _88;
  int _89;
  int _90;
  int _91;
  int _92;
  int _93;

  <bb 2> [local count: 1073741824]:
  f0_96 = *f_95(D);
  f1_97 = MEM[(const int32_t *)f_95(D) + 4B];
  f2_98 = MEM[(const int32_t *)f_95(D) + 8B];
  f3_99 = MEM[(const int32_t *)f_95(D) + 12B];
  f4_100 = MEM[(const int32_t *)f_95(D) + 16B];
  f5_101 = MEM[(const int32_t *)f_95(D) + 20B];
  f6_102 = MEM[(const int32_t *)f_95(D) + 24B];
  f7_103 = MEM[(const int32_t *)f_95(D) + 28B];
  f8_104 = MEM[(const int32_t *)f_95(D) + 32B];
  f9_105 = MEM[(const int32_t *)f_95(D) + 36B];
  f0_2_106 = f0_96 * 2;
  f1_2_107 = f1_97 * 2;
  f2_2_108 = f2_98 * 2;
  f3_2_109 = f3_99 * 2;
  f4_2_110 = f4_100 * 2;
  f5_2_111 = f5_101 * 2;
  f6_2_112 = f6_102 * 2;
  f7_2_113 = f7_103 * 2;
  f5_38_114 = f5_101 * 38;
  f6_19_115 = f6_102 * 19;
  f7_38_116 = f7_103 * 38;
  f8_19_117 = f8_104 * 19;
  f9_38_118 = f9_105 * 38;
  f1f1_2_129 = f1_97 w* f1_2_107;
  f1f2_2_130 = f2_98 w* f1_2_107;
  f1f3_4_131 = f1_2_107 w* f3_2_109;
  f1f4_2_132 = f4_100 w* f1_2_107;
  f1f5_4_133 = f1_2_107 w* f5_2_111;
  f1f6_2_134 = f6_102 w* f1_2_107;
  f1f7_4_135 = f1_2_107 w* f7_2_113;
  f1f8_2_136 = f8_104 w* f1_2_107;
  f1f9_76_137 = f1_2_107 w* f9_38_118;
  f2f9_38_145 = f2_98 w* f9_38_118;
  _24 = WIDEN_MULT_PLUS_EXPR <f0_96, f0_96, f1f9_76_137>;
  _25 = WIDEN_MULT_PLUS_EXPR <f2_2_108, f8_19_117, _24>;
  _26 = WIDEN_MULT_PLUS_EXPR <f3_2_109, f7_38_116, _25>;
  _27 = WIDEN_MULT_PLUS_EXPR <f4_2_110, f6_19_115, _26>;
  h0_174 = WIDEN_MULT_PLUS_EXPR <f5_101, f5_38_114, _27>;
  _28 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f1_97, f2f9_38_145>;
  _29 = WIDEN_MULT_PLUS_EXPR <f3_2_109, f8_19_117, _28>;
  _30 = WIDEN_MULT_PLUS_EXPR <f4_100, f7_38_116, _29>;
  h1_175 = WIDEN_MULT_PLUS_EXPR <f5_2_111, f6_19_115, _30>;
  _31 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f2_98, f1f1_2_129>;
  _32 = WIDEN_MULT_PLUS_EXPR <f3_2_109, f9_38_118, _31>;
  _33 = WIDEN_MULT_PLUS_EXPR <f8_19_117, f4_2_110, _32>;
  _34 = WIDEN_MULT_PLUS_EXPR <f5_2_111, f7_38_116, _33>;
  h2_176 = WIDEN_MULT_PLUS_EXPR <f6_102, f6_19_115, _34>;
  _35 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f3_99, f1f2_2_130>;
  _36 = WIDEN_MULT_PLUS_EXPR <f4_100, f9_38_118, _35>;
  _37 = WIDEN_MULT_PLUS_EXPR <f5_2_111, f8_19_117, _36>;
  h3_177 = WIDEN_MULT_PLUS_EXPR <f6_102, f7_38_116, _37>;
  _38 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f4_100, f1f3_4_131>;
  _39 = WIDEN_MULT_PLUS_EXPR <f2_98, f2_98, _38>;
  _40 = WIDEN_MULT_PLUS_EXPR <f5_2_111, f9_38_118, _39>;
  _41 = WIDEN_MULT_PLUS_EXPR <f8_19_117, f6_2_112, _40>;
  h4_178 = WIDEN_MULT_PLUS_EXPR <f7_103, f7_38_116, _41>;
  _42 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f5_101, f1f4_2_132>;
  _43 = WIDEN_MULT_PLUS_EXPR <f3_99, f2_2_108, _42>;
  _44 = WIDEN_MULT_PLUS_EXPR <f6_102, f9_38_118, _43>;
  h5_179 = WIDEN_MULT_PLUS_EXPR <f7_2_113, f8_19_117, _44>;
  _45 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f6_102, f1f5_4_133>;
  _46 = WIDEN_MULT_PLUS_EXPR <f4_100, f2_2_108, _45>;
  _47 = WIDEN_MULT_PLUS_EXPR <f3_99, f3_2_109, _46>;
  _48 = WIDEN_MULT_PLUS_EXPR <f7_2_113, f9_38_118, _47>;
  h6_180 = WIDEN_MULT_PLUS_EXPR <f8_104, f8_19_117, _48>;
  _49 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f7_103, f1f6_2_134>;
  _50 = WIDEN_MULT_PLUS_EXPR <f5_101, f2_2_108, _49>;
  _51 = WIDEN_MULT_PLUS_EXPR <f4_100, f3_2_109, _50>;
  h7_181 = WIDEN_MULT_PLUS_EXPR <f8_104, f9_38_118, _51>;
  _52 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f8_104, f1f7_4_135>;
  _53 = WIDEN_MULT_PLUS_EXPR <f6_102, f2_2_108, _52>;
  _54 = WIDEN_MULT_PLUS_EXPR <f3_2_109, f5_2_111, _53>;
  _55 = WIDEN_MULT_PLUS_EXPR <f4_100, f4_100, _54>;
  h8_182 = WIDEN_MULT_PLUS_EXPR <f9_105, f9_38_118, _55>;
  _56 = WIDEN_MULT_PLUS_EXPR <f0_2_106, f9_105, f1f8_2_136>;
  _57 = WIDEN_MULT_PLUS_EXPR <f7_103, f2_2_108, _56>;
  _58 = WIDEN_MULT_PLUS_EXPR <f6_102, f3_2_109, _57>;
  h9_183 = WIDEN_MULT_PLUS_EXPR <f5_101, f4_2_110, _58>;
  h0_184 = h0_174 * 2;
  h1_185 = h1_175 * 2;
  h2_186 = h2_176 * 2;
  h3_187 = h3_177 * 2;
  h4_188 = h4_178 * 2;
  h5_189 = h5_179 * 2;
  h6_190 = h6_180 * 2;
  h7_191 = h7_181 * 2;
  h8_192 = h8_182 * 2;
  h9_193 = h9_183 * 2;
  carry0_194 = h0_184 + 33554432;
  _59 = carry0_194 >> 26;
  h1_195 = _59 + h1_185;
  _60 = carry0_194 & -67108864;
  h0_196 = h0_184 - _60;
  carry4_197 = h4_188 + 33554432;
  _61 = carry4_197 >> 26;
  h5_198 = _61 + h5_189;
  _62 = carry4_197 & -67108864;
  h4_199 = h4_188 - _62;
  carry1_200 = h1_195 + 16777216;
  _63 = carry1_200 >> 25;
  h2_201 = _63 + h2_186;
  _64 = carry1_200 & -33554432;
  h1_202 = h1_195 - _64;
  carry5_203 = h5_198 + 16777216;
  _65 = carry5_203 >> 25;
  h6_204 = _65 + h6_190;
  _66 = carry5_203 & -33554432;
  h5_205 = h5_198 - _66;
  carry2_206 = h2_201 + 33554432;
  _67 = carry2_206 >> 26;
  h3_207 = _67 + h3_187;
  _68 = carry2_206 & -67108864;
  h2_208 = h2_201 - _68;
  carry6_209 = h6_204 + 33554432;
  _69 = carry6_209 >> 26;
  h7_210 = _69 + h7_191;
  _70 = carry6_209 & -67108864;
  h6_211 = h6_204 - _70;
  carry3_212 = h3_207 + 16777216;
  _71 = carry3_212 >> 25;
  h4_213 = _71 + h4_199;
  _72 = carry3_212 & -33554432;
  h3_214 = h3_207 - _72;
  carry7_215 = h7_210 + 16777216;
  _73 = carry7_215 >> 25;
  h8_216 = _73 + h8_192;
  _74 = carry7_215 & -33554432;
  h7_217 = h7_210 - _74;
  carry4_218 = h4_213 + 33554432;
  _75 = carry4_218 >> 26;
  h5_219 = _75 + h5_205;
  _76 = carry4_218 & -67108864;
  h4_220 = h4_213 - _76;
  carry8_221 = h8_216 + 33554432;
  _77 = carry8_221 >> 26;
  h9_222 = _77 + h9_193;
  _78 = carry8_221 & -67108864;
  h8_223 = h8_216 - _78;
  carry9_224 = h9_222 + 16777216;
  _79 = carry9_224 >> 25;
  _80 = _79 * 19;
  h0_225 = _80 + h0_196;
  _81 = carry9_224 & -33554432;
  h9_226 = h9_222 - _81;
  carry0_227 = h0_225 + 33554432;
  _82 = carry0_227 >> 26;
  h1_228 = _82 + h1_202;
  _83 = carry0_227 & -67108864;
  h0_229 = h0_225 - _83;
  _84 = (int) h0_229;
  *h_230(D) = _84;
  _85 = (int) h1_228;
  MEM[(int32_t *)h_230(D) + 4B] = _85;
  _86 = (int) h2_208;
  MEM[(int32_t *)h_230(D) + 8B] = _86;
  _87 = (int) h3_214;
  MEM[(int32_t *)h_230(D) + 12B] = _87;
  _88 = (int) h4_220;
  MEM[(int32_t *)h_230(D) + 16B] = _88;
  _89 = (int) h5_219;
  MEM[(int32_t *)h_230(D) + 20B] = _89;
  _90 = (int) h6_211;
  MEM[(int32_t *)h_230(D) + 24B] = _90;
  _91 = (int) h7_217;
  MEM[(int32_t *)h_230(D) + 28B] = _91;
  _92 = (int) h8_223;
  MEM[(int32_t *)h_230(D) + 32B] = _92;
  _93 = (int) h9_226;
  MEM[(int32_t *)h_230(D) + 36B] = _93;
  return;

}



;; Function fe_pow22523 (fe_pow22523, funcdef_no=420, decl_uid=17829, cgraph_uid=421, symbol_order=426)

Removing basic block 17
Removing basic block 18
Removing basic block 19
Removing basic block 20
Removing basic block 21
Removing basic block 22
Removing basic block 23
__attribute__((access ("^0[10]^1[10]", )))
void fe_pow22523 (int32_t * out, const int32_t * z)
{
  int32_t t2[10];
  int32_t t1[10];
  int32_t t0[10];
  unsigned int ivtmp_4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_7;
  unsigned int ivtmp_8;
  unsigned int ivtmp_9;
  unsigned int ivtmp_13;
  unsigned int ivtmp_14;
  unsigned int ivtmp_15;
  unsigned int ivtmp_16;
  unsigned int ivtmp_17;
  unsigned int ivtmp_63;
  unsigned int ivtmp_65;
  unsigned int ivtmp_67;

  <bb 2> [local count: 10737416]:
  fe_sq (&t0, z_20(D));
  fe_sq (&t1, &t0);
  fe_sq (&t1, &t1);
  fe_mul (&t1, z_20(D), &t1);
  fe_mul (&t0, &t0, &t1);
  fe_sq (&t0, &t0);
  fe_mul (&t0, &t1, &t0);
  fe_sq (&t1, &t0);

  <bb 3> [local count: 42949663]:
  # ivtmp_13 = PHI <ivtmp_4(3), 4(2)>
  fe_sq (&t1, &t1);
  ivtmp_4 = ivtmp_13 + 4294967295;
  if (ivtmp_4 != 0)
    goto <bb 3>; [75.00%]
  else
    goto <bb 4>; [25.00%]

  <bb 4> [local count: 10737416]:
  fe_mul (&t0, &t1, &t0);
  fe_sq (&t1, &t0);

  <bb 5> [local count: 96636742]:
  # ivtmp_5 = PHI <ivtmp_63(5), 9(4)>
  fe_sq (&t1, &t1);
  ivtmp_63 = ivtmp_5 + 4294967295;
  if (ivtmp_63 != 0)
    goto <bb 5>; [88.89%]
  else
    goto <bb 6>; [11.11%]

  <bb 6> [local count: 10737416]:
  fe_mul (&t1, &t1, &t0);
  fe_sq (&t2, &t1);

  <bb 7> [local count: 204010917]:
  # ivtmp_9 = PHI <ivtmp_14(7), 19(6)>
  fe_sq (&t2, &t2);
  ivtmp_14 = ivtmp_9 + 4294967295;
  if (ivtmp_14 != 0)
    goto <bb 7>; [94.74%]
  else
    goto <bb 8>; [5.26%]

  <bb 8> [local count: 10737416]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t1, &t1);

  <bb 9> [local count: 96636742]:
  # ivtmp_15 = PHI <ivtmp_6(9), 9(8)>
  fe_sq (&t1, &t1);
  ivtmp_6 = ivtmp_15 + 4294967295;
  if (ivtmp_6 != 0)
    goto <bb 9>; [88.89%]
  else
    goto <bb 10>; [11.11%]

  <bb 10> [local count: 10737416]:
  fe_mul (&t0, &t1, &t0);
  fe_sq (&t1, &t0);

  <bb 11> [local count: 526133297]:
  # ivtmp_7 = PHI <ivtmp_65(11), 49(10)>
  fe_sq (&t1, &t1);
  ivtmp_65 = ivtmp_7 + 4294967295;
  if (ivtmp_65 != 0)
    goto <bb 11>; [97.96%]
  else
    goto <bb 12>; [2.04%]

  <bb 12> [local count: 10737416]:
  fe_mul (&t1, &t1, &t0);
  fe_sq (&t2, &t1);

  <bb 13> [local count: 1063004408]:
  # ivtmp_67 = PHI <ivtmp_16(13), 99(12)>
  fe_sq (&t2, &t2);
  ivtmp_16 = ivtmp_67 + 4294967295;
  if (ivtmp_16 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 14>; [1.01%]

  <bb 14> [local count: 10737416]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t1, &t1);

  <bb 15> [local count: 526133297]:
  # ivtmp_17 = PHI <ivtmp_8(15), 49(14)>
  fe_sq (&t1, &t1);
  ivtmp_8 = ivtmp_17 + 4294967295;
  if (ivtmp_8 != 0)
    goto <bb 15>; [97.96%]
  else
    goto <bb 16>; [2.04%]

  <bb 16> [local count: 10737416]:
  fe_mul (&t0, &t1, &t0);
  fe_sq (&t0, &t0);
  fe_sq (&t0, &t0);
  fe_mul (out_42(D), &t0, z_20(D));
  t0 ={v} {CLOBBER(eos)};
  t1 ={v} {CLOBBER(eos)};
  t2 ={v} {CLOBBER(eos)};
  return;

}



;; Function ge_tobytes (ge_tobytes, funcdef_no=421, decl_uid=17901, cgraph_uid=422, symbol_order=427)

void ge_tobytes (uint8_t * s, const struct ge_p2 * h)
{
  int32_t y[10];
  int32_t x[10];
  int32_t recip[10];
  const int32_t[10] * _1;
  const int32_t[10] * _2;
  const int32_t[10] * _3;
  int _4;
  unsigned char _5;
  unsigned char _6;
  unsigned char _18;
  unsigned char _19;

  <bb 2> [local count: 1073741824]:
  _1 = &h_7(D)->Z;
  fe_invert (&recip, _1);
  _2 = &h_7(D)->X;
  fe_mul (&x, _2, &recip);
  _3 = &h_7(D)->Y;
  fe_mul (&y, _3, &recip);
  fe_tobytes (s_12(D), &y);
  _4 = fe_isnegative (&x);
  _5 = MEM[(uint8_t *)s_12(D) + 31B];
  _18 = (unsigned char) _4;
  _19 = _18 << 7;
  _6 = _5 ^ _19;
  MEM[(uint8_t *)s_12(D) + 31B] = _6;
  recip ={v} {CLOBBER(eos)};
  x ={v} {CLOBBER(eos)};
  y ={v} {CLOBBER(eos)};
  return;

}



;; Function ge_p1p1_to_p2 (ge_p1p1_to_p2, funcdef_no=429, decl_uid=17944, cgraph_uid=430, symbol_order=438)

void ge_p1p1_to_p2 (struct ge_p2 * r, const struct ge_p1p1 * p)
{
  int32_t[10] * _1;
  const int32_t[10] * _2;
  const int32_t[10] * _3;
  int32_t[10] * _4;
  const int32_t[10] * _5;
  const int32_t[10] * _6;
  int32_t[10] * _7;

  <bb 2> [local count: 1073741824]:
  _1 = &r_8(D)->X;
  _2 = &p_9(D)->X;
  _3 = &p_9(D)->T;
  fe_mul (_1, _2, _3);
  _4 = &r_8(D)->Y;
  _5 = &p_9(D)->Y;
  _6 = &p_9(D)->Z;
  fe_mul (_4, _5, _6);
  _7 = &r_8(D)->Z;
  fe_mul (_7, _6, _3); [tail call]
  return;

}



;; Function ge_p1p1_to_p3 (ge_p1p1_to_p3, funcdef_no=430, decl_uid=17948, cgraph_uid=431, symbol_order=439)

void ge_p1p1_to_p3 (struct ge_p3 * r, const struct ge_p1p1 * p)
{
  int32_t[10] * _1;
  const int32_t[10] * _2;
  const int32_t[10] * _3;
  int32_t[10] * _4;
  const int32_t[10] * _5;
  const int32_t[10] * _6;
  int32_t[10] * _7;
  int32_t[10] * _8;

  <bb 2> [local count: 1073741824]:
  _1 = &r_9(D)->X;
  _2 = &p_10(D)->X;
  _3 = &p_10(D)->T;
  fe_mul (_1, _2, _3);
  _4 = &r_9(D)->Y;
  _5 = &p_10(D)->Y;
  _6 = &p_10(D)->Z;
  fe_mul (_4, _5, _6);
  _7 = &r_9(D)->Z;
  fe_mul (_7, _6, _3);
  _8 = &r_9(D)->T;
  fe_mul (_8, _2, _5); [tail call]
  return;

}



;; Function ge_p2_dbl (ge_p2_dbl, funcdef_no=431, decl_uid=17952, cgraph_uid=432, symbol_order=440)

void ge_p2_dbl (struct ge_p1p1 * r, const struct ge_p2 * p)
{
  int32_t t0[10];
  int32_t[10] * _1;
  const int32_t[10] * _2;
  int32_t[10] * _3;
  const int32_t[10] * _4;
  int32_t[10] * _5;
  const int32_t[10] * _6;
  int32_t[10] * _7;

  <bb 2> [local count: 1073741824]:
  _1 = &r_8(D)->X;
  _2 = &p_9(D)->X;
  fe_sq (_1, _2);
  _3 = &r_8(D)->Z;
  _4 = &p_9(D)->Y;
  fe_sq (_3, _4);
  _5 = &r_8(D)->T;
  _6 = &p_9(D)->Z;
  fe_sq2 (_5, _6);
  _7 = &r_8(D)->Y;
  fe_add (_7, _2, _4);
  fe_sq (&t0, _7);
  fe_add (_7, _3, _1);
  fe_sub (_3, _3, _1);
  fe_sub (_1, &t0, _7);
  fe_sub (_5, _5, _3); [tail call]
  t0 ={v} {CLOBBER(eos)};
  return;

}



;; Function ge_madd (ge_madd, funcdef_no=433, decl_uid=17963, cgraph_uid=434, symbol_order=442)

void ge_madd (struct ge_p1p1 * r, const struct ge_p3 * p, const struct ge_precomp * q)
{
  int32_t t0[10];
  int32_t[10] * _1;
  const int32_t[10] * _2;
  const int32_t[10] * _3;
  int32_t[10] * _4;
  int32_t[10] * _5;
  const int32_t[10] * _6;
  const int32_t[10] * _7;
  int32_t[10] * _8;
  const int32_t[10] * _9;
  const int32_t[10] * _10;
  const int32_t[10] * _11;

  <bb 2> [local count: 1073741824]:
  _1 = &r_12(D)->X;
  _2 = &p_13(D)->Y;
  _3 = &p_13(D)->X;
  fe_add (_1, _2, _3);
  _4 = &r_12(D)->Y;
  fe_sub (_4, _2, _3);
  _5 = &r_12(D)->Z;
  _6 = &q_17(D)->yplusx;
  fe_mul (_5, _1, _6);
  _7 = &q_17(D)->yminusx;
  fe_mul (_4, _4, _7);
  _8 = &r_12(D)->T;
  _9 = &q_17(D)->xy2d;
  _10 = &p_13(D)->T;
  fe_mul (_8, _9, _10);
  _11 = &p_13(D)->Z;
  fe_add (&t0, _11, _11);
  fe_sub (_1, _5, _4);
  fe_add (_4, _5, _4);
  fe_add (_5, &t0, _8);
  fe_sub (_8, &t0, _8);
  t0 ={v} {CLOBBER(eos)};
  return;

}



;; Function ge_msub (ge_msub, funcdef_no=434, decl_uid=17969, cgraph_uid=435, symbol_order=443)

void ge_msub (struct ge_p1p1 * r, const struct ge_p3 * p, const struct ge_precomp * q)
{
  int32_t t0[10];
  int32_t[10] * _1;
  const int32_t[10] * _2;
  const int32_t[10] * _3;
  int32_t[10] * _4;
  int32_t[10] * _5;
  const int32_t[10] * _6;
  const int32_t[10] * _7;
  int32_t[10] * _8;
  const int32_t[10] * _9;
  const int32_t[10] * _10;
  const int32_t[10] * _11;

  <bb 2> [local count: 1073741824]:
  _1 = &r_12(D)->X;
  _2 = &p_13(D)->Y;
  _3 = &p_13(D)->X;
  fe_add (_1, _2, _3);
  _4 = &r_12(D)->Y;
  fe_sub (_4, _2, _3);
  _5 = &r_12(D)->Z;
  _6 = &q_17(D)->yminusx;
  fe_mul (_5, _1, _6);
  _7 = &q_17(D)->yplusx;
  fe_mul (_4, _4, _7);
  _8 = &r_12(D)->T;
  _9 = &q_17(D)->xy2d;
  _10 = &p_13(D)->T;
  fe_mul (_8, _9, _10);
  _11 = &p_13(D)->Z;
  fe_add (&t0, _11, _11);
  fe_sub (_1, _5, _4);
  fe_add (_4, _5, _4);
  fe_sub (_5, &t0, _8);
  fe_add (_8, &t0, _8);
  t0 ={v} {CLOBBER(eos)};
  return;

}



;; Function ge_add (ge_add, funcdef_no=435, decl_uid=17975, cgraph_uid=436, symbol_order=444)

void ge_add (struct ge_p1p1 * r, const struct ge_p3 * p, const struct ge_cached * q)
{
  int32_t t0[10];
  int32_t[10] * _1;
  const int32_t[10] * _2;
  const int32_t[10] * _3;
  int32_t[10] * _4;
  int32_t[10] * _5;
  const int32_t[10] * _6;
  const int32_t[10] * _7;
  int32_t[10] * _8;
  const int32_t[10] * _9;
  const int32_t[10] * _10;
  const int32_t[10] * _11;
  const int32_t[10] * _12;

  <bb 2> [local count: 1073741824]:
  _1 = &r_13(D)->X;
  _2 = &p_14(D)->Y;
  _3 = &p_14(D)->X;
  fe_add (_1, _2, _3);
  _4 = &r_13(D)->Y;
  fe_sub (_4, _2, _3);
  _5 = &r_13(D)->Z;
  _6 = &q_18(D)->YplusX;
  fe_mul (_5, _1, _6);
  _7 = &q_18(D)->YminusX;
  fe_mul (_4, _4, _7);
  _8 = &r_13(D)->T;
  _9 = &q_18(D)->T2d;
  _10 = &p_14(D)->T;
  fe_mul (_8, _9, _10);
  _11 = &p_14(D)->Z;
  _12 = &q_18(D)->Z;
  fe_mul (_1, _11, _12);
  fe_add (&t0, _1, _1);
  fe_sub (_1, _5, _4);
  fe_add (_4, _5, _4);
  fe_add (_5, &t0, _8);
  fe_sub (_8, &t0, _8);
  t0 ={v} {CLOBBER(eos)};
  return;

}



;; Function ge_sub (ge_sub, funcdef_no=436, decl_uid=17981, cgraph_uid=437, symbol_order=445)

void ge_sub (struct ge_p1p1 * r, const struct ge_p3 * p, const struct ge_cached * q)
{
  int32_t t0[10];
  int32_t[10] * _1;
  const int32_t[10] * _2;
  const int32_t[10] * _3;
  int32_t[10] * _4;
  int32_t[10] * _5;
  const int32_t[10] * _6;
  const int32_t[10] * _7;
  int32_t[10] * _8;
  const int32_t[10] * _9;
  const int32_t[10] * _10;
  const int32_t[10] * _11;
  const int32_t[10] * _12;

  <bb 2> [local count: 1073741824]:
  _1 = &r_13(D)->X;
  _2 = &p_14(D)->Y;
  _3 = &p_14(D)->X;
  fe_add (_1, _2, _3);
  _4 = &r_13(D)->Y;
  fe_sub (_4, _2, _3);
  _5 = &r_13(D)->Z;
  _6 = &q_18(D)->YminusX;
  fe_mul (_5, _1, _6);
  _7 = &q_18(D)->YplusX;
  fe_mul (_4, _4, _7);
  _8 = &r_13(D)->T;
  _9 = &q_18(D)->T2d;
  _10 = &p_14(D)->T;
  fe_mul (_8, _9, _10);
  _11 = &p_14(D)->Z;
  _12 = &q_18(D)->Z;
  fe_mul (_1, _11, _12);
  fe_add (&t0, _1, _1);
  fe_sub (_1, _5, _4);
  fe_add (_4, _5, _4);
  fe_sub (_5, &t0, _8);
  fe_add (_8, &t0, _8);
  t0 ={v} {CLOBBER(eos)};
  return;

}



;; Function equal (equal, funcdef_no=437, decl_uid=17986, cgraph_uid=438, symbol_order=446)

uint8_t equal (signed char b, signed char c)
{
  uint32_t y;
  uint8_t x;
  uint8_t _7;
  signed char _9;

  <bb 2> [local count: 1073741824]:
  _9 = b_1(D) ^ c_2(D);
  x_3 = (uint8_t) _9;
  y_4 = (uint32_t) x_3;
  y_5 = y_4 + 4294967295;
  y_6 = y_5 >> 31;
  _7 = (uint8_t) y_6;
  return _7;

}



;; Function cmov (cmov, funcdef_no=438, decl_uid=17995, cgraph_uid=439, symbol_order=447)

void cmov (struct ge_precomp * t, const struct ge_precomp * u, uint8_t b)
{
  int32_t[10] * _1;
  const int32_t[10] * _2;
  unsigned int _3;
  int32_t[10] * _4;
  const int32_t[10] * _5;
  int32_t[10] * _6;
  const int32_t[10] * _7;

  <bb 2> [local count: 1073741824]:
  _1 = &t_8(D)->yplusx;
  _2 = &u_9(D)->yplusx;
  _3 = (unsigned int) b_10(D);
  fe_cmov (_1, _2, _3);
  _4 = &t_8(D)->yminusx;
  _5 = &u_9(D)->yminusx;
  fe_cmov (_4, _5, _3);
  _6 = &t_8(D)->xy2d;
  _7 = &u_9(D)->xy2d;
  fe_cmov (_6, _7, _3); [tail call]
  return;

}



;; Function negative (negative, funcdef_no=439, decl_uid=17999, cgraph_uid=440, symbol_order=449)

uint8_t negative (signed char b)
{
  uint32_t x;
  uint8_t _4;

  <bb 2> [local count: 1073741824]:
  x_2 = (uint32_t) b_1(D);
  x_3 = x_2 >> 31;
  _4 = (uint8_t) x_3;
  return _4;

}



;; Function slide (slide, funcdef_no=442, decl_uid=18038, cgraph_uid=443, symbol_order=452)

Removing basic block 19
Removing basic block 20
Removing basic block 21
Removing basic block 22
Removing basic block 23
Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 27
Removing basic block 28
Removing basic block 29
void slide (signed char * r, const uint8_t * a)
{
  unsigned long ivtmp.483;
  unsigned long ivtmp.475;
  unsigned long ivtmp.467;
  unsigned long ivtmp.454;
  int b;
  int i;
  int _1;
  sizetype _2;
  const uint8_t * _3;
  unsigned char _4;
  int _5;
  int _6;
  int _7;
  signed char _8;
  signed char _11;
  signed char _14;
  signed char _17;
  signed char _18;
  int _19;
  int _20;
  int _21;
  int _22;
  unsigned char _23;
  unsigned char _24;
  unsigned char _25;
  signed char _26;
  int _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  signed char _31;
  signed char * _33;
  signed char _34;
  void * _36;
  unsigned long _41;
  unsigned long _44;
  unsigned long _45;
  unsigned int _59;
  unsigned long _91;
  unsigned int _97;
  unsigned int _103;
  unsigned long _106;
  unsigned long _108;
  unsigned int _109;
  unsigned int _111;
  int _112;

  <bb 2> [local count: 7136364]:

  <bb 3> [local count: 706500176]:
  # ivtmp.483_115 = PHI <ivtmp.483_116(3), 0(2)>
  i_67 = (int) ivtmp.483_115;
  _1 = i_67 >> 3;
  _2 = (sizetype) _1;
  _3 = a_56(D) + _2;
  _4 = *_3;
  _5 = (int) _4;
  _6 = i_67 & 7;
  _7 = _5 >> _6;
  _8 = (signed char) _7;
  _11 = _8 & 1;
  MEM[(signed char *)r_47(D) + ivtmp.483_115 * 1] = _11;
  ivtmp.483_116 = ivtmp.483_115 + 1;
  if (ivtmp.483_116 != 256)
    goto <bb 3>; [98.99%]
  else
    goto <bb 4>; [1.01%]

  <bb 4> [local count: 706500440]:
  # ivtmp.475_104 = PHI <ivtmp.475_105(6), 0(3)>
  _14 = MEM[(signed char *)r_47(D) + ivtmp.475_104 * 1];
  if (_14 != 0)
    goto <bb 5>; [27.00%]
  else
    goto <bb 6>; [73.00%]

  <bb 5> [local count: 190755121]:
  _106 = (unsigned long) r_47(D);
  _44 = _106 + 1;
  _108 = _44 + ivtmp.475_104;
  goto <bb 17>; [100.00%]

  <bb 6> [local count: 706500443]:
  ivtmp.475_105 = ivtmp.475_104 + 1;
  if (ivtmp.475_105 != 256)
    goto <bb 4>; [98.99%]
  else
    goto <bb 18>; [1.01%]

  <bb 7> [local count: 883164785]:
  _36 = (void *) ivtmp.467_40;
  _17 = MEM[(signed char *)_36];
  if (_17 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 8> [local count: 441582393]:
  _18 = MEM[(signed char *)r_47(D) + ivtmp.475_104 * 1];
  _19 = (int) _18;
  _20 = (int) _17;
  _21 = _20 << b_69;
  _22 = _19 + _21;
  if (_22 <= 15)
    goto <bb 9>; [73.00%]
  else
    goto <bb 10>; [27.00%]

  <bb 9> [local count: 322355145]:
  _23 = (unsigned char) _18;
  _24 = (unsigned char) _21;
  _25 = _23 + _24;
  _26 = (signed char) _25;
  MEM[(signed char *)r_47(D) + ivtmp.475_104 * 1] = _26;
  MEM[(signed char *)_36] = 0;
  goto <bb 16>; [100.00%]

  <bb 10> [local count: 119227247]:
  _27 = _19 - _21;
  if (_27 >= -15)
    goto <bb 11>; [96.34%]
  else
    goto <bb 6>; [3.66%]

  <bb 11> [local count: 114863530]:
  _28 = (unsigned char) _18;
  _29 = (unsigned char) _21;
  _30 = _28 - _29;
  _31 = (signed char) _30;
  MEM[(signed char *)r_47(D) + ivtmp.475_104 * 1] = _31;
  _103 = 255 - _109;
  _97 = (unsigned int) b_69;
  _59 = _103 - _97;
  _45 = (unsigned long) _59;
  _91 = ivtmp.467_40 + 1;
  _41 = _45 + _91;

  <bb 12> [local count: 1014686024]:
  # ivtmp.454_78 = PHI <ivtmp.454_77(14), ivtmp.467_40(11)>
  _33 = (signed char *) ivtmp.454_78;
  _34 = MEM[(signed char *)_33];
  if (_34 == 0)
    goto <bb 13>; [5.50%]
  else
    goto <bb 14>; [94.50%]

  <bb 13> [local count: 55807731]:
  *_33 = 1;
  goto <bb 16>; [100.00%]

  <bb 14> [local count: 958878294]:
  MEM[(signed char *)_33] = 0;
  ivtmp.454_77 = ivtmp.454_78 + 1;
  if (_41 != ivtmp.454_77)
    goto <bb 12>; [93.84%]
  else
    goto <bb 15>; [6.16%]

  <bb 15> [local count: 500638194]:

  <bb 16> [local count: 878801069]:
  b_54 = b_69 + 1;
  ivtmp.467_39 = ivtmp.467_40 + 1;
  if (b_54 != 7)
    goto <bb 17>; [82.61%]
  else
    goto <bb 6>; [17.39%]

  <bb 17> [local count: 916716614]:
  # b_69 = PHI <b_54(16), 1(5)>
  # ivtmp.467_40 = PHI <ivtmp.467_39(16), _108(5)>
  _109 = (unsigned int) ivtmp.475_104;
  _111 = 256 - _109;
  _112 = (int) _111;
  if (b_69 != _112)
    goto <bb 7>; [96.34%]
  else
    goto <bb 6>; [3.66%]

  <bb 18> [local count: 7136367]:
  return;

}



;; Function x25519_sc_reduce (x25519_sc_reduce, funcdef_no=444, decl_uid=18082, cgraph_uid=445, symbol_order=455)

void x25519_sc_reduce (uint8_t * s)
{
  int64_t carry16;
  int64_t carry15;
  int64_t carry14;
  int64_t carry13;
  int64_t carry12;
  int64_t carry11;
  int64_t carry10;
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t s23;
  int64_t s22;
  int64_t s21;
  int64_t s20;
  int64_t s19;
  int64_t s18;
  int64_t s17;
  int64_t s16;
  int64_t s15;
  int64_t s14;
  int64_t s13;
  int64_t s12;
  int64_t s11;
  int64_t s10;
  int64_t s9;
  int64_t s8;
  int64_t s7;
  int64_t s6;
  int64_t s5;
  int64_t s4;
  int64_t s3;
  int64_t s2;
  int64_t s1;
  int64_t s0;
  long unsigned int _1;
  uint8_t * _2;
  long unsigned int _3;
  long unsigned int _4;
  uint8_t * _5;
  long unsigned int _6;
  long unsigned int _7;
  uint8_t * _8;
  long unsigned int _9;
  long unsigned int _10;
  uint8_t * _11;
  long unsigned int _12;
  long unsigned int _13;
  uint8_t * _14;
  long unsigned int _15;
  long unsigned int _16;
  uint8_t * _17;
  long unsigned int _18;
  long unsigned int _19;
  uint8_t * _20;
  long unsigned int _21;
  long unsigned int _22;
  uint8_t * _23;
  long unsigned int _24;
  uint8_t * _25;
  long unsigned int _26;
  long unsigned int _27;
  uint8_t * _28;
  long unsigned int _29;
  long unsigned int _30;
  uint8_t * _31;
  long unsigned int _32;
  long unsigned int _33;
  uint8_t * _34;
  long unsigned int _35;
  long unsigned int _36;
  uint8_t * _37;
  long unsigned int _38;
  long unsigned int _39;
  uint8_t * _40;
  long unsigned int _41;
  long unsigned int _42;
  uint8_t * _43;
  long unsigned int _44;
  long unsigned int _45;
  uint8_t * _46;
  long unsigned int _47;
  uint8_t * _48;
  long unsigned int _49;
  long unsigned int _50;
  uint8_t * _51;
  long unsigned int _52;
  long unsigned int _53;
  uint8_t * _54;
  long unsigned int _55;
  long unsigned int _56;
  uint8_t * _57;
  long unsigned int _58;
  long unsigned int _59;
  uint8_t * _60;
  long unsigned int _61;
  long unsigned int _62;
  uint8_t * _63;
  long unsigned int _64;
  long unsigned int _65;
  uint8_t * _66;
  long unsigned int _67;
  long unsigned int _68;
  long int _105;
  long int _107;
  long int _109;
  long int _110;
  long int _111;
  long int _112;
  long int _113;
  long int _114;
  long int _115;
  long int _116;
  long int _117;
  long int _119;
  long int _120;
  long int _121;
  long int _122;
  long int _123;
  long int _124;
  long int _125;
  long int _126;
  long int _127;
  long int _128;
  long int _129;
  long int _130;
  long int _131;
  long int _132;
  long int _133;
  long int _134;
  long int _135;
  long int _136;
  long int _137;
  long int _138;
  long int _139;
  long int _140;
  long int _141;
  long int _142;
  long int _143;
  long int _144;
  long int _145;
  long int _146;
  long int _147;
  long int _148;
  long int _149;
  long int _150;
  long int _151;
  long int _152;
  long int _153;
  long int _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  long int _159;
  long int _160;
  long int _161;
  long int _162;
  long int _163;
  long int _164;
  long int _165;
  long int _166;
  long int _167;
  long int _168;
  long int _169;
  long int _170;
  long int _171;
  long int _172;
  long int _173;
  long int _174;
  long int _175;
  long int _176;
  long int _177;
  long int _178;
  long int _179;
  long int _180;
  long int _181;
  long int _182;
  long int _183;
  long int _184;
  long int _185;
  long int _186;
  long int _187;
  long int _188;
  long int _189;
  long int _190;
  long int _191;
  long int _192;
  long int _193;
  long int _194;
  long int _195;
  long int _196;
  long int _197;
  long int _198;
  long int _199;
  long int _200;
  long int _201;
  long int _202;
  long int _203;
  long int _204;
  long int _205;
  long int _206;
  long int _207;
  long int _208;
  long int _209;
  long int _210;
  long int _211;
  long int _212;
  long int _213;
  long int _214;
  long int _215;
  long int _216;
  long int _217;
  long int _218;
  long int _219;
  long int _220;
  long int _221;
  unsigned char _222;
  long int _223;
  unsigned char _224;
  long int _225;
  signed char _226;
  signed char _227;
  signed char _228;
  signed char _229;
  unsigned char _230;
  long int _231;
  unsigned char _232;
  long int _233;
  unsigned char _234;
  long int _235;
  signed char _236;
  signed char _237;
  signed char _238;
  signed char _239;
  unsigned char _240;
  long int _241;
  unsigned char _242;
  long int _243;
  signed char _244;
  signed char _245;
  signed char _246;
  signed char _247;
  unsigned char _248;
  long int _249;
  unsigned char _250;
  long int _251;
  unsigned char _252;
  long int _253;
  signed char _254;
  signed char _255;
  signed char _256;
  signed char _257;
  unsigned char _258;
  long int _259;
  unsigned char _260;
  long int _261;
  unsigned char _262;
  long int _263;
  signed char _264;
  signed char _265;
  signed char _266;
  signed char _267;
  unsigned char _268;
  long int _269;
  unsigned char _270;
  long int _271;
  signed char _272;
  signed char _273;
  signed char _274;
  signed char _275;
  unsigned char _276;
  long int _277;
  unsigned char _278;
  long int _279;
  unsigned char _280;
  long int _281;
  signed char _282;
  signed char _283;
  signed char _284;
  signed char _285;
  unsigned char _286;
  long int _287;
  unsigned char _288;
  long int _289;
  unsigned char _290;
  unsigned char _291;
  long int _292;
  unsigned char _293;
  long int _294;
  signed char _295;
  signed char _296;
  signed char _297;
  signed char _298;
  unsigned char _299;
  long int _300;
  unsigned char _301;
  long int _302;
  unsigned char _303;
  long int _304;
  signed char _305;
  signed char _306;
  signed char _307;
  signed char _308;
  unsigned char _309;
  long int _310;
  unsigned char _311;
  long int _312;
  signed char _313;
  signed char _314;
  signed char _315;
  signed char _316;
  unsigned char _317;
  long int _318;
  unsigned char _319;
  long int _320;
  unsigned char _321;
  long int _322;
  unsigned char _323;
  long unsigned int _343;
  long unsigned int _345;
  long unsigned int _347;
  long unsigned int _349;
  long unsigned int _351;
  long unsigned int _353;
  long unsigned int _355;
  long unsigned int _370;
  long unsigned int _377;
  long unsigned int _384;
  long unsigned int _391;
  long unsigned int _398;
  long unsigned int _438;
  long unsigned int _445;
  long unsigned int _459;
  long unsigned int _466;
  long unsigned int _473;
  long unsigned int _508;
  long unsigned int _516;
  long unsigned int _551;
  long unsigned int _559;
  signed int _2080;
  signed int _2081;
  signed int _2082;
  signed int _2083;
  signed int _2084;
  signed int _2085;
  signed int _2086;
  signed int _2087;
  long int _2088;
  signed int _2089;
  signed int _2090;
  signed int _2091;
  signed int _2092;
  signed int _2093;
  signed int _2094;
  long int _2095;
  signed int _2096;
  signed int _2097;
  signed int _2098;
  signed int _2099;
  signed int _2100;
  signed int _2101;
  long int _2102;
  signed int _2103;
  signed int _2104;
  signed int _2105;
  signed int _2106;
  signed int _2107;
  signed int _2108;
  long int _2109;
  signed int _2110;
  signed int _2111;
  signed int _2112;
  signed int _2113;
  signed int _2114;
  signed int _2115;
  long int _2116;
  signed int _2117;
  long int _2118;
  signed int _2119;
  long int _2120;
  signed int _2121;
  long int _2122;
  signed int _2123;
  long int _2124;
  signed int _2125;
  long int _2126;
  signed int _2127;
  vector(16) unsigned char _2128;
  vector(16) unsigned char _2129;
  long int _2130;
  signed int _2132;

  <bb 2> [local count: 1073741824]:
  _1 = load_3 (s_325(D));
  _559 = _1 & 2097151;
  s0_326 = (int64_t) _559;
  _2 = s_325(D) + 2;
  _3 = load_4 (_2);
  _4 = _3 >> 5;
  _516 = _4 & 2097151;
  s1_327 = (int64_t) _516;
  _5 = s_325(D) + 5;
  _6 = load_3 (_5);
  _7 = _6 >> 2;
  _551 = _7 & 2097151;
  s2_328 = (int64_t) _551;
  _8 = s_325(D) + 7;
  _9 = load_4 (_8);
  _10 = _9 >> 7;
  _473 = _10 & 2097151;
  s3_329 = (int64_t) _473;
  _11 = s_325(D) + 10;
  _12 = load_4 (_11);
  _13 = _12 >> 4;
  _508 = _13 & 2097151;
  s4_330 = (int64_t) _508;
  _14 = s_325(D) + 13;
  _15 = load_3 (_14);
  _16 = _15 >> 1;
  _466 = _16 & 2097151;
  s5_331 = (int64_t) _466;
  _17 = s_325(D) + 15;
  _18 = load_4 (_17);
  _19 = _18 >> 6;
  _459 = _19 & 2097151;
  _20 = s_325(D) + 18;
  _21 = load_3 (_20);
  _22 = _21 >> 3;
  _23 = s_325(D) + 21;
  _24 = load_3 (_23);
  _445 = _24 & 2097151;
  _25 = s_325(D) + 23;
  _26 = load_4 (_25);
  _27 = _26 >> 5;
  _438 = _27 & 2097151;
  _28 = s_325(D) + 26;
  _29 = load_3 (_28);
  _30 = _29 >> 2;
  _398 = _30 & 2097151;
  _31 = s_325(D) + 28;
  _32 = load_4 (_31);
  _33 = _32 >> 7;
  _391 = _33 & 2097151;
  _34 = s_325(D) + 31;
  _35 = load_4 (_34);
  _36 = _35 >> 4;
  _384 = _36 & 2097151;
  _37 = s_325(D) + 34;
  _38 = load_3 (_37);
  _39 = _38 >> 1;
  _377 = _39 & 2097151;
  _40 = s_325(D) + 36;
  _41 = load_4 (_40);
  _42 = _41 >> 6;
  _370 = _42 & 2097151;
  _43 = s_325(D) + 39;
  _44 = load_3 (_43);
  _45 = _44 >> 3;
  _46 = s_325(D) + 42;
  _47 = load_3 (_46);
  _355 = _47 & 2097151;
  _48 = s_325(D) + 44;
  _49 = load_4 (_48);
  _50 = _49 >> 5;
  _353 = _50 & 2097151;
  s17_344 = (int64_t) _353;
  _51 = s_325(D) + 47;
  _52 = load_3 (_51);
  _53 = _52 >> 2;
  _351 = _53 & 2097151;
  s18_346 = (int64_t) _351;
  _54 = s_325(D) + 49;
  _55 = load_4 (_54);
  _56 = _55 >> 7;
  _349 = _56 & 2097151;
  s19_348 = (int64_t) _349;
  _57 = s_325(D) + 52;
  _58 = load_4 (_57);
  _59 = _58 >> 4;
  _347 = _59 & 2097151;
  s20_350 = (int64_t) _347;
  _60 = s_325(D) + 55;
  _61 = load_3 (_60);
  _62 = _61 >> 1;
  _345 = _62 & 2097151;
  s21_352 = (int64_t) _345;
  _63 = s_325(D) + 57;
  _64 = load_4 (_63);
  _65 = _64 >> 6;
  _343 = _65 & 2097151;
  s22_354 = (int64_t) _343;
  _66 = s_325(D) + 60;
  _67 = load_4 (_66);
  _68 = _67 >> 3;
  s23_356 = (int64_t) _68;
  _2132 = (signed int) s23_356;
  _2130 = (long int) _391;
  s11_357 = WIDEN_MULT_PLUS_EXPR <_2132, 666643, _2130>;
  _2127 = (signed int) s23_356;
  _2126 = (long int) _384;
  s12_358 = WIDEN_MULT_PLUS_EXPR <_2127, 470296, _2126>;
  _2125 = (signed int) s23_356;
  _2124 = (long int) _377;
  s13_359 = WIDEN_MULT_PLUS_EXPR <_2125, 654183, _2124>;
  _2123 = (signed int) s23_356;
  _2122 = (long int) _370;
  s14_360 = WIDEN_MULT_PLUS_EXPR <_2123, -997805, _2122>;
  _2121 = (signed int) s23_356;
  _2120 = (long int) _45;
  s15_361 = WIDEN_MULT_PLUS_EXPR <_2121, 136657, _2120>;
  _2119 = (signed int) s23_356;
  _2118 = (long int) _355;
  s16_362 = WIDEN_MULT_PLUS_EXPR <_2119, -683901, _2118>;
  _2117 = (signed int) s22_354;
  _2116 = (long int) _398;
  s10_364 = WIDEN_MULT_PLUS_EXPR <_2117, 666643, _2116>;
  _2115 = (signed int) s22_354;
  s11_365 = WIDEN_MULT_PLUS_EXPR <_2115, 470296, s11_357>;
  _2114 = (signed int) s22_354;
  s12_366 = WIDEN_MULT_PLUS_EXPR <_2114, 654183, s12_358>;
  _2113 = (signed int) s22_354;
  s13_367 = WIDEN_MULT_PLUS_EXPR <_2113, -997805, s13_359>;
  _2112 = (signed int) s22_354;
  s14_368 = WIDEN_MULT_PLUS_EXPR <_2112, 136657, s14_360>;
  _2111 = (signed int) s22_354;
  s15_369 = WIDEN_MULT_PLUS_EXPR <_2111, -683901, s15_361>;
  _2110 = (signed int) s21_352;
  _2109 = (long int) _438;
  s9_371 = WIDEN_MULT_PLUS_EXPR <_2110, 666643, _2109>;
  _2108 = (signed int) s21_352;
  s10_372 = WIDEN_MULT_PLUS_EXPR <_2108, 470296, s10_364>;
  _2107 = (signed int) s21_352;
  s11_373 = WIDEN_MULT_PLUS_EXPR <_2107, 654183, s11_365>;
  _2106 = (signed int) s21_352;
  s12_374 = WIDEN_MULT_PLUS_EXPR <_2106, -997805, s12_366>;
  _2105 = (signed int) s21_352;
  s13_375 = WIDEN_MULT_PLUS_EXPR <_2105, 136657, s13_367>;
  _2104 = (signed int) s21_352;
  s14_376 = WIDEN_MULT_PLUS_EXPR <_2104, -683901, s14_368>;
  _2103 = (signed int) s20_350;
  _2102 = (long int) _445;
  s8_378 = WIDEN_MULT_PLUS_EXPR <_2103, 666643, _2102>;
  _2101 = (signed int) s20_350;
  s9_379 = WIDEN_MULT_PLUS_EXPR <_2101, 470296, s9_371>;
  _2100 = (signed int) s20_350;
  s10_380 = WIDEN_MULT_PLUS_EXPR <_2100, 654183, s10_372>;
  _2099 = (signed int) s20_350;
  s11_381 = WIDEN_MULT_PLUS_EXPR <_2099, -997805, s11_373>;
  _2098 = (signed int) s20_350;
  s12_382 = WIDEN_MULT_PLUS_EXPR <_2098, 136657, s12_374>;
  _2097 = (signed int) s20_350;
  s13_383 = WIDEN_MULT_PLUS_EXPR <_2097, -683901, s13_375>;
  _2096 = (signed int) s19_348;
  _2095 = (long int) _22;
  s7_385 = WIDEN_MULT_PLUS_EXPR <_2096, 666643, _2095>;
  _2094 = (signed int) s19_348;
  s8_386 = WIDEN_MULT_PLUS_EXPR <_2094, 470296, s8_378>;
  _2093 = (signed int) s19_348;
  s9_387 = WIDEN_MULT_PLUS_EXPR <_2093, 654183, s9_379>;
  _2092 = (signed int) s19_348;
  s10_388 = WIDEN_MULT_PLUS_EXPR <_2092, -997805, s10_380>;
  _2091 = (signed int) s19_348;
  s11_389 = WIDEN_MULT_PLUS_EXPR <_2091, 136657, s11_381>;
  _2090 = (signed int) s19_348;
  s12_390 = WIDEN_MULT_PLUS_EXPR <_2090, -683901, s12_382>;
  _2089 = (signed int) s18_346;
  _2088 = (long int) _459;
  s6_392 = WIDEN_MULT_PLUS_EXPR <_2089, 666643, _2088>;
  _2087 = (signed int) s18_346;
  s7_393 = WIDEN_MULT_PLUS_EXPR <_2087, 470296, s7_385>;
  _2086 = (signed int) s18_346;
  s8_394 = WIDEN_MULT_PLUS_EXPR <_2086, 654183, s8_386>;
  _2085 = (signed int) s18_346;
  s9_395 = WIDEN_MULT_PLUS_EXPR <_2085, -997805, s9_387>;
  _2084 = (signed int) s18_346;
  s10_396 = WIDEN_MULT_PLUS_EXPR <_2084, 136657, s10_388>;
  _2083 = (signed int) s18_346;
  s11_397 = WIDEN_MULT_PLUS_EXPR <_2083, -683901, s11_389>;
  _105 = s6_392 + 1048576;
  carry6_399 = _105 >> 21;
  s7_400 = s7_393 + carry6_399;
  _2082 = (signed int) carry6_399;
  s6_401 = WIDEN_MULT_MINUS_EXPR <_2082, 2097152, s6_392>;
  _107 = s8_394 + 1048576;
  carry8_402 = _107 >> 21;
  s9_403 = s9_395 + carry8_402;
  _2081 = (signed int) carry8_402;
  s8_404 = WIDEN_MULT_MINUS_EXPR <_2081, 2097152, s8_394>;
  _109 = s10_396 + 1048576;
  carry10_405 = _109 >> 21;
  s11_406 = s11_397 + carry10_405;
  _110 = carry10_405 * 2097152;
  s10_407 = s10_396 - _110;
  _111 = s12_390 + 1048576;
  carry12_408 = _111 >> 21;
  s13_409 = s13_383 + carry12_408;
  _112 = carry12_408 * 2097152;
  s12_410 = s12_390 - _112;
  _113 = s14_376 + 1048576;
  carry14_411 = _113 >> 21;
  s15_412 = s15_369 + carry14_411;
  _114 = carry14_411 * 2097152;
  s14_413 = s14_376 - _114;
  _115 = s16_362 + 1048576;
  carry16_414 = _115 >> 21;
  s17_415 = s17_344 + carry16_414;
  _116 = carry16_414 * 2097152;
  s16_416 = s16_362 - _116;
  _117 = s7_400 + 1048576;
  carry7_417 = _117 >> 21;
  s8_418 = s8_404 + carry7_417;
  _2080 = (signed int) carry7_417;
  s7_419 = WIDEN_MULT_MINUS_EXPR <_2080, 2097152, s7_400>;
  _119 = s9_403 + 1048576;
  carry9_420 = _119 >> 21;
  s10_421 = s10_407 + carry9_420;
  _120 = carry9_420 * 2097152;
  s9_422 = s9_403 - _120;
  _121 = s11_406 + 1048576;
  carry11_423 = _121 >> 21;
  s12_424 = s12_410 + carry11_423;
  _122 = carry11_423 * 2097152;
  s11_425 = s11_406 - _122;
  _123 = s13_409 + 1048576;
  carry13_426 = _123 >> 21;
  s14_427 = s14_413 + carry13_426;
  _124 = carry13_426 * 2097152;
  s13_428 = s13_409 - _124;
  _125 = s15_412 + 1048576;
  carry15_429 = _125 >> 21;
  s16_430 = s16_416 + carry15_429;
  _126 = carry15_429 * 2097152;
  s15_431 = s15_412 - _126;
  _127 = s17_415 * 666643;
  s5_432 = _127 + s5_331;
  _128 = s17_415 * 470296;
  s6_433 = _128 + s6_401;
  _129 = s17_415 * 654183;
  s7_434 = _129 + s7_419;
  _130 = s17_415 * -997805;
  s8_435 = _130 + s8_418;
  _131 = s17_415 * 136657;
  s9_436 = _131 + s9_422;
  _132 = s17_415 * -683901;
  s10_437 = _132 + s10_421;
  _133 = s16_430 * 666643;
  s4_439 = _133 + s4_330;
  _134 = s16_430 * 470296;
  s5_440 = _134 + s5_432;
  _135 = s16_430 * 654183;
  s6_441 = _135 + s6_433;
  _136 = s16_430 * -997805;
  s7_442 = _136 + s7_434;
  _137 = s16_430 * 136657;
  s8_443 = _137 + s8_435;
  _138 = s16_430 * -683901;
  s9_444 = _138 + s9_436;
  _139 = s15_431 * 666643;
  s3_446 = _139 + s3_329;
  _140 = s15_431 * 470296;
  s4_447 = _140 + s4_439;
  _141 = s15_431 * 654183;
  s5_448 = _141 + s5_440;
  _142 = s15_431 * -997805;
  s6_449 = _142 + s6_441;
  _143 = s15_431 * 136657;
  s7_450 = _143 + s7_442;
  _144 = s15_431 * -683901;
  s8_451 = _144 + s8_443;
  _145 = s14_427 * 666643;
  s2_453 = _145 + s2_328;
  _146 = s14_427 * 470296;
  s3_454 = _146 + s3_446;
  _147 = s14_427 * 654183;
  s4_455 = _147 + s4_447;
  _148 = s14_427 * -997805;
  s5_456 = _148 + s5_448;
  _149 = s14_427 * 136657;
  s6_457 = _149 + s6_449;
  _150 = s14_427 * -683901;
  s7_458 = _150 + s7_450;
  _151 = s13_428 * 666643;
  s1_460 = _151 + s1_327;
  _152 = s13_428 * 470296;
  s2_461 = _152 + s2_453;
  _153 = s13_428 * 654183;
  s3_462 = _153 + s3_454;
  _154 = s13_428 * -997805;
  s4_463 = _154 + s4_455;
  _155 = s13_428 * 136657;
  s5_464 = _155 + s5_456;
  _156 = s13_428 * -683901;
  s6_465 = _156 + s6_457;
  _157 = s12_424 * 666643;
  s0_467 = _157 + s0_326;
  _158 = s12_424 * 470296;
  s1_468 = _158 + s1_460;
  _159 = s12_424 * 654183;
  s2_469 = _159 + s2_461;
  _160 = s12_424 * -997805;
  s3_470 = _160 + s3_462;
  _161 = s12_424 * 136657;
  s4_471 = _161 + s4_463;
  _162 = s12_424 * -683901;
  s5_472 = _162 + s5_464;
  _163 = s0_467 + 1048576;
  carry0_474 = _163 >> 21;
  s1_475 = s1_468 + carry0_474;
  _164 = carry0_474 * 2097152;
  s0_476 = s0_467 - _164;
  _165 = s2_469 + 1048576;
  carry2_477 = _165 >> 21;
  s3_478 = s3_470 + carry2_477;
  _166 = carry2_477 * 2097152;
  s2_479 = s2_469 - _166;
  _167 = s4_471 + 1048576;
  carry4_480 = _167 >> 21;
  s5_481 = s5_472 + carry4_480;
  _168 = carry4_480 * 2097152;
  s4_482 = s4_471 - _168;
  _169 = s6_465 + 1048576;
  carry6_483 = _169 >> 21;
  s7_484 = s7_458 + carry6_483;
  _170 = carry6_483 * 2097152;
  s6_485 = s6_465 - _170;
  _171 = s8_451 + 1048576;
  carry8_486 = _171 >> 21;
  s9_487 = s9_444 + carry8_486;
  _172 = carry8_486 * 2097152;
  s8_488 = s8_451 - _172;
  _173 = s10_437 + 1048576;
  carry10_489 = _173 >> 21;
  s11_490 = s11_425 + carry10_489;
  _174 = carry10_489 * 2097152;
  s10_491 = s10_437 - _174;
  _175 = s1_475 + 1048576;
  carry1_492 = _175 >> 21;
  s2_493 = s2_479 + carry1_492;
  _176 = carry1_492 * 2097152;
  s1_494 = s1_475 - _176;
  _177 = s3_478 + 1048576;
  carry3_495 = _177 >> 21;
  s4_496 = s4_482 + carry3_495;
  _178 = carry3_495 * 2097152;
  s3_497 = s3_478 - _178;
  _179 = s5_481 + 1048576;
  carry5_498 = _179 >> 21;
  s6_499 = s6_485 + carry5_498;
  _180 = carry5_498 * 2097152;
  s5_500 = s5_481 - _180;
  _181 = s7_484 + 1048576;
  carry7_501 = _181 >> 21;
  s8_502 = s8_488 + carry7_501;
  _182 = carry7_501 * 2097152;
  s7_503 = s7_484 - _182;
  _183 = s9_487 + 1048576;
  carry9_504 = _183 >> 21;
  s10_505 = s10_491 + carry9_504;
  _184 = carry9_504 * 2097152;
  s9_506 = s9_487 - _184;
  _185 = s11_490 + 1048576;
  carry11_507 = _185 >> 21;
  _186 = carry11_507 * 2097152;
  s11_509 = s11_490 - _186;
  _187 = carry11_507 * 666643;
  s0_510 = _187 + s0_476;
  _188 = carry11_507 * 470296;
  s1_511 = _188 + s1_494;
  _189 = carry11_507 * 654183;
  s2_512 = _189 + s2_493;
  _190 = carry11_507 * -997805;
  s3_513 = _190 + s3_497;
  _191 = carry11_507 * 136657;
  s4_514 = _191 + s4_496;
  _192 = carry11_507 * -683901;
  s5_515 = _192 + s5_500;
  carry0_517 = s0_510 >> 21;
  s1_518 = s1_511 + carry0_517;
  _193 = carry0_517 * 2097152;
  s0_519 = s0_510 - _193;
  carry1_520 = s1_518 >> 21;
  s2_521 = s2_512 + carry1_520;
  _194 = carry1_520 * 2097152;
  s1_522 = s1_518 - _194;
  carry2_523 = s2_521 >> 21;
  s3_524 = s3_513 + carry2_523;
  _195 = carry2_523 * 2097152;
  s2_525 = s2_521 - _195;
  carry3_526 = s3_524 >> 21;
  s4_527 = s4_514 + carry3_526;
  _196 = carry3_526 * 2097152;
  s3_528 = s3_524 - _196;
  carry4_529 = s4_527 >> 21;
  s5_530 = s5_515 + carry4_529;
  _197 = carry4_529 * 2097152;
  s4_531 = s4_527 - _197;
  carry5_532 = s5_530 >> 21;
  s6_533 = s6_499 + carry5_532;
  _198 = carry5_532 * 2097152;
  s5_534 = s5_530 - _198;
  carry6_535 = s6_533 >> 21;
  s7_536 = s7_503 + carry6_535;
  _199 = carry6_535 * 2097152;
  s6_537 = s6_533 - _199;
  carry7_538 = s7_536 >> 21;
  s8_539 = s8_502 + carry7_538;
  _200 = carry7_538 * 2097152;
  s7_540 = s7_536 - _200;
  carry8_541 = s8_539 >> 21;
  s9_542 = s9_506 + carry8_541;
  _201 = carry8_541 * 2097152;
  s8_543 = s8_539 - _201;
  carry9_544 = s9_542 >> 21;
  s10_545 = s10_505 + carry9_544;
  _202 = carry9_544 * 2097152;
  s9_546 = s9_542 - _202;
  carry10_547 = s10_545 >> 21;
  s11_548 = s11_509 + carry10_547;
  _203 = carry10_547 * 2097152;
  s10_549 = s10_545 - _203;
  carry11_550 = s11_548 >> 21;
  _204 = carry11_550 * 2097152;
  s11_552 = s11_548 - _204;
  _205 = carry11_550 * 666643;
  s0_553 = _205 + s0_519;
  _206 = carry11_550 * 470296;
  s1_554 = _206 + s1_522;
  _207 = carry11_550 * 654183;
  s2_555 = _207 + s2_525;
  _208 = carry11_550 * -997805;
  s3_556 = _208 + s3_528;
  _209 = carry11_550 * 136657;
  s4_557 = _209 + s4_531;
  _210 = carry11_550 * -683901;
  s5_558 = _210 + s5_534;
  carry0_560 = s0_553 >> 21;
  s1_561 = s1_554 + carry0_560;
  _211 = carry0_560 * 2097152;
  s0_562 = s0_553 - _211;
  carry1_563 = s1_561 >> 21;
  s2_564 = s2_555 + carry1_563;
  _212 = carry1_563 * 2097152;
  s1_565 = s1_561 - _212;
  carry2_566 = s2_564 >> 21;
  s3_567 = s3_556 + carry2_566;
  _213 = carry2_566 * 2097152;
  s2_568 = s2_564 - _213;
  carry3_569 = s3_567 >> 21;
  s4_570 = s4_557 + carry3_569;
  _214 = carry3_569 * 2097152;
  s3_571 = s3_567 - _214;
  carry4_572 = s4_570 >> 21;
  s5_573 = s5_558 + carry4_572;
  _215 = carry4_572 * 2097152;
  s4_574 = s4_570 - _215;
  carry5_575 = s5_573 >> 21;
  s6_576 = s6_537 + carry5_575;
  _216 = carry5_575 * 2097152;
  s5_577 = s5_573 - _216;
  carry6_578 = s6_576 >> 21;
  s7_579 = s7_540 + carry6_578;
  _217 = carry6_578 * 2097152;
  s6_580 = s6_576 - _217;
  carry7_581 = s7_579 >> 21;
  s8_582 = s8_543 + carry7_581;
  _218 = carry7_581 * 2097152;
  s7_583 = s7_579 - _218;
  carry8_584 = s8_582 >> 21;
  s9_585 = s9_546 + carry8_584;
  _219 = carry8_584 * 2097152;
  s8_586 = s8_582 - _219;
  carry9_587 = s9_585 >> 21;
  s10_588 = s10_549 + carry9_587;
  _220 = carry9_587 * 2097152;
  s9_589 = s9_585 - _220;
  carry10_590 = s10_588 >> 21;
  s11_591 = s11_552 + carry10_590;
  _221 = carry10_590 * 2097152;
  s10_592 = s10_588 - _221;
  _222 = (unsigned char) s0_562;
  _223 = s0_562 >> 8;
  _224 = (unsigned char) _223;
  _225 = s0_562 >> 16;
  _226 = (signed char) _225;
  _227 = (signed char) s1_565;
  _228 = _227 << 5;
  _229 = _226 | _228;
  _230 = (unsigned char) _229;
  _231 = s1_565 >> 3;
  _232 = (unsigned char) _231;
  _233 = s1_565 >> 11;
  _234 = (unsigned char) _233;
  _235 = s1_565 >> 19;
  _236 = (signed char) _235;
  _237 = (signed char) s2_568;
  _238 = _237 << 2;
  _239 = _236 | _238;
  _240 = (unsigned char) _239;
  _241 = s2_568 >> 6;
  _242 = (unsigned char) _241;
  _243 = s2_568 >> 14;
  _244 = (signed char) _243;
  _245 = (signed char) s3_571;
  _246 = _245 << 7;
  _247 = _244 | _246;
  _248 = (unsigned char) _247;
  _249 = s3_571 >> 1;
  _250 = (unsigned char) _249;
  _251 = s3_571 >> 9;
  _252 = (unsigned char) _251;
  _253 = s3_571 >> 17;
  _254 = (signed char) _253;
  _255 = (signed char) s4_574;
  _256 = _255 << 4;
  _257 = _254 | _256;
  _258 = (unsigned char) _257;
  _259 = s4_574 >> 4;
  _260 = (unsigned char) _259;
  _261 = s4_574 >> 12;
  _262 = (unsigned char) _261;
  _263 = s4_574 >> 20;
  _264 = (signed char) _263;
  _265 = (signed char) s5_577;
  _266 = _265 << 1;
  _267 = _264 | _266;
  _268 = (unsigned char) _267;
  _269 = s5_577 >> 7;
  _270 = (unsigned char) _269;
  _271 = s5_577 >> 15;
  _272 = (signed char) _271;
  _273 = (signed char) s6_580;
  _274 = _273 << 6;
  _275 = _272 | _274;
  _276 = (unsigned char) _275;
  _2129 = {_222, _224, _230, _232, _234, _240, _242, _248, _250, _252, _258, _260, _262, _268, _270, _276};
  _277 = s6_580 >> 2;
  _278 = (unsigned char) _277;
  _279 = s6_580 >> 10;
  _280 = (unsigned char) _279;
  _281 = s6_580 >> 18;
  _282 = (signed char) _281;
  _283 = (signed char) s7_583;
  _284 = _283 << 3;
  _285 = _282 | _284;
  _286 = (unsigned char) _285;
  _287 = s7_583 >> 5;
  _288 = (unsigned char) _287;
  _289 = s7_583 >> 13;
  _290 = (unsigned char) _289;
  _291 = (unsigned char) s8_586;
  _292 = s8_586 >> 8;
  _293 = (unsigned char) _292;
  _294 = s8_586 >> 16;
  _295 = (signed char) _294;
  _296 = (signed char) s9_589;
  _297 = _296 << 5;
  _298 = _295 | _297;
  _299 = (unsigned char) _298;
  _300 = s9_589 >> 3;
  _301 = (unsigned char) _300;
  _302 = s9_589 >> 11;
  _303 = (unsigned char) _302;
  _304 = s9_589 >> 19;
  _305 = (signed char) _304;
  _306 = (signed char) s10_592;
  _307 = _306 << 2;
  _308 = _305 | _307;
  _309 = (unsigned char) _308;
  _310 = s10_592 >> 6;
  _311 = (unsigned char) _310;
  _312 = s10_592 >> 14;
  _313 = (signed char) _312;
  _314 = (signed char) s11_591;
  _315 = _314 << 7;
  _316 = _313 | _315;
  _317 = (unsigned char) _316;
  _318 = s11_591 >> 1;
  _319 = (unsigned char) _318;
  _320 = s11_591 >> 9;
  _321 = (unsigned char) _320;
  _322 = s11_591 >> 17;
  _323 = (unsigned char) _322;
  _2128 = {_278, _280, _286, _288, _290, _291, _293, _299, _301, _303, _309, _311, _317, _319, _321, _323};
  MEM <vector(16) unsigned char> [(uint8_t *)s_325(D)] = _2129;
  MEM <vector(16) unsigned char> [(uint8_t *)s_325(D) + 16B] = _2128;
  return;

}



;; Function sc_muladd (sc_muladd, funcdef_no=445, decl_uid=18129, cgraph_uid=446, symbol_order=456)

void sc_muladd (uint8_t * s, const uint8_t * a, const uint8_t * b, const uint8_t * c)
{
  int64_t carry22;
  int64_t carry21;
  int64_t carry20;
  int64_t carry19;
  int64_t carry18;
  int64_t carry17;
  int64_t carry16;
  int64_t carry15;
  int64_t carry14;
  int64_t carry13;
  int64_t carry12;
  int64_t carry11;
  int64_t carry10;
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t s22;
  int64_t s21;
  int64_t s20;
  int64_t s19;
  int64_t s18;
  int64_t s17;
  int64_t s16;
  int64_t s15;
  int64_t s14;
  int64_t s13;
  int64_t s12;
  int64_t s11;
  int64_t s10;
  int64_t s9;
  int64_t s8;
  int64_t s7;
  int64_t s6;
  int64_t s5;
  int64_t s4;
  int64_t s3;
  int64_t s2;
  int64_t s1;
  int64_t s0;
  int64_t b11;
  int64_t b10;
  int64_t b9;
  int64_t b8;
  int64_t b7;
  int64_t b6;
  int64_t b5;
  int64_t b4;
  int64_t b3;
  int64_t b2;
  int64_t b1;
  int64_t b0;
  int64_t a11;
  int64_t a10;
  int64_t a9;
  int64_t a8;
  int64_t a7;
  int64_t a6;
  int64_t a5;
  int64_t a4;
  int64_t a3;
  int64_t a2;
  int64_t a1;
  int64_t a0;
  long unsigned int _1;
  const uint8_t * _2;
  long unsigned int _3;
  long unsigned int _4;
  const uint8_t * _5;
  long unsigned int _6;
  long unsigned int _7;
  const uint8_t * _8;
  long unsigned int _9;
  long unsigned int _10;
  const uint8_t * _11;
  long unsigned int _12;
  long unsigned int _13;
  const uint8_t * _14;
  long unsigned int _15;
  long unsigned int _16;
  const uint8_t * _17;
  long unsigned int _18;
  long unsigned int _19;
  const uint8_t * _20;
  long unsigned int _21;
  long unsigned int _22;
  const uint8_t * _23;
  long unsigned int _24;
  const uint8_t * _25;
  long unsigned int _26;
  long unsigned int _27;
  const uint8_t * _28;
  long unsigned int _29;
  long unsigned int _30;
  const uint8_t * _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  const uint8_t * _35;
  long unsigned int _36;
  long unsigned int _37;
  const uint8_t * _38;
  long unsigned int _39;
  long unsigned int _40;
  const uint8_t * _41;
  long unsigned int _42;
  long unsigned int _43;
  const uint8_t * _44;
  long unsigned int _45;
  long unsigned int _46;
  const uint8_t * _47;
  long unsigned int _48;
  long unsigned int _49;
  const uint8_t * _50;
  long unsigned int _51;
  long unsigned int _52;
  const uint8_t * _53;
  long unsigned int _54;
  long unsigned int _55;
  const uint8_t * _56;
  long unsigned int _57;
  const uint8_t * _58;
  long unsigned int _59;
  long unsigned int _60;
  const uint8_t * _61;
  long unsigned int _62;
  long unsigned int _63;
  const uint8_t * _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  const uint8_t * _68;
  long unsigned int _69;
  long unsigned int _70;
  const uint8_t * _71;
  long unsigned int _72;
  long unsigned int _73;
  const uint8_t * _74;
  long unsigned int _75;
  long unsigned int _76;
  const uint8_t * _77;
  long unsigned int _78;
  long unsigned int _79;
  const uint8_t * _80;
  long unsigned int _81;
  long unsigned int _82;
  const uint8_t * _83;
  long unsigned int _84;
  long unsigned int _85;
  const uint8_t * _86;
  long unsigned int _87;
  long unsigned int _88;
  const uint8_t * _89;
  long unsigned int _90;
  const uint8_t * _91;
  long unsigned int _92;
  long unsigned int _93;
  const uint8_t * _94;
  long unsigned int _95;
  long unsigned int _96;
  const uint8_t * _97;
  long unsigned int _98;
  long unsigned int _99;
  long int _102;
  long int _105;
  long int _107;
  long int _110;
  long int _112;
  long int _114;
  long int _117;
  long int _119;
  long int _121;
  long int _123;
  long int _126;
  long int _128;
  long int _130;
  long int _132;
  long int _134;
  long int _137;
  long int _139;
  long int _141;
  long int _143;
  long int _145;
  long int _147;
  long int _150;
  long int _152;
  long int _154;
  long int _156;
  long int _158;
  long int _160;
  long int _162;
  long int _165;
  long int _167;
  long int _169;
  long int _171;
  long int _173;
  long int _175;
  long int _177;
  long int _179;
  long int _182;
  long int _184;
  long int _186;
  long int _188;
  long int _190;
  long int _192;
  long int _194;
  long int _196;
  long int _198;
  long int _201;
  long int _203;
  long int _205;
  long int _207;
  long int _209;
  long int _211;
  long int _213;
  long int _215;
  long int _217;
  long int _219;
  long int _222;
  long int _224;
  long int _226;
  long int _228;
  long int _230;
  long int _232;
  long int _234;
  long int _236;
  long int _238;
  long int _240;
  long int _242;
  long int _245;
  long int _246;
  long int _248;
  long int _250;
  long int _252;
  long int _254;
  long int _256;
  long int _258;
  long int _260;
  long int _262;
  long int _265;
  long int _266;
  long int _268;
  long int _270;
  long int _272;
  long int _274;
  long int _276;
  long int _278;
  long int _280;
  long int _283;
  long int _284;
  long int _286;
  long int _288;
  long int _290;
  long int _292;
  long int _294;
  long int _296;
  long int _299;
  long int _300;
  long int _302;
  long int _304;
  long int _306;
  long int _308;
  long int _310;
  long int _313;
  long int _314;
  long int _316;
  long int _318;
  long int _320;
  long int _322;
  long int _325;
  long int _326;
  long int _328;
  long int _330;
  long int _332;
  long int _335;
  long int _336;
  long int _338;
  long int _340;
  long int _343;
  long int _344;
  long int _346;
  long int _349;
  long int _350;
  long int _353;
  long int _354;
  long int _356;
  long int _358;
  long int _360;
  long int _362;
  long int _364;
  long int _366;
  long int _368;
  long int _370;
  long int _372;
  long int _374;
  long int _376;
  long int _378;
  long int _380;
  long int _382;
  long int _384;
  long int _386;
  long int _388;
  long int _390;
  long int _392;
  long int _394;
  long int _396;
  long int _398;
  long int _406;
  long int _407;
  long int _408;
  long int _409;
  long int _410;
  long int _411;
  long int _412;
  long int _413;
  long int _414;
  long int _415;
  long int _416;
  long int _417;
  long int _418;
  long int _419;
  long int _420;
  long int _421;
  long int _422;
  long int _423;
  long int _424;
  long int _425;
  long int _426;
  long int _427;
  long int _428;
  long int _429;
  long int _430;
  long int _431;
  long int _432;
  long int _433;
  long int _434;
  long int _435;
  long int _436;
  long int _437;
  long int _438;
  long int _439;
  long int _440;
  long int _441;
  long int _442;
  long int _443;
  long int _444;
  long int _445;
  long int _446;
  long int _447;
  long int _448;
  long int _449;
  long int _450;
  long int _451;
  long int _452;
  long int _453;
  long int _454;
  long int _455;
  long int _456;
  long int _457;
  long int _458;
  long int _459;
  long int _460;
  long int _461;
  long int _462;
  long int _463;
  long int _464;
  long int _465;
  long int _466;
  long int _467;
  long int _468;
  long int _469;
  long int _470;
  long int _471;
  long int _472;
  long int _473;
  long int _474;
  long int _475;
  long int _476;
  long int _477;
  long int _478;
  long int _479;
  long int _480;
  long int _481;
  long int _482;
  long int _483;
  long int _484;
  long int _485;
  long int _486;
  long int _487;
  long int _488;
  long int _489;
  long int _490;
  long int _491;
  long int _492;
  long int _493;
  long int _494;
  long int _495;
  long int _496;
  long int _497;
  long int _498;
  long int _499;
  long int _500;
  long int _501;
  long int _502;
  long int _503;
  long int _504;
  long int _505;
  long int _506;
  long int _507;
  long int _508;
  long int _509;
  long int _510;
  long int _511;
  long int _512;
  long int _513;
  long int _514;
  long int _515;
  long int _516;
  long int _517;
  long int _518;
  long int _519;
  long int _520;
  long int _521;
  long int _522;
  long int _523;
  long int _524;
  long int _525;
  long int _526;
  long int _527;
  long int _528;
  long int _529;
  long int _530;
  long int _531;
  long int _532;
  long int _533;
  long int _534;
  long int _535;
  long int _536;
  long int _537;
  long int _538;
  long int _539;
  long int _540;
  long int _541;
  long int _542;
  long int _543;
  long int _544;
  long int _545;
  long int _546;
  long int _547;
  long int _548;
  long int _549;
  long int _550;
  long int _551;
  long int _552;
  unsigned char _553;
  long int _554;
  unsigned char _555;
  long int _556;
  signed char _557;
  signed char _558;
  signed char _559;
  signed char _560;
  unsigned char _561;
  long int _562;
  unsigned char _563;
  long int _564;
  unsigned char _565;
  long int _566;
  signed char _567;
  signed char _568;
  signed char _569;
  signed char _570;
  unsigned char _571;
  long int _572;
  unsigned char _573;
  long int _574;
  signed char _575;
  signed char _576;
  signed char _577;
  signed char _578;
  unsigned char _579;
  long int _580;
  unsigned char _581;
  long int _582;
  unsigned char _583;
  long int _584;
  signed char _585;
  signed char _586;
  signed char _587;
  signed char _588;
  unsigned char _589;
  long int _590;
  unsigned char _591;
  long int _592;
  unsigned char _593;
  long int _594;
  signed char _595;
  signed char _596;
  signed char _597;
  signed char _598;
  unsigned char _599;
  long int _600;
  unsigned char _601;
  long int _602;
  signed char _603;
  signed char _604;
  signed char _605;
  signed char _606;
  unsigned char _607;
  long int _608;
  unsigned char _609;
  long int _610;
  unsigned char _611;
  long int _612;
  signed char _613;
  signed char _614;
  signed char _615;
  signed char _616;
  unsigned char _617;
  long int _618;
  unsigned char _619;
  long int _620;
  unsigned char _621;
  unsigned char _622;
  long int _623;
  unsigned char _624;
  long int _625;
  signed char _626;
  signed char _627;
  signed char _628;
  signed char _629;
  unsigned char _630;
  long int _631;
  unsigned char _632;
  long int _633;
  unsigned char _634;
  long int _635;
  signed char _636;
  signed char _637;
  signed char _638;
  signed char _639;
  unsigned char _640;
  long int _641;
  unsigned char _642;
  long int _643;
  signed char _644;
  signed char _645;
  signed char _646;
  signed char _647;
  unsigned char _648;
  long int _649;
  unsigned char _650;
  long int _651;
  unsigned char _652;
  long int _653;
  unsigned char _654;
  long unsigned int _679;
  long unsigned int _681;
  long unsigned int _683;
  long unsigned int _688;
  long unsigned int _690;
  long unsigned int _692;
  long unsigned int _694;
  long unsigned int _696;
  long unsigned int _698;
  long unsigned int _700;
  long unsigned int _702;
  long unsigned int _704;
  long unsigned int _706;
  long unsigned int _733;
  long unsigned int _768;
  long unsigned int _809;
  long unsigned int _816;
  long unsigned int _823;
  long unsigned int _830;
  long unsigned int _837;
  long unsigned int _844;
  long unsigned int _884;
  long unsigned int _891;
  long unsigned int _905;
  long unsigned int _912;
  long unsigned int _919;
  long unsigned int _954;
  long unsigned int _962;
  long unsigned int _997;
  long unsigned int _1005;
  signed int _2316;
  signed int _2317;
  signed int _2318;
  signed int _2319;
  signed int _2320;
  signed int _2321;
  signed int _2322;
  signed int _2323;
  signed int _2324;
  signed int _2325;
  signed int _2326;
  signed int _2327;
  signed int _2328;
  signed int _2329;
  signed int _2330;
  signed int _2331;
  signed int _2332;
  signed int _2333;
  signed int _2334;
  signed int _2335;
  signed int _2336;
  signed int _2337;
  signed int _2338;
  signed int _2339;
  signed int _2340;
  signed int _2341;
  signed int _2342;
  signed int _2343;
  signed int _2344;
  signed int _2345;
  signed int _2346;
  signed int _2347;
  signed int _2348;
  signed int _2349;
  signed int _2350;
  signed int _2351;
  signed int _2352;
  signed int _2353;
  signed int _2354;
  signed int _2355;
  signed int _2356;
  signed int _2357;
  signed int _2358;
  signed int _2359;
  signed int _2360;
  signed int _2361;
  signed int _2362;
  signed int _2363;
  signed int _2364;
  signed int _2365;
  signed int _2366;
  signed int _2367;
  signed int _2368;
  signed int _2369;
  signed int _2370;
  signed int _2371;
  signed int _2372;
  signed int _2373;
  signed int _2374;
  signed int _2375;
  signed int _2376;
  signed int _2377;
  signed int _2378;
  signed int _2379;
  signed int _2380;
  signed int _2381;
  signed int _2382;
  signed int _2383;
  signed int _2384;
  signed int _2385;
  signed int _2386;
  signed int _2387;
  signed int _2388;
  signed int _2389;
  signed int _2390;
  signed int _2391;
  signed int _2392;
  signed int _2393;
  signed int _2394;
  signed int _2395;
  signed int _2396;
  signed int _2397;
  signed int _2398;
  signed int _2399;
  signed int _2400;
  signed int _2401;
  signed int _2402;
  signed int _2403;
  signed int _2404;
  signed int _2405;
  signed int _2406;
  signed int _2407;
  signed int _2408;
  signed int _2409;
  signed int _2410;
  signed int _2411;
  signed int _2412;
  signed int _2413;
  signed int _2414;
  signed int _2415;
  signed int _2416;
  signed int _2417;
  signed int _2418;
  signed int _2419;
  signed int _2420;
  signed int _2421;
  signed int _2422;
  signed int _2423;
  signed int _2424;
  signed int _2425;
  signed int _2426;
  signed int _2427;
  signed int _2428;
  signed int _2429;
  signed int _2430;
  signed int _2431;
  signed int _2432;
  signed int _2433;
  signed int _2434;
  signed int _2435;
  signed int _2436;
  signed int _2437;
  signed int _2438;
  signed int _2439;
  signed int _2440;
  signed int _2441;
  signed int _2442;
  signed int _2443;
  signed int _2444;
  signed int _2445;
  signed int _2446;
  signed int _2447;
  signed int _2448;
  signed int _2449;
  signed int _2450;
  signed int _2451;
  signed int _2452;
  signed int _2453;
  signed int _2454;
  signed int _2455;
  signed int _2456;
  signed int _2457;
  signed int _2458;
  signed int _2459;
  signed int _2460;
  signed int _2461;
  signed int _2462;
  signed int _2463;
  signed int _2464;
  signed int _2465;
  signed int _2466;
  signed int _2467;
  signed int _2468;
  signed int _2469;
  signed int _2470;
  signed int _2471;
  signed int _2472;
  signed int _2473;
  signed int _2474;
  signed int _2475;
  signed int _2476;
  signed int _2477;
  signed int _2478;
  signed int _2479;
  signed int _2480;
  signed int _2481;
  signed int _2482;
  signed int _2483;
  signed int _2484;
  signed int _2485;
  signed int _2486;
  signed int _2487;
  signed int _2488;
  signed int _2489;
  signed int _2490;
  signed int _2491;
  signed int _2492;
  signed int _2493;
  signed int _2494;
  signed int _2495;
  signed int _2496;
  signed int _2497;
  signed int _2498;
  long int _2499;
  signed int _2500;
  signed int _2501;
  signed int _2502;
  signed int _2503;
  signed int _2504;
  signed int _2505;
  signed int _2506;
  signed int _2507;
  signed int _2508;
  signed int _2509;
  signed int _2510;
  signed int _2511;
  signed int _2512;
  signed int _2513;
  signed int _2514;
  signed int _2515;
  signed int _2516;
  signed int _2517;
  signed int _2518;
  signed int _2519;
  signed int _2520;
  signed int _2521;
  long int _2522;
  signed int _2523;
  signed int _2524;
  signed int _2525;
  signed int _2526;
  signed int _2527;
  signed int _2528;
  signed int _2529;
  signed int _2530;
  signed int _2531;
  signed int _2532;
  signed int _2533;
  signed int _2534;
  signed int _2535;
  signed int _2536;
  signed int _2537;
  signed int _2538;
  signed int _2539;
  signed int _2540;
  signed int _2541;
  signed int _2542;
  long int _2543;
  signed int _2544;
  signed int _2545;
  signed int _2546;
  signed int _2547;
  signed int _2548;
  signed int _2549;
  signed int _2550;
  signed int _2551;
  signed int _2552;
  signed int _2553;
  signed int _2554;
  signed int _2555;
  signed int _2556;
  signed int _2557;
  signed int _2558;
  signed int _2559;
  signed int _2560;
  signed int _2561;
  long int _2562;
  signed int _2563;
  signed int _2564;
  signed int _2565;
  signed int _2566;
  signed int _2567;
  signed int _2568;
  signed int _2569;
  signed int _2570;
  signed int _2571;
  signed int _2572;
  signed int _2573;
  signed int _2574;
  signed int _2575;
  signed int _2576;
  signed int _2577;
  signed int _2578;
  long int _2579;
  signed int _2580;
  signed int _2581;
  signed int _2582;
  signed int _2583;
  signed int _2584;
  signed int _2585;
  signed int _2586;
  signed int _2587;
  signed int _2588;
  signed int _2589;
  signed int _2590;
  signed int _2591;
  signed int _2592;
  signed int _2593;
  long int _2594;
  signed int _2595;
  signed int _2596;
  signed int _2597;
  signed int _2598;
  signed int _2599;
  signed int _2600;
  signed int _2601;
  signed int _2602;
  signed int _2603;
  signed int _2604;
  signed int _2605;
  signed int _2606;
  long int _2607;
  signed int _2608;
  signed int _2609;
  signed int _2610;
  signed int _2611;
  signed int _2612;
  signed int _2613;
  signed int _2614;
  signed int _2615;
  signed int _2616;
  signed int _2617;
  long int _2618;
  signed int _2619;
  signed int _2620;
  signed int _2621;
  signed int _2622;
  signed int _2623;
  signed int _2624;
  signed int _2625;
  signed int _2626;
  long int _2627;
  signed int _2628;
  signed int _2629;
  signed int _2630;
  signed int _2631;
  signed int _2632;
  signed int _2633;
  long int _2634;
  signed int _2635;
  signed int _2636;
  signed int _2637;
  signed int _2638;
  long int _2639;
  signed int _2640;
  signed int _2641;
  long int _2642;
  vector(16) unsigned char _2643;
  vector(16) unsigned char _2644;
  signed int _2645;
  signed int _2647;

  <bb 2> [local count: 1073741824]:
  _1 = load_3 (a_656(D));
  _1005 = _1 & 2097151;
  a0_657 = (int64_t) _1005;
  _2 = a_656(D) + 2;
  _3 = load_4 (_2);
  _4 = _3 >> 5;
  _962 = _4 & 2097151;
  a1_658 = (int64_t) _962;
  _5 = a_656(D) + 5;
  _6 = load_3 (_5);
  _7 = _6 >> 2;
  _997 = _7 & 2097151;
  a2_659 = (int64_t) _997;
  _8 = a_656(D) + 7;
  _9 = load_4 (_8);
  _10 = _9 >> 7;
  _919 = _10 & 2097151;
  a3_660 = (int64_t) _919;
  _11 = a_656(D) + 10;
  _12 = load_4 (_11);
  _13 = _12 >> 4;
  _954 = _13 & 2097151;
  a4_661 = (int64_t) _954;
  _14 = a_656(D) + 13;
  _15 = load_3 (_14);
  _16 = _15 >> 1;
  _912 = _16 & 2097151;
  a5_662 = (int64_t) _912;
  _17 = a_656(D) + 15;
  _18 = load_4 (_17);
  _19 = _18 >> 6;
  _905 = _19 & 2097151;
  a6_663 = (int64_t) _905;
  _20 = a_656(D) + 18;
  _21 = load_3 (_20);
  _22 = _21 >> 3;
  a7_664 = (int64_t) _22;
  _23 = a_656(D) + 21;
  _24 = load_3 (_23);
  _891 = _24 & 2097151;
  a8_665 = (int64_t) _891;
  _25 = a_656(D) + 23;
  _26 = load_4 (_25);
  _27 = _26 >> 5;
  _884 = _27 & 2097151;
  a9_666 = (int64_t) _884;
  _28 = a_656(D) + 26;
  _29 = load_3 (_28);
  _30 = _29 >> 2;
  _844 = _30 & 2097151;
  a10_667 = (int64_t) _844;
  _31 = a_656(D) + 28;
  _32 = load_4 (_31);
  _33 = _32 >> 7;
  a11_668 = (int64_t) _33;
  _34 = load_3 (b_669(D));
  _837 = _34 & 2097151;
  b0_670 = (int64_t) _837;
  _35 = b_669(D) + 2;
  _36 = load_4 (_35);
  _37 = _36 >> 5;
  _830 = _37 & 2097151;
  b1_671 = (int64_t) _830;
  _38 = b_669(D) + 5;
  _39 = load_3 (_38);
  _40 = _39 >> 2;
  _823 = _40 & 2097151;
  b2_672 = (int64_t) _823;
  _41 = b_669(D) + 7;
  _42 = load_4 (_41);
  _43 = _42 >> 7;
  _816 = _43 & 2097151;
  b3_673 = (int64_t) _816;
  _44 = b_669(D) + 10;
  _45 = load_4 (_44);
  _46 = _45 >> 4;
  _809 = _46 & 2097151;
  b4_674 = (int64_t) _809;
  _47 = b_669(D) + 13;
  _48 = load_3 (_47);
  _49 = _48 >> 1;
  _733 = _49 & 2097151;
  b5_675 = (int64_t) _733;
  _50 = b_669(D) + 15;
  _51 = load_4 (_50);
  _52 = _51 >> 6;
  _768 = _52 & 2097151;
  b6_676 = (int64_t) _768;
  _53 = b_669(D) + 18;
  _54 = load_3 (_53);
  _55 = _54 >> 3;
  b7_677 = (int64_t) _55;
  _56 = b_669(D) + 21;
  _57 = load_3 (_56);
  _706 = _57 & 2097151;
  b8_678 = (int64_t) _706;
  _58 = b_669(D) + 23;
  _59 = load_4 (_58);
  _60 = _59 >> 5;
  _704 = _60 & 2097151;
  b9_680 = (int64_t) _704;
  _61 = b_669(D) + 26;
  _62 = load_3 (_61);
  _63 = _62 >> 2;
  _702 = _63 & 2097151;
  b10_682 = (int64_t) _702;
  _64 = b_669(D) + 28;
  _65 = load_4 (_64);
  _66 = _65 >> 7;
  b11_684 = (int64_t) _66;
  _67 = load_3 (c_685(D));
  _700 = _67 & 2097151;
  _68 = c_685(D) + 2;
  _69 = load_4 (_68);
  _70 = _69 >> 5;
  _698 = _70 & 2097151;
  _71 = c_685(D) + 5;
  _72 = load_3 (_71);
  _73 = _72 >> 2;
  _696 = _73 & 2097151;
  _74 = c_685(D) + 7;
  _75 = load_4 (_74);
  _76 = _75 >> 7;
  _694 = _76 & 2097151;
  _77 = c_685(D) + 10;
  _78 = load_4 (_77);
  _79 = _78 >> 4;
  _692 = _79 & 2097151;
  _80 = c_685(D) + 13;
  _81 = load_3 (_80);
  _82 = _81 >> 1;
  _690 = _82 & 2097151;
  _83 = c_685(D) + 15;
  _84 = load_4 (_83);
  _85 = _84 >> 6;
  _688 = _85 & 2097151;
  _86 = c_685(D) + 18;
  _87 = load_3 (_86);
  _88 = _87 >> 3;
  _89 = c_685(D) + 21;
  _90 = load_3 (_89);
  _683 = _90 & 2097151;
  _91 = c_685(D) + 23;
  _92 = load_4 (_91);
  _93 = _92 >> 5;
  _681 = _93 & 2097151;
  _94 = c_685(D) + 26;
  _95 = load_3 (_94);
  _96 = _95 >> 2;
  _679 = _96 & 2097151;
  _97 = c_685(D) + 28;
  _98 = load_4 (_97);
  _99 = _98 >> 7;
  _2647 = (signed int) a0_657;
  _2645 = (signed int) b0_670;
  _2642 = (long int) _700;
  s0_710 = WIDEN_MULT_PLUS_EXPR <_2647, _2645, _2642>;
  _2641 = (signed int) a0_657;
  _2640 = (signed int) b1_671;
  _2639 = (long int) _698;
  _102 = WIDEN_MULT_PLUS_EXPR <_2641, _2640, _2639>;
  _2638 = (signed int) a1_658;
  _2637 = (signed int) b0_670;
  s1_711 = WIDEN_MULT_PLUS_EXPR <_2638, _2637, _102>;
  _2636 = (signed int) a0_657;
  _2635 = (signed int) b2_672;
  _2634 = (long int) _696;
  _105 = WIDEN_MULT_PLUS_EXPR <_2636, _2635, _2634>;
  _2633 = (signed int) a1_658;
  _2632 = (signed int) b1_671;
  _107 = WIDEN_MULT_PLUS_EXPR <_2633, _2632, _105>;
  _2631 = (signed int) a2_659;
  _2630 = (signed int) b0_670;
  s2_712 = WIDEN_MULT_PLUS_EXPR <_2631, _2630, _107>;
  _2629 = (signed int) a0_657;
  _2628 = (signed int) b3_673;
  _2627 = (long int) _694;
  _110 = WIDEN_MULT_PLUS_EXPR <_2629, _2628, _2627>;
  _2626 = (signed int) a1_658;
  _2625 = (signed int) b2_672;
  _112 = WIDEN_MULT_PLUS_EXPR <_2626, _2625, _110>;
  _2624 = (signed int) a2_659;
  _2623 = (signed int) b1_671;
  _114 = WIDEN_MULT_PLUS_EXPR <_2624, _2623, _112>;
  _2622 = (signed int) a3_660;
  _2621 = (signed int) b0_670;
  s3_713 = WIDEN_MULT_PLUS_EXPR <_2622, _2621, _114>;
  _2620 = (signed int) a0_657;
  _2619 = (signed int) b4_674;
  _2618 = (long int) _692;
  _117 = WIDEN_MULT_PLUS_EXPR <_2620, _2619, _2618>;
  _2617 = (signed int) a1_658;
  _2616 = (signed int) b3_673;
  _119 = WIDEN_MULT_PLUS_EXPR <_2617, _2616, _117>;
  _2615 = (signed int) a2_659;
  _2614 = (signed int) b2_672;
  _121 = WIDEN_MULT_PLUS_EXPR <_2615, _2614, _119>;
  _2613 = (signed int) a3_660;
  _2612 = (signed int) b1_671;
  _123 = WIDEN_MULT_PLUS_EXPR <_2613, _2612, _121>;
  _2611 = (signed int) a4_661;
  _2610 = (signed int) b0_670;
  s4_714 = WIDEN_MULT_PLUS_EXPR <_2611, _2610, _123>;
  _2609 = (signed int) a0_657;
  _2608 = (signed int) b5_675;
  _2607 = (long int) _690;
  _126 = WIDEN_MULT_PLUS_EXPR <_2609, _2608, _2607>;
  _2606 = (signed int) a1_658;
  _2605 = (signed int) b4_674;
  _128 = WIDEN_MULT_PLUS_EXPR <_2606, _2605, _126>;
  _2604 = (signed int) a2_659;
  _2603 = (signed int) b3_673;
  _130 = WIDEN_MULT_PLUS_EXPR <_2604, _2603, _128>;
  _2602 = (signed int) a3_660;
  _2601 = (signed int) b2_672;
  _132 = WIDEN_MULT_PLUS_EXPR <_2602, _2601, _130>;
  _2600 = (signed int) a4_661;
  _2599 = (signed int) b1_671;
  _134 = WIDEN_MULT_PLUS_EXPR <_2600, _2599, _132>;
  _2598 = (signed int) a5_662;
  _2597 = (signed int) b0_670;
  s5_715 = WIDEN_MULT_PLUS_EXPR <_2598, _2597, _134>;
  _2596 = (signed int) a0_657;
  _2595 = (signed int) b6_676;
  _2594 = (long int) _688;
  _137 = WIDEN_MULT_PLUS_EXPR <_2596, _2595, _2594>;
  _2593 = (signed int) a1_658;
  _2592 = (signed int) b5_675;
  _139 = WIDEN_MULT_PLUS_EXPR <_2593, _2592, _137>;
  _2591 = (signed int) a2_659;
  _2590 = (signed int) b4_674;
  _141 = WIDEN_MULT_PLUS_EXPR <_2591, _2590, _139>;
  _2589 = (signed int) a3_660;
  _2588 = (signed int) b3_673;
  _143 = WIDEN_MULT_PLUS_EXPR <_2589, _2588, _141>;
  _2587 = (signed int) a4_661;
  _2586 = (signed int) b2_672;
  _145 = WIDEN_MULT_PLUS_EXPR <_2587, _2586, _143>;
  _2585 = (signed int) a5_662;
  _2584 = (signed int) b1_671;
  _147 = WIDEN_MULT_PLUS_EXPR <_2585, _2584, _145>;
  _2583 = (signed int) a6_663;
  _2582 = (signed int) b0_670;
  s6_716 = WIDEN_MULT_PLUS_EXPR <_2583, _2582, _147>;
  _2581 = (signed int) a0_657;
  _2580 = (signed int) b7_677;
  _2579 = (long int) _88;
  _150 = WIDEN_MULT_PLUS_EXPR <_2581, _2580, _2579>;
  _2578 = (signed int) a1_658;
  _2577 = (signed int) b6_676;
  _152 = WIDEN_MULT_PLUS_EXPR <_2578, _2577, _150>;
  _2576 = (signed int) a2_659;
  _2575 = (signed int) b5_675;
  _154 = WIDEN_MULT_PLUS_EXPR <_2576, _2575, _152>;
  _2574 = (signed int) a3_660;
  _2573 = (signed int) b4_674;
  _156 = WIDEN_MULT_PLUS_EXPR <_2574, _2573, _154>;
  _2572 = (signed int) a4_661;
  _2571 = (signed int) b3_673;
  _158 = WIDEN_MULT_PLUS_EXPR <_2572, _2571, _156>;
  _2570 = (signed int) a5_662;
  _2569 = (signed int) b2_672;
  _160 = WIDEN_MULT_PLUS_EXPR <_2570, _2569, _158>;
  _2568 = (signed int) a6_663;
  _2567 = (signed int) b1_671;
  _162 = WIDEN_MULT_PLUS_EXPR <_2568, _2567, _160>;
  _2566 = (signed int) a7_664;
  _2565 = (signed int) b0_670;
  s7_717 = WIDEN_MULT_PLUS_EXPR <_2566, _2565, _162>;
  _2564 = (signed int) a0_657;
  _2563 = (signed int) b8_678;
  _2562 = (long int) _683;
  _165 = WIDEN_MULT_PLUS_EXPR <_2564, _2563, _2562>;
  _2561 = (signed int) a1_658;
  _2560 = (signed int) b7_677;
  _167 = WIDEN_MULT_PLUS_EXPR <_2561, _2560, _165>;
  _2559 = (signed int) a2_659;
  _2558 = (signed int) b6_676;
  _169 = WIDEN_MULT_PLUS_EXPR <_2559, _2558, _167>;
  _2557 = (signed int) a3_660;
  _2556 = (signed int) b5_675;
  _171 = WIDEN_MULT_PLUS_EXPR <_2557, _2556, _169>;
  _2555 = (signed int) a4_661;
  _2554 = (signed int) b4_674;
  _173 = WIDEN_MULT_PLUS_EXPR <_2555, _2554, _171>;
  _2553 = (signed int) a5_662;
  _2552 = (signed int) b3_673;
  _175 = WIDEN_MULT_PLUS_EXPR <_2553, _2552, _173>;
  _2551 = (signed int) a6_663;
  _2550 = (signed int) b2_672;
  _177 = WIDEN_MULT_PLUS_EXPR <_2551, _2550, _175>;
  _2549 = (signed int) a7_664;
  _2548 = (signed int) b1_671;
  _179 = WIDEN_MULT_PLUS_EXPR <_2549, _2548, _177>;
  _2547 = (signed int) a8_665;
  _2546 = (signed int) b0_670;
  s8_718 = WIDEN_MULT_PLUS_EXPR <_2547, _2546, _179>;
  _2545 = (signed int) a0_657;
  _2544 = (signed int) b9_680;
  _2543 = (long int) _681;
  _182 = WIDEN_MULT_PLUS_EXPR <_2545, _2544, _2543>;
  _2542 = (signed int) a1_658;
  _2541 = (signed int) b8_678;
  _184 = WIDEN_MULT_PLUS_EXPR <_2542, _2541, _182>;
  _2540 = (signed int) a2_659;
  _2539 = (signed int) b7_677;
  _186 = WIDEN_MULT_PLUS_EXPR <_2540, _2539, _184>;
  _2538 = (signed int) a3_660;
  _2537 = (signed int) b6_676;
  _188 = WIDEN_MULT_PLUS_EXPR <_2538, _2537, _186>;
  _2536 = (signed int) a4_661;
  _2535 = (signed int) b5_675;
  _190 = WIDEN_MULT_PLUS_EXPR <_2536, _2535, _188>;
  _2534 = (signed int) a5_662;
  _2533 = (signed int) b4_674;
  _192 = WIDEN_MULT_PLUS_EXPR <_2534, _2533, _190>;
  _2532 = (signed int) a6_663;
  _2531 = (signed int) b3_673;
  _194 = WIDEN_MULT_PLUS_EXPR <_2532, _2531, _192>;
  _2530 = (signed int) a7_664;
  _2529 = (signed int) b2_672;
  _196 = WIDEN_MULT_PLUS_EXPR <_2530, _2529, _194>;
  _2528 = (signed int) a8_665;
  _2527 = (signed int) b1_671;
  _198 = WIDEN_MULT_PLUS_EXPR <_2528, _2527, _196>;
  _2526 = (signed int) a9_666;
  _2525 = (signed int) b0_670;
  s9_719 = WIDEN_MULT_PLUS_EXPR <_2526, _2525, _198>;
  _2524 = (signed int) a0_657;
  _2523 = (signed int) b10_682;
  _2522 = (long int) _679;
  _201 = WIDEN_MULT_PLUS_EXPR <_2524, _2523, _2522>;
  _2521 = (signed int) a1_658;
  _2520 = (signed int) b9_680;
  _203 = WIDEN_MULT_PLUS_EXPR <_2521, _2520, _201>;
  _2519 = (signed int) a2_659;
  _2518 = (signed int) b8_678;
  _205 = WIDEN_MULT_PLUS_EXPR <_2519, _2518, _203>;
  _2517 = (signed int) a3_660;
  _2516 = (signed int) b7_677;
  _207 = WIDEN_MULT_PLUS_EXPR <_2517, _2516, _205>;
  _2515 = (signed int) a4_661;
  _2514 = (signed int) b6_676;
  _209 = WIDEN_MULT_PLUS_EXPR <_2515, _2514, _207>;
  _2513 = (signed int) a5_662;
  _2512 = (signed int) b5_675;
  _211 = WIDEN_MULT_PLUS_EXPR <_2513, _2512, _209>;
  _2511 = (signed int) a6_663;
  _2510 = (signed int) b4_674;
  _213 = WIDEN_MULT_PLUS_EXPR <_2511, _2510, _211>;
  _2509 = (signed int) a7_664;
  _2508 = (signed int) b3_673;
  _215 = WIDEN_MULT_PLUS_EXPR <_2509, _2508, _213>;
  _2507 = (signed int) a8_665;
  _2506 = (signed int) b2_672;
  _217 = WIDEN_MULT_PLUS_EXPR <_2507, _2506, _215>;
  _2505 = (signed int) a9_666;
  _2504 = (signed int) b1_671;
  _219 = WIDEN_MULT_PLUS_EXPR <_2505, _2504, _217>;
  _2503 = (signed int) a10_667;
  _2502 = (signed int) b0_670;
  s10_720 = WIDEN_MULT_PLUS_EXPR <_2503, _2502, _219>;
  _2501 = (signed int) a0_657;
  _2500 = (signed int) b11_684;
  _2499 = (long int) _99;
  _222 = WIDEN_MULT_PLUS_EXPR <_2501, _2500, _2499>;
  _2498 = (signed int) a1_658;
  _2497 = (signed int) b10_682;
  _224 = WIDEN_MULT_PLUS_EXPR <_2498, _2497, _222>;
  _2496 = (signed int) a2_659;
  _2495 = (signed int) b9_680;
  _226 = WIDEN_MULT_PLUS_EXPR <_2496, _2495, _224>;
  _2494 = (signed int) a3_660;
  _2493 = (signed int) b8_678;
  _228 = WIDEN_MULT_PLUS_EXPR <_2494, _2493, _226>;
  _2492 = (signed int) a4_661;
  _2491 = (signed int) b7_677;
  _230 = WIDEN_MULT_PLUS_EXPR <_2492, _2491, _228>;
  _2490 = (signed int) a5_662;
  _2489 = (signed int) b6_676;
  _232 = WIDEN_MULT_PLUS_EXPR <_2490, _2489, _230>;
  _2488 = (signed int) a6_663;
  _2487 = (signed int) b5_675;
  _234 = WIDEN_MULT_PLUS_EXPR <_2488, _2487, _232>;
  _2486 = (signed int) a7_664;
  _2485 = (signed int) b4_674;
  _236 = WIDEN_MULT_PLUS_EXPR <_2486, _2485, _234>;
  _2484 = (signed int) a8_665;
  _2483 = (signed int) b3_673;
  _238 = WIDEN_MULT_PLUS_EXPR <_2484, _2483, _236>;
  _2482 = (signed int) a9_666;
  _2481 = (signed int) b2_672;
  _240 = WIDEN_MULT_PLUS_EXPR <_2482, _2481, _238>;
  _2480 = (signed int) a10_667;
  _2479 = (signed int) b1_671;
  _242 = WIDEN_MULT_PLUS_EXPR <_2480, _2479, _240>;
  _2478 = (signed int) a11_668;
  _2477 = (signed int) b0_670;
  s11_721 = WIDEN_MULT_PLUS_EXPR <_2478, _2477, _242>;
  _2476 = (signed int) a1_658;
  _2475 = (signed int) b11_684;
  _2474 = (signed int) a2_659;
  _2473 = (signed int) b10_682;
  _245 = _2474 w* _2473;
  _246 = WIDEN_MULT_PLUS_EXPR <_2476, _2475, _245>;
  _2472 = (signed int) a3_660;
  _2471 = (signed int) b9_680;
  _248 = WIDEN_MULT_PLUS_EXPR <_2472, _2471, _246>;
  _2470 = (signed int) a4_661;
  _2469 = (signed int) b8_678;
  _250 = WIDEN_MULT_PLUS_EXPR <_2470, _2469, _248>;
  _2468 = (signed int) a5_662;
  _2467 = (signed int) b7_677;
  _252 = WIDEN_MULT_PLUS_EXPR <_2468, _2467, _250>;
  _2466 = (signed int) a6_663;
  _2465 = (signed int) b6_676;
  _254 = WIDEN_MULT_PLUS_EXPR <_2466, _2465, _252>;
  _2464 = (signed int) a7_664;
  _2463 = (signed int) b5_675;
  _256 = WIDEN_MULT_PLUS_EXPR <_2464, _2463, _254>;
  _2462 = (signed int) a8_665;
  _2461 = (signed int) b4_674;
  _258 = WIDEN_MULT_PLUS_EXPR <_2462, _2461, _256>;
  _2460 = (signed int) a9_666;
  _2459 = (signed int) b3_673;
  _260 = WIDEN_MULT_PLUS_EXPR <_2460, _2459, _258>;
  _2458 = (signed int) a10_667;
  _2457 = (signed int) b2_672;
  _262 = WIDEN_MULT_PLUS_EXPR <_2458, _2457, _260>;
  _2456 = (signed int) a11_668;
  _2455 = (signed int) b1_671;
  s12_722 = WIDEN_MULT_PLUS_EXPR <_2456, _2455, _262>;
  _2454 = (signed int) a2_659;
  _2453 = (signed int) b11_684;
  _2452 = (signed int) a3_660;
  _2451 = (signed int) b10_682;
  _265 = _2452 w* _2451;
  _266 = WIDEN_MULT_PLUS_EXPR <_2454, _2453, _265>;
  _2450 = (signed int) a4_661;
  _2449 = (signed int) b9_680;
  _268 = WIDEN_MULT_PLUS_EXPR <_2450, _2449, _266>;
  _2448 = (signed int) a5_662;
  _2447 = (signed int) b8_678;
  _270 = WIDEN_MULT_PLUS_EXPR <_2448, _2447, _268>;
  _2446 = (signed int) a6_663;
  _2445 = (signed int) b7_677;
  _272 = WIDEN_MULT_PLUS_EXPR <_2446, _2445, _270>;
  _2444 = (signed int) a7_664;
  _2443 = (signed int) b6_676;
  _274 = WIDEN_MULT_PLUS_EXPR <_2444, _2443, _272>;
  _2442 = (signed int) a8_665;
  _2441 = (signed int) b5_675;
  _276 = WIDEN_MULT_PLUS_EXPR <_2442, _2441, _274>;
  _2440 = (signed int) a9_666;
  _2439 = (signed int) b4_674;
  _278 = WIDEN_MULT_PLUS_EXPR <_2440, _2439, _276>;
  _2438 = (signed int) a10_667;
  _2437 = (signed int) b3_673;
  _280 = WIDEN_MULT_PLUS_EXPR <_2438, _2437, _278>;
  _2436 = (signed int) a11_668;
  _2435 = (signed int) b2_672;
  s13_723 = WIDEN_MULT_PLUS_EXPR <_2436, _2435, _280>;
  _2434 = (signed int) a3_660;
  _2433 = (signed int) b11_684;
  _2432 = (signed int) a4_661;
  _2431 = (signed int) b10_682;
  _283 = _2432 w* _2431;
  _284 = WIDEN_MULT_PLUS_EXPR <_2434, _2433, _283>;
  _2430 = (signed int) a5_662;
  _2429 = (signed int) b9_680;
  _286 = WIDEN_MULT_PLUS_EXPR <_2430, _2429, _284>;
  _2428 = (signed int) a6_663;
  _2427 = (signed int) b8_678;
  _288 = WIDEN_MULT_PLUS_EXPR <_2428, _2427, _286>;
  _2426 = (signed int) a7_664;
  _2425 = (signed int) b7_677;
  _290 = WIDEN_MULT_PLUS_EXPR <_2426, _2425, _288>;
  _2424 = (signed int) a8_665;
  _2423 = (signed int) b6_676;
  _292 = WIDEN_MULT_PLUS_EXPR <_2424, _2423, _290>;
  _2422 = (signed int) a9_666;
  _2421 = (signed int) b5_675;
  _294 = WIDEN_MULT_PLUS_EXPR <_2422, _2421, _292>;
  _2420 = (signed int) a10_667;
  _2419 = (signed int) b4_674;
  _296 = WIDEN_MULT_PLUS_EXPR <_2420, _2419, _294>;
  _2418 = (signed int) a11_668;
  _2417 = (signed int) b3_673;
  s14_724 = WIDEN_MULT_PLUS_EXPR <_2418, _2417, _296>;
  _2416 = (signed int) a4_661;
  _2415 = (signed int) b11_684;
  _2414 = (signed int) a5_662;
  _2413 = (signed int) b10_682;
  _299 = _2414 w* _2413;
  _300 = WIDEN_MULT_PLUS_EXPR <_2416, _2415, _299>;
  _2412 = (signed int) a6_663;
  _2411 = (signed int) b9_680;
  _302 = WIDEN_MULT_PLUS_EXPR <_2412, _2411, _300>;
  _2410 = (signed int) a7_664;
  _2409 = (signed int) b8_678;
  _304 = WIDEN_MULT_PLUS_EXPR <_2410, _2409, _302>;
  _2408 = (signed int) a8_665;
  _2407 = (signed int) b7_677;
  _306 = WIDEN_MULT_PLUS_EXPR <_2408, _2407, _304>;
  _2406 = (signed int) a9_666;
  _2405 = (signed int) b6_676;
  _308 = WIDEN_MULT_PLUS_EXPR <_2406, _2405, _306>;
  _2404 = (signed int) a10_667;
  _2403 = (signed int) b5_675;
  _310 = WIDEN_MULT_PLUS_EXPR <_2404, _2403, _308>;
  _2402 = (signed int) a11_668;
  _2401 = (signed int) b4_674;
  s15_725 = WIDEN_MULT_PLUS_EXPR <_2402, _2401, _310>;
  _2400 = (signed int) a5_662;
  _2399 = (signed int) b11_684;
  _2398 = (signed int) a6_663;
  _2397 = (signed int) b10_682;
  _313 = _2398 w* _2397;
  _314 = WIDEN_MULT_PLUS_EXPR <_2400, _2399, _313>;
  _2396 = (signed int) a7_664;
  _2395 = (signed int) b9_680;
  _316 = WIDEN_MULT_PLUS_EXPR <_2396, _2395, _314>;
  _2394 = (signed int) a8_665;
  _2393 = (signed int) b8_678;
  _318 = WIDEN_MULT_PLUS_EXPR <_2394, _2393, _316>;
  _2392 = (signed int) a9_666;
  _2391 = (signed int) b7_677;
  _320 = WIDEN_MULT_PLUS_EXPR <_2392, _2391, _318>;
  _2390 = (signed int) a10_667;
  _2389 = (signed int) b6_676;
  _322 = WIDEN_MULT_PLUS_EXPR <_2390, _2389, _320>;
  _2388 = (signed int) a11_668;
  _2387 = (signed int) b5_675;
  s16_726 = WIDEN_MULT_PLUS_EXPR <_2388, _2387, _322>;
  _2386 = (signed int) a6_663;
  _2385 = (signed int) b11_684;
  _2384 = (signed int) a7_664;
  _2383 = (signed int) b10_682;
  _325 = _2384 w* _2383;
  _326 = WIDEN_MULT_PLUS_EXPR <_2386, _2385, _325>;
  _2382 = (signed int) a8_665;
  _2381 = (signed int) b9_680;
  _328 = WIDEN_MULT_PLUS_EXPR <_2382, _2381, _326>;
  _2379 = (signed int) a9_666;
  _2380 = (signed int) b8_678;
  _330 = WIDEN_MULT_PLUS_EXPR <_2379, _2380, _328>;
  _2378 = (signed int) a10_667;
  _2377 = (signed int) b7_677;
  _332 = WIDEN_MULT_PLUS_EXPR <_2378, _2377, _330>;
  _2375 = (signed int) a11_668;
  _2376 = (signed int) b6_676;
  s17_727 = WIDEN_MULT_PLUS_EXPR <_2375, _2376, _332>;
  _2374 = (signed int) a7_664;
  _2373 = (signed int) b11_684;
  _2372 = (signed int) a8_665;
  _2371 = (signed int) b10_682;
  _335 = _2372 w* _2371;
  _336 = WIDEN_MULT_PLUS_EXPR <_2374, _2373, _335>;
  _2370 = (signed int) a9_666;
  _2369 = (signed int) b9_680;
  _338 = WIDEN_MULT_PLUS_EXPR <_2370, _2369, _336>;
  _2368 = (signed int) a10_667;
  _2367 = (signed int) b8_678;
  _340 = WIDEN_MULT_PLUS_EXPR <_2368, _2367, _338>;
  _2366 = (signed int) a11_668;
  _2365 = (signed int) b7_677;
  s18_728 = WIDEN_MULT_PLUS_EXPR <_2366, _2365, _340>;
  _2364 = (signed int) a8_665;
  _2363 = (signed int) b11_684;
  _2362 = (signed int) a9_666;
  _2360 = (signed int) b10_682;
  _343 = _2362 w* _2360;
  _344 = WIDEN_MULT_PLUS_EXPR <_2364, _2363, _343>;
  _2361 = (signed int) a10_667;
  _2359 = (signed int) b9_680;
  _346 = WIDEN_MULT_PLUS_EXPR <_2361, _2359, _344>;
  _2358 = (signed int) a11_668;
  _2356 = (signed int) b8_678;
  s19_729 = WIDEN_MULT_PLUS_EXPR <_2358, _2356, _346>;
  _2357 = (signed int) a9_666;
  _2355 = (signed int) b11_684;
  _2354 = (signed int) a10_667;
  _2353 = (signed int) b10_682;
  _349 = _2354 w* _2353;
  _350 = WIDEN_MULT_PLUS_EXPR <_2357, _2355, _349>;
  _2352 = (signed int) a11_668;
  _2351 = (signed int) b9_680;
  s20_730 = WIDEN_MULT_PLUS_EXPR <_2352, _2351, _350>;
  _2350 = (signed int) a10_667;
  _2349 = (signed int) b11_684;
  _2348 = (signed int) a11_668;
  _2346 = (signed int) b10_682;
  _353 = _2348 w* _2346;
  s21_731 = WIDEN_MULT_PLUS_EXPR <_2350, _2349, _353>;
  _2347 = (signed int) a11_668;
  _2345 = (signed int) b11_684;
  s22_732 = _2347 w* _2345;
  _354 = s0_710 + 1048576;
  carry0_734 = _354 >> 21;
  s1_735 = s1_711 + carry0_734;
  _2344 = (signed int) carry0_734;
  s0_736 = WIDEN_MULT_MINUS_EXPR <_2344, 2097152, s0_710>;
  _356 = s2_712 + 1048576;
  carry2_737 = _356 >> 21;
  s3_738 = s3_713 + carry2_737;
  _2343 = (signed int) carry2_737;
  s2_739 = WIDEN_MULT_MINUS_EXPR <_2343, 2097152, s2_712>;
  _358 = s4_714 + 1048576;
  carry4_740 = _358 >> 21;
  s5_741 = s5_715 + carry4_740;
  _2342 = (signed int) carry4_740;
  s4_742 = WIDEN_MULT_MINUS_EXPR <_2342, 2097152, s4_714>;
  _360 = s6_716 + 1048576;
  carry6_743 = _360 >> 21;
  s7_744 = s7_717 + carry6_743;
  _2341 = (signed int) carry6_743;
  s6_745 = WIDEN_MULT_MINUS_EXPR <_2341, 2097152, s6_716>;
  _362 = s8_718 + 1048576;
  carry8_746 = _362 >> 21;
  s9_747 = s9_719 + carry8_746;
  _2340 = (signed int) carry8_746;
  s8_748 = WIDEN_MULT_MINUS_EXPR <_2340, 2097152, s8_718>;
  _364 = s10_720 + 1048576;
  carry10_749 = _364 >> 21;
  s11_750 = s11_721 + carry10_749;
  _2339 = (signed int) carry10_749;
  s10_751 = WIDEN_MULT_MINUS_EXPR <_2339, 2097152, s10_720>;
  _366 = s12_722 + 1048576;
  carry12_752 = _366 >> 21;
  s13_753 = s13_723 + carry12_752;
  _2338 = (signed int) carry12_752;
  s12_754 = WIDEN_MULT_MINUS_EXPR <_2338, 2097152, s12_722>;
  _368 = s14_724 + 1048576;
  carry14_755 = _368 >> 21;
  s15_756 = s15_725 + carry14_755;
  _2337 = (signed int) carry14_755;
  s14_757 = WIDEN_MULT_MINUS_EXPR <_2337, 2097152, s14_724>;
  _370 = s16_726 + 1048576;
  carry16_758 = _370 >> 21;
  s17_759 = s17_727 + carry16_758;
  _2336 = (signed int) carry16_758;
  s16_760 = WIDEN_MULT_MINUS_EXPR <_2336, 2097152, s16_726>;
  _372 = s18_728 + 1048576;
  carry18_761 = _372 >> 21;
  s19_762 = s19_729 + carry18_761;
  _2335 = (signed int) carry18_761;
  s18_763 = WIDEN_MULT_MINUS_EXPR <_2335, 2097152, s18_728>;
  _374 = s20_730 + 1048576;
  carry20_764 = _374 >> 21;
  s21_765 = s21_731 + carry20_764;
  _2334 = (signed int) carry20_764;
  s20_766 = WIDEN_MULT_MINUS_EXPR <_2334, 2097152, s20_730>;
  _376 = s22_732 + 1048576;
  carry22_767 = _376 >> 21;
  _2333 = (signed int) carry22_767;
  s22_769 = WIDEN_MULT_MINUS_EXPR <_2333, 2097152, s22_732>;
  _378 = s1_735 + 1048576;
  carry1_770 = _378 >> 21;
  s2_771 = s2_739 + carry1_770;
  _2332 = (signed int) carry1_770;
  s1_772 = WIDEN_MULT_MINUS_EXPR <_2332, 2097152, s1_735>;
  _380 = s3_738 + 1048576;
  carry3_773 = _380 >> 21;
  s4_774 = s4_742 + carry3_773;
  _2331 = (signed int) carry3_773;
  s3_775 = WIDEN_MULT_MINUS_EXPR <_2331, 2097152, s3_738>;
  _382 = s5_741 + 1048576;
  carry5_776 = _382 >> 21;
  s6_777 = s6_745 + carry5_776;
  _2330 = (signed int) carry5_776;
  s5_778 = WIDEN_MULT_MINUS_EXPR <_2330, 2097152, s5_741>;
  _384 = s7_744 + 1048576;
  carry7_779 = _384 >> 21;
  s8_780 = s8_748 + carry7_779;
  _2329 = (signed int) carry7_779;
  s7_781 = WIDEN_MULT_MINUS_EXPR <_2329, 2097152, s7_744>;
  _386 = s9_747 + 1048576;
  carry9_782 = _386 >> 21;
  s10_783 = s10_751 + carry9_782;
  _2328 = (signed int) carry9_782;
  s9_784 = WIDEN_MULT_MINUS_EXPR <_2328, 2097152, s9_747>;
  _388 = s11_750 + 1048576;
  carry11_785 = _388 >> 21;
  s12_786 = s12_754 + carry11_785;
  _2327 = (signed int) carry11_785;
  s11_787 = WIDEN_MULT_MINUS_EXPR <_2327, 2097152, s11_750>;
  _390 = s13_753 + 1048576;
  carry13_788 = _390 >> 21;
  s14_789 = s14_757 + carry13_788;
  _2326 = (signed int) carry13_788;
  s13_790 = WIDEN_MULT_MINUS_EXPR <_2326, 2097152, s13_753>;
  _392 = s15_756 + 1048576;
  carry15_791 = _392 >> 21;
  s16_792 = s16_760 + carry15_791;
  _2325 = (signed int) carry15_791;
  s15_793 = WIDEN_MULT_MINUS_EXPR <_2325, 2097152, s15_756>;
  _394 = s17_759 + 1048576;
  carry17_794 = _394 >> 21;
  s18_795 = s18_763 + carry17_794;
  _2324 = (signed int) carry17_794;
  s17_796 = WIDEN_MULT_MINUS_EXPR <_2324, 2097152, s17_759>;
  _396 = s19_762 + 1048576;
  carry19_797 = _396 >> 21;
  s20_798 = s20_766 + carry19_797;
  _2323 = (signed int) carry19_797;
  s19_799 = WIDEN_MULT_MINUS_EXPR <_2323, 2097152, s19_762>;
  _398 = s21_765 + 1048576;
  carry21_800 = _398 >> 21;
  s22_801 = s22_769 + carry21_800;
  _2322 = (signed int) carry21_800;
  s21_802 = WIDEN_MULT_MINUS_EXPR <_2322, 2097152, s21_765>;
  _2321 = (signed int) carry22_767;
  s11_803 = WIDEN_MULT_PLUS_EXPR <_2321, 666643, s11_787>;
  _2320 = (signed int) carry22_767;
  s12_804 = WIDEN_MULT_PLUS_EXPR <_2320, 470296, s12_786>;
  _2319 = (signed int) carry22_767;
  s13_805 = WIDEN_MULT_PLUS_EXPR <_2319, 654183, s13_790>;
  _2318 = (signed int) carry22_767;
  s14_806 = WIDEN_MULT_PLUS_EXPR <_2318, -997805, s14_789>;
  _2317 = (signed int) carry22_767;
  s15_807 = WIDEN_MULT_PLUS_EXPR <_2317, 136657, s15_793>;
  _2316 = (signed int) carry22_767;
  s16_808 = WIDEN_MULT_PLUS_EXPR <_2316, -683901, s16_792>;
  _406 = s22_801 * 666643;
  s10_810 = _406 + s10_783;
  _407 = s22_801 * 470296;
  s11_811 = _407 + s11_803;
  _408 = s22_801 * 654183;
  s12_812 = _408 + s12_804;
  _409 = s22_801 * -997805;
  s13_813 = _409 + s13_805;
  _410 = s22_801 * 136657;
  s14_814 = _410 + s14_806;
  _411 = s22_801 * -683901;
  s15_815 = _411 + s15_807;
  _412 = s21_802 * 666643;
  s9_817 = _412 + s9_784;
  _413 = s21_802 * 470296;
  s10_818 = _413 + s10_810;
  _414 = s21_802 * 654183;
  s11_819 = _414 + s11_811;
  _415 = s21_802 * -997805;
  s12_820 = _415 + s12_812;
  _416 = s21_802 * 136657;
  s13_821 = _416 + s13_813;
  _417 = s21_802 * -683901;
  s14_822 = _417 + s14_814;
  _418 = s20_798 * 666643;
  s8_824 = _418 + s8_780;
  _419 = s20_798 * 470296;
  s9_825 = _419 + s9_817;
  _420 = s20_798 * 654183;
  s10_826 = _420 + s10_818;
  _421 = s20_798 * -997805;
  s11_827 = _421 + s11_819;
  _422 = s20_798 * 136657;
  s12_828 = _422 + s12_820;
  _423 = s20_798 * -683901;
  s13_829 = _423 + s13_821;
  _424 = s19_799 * 666643;
  s7_831 = _424 + s7_781;
  _425 = s19_799 * 470296;
  s8_832 = _425 + s8_824;
  _426 = s19_799 * 654183;
  s9_833 = _426 + s9_825;
  _427 = s19_799 * -997805;
  s10_834 = _427 + s10_826;
  _428 = s19_799 * 136657;
  s11_835 = _428 + s11_827;
  _429 = s19_799 * -683901;
  s12_836 = _429 + s12_828;
  _430 = s18_795 * 666643;
  s6_838 = _430 + s6_777;
  _431 = s18_795 * 470296;
  s7_839 = _431 + s7_831;
  _432 = s18_795 * 654183;
  s8_840 = _432 + s8_832;
  _433 = s18_795 * -997805;
  s9_841 = _433 + s9_833;
  _434 = s18_795 * 136657;
  s10_842 = _434 + s10_834;
  _435 = s18_795 * -683901;
  s11_843 = _435 + s11_835;
  _436 = s6_838 + 1048576;
  carry6_845 = _436 >> 21;
  s7_846 = s7_839 + carry6_845;
  _437 = carry6_845 * 2097152;
  s6_847 = s6_838 - _437;
  _438 = s8_840 + 1048576;
  carry8_848 = _438 >> 21;
  s9_849 = s9_841 + carry8_848;
  _439 = carry8_848 * 2097152;
  s8_850 = s8_840 - _439;
  _440 = s10_842 + 1048576;
  carry10_851 = _440 >> 21;
  s11_852 = s11_843 + carry10_851;
  _441 = carry10_851 * 2097152;
  s10_853 = s10_842 - _441;
  _442 = s12_836 + 1048576;
  carry12_854 = _442 >> 21;
  s13_855 = s13_829 + carry12_854;
  _443 = carry12_854 * 2097152;
  s12_856 = s12_836 - _443;
  _444 = s14_822 + 1048576;
  carry14_857 = _444 >> 21;
  s15_858 = s15_815 + carry14_857;
  _445 = carry14_857 * 2097152;
  s14_859 = s14_822 - _445;
  _446 = s16_808 + 1048576;
  carry16_860 = _446 >> 21;
  s17_861 = s17_796 + carry16_860;
  _447 = carry16_860 * 2097152;
  s16_862 = s16_808 - _447;
  _448 = s7_846 + 1048576;
  carry7_863 = _448 >> 21;
  s8_864 = s8_850 + carry7_863;
  _449 = carry7_863 * 2097152;
  s7_865 = s7_846 - _449;
  _450 = s9_849 + 1048576;
  carry9_866 = _450 >> 21;
  s10_867 = s10_853 + carry9_866;
  _451 = carry9_866 * 2097152;
  s9_868 = s9_849 - _451;
  _452 = s11_852 + 1048576;
  carry11_869 = _452 >> 21;
  s12_870 = s12_856 + carry11_869;
  _453 = carry11_869 * 2097152;
  s11_871 = s11_852 - _453;
  _454 = s13_855 + 1048576;
  carry13_872 = _454 >> 21;
  s14_873 = s14_859 + carry13_872;
  _455 = carry13_872 * 2097152;
  s13_874 = s13_855 - _455;
  _456 = s15_858 + 1048576;
  carry15_875 = _456 >> 21;
  s16_876 = s16_862 + carry15_875;
  _457 = carry15_875 * 2097152;
  s15_877 = s15_858 - _457;
  _458 = s17_861 * 666643;
  s5_878 = _458 + s5_778;
  _459 = s17_861 * 470296;
  s6_879 = _459 + s6_847;
  _460 = s17_861 * 654183;
  s7_880 = _460 + s7_865;
  _461 = s17_861 * -997805;
  s8_881 = _461 + s8_864;
  _462 = s17_861 * 136657;
  s9_882 = _462 + s9_868;
  _463 = s17_861 * -683901;
  s10_883 = _463 + s10_867;
  _464 = s16_876 * 666643;
  s4_885 = _464 + s4_774;
  _465 = s16_876 * 470296;
  s5_886 = _465 + s5_878;
  _466 = s16_876 * 654183;
  s6_887 = _466 + s6_879;
  _467 = s16_876 * -997805;
  s7_888 = _467 + s7_880;
  _468 = s16_876 * 136657;
  s8_889 = _468 + s8_881;
  _469 = s16_876 * -683901;
  s9_890 = _469 + s9_882;
  _470 = s15_877 * 666643;
  s3_892 = _470 + s3_775;
  _471 = s15_877 * 470296;
  s4_893 = _471 + s4_885;
  _472 = s15_877 * 654183;
  s5_894 = _472 + s5_886;
  _473 = s15_877 * -997805;
  s6_895 = _473 + s6_887;
  _474 = s15_877 * 136657;
  s7_896 = _474 + s7_888;
  _475 = s15_877 * -683901;
  s8_897 = _475 + s8_889;
  _476 = s14_873 * 666643;
  s2_899 = _476 + s2_771;
  _477 = s14_873 * 470296;
  s3_900 = _477 + s3_892;
  _478 = s14_873 * 654183;
  s4_901 = _478 + s4_893;
  _479 = s14_873 * -997805;
  s5_902 = _479 + s5_894;
  _480 = s14_873 * 136657;
  s6_903 = _480 + s6_895;
  _481 = s14_873 * -683901;
  s7_904 = _481 + s7_896;
  _482 = s13_874 * 666643;
  s1_906 = _482 + s1_772;
  _483 = s13_874 * 470296;
  s2_907 = _483 + s2_899;
  _484 = s13_874 * 654183;
  s3_908 = _484 + s3_900;
  _485 = s13_874 * -997805;
  s4_909 = _485 + s4_901;
  _486 = s13_874 * 136657;
  s5_910 = _486 + s5_902;
  _487 = s13_874 * -683901;
  s6_911 = _487 + s6_903;
  _488 = s12_870 * 666643;
  s0_913 = _488 + s0_736;
  _489 = s12_870 * 470296;
  s1_914 = _489 + s1_906;
  _490 = s12_870 * 654183;
  s2_915 = _490 + s2_907;
  _491 = s12_870 * -997805;
  s3_916 = _491 + s3_908;
  _492 = s12_870 * 136657;
  s4_917 = _492 + s4_909;
  _493 = s12_870 * -683901;
  s5_918 = _493 + s5_910;
  _494 = s0_913 + 1048576;
  carry0_920 = _494 >> 21;
  s1_921 = s1_914 + carry0_920;
  _495 = carry0_920 * 2097152;
  s0_922 = s0_913 - _495;
  _496 = s2_915 + 1048576;
  carry2_923 = _496 >> 21;
  s3_924 = s3_916 + carry2_923;
  _497 = carry2_923 * 2097152;
  s2_925 = s2_915 - _497;
  _498 = s4_917 + 1048576;
  carry4_926 = _498 >> 21;
  s5_927 = s5_918 + carry4_926;
  _499 = carry4_926 * 2097152;
  s4_928 = s4_917 - _499;
  _500 = s6_911 + 1048576;
  carry6_929 = _500 >> 21;
  s7_930 = s7_904 + carry6_929;
  _501 = carry6_929 * 2097152;
  s6_931 = s6_911 - _501;
  _502 = s8_897 + 1048576;
  carry8_932 = _502 >> 21;
  s9_933 = s9_890 + carry8_932;
  _503 = carry8_932 * 2097152;
  s8_934 = s8_897 - _503;
  _504 = s10_883 + 1048576;
  carry10_935 = _504 >> 21;
  s11_936 = s11_871 + carry10_935;
  _505 = carry10_935 * 2097152;
  s10_937 = s10_883 - _505;
  _506 = s1_921 + 1048576;
  carry1_938 = _506 >> 21;
  s2_939 = s2_925 + carry1_938;
  _507 = carry1_938 * 2097152;
  s1_940 = s1_921 - _507;
  _508 = s3_924 + 1048576;
  carry3_941 = _508 >> 21;
  s4_942 = s4_928 + carry3_941;
  _509 = carry3_941 * 2097152;
  s3_943 = s3_924 - _509;
  _510 = s5_927 + 1048576;
  carry5_944 = _510 >> 21;
  s6_945 = s6_931 + carry5_944;
  _511 = carry5_944 * 2097152;
  s5_946 = s5_927 - _511;
  _512 = s7_930 + 1048576;
  carry7_947 = _512 >> 21;
  s8_948 = s8_934 + carry7_947;
  _513 = carry7_947 * 2097152;
  s7_949 = s7_930 - _513;
  _514 = s9_933 + 1048576;
  carry9_950 = _514 >> 21;
  s10_951 = s10_937 + carry9_950;
  _515 = carry9_950 * 2097152;
  s9_952 = s9_933 - _515;
  _516 = s11_936 + 1048576;
  carry11_953 = _516 >> 21;
  _517 = carry11_953 * 2097152;
  s11_955 = s11_936 - _517;
  _518 = carry11_953 * 666643;
  s0_956 = _518 + s0_922;
  _519 = carry11_953 * 470296;
  s1_957 = _519 + s1_940;
  _520 = carry11_953 * 654183;
  s2_958 = _520 + s2_939;
  _521 = carry11_953 * -997805;
  s3_959 = _521 + s3_943;
  _522 = carry11_953 * 136657;
  s4_960 = _522 + s4_942;
  _523 = carry11_953 * -683901;
  s5_961 = _523 + s5_946;
  carry0_963 = s0_956 >> 21;
  s1_964 = s1_957 + carry0_963;
  _524 = carry0_963 * 2097152;
  s0_965 = s0_956 - _524;
  carry1_966 = s1_964 >> 21;
  s2_967 = s2_958 + carry1_966;
  _525 = carry1_966 * 2097152;
  s1_968 = s1_964 - _525;
  carry2_969 = s2_967 >> 21;
  s3_970 = s3_959 + carry2_969;
  _526 = carry2_969 * 2097152;
  s2_971 = s2_967 - _526;
  carry3_972 = s3_970 >> 21;
  s4_973 = s4_960 + carry3_972;
  _527 = carry3_972 * 2097152;
  s3_974 = s3_970 - _527;
  carry4_975 = s4_973 >> 21;
  s5_976 = s5_961 + carry4_975;
  _528 = carry4_975 * 2097152;
  s4_977 = s4_973 - _528;
  carry5_978 = s5_976 >> 21;
  s6_979 = s6_945 + carry5_978;
  _529 = carry5_978 * 2097152;
  s5_980 = s5_976 - _529;
  carry6_981 = s6_979 >> 21;
  s7_982 = s7_949 + carry6_981;
  _530 = carry6_981 * 2097152;
  s6_983 = s6_979 - _530;
  carry7_984 = s7_982 >> 21;
  s8_985 = s8_948 + carry7_984;
  _531 = carry7_984 * 2097152;
  s7_986 = s7_982 - _531;
  carry8_987 = s8_985 >> 21;
  s9_988 = s9_952 + carry8_987;
  _532 = carry8_987 * 2097152;
  s8_989 = s8_985 - _532;
  carry9_990 = s9_988 >> 21;
  s10_991 = s10_951 + carry9_990;
  _533 = carry9_990 * 2097152;
  s9_992 = s9_988 - _533;
  carry10_993 = s10_991 >> 21;
  s11_994 = s11_955 + carry10_993;
  _534 = carry10_993 * 2097152;
  s10_995 = s10_991 - _534;
  carry11_996 = s11_994 >> 21;
  _535 = carry11_996 * 2097152;
  s11_998 = s11_994 - _535;
  _536 = carry11_996 * 666643;
  s0_999 = _536 + s0_965;
  _537 = carry11_996 * 470296;
  s1_1000 = _537 + s1_968;
  _538 = carry11_996 * 654183;
  s2_1001 = _538 + s2_971;
  _539 = carry11_996 * -997805;
  s3_1002 = _539 + s3_974;
  _540 = carry11_996 * 136657;
  s4_1003 = _540 + s4_977;
  _541 = carry11_996 * -683901;
  s5_1004 = _541 + s5_980;
  carry0_1006 = s0_999 >> 21;
  s1_1007 = s1_1000 + carry0_1006;
  _542 = carry0_1006 * 2097152;
  s0_1008 = s0_999 - _542;
  carry1_1009 = s1_1007 >> 21;
  s2_1010 = s2_1001 + carry1_1009;
  _543 = carry1_1009 * 2097152;
  s1_1011 = s1_1007 - _543;
  carry2_1012 = s2_1010 >> 21;
  s3_1013 = s3_1002 + carry2_1012;
  _544 = carry2_1012 * 2097152;
  s2_1014 = s2_1010 - _544;
  carry3_1015 = s3_1013 >> 21;
  s4_1016 = s4_1003 + carry3_1015;
  _545 = carry3_1015 * 2097152;
  s3_1017 = s3_1013 - _545;
  carry4_1018 = s4_1016 >> 21;
  s5_1019 = s5_1004 + carry4_1018;
  _546 = carry4_1018 * 2097152;
  s4_1020 = s4_1016 - _546;
  carry5_1021 = s5_1019 >> 21;
  s6_1022 = s6_983 + carry5_1021;
  _547 = carry5_1021 * 2097152;
  s5_1023 = s5_1019 - _547;
  carry6_1024 = s6_1022 >> 21;
  s7_1025 = s7_986 + carry6_1024;
  _548 = carry6_1024 * 2097152;
  s6_1026 = s6_1022 - _548;
  carry7_1027 = s7_1025 >> 21;
  s8_1028 = s8_989 + carry7_1027;
  _549 = carry7_1027 * 2097152;
  s7_1029 = s7_1025 - _549;
  carry8_1030 = s8_1028 >> 21;
  s9_1031 = s9_992 + carry8_1030;
  _550 = carry8_1030 * 2097152;
  s8_1032 = s8_1028 - _550;
  carry9_1033 = s9_1031 >> 21;
  s10_1034 = s10_995 + carry9_1033;
  _551 = carry9_1033 * 2097152;
  s9_1035 = s9_1031 - _551;
  carry10_1036 = s10_1034 >> 21;
  s11_1037 = s11_998 + carry10_1036;
  _552 = carry10_1036 * 2097152;
  s10_1038 = s10_1034 - _552;
  _553 = (unsigned char) s0_1008;
  _554 = s0_1008 >> 8;
  _555 = (unsigned char) _554;
  _556 = s0_1008 >> 16;
  _557 = (signed char) _556;
  _558 = (signed char) s1_1011;
  _559 = _558 << 5;
  _560 = _557 | _559;
  _561 = (unsigned char) _560;
  _562 = s1_1011 >> 3;
  _563 = (unsigned char) _562;
  _564 = s1_1011 >> 11;
  _565 = (unsigned char) _564;
  _566 = s1_1011 >> 19;
  _567 = (signed char) _566;
  _568 = (signed char) s2_1014;
  _569 = _568 << 2;
  _570 = _567 | _569;
  _571 = (unsigned char) _570;
  _572 = s2_1014 >> 6;
  _573 = (unsigned char) _572;
  _574 = s2_1014 >> 14;
  _575 = (signed char) _574;
  _576 = (signed char) s3_1017;
  _577 = _576 << 7;
  _578 = _575 | _577;
  _579 = (unsigned char) _578;
  _580 = s3_1017 >> 1;
  _581 = (unsigned char) _580;
  _582 = s3_1017 >> 9;
  _583 = (unsigned char) _582;
  _584 = s3_1017 >> 17;
  _585 = (signed char) _584;
  _586 = (signed char) s4_1020;
  _587 = _586 << 4;
  _588 = _585 | _587;
  _589 = (unsigned char) _588;
  _590 = s4_1020 >> 4;
  _591 = (unsigned char) _590;
  _592 = s4_1020 >> 12;
  _593 = (unsigned char) _592;
  _594 = s4_1020 >> 20;
  _595 = (signed char) _594;
  _596 = (signed char) s5_1023;
  _597 = _596 << 1;
  _598 = _595 | _597;
  _599 = (unsigned char) _598;
  _600 = s5_1023 >> 7;
  _601 = (unsigned char) _600;
  _602 = s5_1023 >> 15;
  _603 = (signed char) _602;
  _604 = (signed char) s6_1026;
  _605 = _604 << 6;
  _606 = _603 | _605;
  _607 = (unsigned char) _606;
  _2644 = {_553, _555, _561, _563, _565, _571, _573, _579, _581, _583, _589, _591, _593, _599, _601, _607};
  _608 = s6_1026 >> 2;
  _609 = (unsigned char) _608;
  _610 = s6_1026 >> 10;
  _611 = (unsigned char) _610;
  _612 = s6_1026 >> 18;
  _613 = (signed char) _612;
  _614 = (signed char) s7_1029;
  _615 = _614 << 3;
  _616 = _613 | _615;
  _617 = (unsigned char) _616;
  _618 = s7_1029 >> 5;
  _619 = (unsigned char) _618;
  _620 = s7_1029 >> 13;
  _621 = (unsigned char) _620;
  _622 = (unsigned char) s8_1032;
  _623 = s8_1032 >> 8;
  _624 = (unsigned char) _623;
  _625 = s8_1032 >> 16;
  _626 = (signed char) _625;
  _627 = (signed char) s9_1035;
  _628 = _627 << 5;
  _629 = _626 | _628;
  _630 = (unsigned char) _629;
  _631 = s9_1035 >> 3;
  _632 = (unsigned char) _631;
  _633 = s9_1035 >> 11;
  _634 = (unsigned char) _633;
  _635 = s9_1035 >> 19;
  _636 = (signed char) _635;
  _637 = (signed char) s10_1038;
  _638 = _637 << 2;
  _639 = _636 | _638;
  _640 = (unsigned char) _639;
  _641 = s10_1038 >> 6;
  _642 = (unsigned char) _641;
  _643 = s10_1038 >> 14;
  _644 = (signed char) _643;
  _645 = (signed char) s11_1037;
  _646 = _645 << 7;
  _647 = _644 | _646;
  _648 = (unsigned char) _647;
  _649 = s11_1037 >> 1;
  _650 = (unsigned char) _649;
  _651 = s11_1037 >> 9;
  _652 = (unsigned char) _651;
  _653 = s11_1037 >> 17;
  _654 = (unsigned char) _653;
  _2643 = {_609, _611, _617, _619, _621, _622, _624, _630, _632, _634, _640, _642, _648, _650, _652, _654};
  MEM <vector(16) unsigned char> [(uint8_t *)s_1039(D)] = _2644;
  MEM <vector(16) unsigned char> [(uint8_t *)s_1039(D) + 16B] = _2643;
  return;

}



;; Function hash_init_with_dom (hash_init_with_dom, funcdef_no=446, decl_uid=18220, cgraph_uid=447, symbol_order=457)

Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 14
int hash_init_with_dom (struct EVP_MD_CTX * hash_ctx, struct EVP_MD * sha512, const uint8_t dom2flag, const uint8_t phflag, const uint8_t * context, const size_t context_len)
{
  uint8_t dom[2];
  const char dom_s[33];
  int _1;
  unsigned char _2;
  int _3;
  int _4;
  int _5;
  int _6;
  unsigned char _8;
  _Bool _25;
  _Bool _28;
  int _29;

  <bb 2> [local count: 1073741822]:
  dom_s = "SigEd25519 no Ed25519 collisions";
  _1 = EVP_DigestInit_ex (hash_ctx_12(D), sha512_13(D), 0B);
  if (_1 == 0)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 759038717]:
  goto <bb 9>; [100.00%]

  <bb 4> [local count: 708669599]:
  if (dom2flag_15(D) == 0)
    goto <bb 9>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 5> [local count: 467721933]:
  if (context_len_16(D) > 255)
    goto <bb 3>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 6> [local count: 308696474]:
  _25 = phflag_17(D) != 0;
  _8 = (unsigned char) _25;
  dom[0] = _8;
  _2 = (unsigned char) context_len_16(D);
  dom[1] = _2;
  _3 = EVP_DigestUpdate (hash_ctx_12(D), &dom_s, 32);
  if (_3 == 0)
    goto <bb 3>; [51.12%]
  else
    goto <bb 7>; [48.88%]

  <bb 7> [local count: 150890836]:
  _4 = EVP_DigestUpdate (hash_ctx_12(D), &dom, 2);
  if (_4 == 0)
    goto <bb 3>; [51.12%]
  else
    goto <bb 8>; [48.88%]

  <bb 8> [local count: 73755440]:
  _5 = EVP_DigestUpdate (hash_ctx_12(D), context_22(D), context_len_16(D));
  _28 = _5 != 0;
  _29 = (int) _28;

  <bb 9> [local count: 1073741824]:
  # _6 = PHI <0(3), _29(8), 1(4)>
  dom_s ={v} {CLOBBER(eos)};
  dom ={v} {CLOBBER(eos)};
  return _6;

}



;; Function x25519_scalar_mult (x25519_scalar_mult, funcdef_no=402, decl_uid=17294, cgraph_uid=403, symbol_order=403)

__attribute__((access ("^0[32]^1[32]^2[32]", )))
void x25519_scalar_mult (uint8_t * out, const uint8_t * scalar, const uint8_t * point)
{
  unsigned int b;
  int pos;
  unsigned int swap;
  uint8_t e[32];
  uint64_t tmp1[5];
  uint64_t tmp0[5];
  uint64_t z3[5];
  uint64_t x3[5];
  uint64_t z2[5];
  uint64_t x2[5];
  uint64_t x1[5];
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  int _8;
  int _9;
  int _10;
  int _60;
  int _73;
  unsigned char pretmp_74;
  unsigned char prephitmp_75;

  <bb 2> [local count: 10737416]:
  MEM <unsigned char[32]> [(char * {ref-all})&e] = MEM <unsigned char[32]> [(char * {ref-all})scalar_15(D)];
  _1 = e[0];
  _2 = _1 & 248;
  e[0] = _2;
  _3 = e[31];
  _4 = _3 & 127;
  _5 = _4 | 64;
  e[31] = _5;
  fe51_frombytes (&x1, point_18(D));
  fe51_1 (&x2);
  fe51_0 (&z2);
  fe51_copy (&x3, &x1);
  fe51_1 (&z3);

  <bb 3> [local count: 1063004408]:
  # swap_65 = PHI <b_37(4), 0(2)>
  # pos_66 = PHI <pos_59(4), 254(2)>
  # prephitmp_75 = PHI <pretmp_74(4), _5(2)>
  _8 = (int) prephitmp_75;
  _9 = pos_66 & 7;
  _10 = _8 >> _9;
  _60 = _10 & 1;
  b_37 = (unsigned int) _60;
  swap_38 = b_37 ^ swap_65;
  fe51_cswap (&x2, &x3, swap_38);
  fe51_cswap (&z2, &z3, swap_38);
  fe51_sub (&tmp0, &x3, &z3);
  fe51_sub (&tmp1, &x2, &z2);
  fe51_add (&x2, &x2, &z2);
  fe51_add (&z2, &x3, &z3);
  fe51_mul (&z3, &tmp0, &x2);
  fe51_mul (&z2, &z2, &tmp1);
  fe51_sq (&tmp0, &tmp1);
  fe51_sq (&tmp1, &x2);
  fe51_add (&x3, &z3, &z2);
  fe51_sub (&z2, &z3, &z2);
  fe51_mul (&x2, &tmp1, &tmp0);
  fe51_sub (&tmp1, &tmp1, &tmp0);
  fe51_sq (&z2, &z2);
  fe51_mul121666 (&z3, &tmp1);
  fe51_sq (&x3, &x3);
  fe51_add (&tmp0, &tmp0, &z3);
  fe51_mul (&z3, &x1, &z2);
  fe51_mul (&z2, &tmp1, &tmp0);
  pos_59 = pos_66 + -1;
  if (pos_59 != -1)
    goto <bb 4>; [98.99%]
  else
    goto <bb 5>; [1.01%]

  <bb 4> [local count: 1052266995]:
  _73 = pos_59 >> 3;
  pretmp_74 = e[_73];
  goto <bb 3>; [100.00%]

  <bb 5> [local count: 10737416]:
  fe51_invert (&z2, &z2);
  fe51_mul (&x2, &x2, &z2);
  fe51_tobytes (out_26(D), &x2);
  OPENSSL_cleanse (&e, 32);
  x1 ={v} {CLOBBER(eos)};
  x2 ={v} {CLOBBER(eos)};
  z2 ={v} {CLOBBER(eos)};
  x3 ={v} {CLOBBER(eos)};
  z3 ={v} {CLOBBER(eos)};
  tmp0 ={v} {CLOBBER(eos)};
  tmp1 ={v} {CLOBBER(eos)};
  e ={v} {CLOBBER(eos)};
  return;

}



;; Function fe_1 (fe_1, funcdef_no=409, decl_uid=17372, cgraph_uid=410, symbol_order=415)

__attribute__((access ("^0[10]", )))
void fe_1 (int32_t * h)
{
  int32_t * _6;

  <bb 2> [local count: 1073741824]:
  _6 = h_2(D) + 4;
  __builtin_memset (_6, 0, 36);
  *h_2(D) = 1;
  return;

}



;; Function fe_0 (fe_0, funcdef_no=408, decl_uid=17369, cgraph_uid=409, symbol_order=414)

__attribute__((access ("^0[10]", )))
void fe_0 (int32_t * h)
{
  <bb 2> [local count: 1073741824]:
  __builtin_memset (h_2(D), 0, 40); [tail call]
  return;

}



;; Function ge_p3_0 (ge_p3_0, funcdef_no=425, decl_uid=17928, cgraph_uid=426, symbol_order=433)

void ge_p3_0 (struct ge_p3 * h)
{
  int32_t[10] * _1;
  int32_t[10] * _2;
  int32_t[10] * _3;
  int32_t[10] * _4;

  <bb 2> [local count: 1073741824]:
  _1 = &h_5(D)->X;
  fe_0 (_1);
  _2 = &h_5(D)->Y;
  fe_1 (_2);
  _3 = &h_5(D)->Z;
  fe_1 (_3);
  _4 = &h_5(D)->T;
  fe_0 (_4); [tail call]
  return;

}



;; Function ge_precomp_0 (ge_precomp_0, funcdef_no=426, decl_uid=17931, cgraph_uid=427, symbol_order=434)

void ge_precomp_0 (struct ge_precomp * h)
{
  int32_t[10] * _1;
  int32_t[10] * _2;
  int32_t[10] * _3;

  <bb 2> [local count: 1073741824]:
  _1 = &h_4(D)->yplusx;
  fe_1 (_1);
  _2 = &h_4(D)->yminusx;
  fe_1 (_2);
  _3 = &h_4(D)->xy2d;
  fe_0 (_3); [tail call]
  return;

}



;; Function ge_p2_0 (ge_p2_0, funcdef_no=424, decl_uid=17925, cgraph_uid=425, symbol_order=432)

void ge_p2_0 (struct ge_p2 * h)
{
  int32_t[10] * _1;
  int32_t[10] * _2;
  int32_t[10] * _3;

  <bb 2> [local count: 1073741824]:
  _1 = &h_4(D)->X;
  fe_0 (_1);
  _2 = &h_4(D)->Y;
  fe_1 (_2);
  _3 = &h_4(D)->Z;
  fe_1 (_3); [tail call]
  return;

}



;; Function fe_copy (fe_copy, funcdef_no=407, decl_uid=17366, cgraph_uid=408, symbol_order=413)

__attribute__((access ("^0[10]^1[10]", )))
void fe_copy (int32_t * h, const int32_t * f)
{
  <bb 2> [local count: 1073741824]:
  __builtin_memmove (h_2(D), f_3(D), 40); [tail call]
  return;

}



;; Function ge_p3_to_p2 (ge_p3_to_p2, funcdef_no=427, decl_uid=17935, cgraph_uid=428, symbol_order=435)

void ge_p3_to_p2 (struct ge_p2 * r, const struct ge_p3 * p)
{
  int32_t[10] * _1;
  const int32_t[10] * _2;
  int32_t[10] * _3;
  const int32_t[10] * _4;
  int32_t[10] * _5;
  const int32_t[10] * _6;

  <bb 2> [local count: 1073741824]:
  _1 = &r_7(D)->X;
  _2 = &p_8(D)->X;
  fe_copy (_1, _2);
  _3 = &r_7(D)->Y;
  _4 = &p_8(D)->Y;
  fe_copy (_3, _4);
  _5 = &r_7(D)->Z;
  _6 = &p_8(D)->Z;
  fe_copy (_5, _6); [tail call]
  return;

}



;; Function ge_p3_dbl (ge_p3_dbl, funcdef_no=432, decl_uid=17957, cgraph_uid=433, symbol_order=441)

void ge_p3_dbl (struct ge_p1p1 * r, const struct ge_p3 * p)
{
  struct ge_p2 q;

  <bb 2> [local count: 1073741824]:
  ge_p3_to_p2 (&q, p_2(D));
  ge_p2_dbl (r_4(D), &q);
  q ={v} {CLOBBER(eos)};
  return;

}



;; Function table_select (table_select, funcdef_no=440, decl_uid=18005, cgraph_uid=441, symbol_order=450)

void table_select (struct ge_precomp * t, int pos, signed char b)
{
  uint8_t babs;
  uint8_t bnegative;
  struct ge_precomp minust;
  unsigned char b.3_1;
  unsigned char _2;
  unsigned char _3;
  const struct ge_precomp * _4;
  signed char babs.4_5;
  unsigned char _6;
  const struct ge_precomp * _7;
  unsigned char _8;
  const struct ge_precomp * _9;
  unsigned char _10;
  const struct ge_precomp * _11;
  unsigned char _12;
  const struct ge_precomp * _13;
  unsigned char _14;
  const struct ge_precomp * _15;
  unsigned char _16;
  const struct ge_precomp * _17;
  unsigned char _18;
  const struct ge_precomp * _19;
  unsigned char _20;
  int32_t[10] * _21;
  int32_t[10] * _22;
  int32_t[10] * _23;
  sizetype _44;
  sizetype _45;
  sizetype _48;
  sizetype _51;
  sizetype _54;
  sizetype _57;
  sizetype _60;
  sizetype _63;
  sizetype _66;
  unsigned int _67;

  <bb 2> [local count: 1073741824]:
  bnegative_26 = negative (b_25(D));
  b.3_1 = (unsigned char) b_25(D);
  _2 = b.3_1 * bnegative_26;
  _3 = _2 << 1;
  babs_27 = b.3_1 - _3;
  ge_precomp_0 (t_28(D));
  _44 = (sizetype) pos_30(D);
  _67 = (unsigned int) _44;
  _45 = _67 w* 960;
  _4 = &k25519Precomp + _45;
  babs.4_5 = (signed char) babs_27;
  _6 = equal (babs.4_5, 1);
  cmov (t_28(D), _4, _6);
  _48 = _45 + 120;
  _7 = &k25519Precomp + _48;
  _8 = equal (babs.4_5, 2);
  cmov (t_28(D), _7, _8);
  _51 = _45 + 240;
  _9 = &k25519Precomp + _51;
  _10 = equal (babs.4_5, 3);
  cmov (t_28(D), _9, _10);
  _54 = _45 + 360;
  _11 = &k25519Precomp + _54;
  _12 = equal (babs.4_5, 4);
  cmov (t_28(D), _11, _12);
  _57 = _45 + 480;
  _13 = &k25519Precomp + _57;
  _14 = equal (babs.4_5, 5);
  cmov (t_28(D), _13, _14);
  _60 = _45 + 600;
  _15 = &k25519Precomp + _60;
  _16 = equal (babs.4_5, 6);
  cmov (t_28(D), _15, _16);
  _63 = _45 + 720;
  _17 = &k25519Precomp + _63;
  _18 = equal (babs.4_5, 7);
  cmov (t_28(D), _17, _18);
  _66 = _45 + 840;
  _19 = &k25519Precomp + _66;
  _20 = equal (babs.4_5, 8);
  cmov (t_28(D), _19, _20);
  _21 = &t_28(D)->yminusx;
  fe_copy (&minust.yplusx, _21);
  _22 = &t_28(D)->yplusx;
  fe_copy (&minust.yminusx, _22);
  _23 = &t_28(D)->xy2d;
  fe_neg (&minust.xy2d, _23);
  cmov (t_28(D), &minust, bnegative_26);
  minust ={v} {CLOBBER(eos)};
  return;

}



;; Function ge_scalarmult_base (ge_scalarmult_base, funcdef_no=441, decl_uid=18012, cgraph_uid=442, symbol_order=451)

Removing basic block 9
Removing basic block 10
Removing basic block 11
void ge_scalarmult_base (struct ge_p3 * h, const uint8_t * a)
{
  unsigned long ivtmp.591;
  unsigned long ivtmp.583;
  unsigned long ivtmp.572;
  vector(16) signed char vect_array.561[2];
  vector(16) signed char vect__8.558;
  const vector(16) unsigned char vect__6.557;
  vector(16) signed char vect__5.556;
  vector(16) unsigned char vect__48.555;
  const vector(16) unsigned char vect__3.554;
  int i;
  struct ge_precomp t;
  struct ge_p2 s;
  struct ge_p1p1 r;
  signed char carry;
  signed char e[64];
  unsigned int _2;
  signed char _9;
  unsigned char _10;
  unsigned char carry.0_11;
  unsigned char _12;
  unsigned char _13;
  unsigned char carry.1_14;
  unsigned char _15;
  unsigned char _16;
  signed char _17;
  signed char _18;
  unsigned char _19;
  void * _20;
  unsigned char _21;
  signed char _22;
  int _23;
  signed char _24;
  int _25;
  signed char _26;
  unsigned long _30;
  void * _32;
  unsigned int _81;
  unsigned int _92;
  void * _94;
  unsigned int _103;
  unsigned long _108;

  <bb 2> [local count: 16750376]:
  vect__3.554_3 = MEM <const vector(16) unsigned char> [(const uint8_t *)a_66(D)];
  vect__48.555_4 = vect__3.554_3 & { 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15 };
  vect__5.556_48 = VIEW_CONVERT_EXPR<vector(16) signed char>(vect__48.555_4);
  vect__6.557_5 = vect__3.554_3 >> 4;
  vect__8.558_6 = VIEW_CONVERT_EXPR<vector(16) signed char>(vect__6.557_5);
  vect_array.561 ={v} {CLOBBER};
  vect_array.561[0] = vect__5.556_48;
  vect_array.561[1] = vect__8.558_6;
  MEM <signed char[32]> [(signed char *)&e] = .STORE_LANES (vect_array.561);
  vect_array.561 ={v} {CLOBBER};
  vect__3.554_88 = MEM <const vector(16) unsigned char> [(const uint8_t *)a_66(D) + 16B];
  vect__48.555_80 = vect__3.554_88 & { 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15 };
  vect__5.556_78 = VIEW_CONVERT_EXPR<vector(16) signed char>(vect__48.555_80);
  vect__6.557_77 = vect__3.554_88 >> 4;
  vect__8.558_76 = VIEW_CONVERT_EXPR<vector(16) signed char>(vect__6.557_77);
  vect_array.561 ={v} {CLOBBER};
  vect_array.561[0] = vect__5.556_78;
  vect_array.561[1] = vect__8.558_76;
  MEM <signed char[32]> [(signed char *)&e + 32B] = .STORE_LANES (vect_array.561);
  vect_array.561 ={v} {CLOBBER};
  ivtmp.591_27 = (unsigned long) &e;
  _108 = ivtmp.591_27 + 63;

  <bb 3> [local count: 1056991448]:
  # carry_79 = PHI <carry_63(3), 0(2)>
  # ivtmp.591_29 = PHI <ivtmp.591_28(3), ivtmp.591_27(2)>
  _20 = (void *) ivtmp.591_29;
  _9 = MEM[(signed char *)_20];
  _10 = (unsigned char) _9;
  carry.0_11 = (unsigned char) carry_79;
  _12 = _10 + carry.0_11;
  _13 = _12 + 8;
  carry_62 = (signed char) _13;
  carry_63 = carry_62 >> 4;
  carry.1_14 = (unsigned char) carry_63;
  _15 = carry.1_14 << 4;
  _16 = _12 - _15;
  _17 = (signed char) _16;
  MEM[(signed char *)_20] = _17;
  ivtmp.591_28 = ivtmp.591_29 + 1;
  if (ivtmp.591_28 != _108)
    goto <bb 3>; [98.42%]
  else
    goto <bb 4>; [1.58%]

  <bb 4> [local count: 16750376]:
  _18 = e[63];
  _19 = (unsigned char) _18;
  _21 = carry.1_14 + _19;
  _22 = (signed char) _21;
  e[63] = _22;
  ge_p3_0 (h_38(D));
  _30 = ivtmp.591_27 + 64;

  <bb 5> [local count: 536067336]:
  # ivtmp.583_74 = PHI <ivtmp.583_33(5), ivtmp.591_27(4)>
  _92 = (unsigned int) ivtmp.591_27;
  _2 = (unsigned int) ivtmp.583_74;
  _103 = 1 - _92;
  _81 = _2 + _103;
  i_83 = (int) _81;
  _23 = i_83 >> 1;
  _94 = (void *) ivtmp.583_74;
  _24 = MEM[(signed char *)_94 + 1B];
  table_select (&t, _23, _24);
  ge_madd (&r, h_38(D), &t);
  ge_p1p1_to_p3 (h_38(D), &r);
  ivtmp.583_33 = ivtmp.583_74 + 2;
  if (_30 != ivtmp.583_33)
    goto <bb 5>; [96.88%]
  else
    goto <bb 6>; [3.12%]

  <bb 6> [local count: 16750376]:
  ge_p3_dbl (&r, h_38(D));
  ge_p1p1_to_p2 (&s, &r);
  ge_p2_dbl (&r, &s);
  ge_p1p1_to_p2 (&s, &r);
  ge_p2_dbl (&r, &s);
  ge_p1p1_to_p2 (&s, &r);
  ge_p2_dbl (&r, &s);
  ge_p1p1_to_p3 (h_38(D), &r);

  <bb 7> [local count: 536067336]:
  # i_84 = PHI <i_57(7), 0(6)>
  # ivtmp.572_90 = PHI <ivtmp.572_105(7), ivtmp.591_27(6)>
  _25 = i_84 >> 1;
  _32 = (void *) ivtmp.572_90;
  _26 = MEM[(signed char *)_32];
  table_select (&t, _25, _26);
  ge_madd (&r, h_38(D), &t);
  ge_p1p1_to_p3 (h_38(D), &r);
  i_57 = i_84 + 2;
  ivtmp.572_105 = ivtmp.572_90 + 2;
  if (i_57 != 64)
    goto <bb 7>; [96.88%]
  else
    goto <bb 8>; [3.12%]

  <bb 8> [local count: 16750376]:
  OPENSSL_cleanse (&e, 64);
  e ={v} {CLOBBER(eos)};
  r ={v} {CLOBBER(eos)};
  s ={v} {CLOBBER(eos)};
  t ={v} {CLOBBER(eos)};
  return;

}



;; Function ge_p3_to_cached (ge_p3_to_cached, funcdef_no=428, decl_uid=17940, cgraph_uid=429, symbol_order=437)

void ge_p3_to_cached (struct ge_cached * r, const struct ge_p3 * p)
{
  int32_t[10] * _1;
  const int32_t[10] * _2;
  const int32_t[10] * _3;
  int32_t[10] * _4;
  int32_t[10] * _5;
  const int32_t[10] * _6;
  int32_t[10] * _7;
  const int32_t[10] * _8;

  <bb 2> [local count: 1073741824]:
  _1 = &r_9(D)->YplusX;
  _2 = &p_10(D)->Y;
  _3 = &p_10(D)->X;
  fe_add (_1, _2, _3);
  _4 = &r_9(D)->YminusX;
  fe_sub (_4, _2, _3);
  _5 = &r_9(D)->Z;
  _6 = &p_10(D)->Z;
  fe_copy (_5, _6);
  _7 = &r_9(D)->T2d;
  _8 = &p_10(D)->T;
  fe_mul (_7, _8, &d2); [tail call]
  return;

}



;; Function ge_double_scalarmult_vartime (ge_double_scalarmult_vartime, funcdef_no=443, decl_uid=18064, cgraph_uid=444, symbol_order=454)

Removing basic block 49
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 60
Removing basic block 61
Removing basic block 62
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 66
Removing basic block 67
Removing basic block 68
Removing basic block 69
Removing basic block 70
Removing basic block 71
Removing basic block 72
Removing basic block 73
Removing basic block 74
Removing basic block 75
Removing basic block 76
Removing basic block 77
Removing basic block 78
Removing basic block 79
Removing basic block 80
Removing basic block 81
Removing basic block 82
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 87
Removing basic block 88
Removing basic block 89
void ge_double_scalarmult_vartime (struct ge_p2 * r, const uint8_t * a, const struct ge_p3 * A, const uint8_t * b)
{
  sizetype ivtmp.634;
  sizetype ivtmp.620;
  vector(16) <signed-boolean:8> mask_patt_87.613;
  vector(16) signed char vect__2.612;
  vector(16) signed char vect__2.611;
  vector(16) <signed-boolean:8> mask_patt_88.608;
  vector(16) signed char vect__1.607;
  vector(16) signed char vect__1.606;
  vector(4) unsigned int vect_vec_iv_.603;
  vector(4) int vect_vec_iv_.602;
  int i;
  struct ge_p3 A2;
  struct ge_p3 u;
  struct ge_p1p1 t;
  struct ge_cached Ai[8];
  signed char bslide[256];
  signed char aslide[256];
  signed char _3;
  signed char _4;
  struct ge_cached * _6;
  int _8;
  int _9;
  struct ge_cached * _10;
  signed char _11;
  signed char _12;
  const struct ge_precomp * _14;
  int _15;
  int _16;
  const struct ge_precomp * _17;
  sizetype _18;
  sizetype _19;
  sizetype _22;
  sizetype _72;
  sizetype _73;
  sizetype _74;
  sizetype _75;
  sizetype _76;
  unsigned int _78;
  unsigned int _80;
  sizetype _81;
  sizetype _82;
  unsigned int _83;
  sizetype _84;
  sizetype _95;
  signed char _96;
  signed char _99;
  int _116;
  unsigned int _126;
  int _143;
  unsigned int _145;
  unsigned int _147;
  unsigned int _150;
  sizetype _151;
  sizetype _153;
  int _158;
  unsigned int _161;
  sizetype _162;
  sizetype _170;

  <bb 2> [local count: 87125386]:
  slide (&aslide, a_24(D));
  slide (&bslide, b_26(D));
  ge_p3_to_cached (&Ai[0], A_28(D));
  ge_p3_dbl (&t, A_28(D));
  ge_p1p1_to_p3 (&A2, &t);
  ge_add (&t, &A2, &Ai[0]);
  ge_p1p1_to_p3 (&u, &t);
  ge_p3_to_cached (&Ai[1], &u);
  ge_add (&t, &A2, &Ai[1]);
  ge_p1p1_to_p3 (&u, &t);
  ge_p3_to_cached (&Ai[2], &u);
  ge_add (&t, &A2, &Ai[2]);
  ge_p1p1_to_p3 (&u, &t);
  ge_p3_to_cached (&Ai[3], &u);
  ge_add (&t, &A2, &Ai[3]);
  ge_p1p1_to_p3 (&u, &t);
  ge_p3_to_cached (&Ai[4], &u);
  ge_add (&t, &A2, &Ai[4]);
  ge_p1p1_to_p3 (&u, &t);
  ge_p3_to_cached (&Ai[5], &u);
  ge_add (&t, &A2, &Ai[5]);
  ge_p1p1_to_p3 (&u, &t);
  ge_p3_to_cached (&Ai[6], &u);
  ge_add (&t, &A2, &Ai[6]);
  ge_p1p1_to_p3 (&u, &t);
  ge_p3_to_cached (&Ai[7], &u);
  ge_p2_0 (r_53(D));
  vect__1.606_112 = MEM <vector(16) signed char> [(signed char *)&aslide + 240B];
  vect__1.607_159 = VEC_PERM_EXPR <vect__1.606_112, vect__1.606_112, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_113 = vect__1.607_159 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_113 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 3>; [96.34%]

  <bb 3> [local count: 83936597]:
  vect__2.611_1 = MEM <vector(16) signed char> [(signed char *)&bslide + 240B];
  vect__2.612_2 = VEC_PERM_EXPR <vect__2.611_1, vect__2.611_1, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_146 = vect__2.612_2 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_146 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 4>; [96.34%]

  <bb 4> [local count: 80864517]:
  vect__1.606_89 = MEM <vector(16) signed char> [(signed char *)&aslide + 224B];
  vect__1.607_103 = VEC_PERM_EXPR <vect__1.606_89, vect__1.606_89, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_101 = vect__1.607_103 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_101 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 5>; [96.34%]

  <bb 5> [local count: 77904874]:
  vect__2.611_104 = MEM <vector(16) signed char> [(signed char *)&bslide + 224B];
  vect__2.612_102 = VEC_PERM_EXPR <vect__2.611_104, vect__2.611_104, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_107 = vect__2.612_102 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_107 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 6>; [96.34%]

  <bb 6> [local count: 75053556]:
  vect__1.606_144 = MEM <vector(16) signed char> [(signed char *)&aslide + 208B];
  vect__1.607_86 = VEC_PERM_EXPR <vect__1.606_144, vect__1.606_144, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_87 = vect__1.607_86 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_87 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 7>; [96.34%]

  <bb 7> [local count: 72306595]:
  vect__2.611_88 = MEM <vector(16) signed char> [(signed char *)&bslide + 208B];
  vect__2.612_93 = VEC_PERM_EXPR <vect__2.611_88, vect__2.611_88, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_92 = vect__2.612_93 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_92 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 8>; [96.34%]

  <bb 8> [local count: 69660174]:
  vect__1.606_173 = MEM <vector(16) signed char> [(signed char *)&aslide + 192B];
  vect__1.607_174 = VEC_PERM_EXPR <vect__1.606_173, vect__1.606_173, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_175 = vect__1.607_174 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_175 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 9>; [96.34%]

  <bb 9> [local count: 67110608]:
  vect__2.611_176 = MEM <vector(16) signed char> [(signed char *)&bslide + 192B];
  vect__2.612_177 = VEC_PERM_EXPR <vect__2.611_176, vect__2.611_176, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_178 = vect__2.612_177 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_178 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 10>; [96.34%]

  <bb 10> [local count: 64654359]:
  vect__1.606_191 = MEM <vector(16) signed char> [(signed char *)&aslide + 176B];
  vect__1.607_192 = VEC_PERM_EXPR <vect__1.606_191, vect__1.606_191, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_193 = vect__1.607_192 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_193 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 11>; [96.34%]

  <bb 11> [local count: 62288008]:
  vect__2.611_194 = MEM <vector(16) signed char> [(signed char *)&bslide + 176B];
  vect__2.612_195 = VEC_PERM_EXPR <vect__2.611_194, vect__2.611_194, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_196 = vect__2.612_195 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_196 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 12>; [96.34%]

  <bb 12> [local count: 60008267]:
  vect__1.606_209 = MEM <vector(16) signed char> [(signed char *)&aslide + 160B];
  vect__1.607_210 = VEC_PERM_EXPR <vect__1.606_209, vect__1.606_209, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_211 = vect__1.607_210 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_211 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 13>; [96.34%]

  <bb 13> [local count: 57811962]:
  vect__2.611_212 = MEM <vector(16) signed char> [(signed char *)&bslide + 160B];
  vect__2.612_213 = VEC_PERM_EXPR <vect__2.611_212, vect__2.611_212, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_214 = vect__2.612_213 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_214 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 14>; [96.34%]

  <bb 14> [local count: 55696046]:
  vect__1.606_227 = MEM <vector(16) signed char> [(signed char *)&aslide + 144B];
  vect__1.607_228 = VEC_PERM_EXPR <vect__1.606_227, vect__1.606_227, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_229 = vect__1.607_228 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_229 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 15>; [96.34%]

  <bb 15> [local count: 53657570]:
  vect__2.611_230 = MEM <vector(16) signed char> [(signed char *)&bslide + 144B];
  vect__2.612_231 = VEC_PERM_EXPR <vect__2.611_230, vect__2.611_230, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_232 = vect__2.612_231 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_232 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 16>; [96.34%]

  <bb 16> [local count: 51693706]:
  vect__1.606_245 = MEM <vector(16) signed char> [(signed char *)&aslide + 128B];
  vect__1.607_246 = VEC_PERM_EXPR <vect__1.606_245, vect__1.606_245, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_247 = vect__1.607_246 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_247 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 17>; [96.34%]

  <bb 17> [local count: 49801716]:
  vect__2.611_248 = MEM <vector(16) signed char> [(signed char *)&bslide + 128B];
  vect__2.612_249 = VEC_PERM_EXPR <vect__2.611_248, vect__2.611_248, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_250 = vect__2.612_249 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_250 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 18>; [96.34%]

  <bb 18> [local count: 47978973]:
  vect__1.606_263 = MEM <vector(16) signed char> [(signed char *)&aslide + 112B];
  vect__1.607_264 = VEC_PERM_EXPR <vect__1.606_263, vect__1.606_263, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_265 = vect__1.607_264 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_265 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 19>; [96.34%]

  <bb 19> [local count: 46222942]:
  vect__2.611_266 = MEM <vector(16) signed char> [(signed char *)&bslide + 112B];
  vect__2.612_267 = VEC_PERM_EXPR <vect__2.611_266, vect__2.611_266, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_268 = vect__2.612_267 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_268 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 20>; [96.34%]

  <bb 20> [local count: 44531182]:
  vect__1.606_281 = MEM <vector(16) signed char> [(signed char *)&aslide + 96B];
  vect__1.607_282 = VEC_PERM_EXPR <vect__1.606_281, vect__1.606_281, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_283 = vect__1.607_282 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_283 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 21>; [96.34%]

  <bb 21> [local count: 42901341]:
  vect__2.611_284 = MEM <vector(16) signed char> [(signed char *)&bslide + 96B];
  vect__2.612_285 = VEC_PERM_EXPR <vect__2.611_284, vect__2.611_284, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_286 = vect__2.612_285 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_286 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 22>; [96.34%]

  <bb 22> [local count: 41331154]:
  vect__1.606_299 = MEM <vector(16) signed char> [(signed char *)&aslide + 80B];
  vect__1.607_300 = VEC_PERM_EXPR <vect__1.606_299, vect__1.606_299, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_301 = vect__1.607_300 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_301 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 23>; [96.34%]

  <bb 23> [local count: 39818433]:
  vect__2.611_302 = MEM <vector(16) signed char> [(signed char *)&bslide + 80B];
  vect__2.612_303 = VEC_PERM_EXPR <vect__2.611_302, vect__2.611_302, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_304 = vect__2.612_303 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_304 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 24>; [96.34%]

  <bb 24> [local count: 38361082]:
  vect__1.606_317 = MEM <vector(16) signed char> [(signed char *)&aslide + 64B];
  vect__1.607_318 = VEC_PERM_EXPR <vect__1.606_317, vect__1.606_317, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_319 = vect__1.607_318 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_319 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 25>; [96.34%]

  <bb 25> [local count: 36957067]:
  vect__2.611_320 = MEM <vector(16) signed char> [(signed char *)&bslide + 64B];
  vect__2.612_321 = VEC_PERM_EXPR <vect__2.611_320, vect__2.611_320, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_322 = vect__2.612_321 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_322 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 26>; [96.34%]

  <bb 26> [local count: 35604439]:
  vect__1.606_335 = MEM <vector(16) signed char> [(signed char *)&aslide + 48B];
  vect__1.607_336 = VEC_PERM_EXPR <vect__1.606_335, vect__1.606_335, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_337 = vect__1.607_336 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_337 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 27>; [96.34%]

  <bb 27> [local count: 34301317]:
  vect__2.611_338 = MEM <vector(16) signed char> [(signed char *)&bslide + 48B];
  vect__2.612_339 = VEC_PERM_EXPR <vect__2.611_338, vect__2.611_338, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_340 = vect__2.612_339 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_340 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 28>; [96.34%]

  <bb 28> [local count: 33045891]:
  vect__1.606_353 = MEM <vector(16) signed char> [(signed char *)&aslide + 32B];
  vect__1.607_354 = VEC_PERM_EXPR <vect__1.606_353, vect__1.606_353, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_355 = vect__1.607_354 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_355 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 29>; [96.34%]

  <bb 29> [local count: 31836412]:
  vect__2.611_356 = MEM <vector(16) signed char> [(signed char *)&bslide + 32B];
  vect__2.612_357 = VEC_PERM_EXPR <vect__2.611_356, vect__2.611_356, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_358 = vect__2.612_357 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_358 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 30>; [96.34%]

  <bb 30> [local count: 30671199]:
  vect__1.606_371 = MEM <vector(16) signed char> [(signed char *)&aslide + 16B];
  vect__1.607_372 = VEC_PERM_EXPR <vect__1.606_371, vect__1.606_371, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_373 = vect__1.607_372 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_373 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 31>; [96.34%]

  <bb 31> [local count: 29548632]:
  vect__2.611_374 = MEM <vector(16) signed char> [(signed char *)&bslide + 16B];
  vect__2.612_375 = VEC_PERM_EXPR <vect__2.611_374, vect__2.611_374, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_376 = vect__2.612_375 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_376 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 32>; [96.34%]

  <bb 32> [local count: 28467152]:
  vect__1.606_130 = MEM <vector(16) signed char> [(signed char *)&aslide];
  vect__1.607_131 = VEC_PERM_EXPR <vect__1.606_130, vect__1.606_130, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_88.608_133 = vect__1.607_131 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_88.608_133 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 33>; [96.34%]

  <bb 33> [local count: 27425251]:
  vect__2.611_139 = MEM <vector(16) signed char> [(signed char *)&bslide];
  vect__2.612_140 = VEC_PERM_EXPR <vect__2.611_139, vect__2.611_139, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }>;
  mask_patt_87.613_142 = vect__2.612_140 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  if (mask_patt_87.613_142 != { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 })
    goto <bb 34>; [3.66%]
  else
    goto <bb 47>; [96.34%]

  <bb 34> [local count: 82224579]:
  # vect_vec_iv_.602_115 = PHI <{ 15, 14, 13, 12 }(32), { 63, 62, 61, 60 }(27), { 255, 254, 253, 252 }(3), { 111, 110, 109, 108 }(21), { 239, 238, 237, 236 }(5), { 31, 30, 29, 28 }(31), { 223, 222, 221, 220 }(7), { 143, 142, 141, 140 }(17), { 207, 206, 205, 204 }(9), { 95, 94, 93, 92 }(23), { 191, 190, 189, 188 }(11), { 127, 126, 125, 124 }(19), { 175, 174, 173, 172 }(13), { 47, 46, 45, 44 }(29), { 159, 158, 157, 156 }(15), { 79, 78, 77, 76 }(25), { 79, 78, 77, 76 }(24), { 239, 238, 237, 236 }(4), { 63, 62, 61, 60 }(26), { 175, 174, 173, 172 }(12), { 95, 94, 93, 92 }(22), { 15, 14, 13, 12 }(33), { 31, 30, 29, 28 }(30), { 159, 158, 157, 156 }(14), { 223, 222, 221, 220 }(6), { 111, 110, 109, 108 }(20), { 207, 206, 205, 204 }(8), { 127, 126, 125, 124 }(18), { 255, 254, 253, 252 }(2), { 191, 190, 189, 188 }(10), { 143, 142, 141, 140 }(16), { 47, 46, 45, 44 }(28)>
  # vect_vec_iv_.603_125 = PHI <{ 16, 15, 14, 13 }(32), { 64, 63, 62, 61 }(27), { 256, 255, 254, 253 }(3), { 112, 111, 110, 109 }(21), { 240, 239, 238, 237 }(5), { 32, 31, 30, 29 }(31), { 224, 223, 222, 221 }(7), { 144, 143, 142, 141 }(17), { 208, 207, 206, 205 }(9), { 96, 95, 94, 93 }(23), { 192, 191, 190, 189 }(11), { 128, 127, 126, 125 }(19), { 176, 175, 174, 173 }(13), { 48, 47, 46, 45 }(29), { 160, 159, 158, 157 }(15), { 80, 79, 78, 77 }(25), { 80, 79, 78, 77 }(24), { 240, 239, 238, 237 }(4), { 64, 63, 62, 61 }(26), { 176, 175, 174, 173 }(12), { 96, 95, 94, 93 }(22), { 16, 15, 14, 13 }(33), { 32, 31, 30, 29 }(30), { 160, 159, 158, 157 }(14), { 224, 223, 222, 221 }(6), { 112, 111, 110, 109 }(20), { 208, 207, 206, 205 }(8), { 128, 127, 126, 125 }(18), { 256, 255, 254, 253 }(2), { 192, 191, 190, 189 }(10), { 144, 143, 142, 141 }(16), { 48, 47, 46, 45 }(28)>
  _126 = BIT_FIELD_REF <vect_vec_iv_.603_125, 32, 0>;
  _116 = BIT_FIELD_REF <vect_vec_iv_.602_115, 32, 0>;
  _143 = _116 + -1;
  ivtmp.634_120 = (sizetype) _143;
  _82 = (sizetype) _116;
  _83 = _126 + 4294967295;
  _84 = (sizetype) _83;
  _95 = _82 + 18446744073709551614;
  _170 = _95 - _84;

  <bb 35> [local count: 1003210413]:
  # ivtmp.634_110 = PHI <ivtmp.634_117(36), ivtmp.634_120(34)>
  _96 = MEM[(signed char *)&aslide + 1B + ivtmp.634_110 * 1];
  if (_96 != 0)
    goto <bb 48>; [3.66%]
  else
    goto <bb 37>; [96.34%]

  <bb 36> [local count: 931119269]:
  ivtmp.634_117 = ivtmp.634_110 + 18446744073709551615;
  if (ivtmp.634_117 != _170)
    goto <bb 35>; [98.91%]
  else
    goto <bb 47>; [1.09%]

  <bb 37> [local count: 966492910]:
  _99 = MEM[(signed char *)&bslide + 1B + ivtmp.634_110 * 1];
  if (_99 != 0)
    goto <bb 48>; [3.66%]
  else
    goto <bb 36>; [96.34%]

  <bb 38> [local count: 704923557]:
  # ivtmp.620_123 = PHI <ivtmp.620_109(46), ivtmp.620_111(48)>
  ge_p2_dbl (&t, r_53(D));
  _3 = MEM[(signed char *)&aslide + 1B + ivtmp.620_123 * 1];
  if (_3 > 0)
    goto <bb 39>; [41.48%]
  else
    goto <bb 40>; [58.52%]

  <bb 39> [local count: 292402294]:
  ge_p1p1_to_p3 (&u, &t);
  _4 = _3 >> 1;
  _73 = (sizetype) _4;
  _78 = (unsigned int) _73;
  _75 = _78 w* 160;
  _6 = &Ai + _75;
  ge_add (&t, &u, _6);
  goto <bb 42>; [100.00%]

  <bb 40> [local count: 412521264]:
  if (_3 != 0)
    goto <bb 41>; [33.00%]
  else
    goto <bb 42>; [67.00%]

  <bb 41> [local count: 136132016]:
  ge_p1p1_to_p3 (&u, &t);
  _8 = (int) _3;
  _9 = _8 / -2;
  _22 = (sizetype) _9;
  _161 = (unsigned int) _22;
  _19 = _161 w* 160;
  _10 = &Ai + _19;
  ge_sub (&t, &u, _10);

  <bb 42> [local count: 704923557]:
  _11 = MEM[(signed char *)&bslide + 1B + ivtmp.620_123 * 1];
  if (_11 > 0)
    goto <bb 43>; [41.48%]
  else
    goto <bb 44>; [58.52%]

  <bb 43> [local count: 292402294]:
  ge_p1p1_to_p3 (&u, &t);
  _12 = _11 >> 1;
  _18 = (sizetype) _12;
  _80 = (unsigned int) _18;
  _76 = _80 w* 120;
  _14 = &Bi + _76;
  ge_madd (&t, &u, _14);
  goto <bb 46>; [100.00%]

  <bb 44> [local count: 412521264]:
  if (_11 != 0)
    goto <bb 45>; [33.00%]
  else
    goto <bb 46>; [67.00%]

  <bb 45> [local count: 136132016]:
  ge_p1p1_to_p3 (&u, &t);
  _15 = (int) _11;
  _16 = _15 / -2;
  _74 = (sizetype) _16;
  _147 = (unsigned int) _74;
  _81 = _147 w* 120;
  _17 = &Bi + _81;
  ge_msub (&t, &u, _17);

  <bb 46> [local count: 704923557]:
  ge_p1p1_to_p2 (r_53(D), &t);
  ivtmp.620_109 = ivtmp.620_123 + 18446744073709551615;
  if (ivtmp.620_109 != _153)
    goto <bb 38>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 47> [local count: 87125383]:
  aslide ={v} {CLOBBER(eos)};
  bslide ={v} {CLOBBER(eos)};
  Ai ={v} {CLOBBER(eos)};
  t ={v} {CLOBBER(eos)};
  u ={v} {CLOBBER(eos)};
  A2 ={v} {CLOBBER(eos)};
  return;

  <bb 48> [local count: 77541591]:
  _145 = (unsigned int) ivtmp.634_110;
  _150 = _145 + 1;
  i_94 = (int) _150;
  _158 = (int) ivtmp.634_110;
  ivtmp.620_111 = (sizetype) _158;
  _162 = (sizetype) i_94;
  _151 = (sizetype) i_94;
  _72 = _162 + 18446744073709551614;
  _153 = _72 - _151;
  goto <bb 38>; [100.00%]

}



;; Function fe_isnonzero (fe_isnonzero, funcdef_no=417, decl_uid=17717, cgraph_uid=418, symbol_order=423)

__attribute__((access ("^0[10]", )))
int fe_isnonzero (const int32_t * f)
{
  static const uint8_t zero[32] = "\x00";
  uint8_t s[32];
  int _1;
  _Bool _2;
  int _7;

  <bb 2> [local count: 1073741824]:
  fe_tobytes (&s, f_4(D));
  _1 = CRYPTO_memcmp (&s, &zero, 32);
  _2 = _1 != 0;
  _7 = (int) _2;
  s ={v} {CLOBBER(eos)};
  return _7;

}



;; Function ge_frombytes_vartime (ge_frombytes_vartime, funcdef_no=423, decl_uid=17917, cgraph_uid=424, symbol_order=431)

Removing basic block 9
Removing basic block 10
Removing basic block 11
int ge_frombytes_vartime (struct ge_p3 * h, const uint8_t * s)
{
  int32_t check[10];
  int32_t vxx[10];
  int32_t w[10];
  int32_t v[10];
  int32_t u[10];
  int32_t[10] * _1;
  int32_t[10] * _2;
  int32_t[10] * _3;
  int _4;
  int _5;
  int _6;
  unsigned char _7;
  unsigned char _8;
  int _9;
  int32_t[10] * _10;
  int _11;

  <bb 2> [local count: 1073741822]:
  _1 = &h_15(D)->Y;
  fe_frombytes (_1, s_17(D));
  _2 = &h_15(D)->Z;
  fe_1 (_2);
  fe_sq (&u, _1);
  fe_mul (&v, &u, &d);
  fe_sub (&u, &u, _2);
  fe_add (&v, &v, _2);
  fe_mul (&w, &u, &v);
  _3 = &h_15(D)->X;
  fe_pow22523 (_3, &w);
  fe_mul (_3, _3, &u);
  fe_sq (&vxx, _3);
  fe_mul (&vxx, &vxx, &v);
  fe_sub (&check, &vxx, &u);
  _4 = fe_isnonzero (&check);
  if (_4 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 3> [local count: 354334800]:
  fe_add (&check, &vxx, &u);
  _5 = fe_isnonzero (&check);
  if (_5 != 0)
    goto <bb 8>; [2.09%]
  else
    goto <bb 4>; [97.91%]

  <bb 4> [local count: 346929201]:
  fe_mul (_3, _3, &sqrtm1);

  <bb 5> [local count: 1066336224]:
  _6 = fe_isnegative (_3);
  _7 = MEM[(const uint8_t *)s_17(D) + 31B];
  _8 = _7 >> 7;
  _9 = (int) _8;
  if (_6 != _9)
    goto <bb 6>; [48.88%]
  else
    goto <bb 7>; [51.12%]

  <bb 6> [local count: 521225143]:
  fe_neg (_3, _3);

  <bb 7> [local count: 1066336224]:
  _10 = &h_15(D)->T;
  fe_mul (_10, _3, _1);

  <bb 8> [local count: 1073741824]:
  # _11 = PHI <-1(3), 0(7)>
  u ={v} {CLOBBER(eos)};
  v ={v} {CLOBBER(eos)};
  w ={v} {CLOBBER(eos)};
  vxx ={v} {CLOBBER(eos)};
  check ={v} {CLOBBER(eos)};
  return _11;

}



;; Function ossl_ed25519_sign (ossl_ed25519_sign, funcdef_no=447, decl_uid=8523, cgraph_uid=448, symbol_order=458)

Removing basic block 22
Removing basic block 23
Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 27
Removing basic block 28
Removing basic block 29
Removing basic block 30
Removing basic block 31
Removing basic block 32
Removing basic block 33
Removing basic block 34
Removing basic block 35
Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
__attribute__((access ("^3[32]^4[32]", )))
int ossl_ed25519_sign (uint8_t * out_sig, const uint8_t * tbs, size_t tbs_len, const uint8_t * public_key, const uint8_t * private_key, const uint8_t dom2flag, const uint8_t phflag, const uint8_t csflag, const uint8_t * context, size_t context_len, struct OSSL_LIB_CTX * libctx, const char * propq)
{
  int res;
  unsigned int sz;
  struct EVP_MD_CTX * hash_ctx;
  struct EVP_MD * sha512;
  uint8_t hram[64];
  struct ge_p3 R;
  uint8_t nonce[64];
  uint8_t az[64];
  _Bool _1;
  _Bool _3;
  _Bool _4;
  _Bool _5;
  _Bool _6;
  _Bool _7;
  _Bool _8;
  _Bool _9;
  int _10;
  int _11;
  int _12;
  unsigned char _13;
  unsigned char _14;
  unsigned char _15;
  unsigned char _16;
  unsigned char _17;
  int _18;
  int _19;
  int _20;
  int _21;
  int _22;
  int _23;
  int _24;
  int _25;
  int _26;
  uint8_t * _27;
  _Bool _30;

  <bb 2> [local count: 1073741822]:
  sha512_38 = EVP_MD_fetch (libctx_35(D), "SHA512", propq_36(D));
  hash_ctx_40 = EVP_MD_CTX_new ();
  if (context_41(D) == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 322122543]:
  if (csflag_43(D) != 0)
    goto <bb 5>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 4> [local count: 751619279]:
  _30 = context_len_42(D) == 0;
  _1 = csflag_43(D) != 0;
  _3 = _1 & _30;
  if (_3 != 0)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 1073699293]:
  goto <bb 21>; [100.00%]

  <bb 6> [local count: 496068722]:
  _4 = dom2flag_44(D) == 0;
  _5 = context_len_42(D) != 0;
  _6 = _4 & _5;
  if (_6 != 0)
    goto <bb 5>; [48.57%]
  else
    goto <bb 7>; [51.43%]

  <bb 7> [local count: 467721933]:
  # context_len_50 = PHI <context_len_42(D)(6), 0(3)>
  _7 = sha512_38 == 0B;
  _8 = hash_ctx_40 == 0B;
  _9 = _7 | _8;
  if (_9 != 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 8>; [48.88%]

  <bb 8> [local count: 228622479]:
  _10 = EVP_DigestInit_ex (hash_ctx_40, sha512_38, 0B);
  if (_10 == 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 9>; [48.88%]

  <bb 9> [local count: 111750667]:
  _11 = EVP_DigestUpdate (hash_ctx_40, private_key_46(D), 32);
  if (_11 == 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 10>; [48.88%]

  <bb 10> [local count: 54623726]:
  _12 = EVP_DigestFinal_ex (hash_ctx_40, &az, &sz);
  if (_12 == 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 11>; [48.88%]

  <bb 11> [local count: 26700077]:
  _13 = az[0];
  _14 = _13 & 248;
  az[0] = _14;
  _15 = az[31];
  _16 = _15 & 63;
  _17 = _16 | 64;
  az[31] = _17;
  _18 = hash_init_with_dom (hash_ctx_40, sha512_38, dom2flag_44(D), phflag_52(D), context_41(D), context_len_50);
  if (_18 == 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 12>; [48.88%]

  <bb 12> [local count: 13050998]:
  _19 = EVP_DigestUpdate (hash_ctx_40, &MEM <uint8_t[64]> [(void *)&az + 32B], 32);
  if (_19 == 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 13>; [48.88%]

  <bb 13> [local count: 6379328]:
  _20 = EVP_DigestUpdate (hash_ctx_40, tbs_55(D), tbs_len_56(D));
  if (_20 == 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 14>; [48.88%]

  <bb 14> [local count: 3118215]:
  _21 = EVP_DigestFinal_ex (hash_ctx_40, &nonce, &sz);
  if (_21 == 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 15>; [48.88%]

  <bb 15> [local count: 1524184]:
  x25519_sc_reduce (&nonce);
  ge_scalarmult_base (&R, &nonce);
  ge_p3_tobytes (out_sig_61(D), &R);
  _22 = hash_init_with_dom (hash_ctx_40, sha512_38, dom2flag_44(D), phflag_52(D), context_41(D), context_len_50);
  if (_22 == 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 16>; [48.88%]

  <bb 16> [local count: 745021]:
  _23 = EVP_DigestUpdate (hash_ctx_40, out_sig_61(D), 32);
  if (_23 == 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 17>; [48.88%]

  <bb 17> [local count: 364166]:
  _24 = EVP_DigestUpdate (hash_ctx_40, public_key_65(D), 32);
  if (_24 == 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 18>; [48.88%]

  <bb 18> [local count: 178004]:
  _25 = EVP_DigestUpdate (hash_ctx_40, tbs_55(D), tbs_len_56(D));
  if (_25 == 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 19>; [48.88%]

  <bb 19> [local count: 87009]:
  _26 = EVP_DigestFinal_ex (hash_ctx_40, &hram, &sz);
  if (_26 == 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 20>; [48.88%]

  <bb 20> [local count: 42530]:
  x25519_sc_reduce (&hram);
  _27 = out_sig_61(D) + 32;
  sc_muladd (_27, &hram, &az, &nonce);

  <bb 21> [local count: 1073741824]:
  # res_29 = PHI <0(5), _22(20)>
err:
  OPENSSL_cleanse (&nonce, 64);
  OPENSSL_cleanse (&az, 64);
  EVP_MD_free (sha512_38);
  EVP_MD_CTX_free (hash_ctx_40);
  az ={v} {CLOBBER(eos)};
  nonce ={v} {CLOBBER(eos)};
  R ={v} {CLOBBER(eos)};
  hram ={v} {CLOBBER(eos)};
  sz ={v} {CLOBBER(eos)};
  return res_29;

}



;; Function ossl_ed25519_verify (ossl_ed25519_verify, funcdef_no=448, decl_uid=8535, cgraph_uid=449, symbol_order=460)

Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 60
Removing basic block 61
Removing basic block 62
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 66
Removing basic block 67
Removing basic block 68
Removing basic block 69
Removing basic block 70
Removing basic block 71
Removing basic block 72
Removing basic block 73
Removing basic block 74
Removing basic block 75
Removing basic block 76
Removing basic block 77
Removing basic block 78
Removing basic block 79
Removing basic block 80
Removing basic block 81
Removing basic block 82
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 87
Removing basic block 88
Removing basic block 89
Removing basic block 90
Removing basic block 91
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 95
Removing basic block 96
Removing basic block 97
Removing basic block 98
Removing basic block 99
Removing basic block 100
__attribute__((access ("^2[64]^3[32]", )))
int ossl_ed25519_verify (const uint8_t * tbs, size_t tbs_len, const uint8_t * signature, const uint8_t * public_key, const uint8_t dom2flag, const uint8_t phflag, const uint8_t csflag, const uint8_t * context, size_t context_len, struct OSSL_LIB_CTX * libctx, const char * propq)
{
  uint8_t h[64];
  uint8_t rcheck[32];
  struct ge_p2 R;
  int res;
  unsigned int sz;
  struct EVP_MD_CTX * hash_ctx;
  struct EVP_MD * sha512;
  const uint8_t * s;
  struct ge_p3 A;
  _Bool _1;
  _Bool _2;
  _Bool _3;
  _Bool _4;
  _Bool _5;
  _Bool _6;
  unsigned char _7;
  const uint8_t * _9;
  int _10;
  unsigned char _13;
  int _17;
  int _18;
  int _19;
  int _20;
  int _21;
  int _22;
  int _23;
  _Bool _24;
  int _28;
  unsigned char _78;
  unsigned char _86;
  unsigned char _94;
  unsigned char _102;
  unsigned char _110;
  unsigned char _118;
  unsigned char _126;
  unsigned char _134;
  unsigned char _142;
  unsigned char _150;
  unsigned char _158;
  unsigned char _166;
  unsigned char _174;
  unsigned char _182;
  unsigned char _190;

  <bb 2> [local count: 1073741824]:
  if (context_34(D) == 0B)
    goto <bb 52>; [30.00%]
  else
    goto <bb 3>; [70.00%]

  <bb 3> [local count: 751619280]:
  _1 = csflag_36(D) != 0;
  _2 = context_len_35(D) == 0;
  _3 = _1 & _2;
  if (_3 != 0)
    goto <bb 4>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 4> [local count: 1002324492]:
  goto <bb 51>; [100.00%]

  <bb 5> [local count: 496068722]:
  _4 = dom2flag_37(D) == 0;
  _5 = context_len_35(D) != 0;
  _6 = _4 & _5;
  if (_6 != 0)
    goto <bb 4>; [48.57%]
  else
    goto <bb 6>; [51.43%]

  <bb 6> [local count: 467721934]:
  # context_len_76 = PHI <context_len_35(D)(5), 0(52)>
  _7 = MEM[(const uint8_t *)signature_38(D) + 63B];
  if (_7 > 16)
    goto <bb 4>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 7> [local count: 308696475]:
  if (_7 == 16)
    goto <bb 8>; [51.12%]
  else
    goto <bb 40>; [48.88%]

  <bb 8> [local count: 157805639]:
  _9 = signature_38(D) + 48;
  _10 = __builtin_memcmp_eq (_9, &allzeroes, 15);
  if (_10 != 0)
    goto <bb 4>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 9> [local count: 104151723]:
  _78 = MEM[(const uint8_t *)signature_38(D) + 47B];
  if (_78 <= 19)
    goto <bb 40>; [3.66%]
  else
    goto <bb 10>; [96.34%]

  <bb 10> [local count: 100339769]:
  if (_78 != 20)
    goto <bb 4>; [3.66%]
  else
    goto <bb 11>; [96.34%]

  <bb 11> [local count: 96667334]:
  _86 = MEM[(const uint8_t *)signature_38(D) + 46B];
  if (_86 <= 221)
    goto <bb 40>; [3.66%]
  else
    goto <bb 12>; [96.34%]

  <bb 12> [local count: 93129309]:
  if (_86 != 222)
    goto <bb 4>; [3.66%]
  else
    goto <bb 13>; [96.34%]

  <bb 13> [local count: 89720778]:
  _94 = MEM[(const uint8_t *)signature_38(D) + 45B];
  if (_94 <= 248)
    goto <bb 40>; [3.66%]
  else
    goto <bb 14>; [96.34%]

  <bb 14> [local count: 86436998]:
  if (_94 != 249)
    goto <bb 4>; [3.66%]
  else
    goto <bb 15>; [96.34%]

  <bb 15> [local count: 83273404]:
  _102 = MEM[(const uint8_t *)signature_38(D) + 44B];
  if (_102 <= 221)
    goto <bb 40>; [3.66%]
  else
    goto <bb 16>; [96.34%]

  <bb 16> [local count: 80225595]:
  if (_102 != 222)
    goto <bb 4>; [3.66%]
  else
    goto <bb 17>; [96.34%]

  <bb 17> [local count: 77289341]:
  _110 = MEM[(const uint8_t *)signature_38(D) + 43B];
  if (_110 <= 161)
    goto <bb 40>; [3.66%]
  else
    goto <bb 18>; [96.34%]

  <bb 18> [local count: 74460551]:
  if (_110 != 162)
    goto <bb 4>; [3.66%]
  else
    goto <bb 19>; [96.34%]

  <bb 19> [local count: 71735295]:
  _118 = MEM[(const uint8_t *)signature_38(D) + 42B];
  if (_118 <= 246)
    goto <bb 40>; [3.66%]
  else
    goto <bb 20>; [96.34%]

  <bb 20> [local count: 69109783]:
  if (_118 != 247)
    goto <bb 4>; [3.66%]
  else
    goto <bb 21>; [96.34%]

  <bb 21> [local count: 66580365]:
  _126 = MEM[(const uint8_t *)signature_38(D) + 41B];
  if (_126 <= 155)
    goto <bb 40>; [3.66%]
  else
    goto <bb 22>; [96.34%]

  <bb 22> [local count: 64143523]:
  if (_126 != 156)
    goto <bb 4>; [3.66%]
  else
    goto <bb 23>; [96.34%]

  <bb 23> [local count: 61795870]:
  _134 = MEM[(const uint8_t *)signature_38(D) + 40B];
  if (_134 <= 213)
    goto <bb 40>; [3.66%]
  else
    goto <bb 24>; [96.34%]

  <bb 24> [local count: 59534140]:
  if (_134 != 214)
    goto <bb 4>; [3.66%]
  else
    goto <bb 25>; [96.34%]

  <bb 25> [local count: 57355191]:
  _142 = MEM[(const uint8_t *)signature_38(D) + 39B];
  if (_142 <= 87)
    goto <bb 40>; [3.66%]
  else
    goto <bb 26>; [96.34%]

  <bb 26> [local count: 55255990]:
  if (_142 != 88)
    goto <bb 4>; [3.66%]
  else
    goto <bb 27>; [96.34%]

  <bb 27> [local count: 53233621]:
  _150 = MEM[(const uint8_t *)signature_38(D) + 38B];
  if (_150 <= 17)
    goto <bb 40>; [3.66%]
  else
    goto <bb 28>; [96.34%]

  <bb 28> [local count: 51285271]:
  if (_150 != 18)
    goto <bb 4>; [3.66%]
  else
    goto <bb 29>; [96.34%]

  <bb 29> [local count: 49408230]:
  _158 = MEM[(const uint8_t *)signature_38(D) + 37B];
  if (_158 <= 98)
    goto <bb 40>; [3.66%]
  else
    goto <bb 30>; [96.34%]

  <bb 30> [local count: 47599888]:
  if (_158 != 99)
    goto <bb 4>; [3.66%]
  else
    goto <bb 31>; [96.34%]

  <bb 31> [local count: 45857734]:
  _166 = MEM[(const uint8_t *)signature_38(D) + 36B];
  if (_166 <= 25)
    goto <bb 40>; [3.66%]
  else
    goto <bb 32>; [96.34%]

  <bb 32> [local count: 44179341]:
  if (_166 != 26)
    goto <bb 4>; [3.66%]
  else
    goto <bb 33>; [96.34%]

  <bb 33> [local count: 42562378]:
  _174 = MEM[(const uint8_t *)signature_38(D) + 35B];
  if (_174 <= 91)
    goto <bb 40>; [3.66%]
  else
    goto <bb 34>; [96.34%]

  <bb 34> [local count: 41004595]:
  if (_174 != 92)
    goto <bb 4>; [3.66%]
  else
    goto <bb 35>; [96.34%]

  <bb 35> [local count: 39503827]:
  _182 = MEM[(const uint8_t *)signature_38(D) + 34B];
  if (_182 <= 244)
    goto <bb 40>; [3.66%]
  else
    goto <bb 36>; [96.34%]

  <bb 36> [local count: 38057987]:
  if (_182 != 245)
    goto <bb 4>; [3.66%]
  else
    goto <bb 37>; [96.34%]

  <bb 37> [local count: 36665065]:
  _190 = MEM[(const uint8_t *)signature_38(D) + 33B];
  if (_190 <= 210)
    goto <bb 40>; [3.66%]
  else
    goto <bb 38>; [96.34%]

  <bb 38> [local count: 35323123]:
  if (_190 != 211)
    goto <bb 4>; [3.66%]
  else
    goto <bb 39>; [96.34%]

  <bb 39> [local count: 34030297]:
  _13 = MEM[(const uint8_t *)signature_38(D) + 32B];
  if (_13 <= 236)
    goto <bb 40>; [3.66%]
  else
    goto <bb 4>; [96.34%]

  <bb 40> [local count: 211596625]:
  _17 = ge_frombytes_vartime (&A, public_key_41(D));
  if (_17 != 0)
    goto <bb 4>; [51.12%]
  else
    goto <bb 41>; [48.88%]

  <bb 41> [local count: 103428430]:
  fe_neg (&A.X, &A.X);
  fe_neg (&A.T, &A.T);
  sha512_48 = EVP_MD_fetch (libctx_45(D), "SHA512", propq_46(D));
  if (sha512_48 == 0B)
    goto <bb 4>; [30.95%]
  else
    goto <bb 42>; [69.05%]

  <bb 42> [local count: 71417330]:
  hash_ctx_50 = EVP_MD_CTX_new ();
  if (hash_ctx_50 == 0B)
    goto <bb 43>; [30.95%]
  else
    goto <bb 44>; [69.05%]

  <bb 43> [local count: 70041316]:
  goto <bb 50>; [100.00%]

  <bb 44> [local count: 49313667]:
  _18 = hash_init_with_dom (hash_ctx_50, sha512_48, dom2flag_37(D), phflag_51(D), context_34(D), context_len_76);
  if (_18 == 0)
    goto <bb 43>; [51.12%]
  else
    goto <bb 45>; [48.88%]

  <bb 45> [local count: 24104520]:
  _19 = EVP_DigestUpdate (hash_ctx_50, signature_38(D), 32);
  if (_19 == 0)
    goto <bb 43>; [51.12%]
  else
    goto <bb 46>; [48.88%]

  <bb 46> [local count: 11782289]:
  _20 = EVP_DigestUpdate (hash_ctx_50, public_key_41(D), 32);
  if (_20 == 0)
    goto <bb 43>; [51.12%]
  else
    goto <bb 47>; [48.88%]

  <bb 47> [local count: 5759183]:
  _21 = EVP_DigestUpdate (hash_ctx_50, tbs_55(D), tbs_len_56(D));
  if (_21 == 0)
    goto <bb 43>; [51.12%]
  else
    goto <bb 48>; [48.88%]

  <bb 48> [local count: 2815089]:
  _22 = EVP_DigestFinal_ex (hash_ctx_50, &h, &sz);
  if (_22 == 0)
    goto <bb 43>; [51.12%]
  else
    goto <bb 49>; [48.88%]

  <bb 49> [local count: 1376015]:
  x25519_sc_reduce (&h);
  s_39 = signature_38(D) + 32;
  ge_double_scalarmult_vartime (&R, &h, &A, s_39);
  ge_tobytes (&rcheck, &R);
  _23 = CRYPTO_memcmp (&rcheck, signature_38(D), 32);
  _24 = _23 == 0;
  res_63 = (int) _24;

  <bb 50> [local count: 71417330]:
  # res_27 = PHI <_17(43), res_63(49)>
err:
  EVP_MD_free (sha512_48);
  EVP_MD_CTX_free (hash_ctx_50);

  <bb 51> [local count: 1073741824]:
  # _28 = PHI <0(4), res_27(50)>
  A ={v} {CLOBBER(eos)};
  sz ={v} {CLOBBER(eos)};
  R ={v} {CLOBBER(eos)};
  rcheck ={v} {CLOBBER(eos)};
  h ={v} {CLOBBER(eos)};
  return _28;

  <bb 52> [local count: 322122544]:
  if (csflag_36(D) != 0)
    goto <bb 4>; [34.00%]
  else
    goto <bb 6>; [66.00%]

}



;; Function ossl_ed25519_public_from_private (ossl_ed25519_public_from_private, funcdef_no=449, decl_uid=8510, cgraph_uid=450, symbol_order=461)

Removing basic block 8
__attribute__((access ("^1[32]^2[32]", )))
int ossl_ed25519_public_from_private (struct OSSL_LIB_CTX * ctx, uint8_t * out_public_key, const uint8_t * private_key, const char * propq)
{
  struct EVP_MD * sha512;
  int r;
  struct ge_p3 A;
  uint8_t az[64];
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  int _6;

  <bb 2> [local count: 1073741822]:
  sha512_12 = EVP_MD_fetch (ctx_9(D), "SHA512", propq_10(D));
  if (sha512_12 == 0B)
    goto <bb 5>; [30.95%]
  else
    goto <bb 3>; [69.05%]

  <bb 3> [local count: 741418727]:
  r_15 = EVP_Digest (private_key_13(D), 32, &az, 0B, sha512_12, 0B);
  EVP_MD_free (sha512_12);
  if (r_15 == 0)
    goto <bb 4>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 4> [local count: 252082370]:
  OPENSSL_cleanse (&az, 64);

  <bb 5> [local count: 332323095]:
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 489336357]:
  _1 = az[0];
  _2 = _1 & 248;
  az[0] = _2;
  _3 = az[31];
  _4 = _3 & 63;
  _5 = _4 | 64;
  az[31] = _5;
  ge_scalarmult_base (&A, &az);
  ge_p3_tobytes (out_public_key_21(D), &A);
  OPENSSL_cleanse (&az, 64);

  <bb 7> [local count: 1073741824]:
  # _6 = PHI <0(5), 1(6)>
  az ={v} {CLOBBER(eos)};
  A ={v} {CLOBBER(eos)};
  return _6;

}



;; Function ossl_x25519 (ossl_x25519, funcdef_no=450, decl_uid=8502, cgraph_uid=451, symbol_order=462)

__attribute__((access ("^0[32]^1[32]^2[32]", )))
int ossl_x25519 (uint8_t * out_shared_key, const uint8_t * private_key, const uint8_t * peer_public_value)
{
  static const uint8_t kZeros[32] = "\x00";
  int _1;
  _Bool _2;
  int _9;

  <bb 2> [local count: 1073741824]:
  x25519_scalar_mult (out_shared_key_4(D), private_key_5(D), peer_public_value_6(D));
  _1 = CRYPTO_memcmp (&kZeros, out_shared_key_4(D), 32);
  _2 = _1 != 0;
  _9 = (int) _2;
  return _9;

}



;; Function ossl_x25519_public_from_private (ossl_x25519_public_from_private, funcdef_no=451, decl_uid=8505, cgraph_uid=452, symbol_order=463)

__attribute__((access ("^0[32]^1[32]", )))
void ossl_x25519_public_from_private (uint8_t * out_public_value, const uint8_t * private_key)
{
  int32_t zminusy_inv[10];
  int32_t zminusy[10];
  int32_t zplusy[10];
  struct ge_p3 A;
  uint8_t e[32];
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;

  <bb 2> [local count: 1073741824]:
  MEM <unsigned char[32]> [(char * {ref-all})&e] = MEM <unsigned char[32]> [(char * {ref-all})private_key_7(D)];
  _1 = e[0];
  _2 = _1 & 248;
  e[0] = _2;
  _3 = e[31];
  _4 = _3 & 127;
  _5 = _4 | 64;
  e[31] = _5;
  ge_scalarmult_base (&A, &e);
  fe_add (&zplusy, &A.Z, &A.Y);
  fe_sub (&zminusy, &A.Z, &A.Y);
  fe_invert (&zminusy_inv, &zminusy);
  fe_mul (&zplusy, &zplusy, &zminusy_inv);
  fe_tobytes (out_public_value_15(D), &zplusy);
  OPENSSL_cleanse (&e, 32);
  e ={v} {CLOBBER(eos)};
  A ={v} {CLOBBER(eos)};
  zplusy ={v} {CLOBBER(eos)};
  zminusy ={v} {CLOBBER(eos)};
  zminusy_inv ={v} {CLOBBER(eos)};
  return;

}


