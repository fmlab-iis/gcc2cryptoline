
;; Function scalar_ntt (scalar_ntt, funcdef_no=564, decl_uid=18257, cgraph_uid=565, symbol_order=573)

Removing basic block 9
Removing basic block 10
Removing basic block 11
void scalar_ntt (struct scalar * s)
{
  uint64_t product;
  uint32_t quotient;
  uint32_t remainder;
  const uint16_t subtracted;
  const uint16_t subtracted;
  uint32_t zeta;
  uint16_t even;
  uint16_t * pause;
  uint16_t * peer;
  uint16_t * curr;
  int offset;
  uint16_t * end;
  const uint16_t * roots;
  long unsigned int _1;
  long unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  short unsigned int _7;
  short unsigned int _8;
  short unsigned int _9;
  signed short _27;
  signed short subtracted.42_29;
  short unsigned int _35;
  signed short _36;
  signed short _37;
  signed short _38;
  short unsigned int _39;
  signed short subtracted.42_40;
  signed short _41;
  short unsigned int _42;
  signed short _43;
  signed short _44;
  signed short _45;
  short unsigned int _46;
  long unsigned int _47;
  long unsigned int _49;
  unsigned int _51;
  short unsigned int _53;
  signed short subtracted.42_55;
  signed short _56;
  short unsigned int _57;
  signed short _58;
  signed short _59;
  signed short _60;
  short unsigned int _61;
  unsigned int ivtmp_183;
  unsigned int ivtmp_184;
  sizetype _185;
  sizetype _187;
  unsigned long _188;
  unsigned int _189;
  sizetype _190;
  sizetype _194;
  unsigned long _196;
  unsigned int _199;
  unsigned int _200;
  _Bool _201;
  sizetype _202;
  sizetype _204;
  sizetype _206;

  <bb 2> [local count: 1856596]:
  end_20 = s_19(D) + 512;

  <bb 3> [local count: 12992276]:
  # roots_10 = PHI <&kNTTRoots(2), roots_24(7)>
  # offset_12 = PHI <128(2), offset_34(7)>
  # ivtmp_184 = PHI <7(2), ivtmp_183(7)>
  curr_22 = &s_19(D)->c;
  _1 = (long unsigned int) offset_12;
  _189 = (unsigned int) _1;
  _2 = _189 w* 2;

  <bb 4> [local count: 118111600]:
  # roots_11 = PHI <roots_10(3), roots_24(6)>
  # curr_13 = PHI <curr_22(3), peer_208(6)>
  pause_23 = curr_13 + _2;
  roots_24 = roots_11 + 2;
  _3 = MEM[(const uint16_t *)roots_24];
  zeta_25 = (uint32_t) _3;

  <bb 5> [local count: 1073741824]:
  # curr_14 = PHI <curr_13(4), curr_31(5)>
  # peer_15 = PHI <pause_23(4), peer_28(5)>
  even_26 = MEM[(uint16_t *)curr_14];
  _4 = MEM[(uint16_t *)peer_15];
  _5 = (unsigned int) _4;
  _6 = _5 * zeta_25;
  _47 = (long unsigned int) _6;
  _199 = (unsigned int) _47;
  product_48 = _199 w* 5039;
  _49 = product_48 >> 24;
  quotient_50 = (uint32_t) _49;
  _51 = quotient_50 * 3329;
  remainder_52 = _6 - _51;
  _53 = (short unsigned int) remainder_52;
  subtracted_54 = _53 + 62207;
  subtracted.42_55 = (signed short) subtracted_54;
  _56 = subtracted.42_55 >> 15;
  _57 = _53 ^ subtracted_54;
  _58 = (signed short) _57;
  _59 = _56 & _58;
  _60 = subtracted.42_55 ^ _59;
  _61 = (short unsigned int) _60;
  _7 = even_26 - _61;
  _8 = _7 + 3329;
  peer_28 = peer_15 + 2;
  subtracted.42_40 = (signed short) _7;
  _41 = subtracted.42_40 >> 15;
  _42 = _7 ^ _8;
  _43 = (signed short) _42;
  _44 = _41 & _43;
  _45 = subtracted.42_40 ^ _44;
  _46 = (short unsigned int) _45;
  MEM[(uint16_t *)peer_28 + -2B] = _46;
  _9 = even_26 + _61;
  curr_31 = curr_14 + 2;
  subtracted_32 = _9 + 62207;
  subtracted.42_29 = (signed short) subtracted_32;
  _27 = subtracted.42_29 >> 15;
  _35 = _9 ^ subtracted_32;
  _36 = (signed short) _35;
  _37 = _27 & _36;
  _38 = subtracted.42_29 ^ _37;
  _39 = (short unsigned int) _38;
  MEM[(uint16_t *)curr_31 + -2B] = _39;
  if (pause_23 > curr_31)
    goto <bb 5>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 6> [local count: 118111600]:
  _204 = (sizetype) curr_13;
  _190 = _204 + 1;
  _202 = (sizetype) pause_23;
  _201 = _190 <= _202;
  _188 = _2 + 18446744073709551615;
  _196 = _188 >> 1;
  _200 = (unsigned int) _196;
  _187 = _200 w* 2;
  _194 = _201 ? _187 : 0;
  _206 = _202 + 2;
  _185 = _194 + _206;
  peer_208 = (uint16_t *) _185;
  if (end_20 > peer_208)
    goto <bb 4>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 12992276]:
  offset_34 = offset_12 >> 1;
  ivtmp_183 = ivtmp_184 + 4294967295;
  if (ivtmp_183 != 0)
    goto <bb 3>; [85.71%]
  else
    goto <bb 8>; [14.29%]

  <bb 8> [local count: 1856596]:
  return;

}



;; Function scalar_mult (scalar_mult, funcdef_no=568, decl_uid=18319, cgraph_uid=569, symbol_order=577)

Removing basic block 5
void scalar_mult (struct scalar * out, const struct scalar * lhs, const struct scalar * rhs)
{
  uint64_t product;
  uint32_t quotient;
  uint32_t remainder;
  const uint16_t subtracted;
  uint64_t product;
  uint32_t quotient;
  uint32_t remainder;
  const uint16_t subtracted;
  uint64_t product;
  uint32_t quotient;
  uint32_t remainder;
  const uint16_t subtracted;
  uint32_t zetapow;
  uint32_t r1;
  uint32_t l1;
  uint32_t r0;
  uint32_t l0;
  const uint16_t * roots;
  const uint16_t * rc;
  const uint16_t * lc;
  uint16_t * curr;
  short unsigned int _1;
  short unsigned int _2;
  short unsigned int _3;
  short unsigned int _4;
  short unsigned int _5;
  unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  long unsigned int _35;
  long unsigned int _39;
  unsigned int _42;
  short unsigned int _44;
  signed short subtracted.42_46;
  signed short _47;
  short unsigned int _48;
  signed short _49;
  signed short _50;
  signed short _51;
  short unsigned int _52;
  long unsigned int _53;
  long unsigned int _55;
  unsigned int _57;
  short unsigned int _59;
  signed short subtracted.42_61;
  signed short _62;
  short unsigned int _63;
  signed short _64;
  signed short _65;
  signed short _66;
  short unsigned int _67;
  long unsigned int _68;
  long unsigned int _70;
  unsigned int _72;
  short unsigned int _74;
  signed short subtracted.42_76;
  signed short _77;
  short unsigned int _78;
  signed short _79;
  signed short _80;
  signed short _81;
  short unsigned int _82;
  unsigned int _198;
  unsigned int _201;
  unsigned int _202;

  <bb 2> [local count: 10737416]:
  curr_20 = &out_19(D)->c;
  lc_23 = &lhs_22(D)->c;
  rc_25 = &rhs_24(D)->c;

  <bb 3> [local count: 1073741824]:
  # curr_14 = PHI <curr_20(2), curr_38(3)>
  # lc_15 = PHI <lc_23(2), lc_29(3)>
  # rc_16 = PHI <rc_25(2), rc_31(3)>
  # roots_17 = PHI <&kModRoots(2), roots_33(3)>
  _1 = MEM[(const uint16_t *)lc_15];
  l0_27 = (uint32_t) _1;
  _2 = MEM[(const uint16_t *)rc_16];
  r0_28 = (uint32_t) _2;
  lc_29 = lc_15 + 4;
  _3 = MEM[(const uint16_t *)lc_29 + -2B];
  l1_30 = (uint32_t) _3;
  rc_31 = rc_16 + 4;
  _4 = MEM[(const uint16_t *)rc_31 + -2B];
  r1_32 = (uint32_t) _4;
  roots_33 = roots_17 + 2;
  _5 = MEM[(const uint16_t *)roots_33 + -2B];
  zetapow_34 = (uint32_t) _5;
  _6 = l0_27 * r0_28;
  _7 = l1_30 * r1_32;
  _68 = (long unsigned int) _7;
  _198 = (unsigned int) _68;
  product_69 = _198 w* 5039;
  _70 = product_69 >> 24;
  quotient_71 = (uint32_t) _70;
  _72 = quotient_71 * 3329;
  remainder_73 = _7 - _72;
  _74 = (short unsigned int) remainder_73;
  subtracted_75 = _74 + 62207;
  subtracted.42_76 = (signed short) subtracted_75;
  _77 = subtracted.42_76 >> 15;
  _78 = _74 ^ subtracted_75;
  _79 = (signed short) _78;
  _80 = _77 & _79;
  _81 = subtracted.42_76 ^ _80;
  _82 = (short unsigned int) _81;
  _8 = (unsigned int) _82;
  _9 = _8 * zetapow_34;
  _10 = _6 + _9;
  _53 = (long unsigned int) _10;
  _202 = (unsigned int) _53;
  product_54 = _202 w* 5039;
  _55 = product_54 >> 24;
  quotient_56 = (uint32_t) _55;
  _57 = quotient_56 * 3329;
  remainder_58 = _10 - _57;
  _59 = (short unsigned int) remainder_58;
  subtracted_60 = _59 + 62207;
  subtracted.42_61 = (signed short) subtracted_60;
  _62 = subtracted.42_61 >> 15;
  _63 = _59 ^ subtracted_60;
  _64 = (signed short) _63;
  _65 = _62 & _64;
  _66 = subtracted.42_61 ^ _65;
  _67 = (short unsigned int) _66;
  MEM[(uint16_t *)curr_14] = _67;
  _11 = l0_27 * r1_32;
  _12 = r0_28 * l1_30;
  _13 = _11 + _12;
  curr_38 = curr_14 + 4;
  _39 = (long unsigned int) _13;
  _201 = (unsigned int) _39;
  product_36 = _201 w* 5039;
  _35 = product_36 >> 24;
  quotient_41 = (uint32_t) _35;
  _42 = quotient_41 * 3329;
  remainder_43 = _13 - _42;
  _44 = (short unsigned int) remainder_43;
  subtracted_45 = _44 + 62207;
  subtracted.42_46 = (signed short) subtracted_45;
  _47 = subtracted.42_46 >> 15;
  _48 = _44 ^ subtracted_45;
  _49 = (signed short) _48;
  _50 = _47 & _49;
  _51 = subtracted.42_46 ^ _50;
  _52 = (short unsigned int) _51;
  MEM[(uint16_t *)curr_38 + -2B] = _52;
  if (roots_33 != &MEM <const uint16_t[128]> [(void *)&kModRoots + 256B])
    goto <bb 3>; [99.00%]
  else
    goto <bb 4>; [1.00%]

  <bb 4> [local count: 10737416]:
  return;

}



;; Function scalar_decode (scalar_decode, funcdef_no=572, decl_uid=18385, cgraph_uid=573, symbol_order=581)

Removing basic block 12
Removing basic block 13
Removing basic block 14
Removing basic block 15
Removing basic block 16
Removing basic block 17
void scalar_decode (struct scalar * out, const uint8_t * in, int bits)
{
  uint16_t element;
  uint16_t mask;
  uint16_t bitmask;
  int todo;
  int accum_bits;
  uint64_t accum;
  uint16_t * end;
  uint16_t * curr;
  int _1;
  short unsigned int _2;
  _Bool _3;
  _Bool _4;
  _Bool _5;
  long unsigned int _8;
  int _11;
  int _12;
  int _13;
  short unsigned int _14;
  long unsigned int _15;
  int _17;
  int _18;
  unsigned long _50;
  const unsigned char * _51;
  short unsigned int _56;
  short unsigned int _59;
  short unsigned int _63;
  short unsigned int _64;

  <bb 2> [local count: 118111600]:
  curr_35 = &out_34(D)->c;
  end_36 = out_34(D) + 512;
  _1 = 1 << bits_38(D);
  _2 = (short unsigned int) _1;
  bitmask_39 = _2 + 65535;

  <bb 3> [local count: 834834267]:
  # in_19 = PHI <in_40(D)(2), in_20(10)>
  # curr_21 = PHI <curr_35(2), curr_22(10)>
  # accum_bits_23 = PHI <0(2), accum_bits_25(10)>
  # todo_26 = PHI <bits_38(D)(2), todo_27(10)>
  # mask_28 = PHI <bitmask_39(2), mask_29(10)>
  # element_30 = PHI <0(2), element_31(10)>
  # accum_52 = PHI <0(2), accum_54(10)>
  if (accum_bits_23 == 0)
    goto <bb 4>; [35.69%]
  else
    goto <bb 5>; [64.31%]

  <bb 4> [local count: 536870912]:
  # in_68 = PHI <in_19(3), in_20(9)>
  # todo_71 = PHI <todo_26(3), todo_42(9)>
  # mask_73 = PHI <mask_28(3), mask_43(9)>
  # element_75 = PHI <element_30(3), _64(9)>
  _50 = MEM <unsigned long> [(char * {ref-all})in_68];
  _51 = in_68 + 8;

  <bb 5> [local count: 1073741823]:
  # in_20 = PHI <in_19(3), _51(4)>
  # accum_bits_24 = PHI <accum_bits_23(3), 64(4)>
  # accum_53 = PHI <accum_52(3), _50(4)>
  # todo_72 = PHI <todo_26(3), todo_71(4)>
  # mask_74 = PHI <mask_28(3), mask_73(4)>
  # element_76 = PHI <element_30(3), element_75(4)>
  _3 = bits_38(D) == todo_72;
  _4 = accum_bits_24 >= bits_38(D);
  _5 = _3 & _4;
  _63 = (short unsigned int) accum_53;
  _64 = _63 & mask_74;
  if (_5 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 536870912]:
  curr_47 = curr_21 + 2;
  _8 = accum_53 >> bits_38(D);
  accum_bits_49 = accum_bits_24 - bits_38(D);
  goto <bb 10>; [100.00%]

  <bb 7> [local count: 536870912]:
  if (accum_bits_24 >= todo_72)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [local count: 268435456]:
  _11 = (int) _64;
  _12 = bits_38(D) - todo_72;
  _13 = _11 << _12;
  curr_44 = curr_21 + 2;
  _56 = (short unsigned int) _13;
  _14 = _56 | element_76;
  _15 = accum_53 >> todo_72;
  accum_bits_46 = accum_bits_24 - todo_72;
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 268435456]:
  todo_42 = todo_72 - accum_bits_24;
  _17 = (int) bitmask_39;
  _18 = _17 >> accum_bits_24;
  mask_43 = (uint16_t) _18;
  if (curr_21 < end_36)
    goto <bb 4>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 10> [local count: 805306368]:
  # curr_22 = PHI <curr_47(6), curr_44(8)>
  # accum_bits_25 = PHI <accum_bits_49(6), accum_bits_46(8)>
  # todo_27 = PHI <todo_72(6), bits_38(D)(8)>
  # mask_29 = PHI <mask_74(6), bitmask_39(8)>
  # element_31 = PHI <element_76(6), 0(8)>
  # accum_54 = PHI <_8(6), _15(8)>
  # _59 = PHI <_64(6), _14(8)>
  *curr_21 = _59;
  if (curr_22 < end_36)
    goto <bb 3>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 11> [local count: 118111600]:
  return;

}



;; Function scalar_compress (scalar_compress, funcdef_no=577, decl_uid=18443, cgraph_uid=578, symbol_order=586)

Removing basic block 5
void scalar_compress (struct scalar * s, int bits)
{
  unsigned long ivtmp.259;
  vector(8) short unsigned int vect__41.251;
  vector(8) unsigned short vect_patt_71.249;
  vector(8) unsigned short vect_patt_72.248;
  vector(8) unsigned short vect_patt_74.247;
  vector(8) unsigned short vect_patt_75.246;
  vector(8) unsigned short vect_patt_76.245;
  vector(4) unsigned int vect__32.244;
  vector(4) unsigned int vect__31.243;
  vector(4) unsigned int vect__30.242;
  vector(4) unsigned int vect__29.241;
  vector(4) unsigned int vect__28.240;
  vector(4) unsigned int vect__23.239;
  vector(4) unsigned int vect__22.238;
  vector(4) unsigned int vect__21.237;
  vector(4) unsigned int vect__20.236;
  vector(4) unsigned int vect__19.235;
  vector(4) unsigned int vect__18.234;
  vector(4) unsigned int vect_remainder_17.233;
  vector(4) unsigned int vect__16.232;
  vector(4) unsigned int vect_quotient_15.231;
  vector(2) long unsigned int vect__14.230;
  vector(2) long unsigned int vect_patt_77.229;
  vector(4) unsigned int vect_shifted_11.228;
  vector(4) unsigned int vect__10.227;
  vector(8) short unsigned int vect__1.226;
  void * _10;
  unsigned long _13;
  int _37;
  short unsigned int _38;
  short unsigned int _39;
  vector(8) short unsigned int vect_cst__125;

  <bb 2> [local count: 10737416]:
  _37 = 1 << bits_7(D);
  _38 = (short unsigned int) _37;
  _39 = _38 + 65535;
  vect_cst__125 = {_39, _39, _39, _39, _39, _39, _39, _39};
  ivtmp.259_1 = (unsigned long) s_6(D);
  _13 = ivtmp.259_1 + 512;

  <bb 3> [local count: 343597313]:
  # ivtmp.259_79 = PHI <ivtmp.259_25(3), ivtmp.259_1(2)>
  _10 = (void *) ivtmp.259_79;
  vect__1.226_43 = MEM <vector(8) short unsigned int> [(short unsigned int *)_10];
  vect__10.227_42 = [vec_unpack_lo_expr] vect__1.226_43;
  vect__10.227_35 = [vec_unpack_hi_expr] vect__1.226_43;
  vect_shifted_11.228_33 = vect__10.227_42 << bits_7(D);
  vect_shifted_11.228_27 = vect__10.227_35 << bits_7(D);
  vect_patt_77.229_4 = WIDEN_MULT_LO_EXPR <vect_shifted_11.228_33, { 5039, 5039, 5039, 5039 }>;
  vect_patt_77.229_3 = WIDEN_MULT_HI_EXPR <vect_shifted_11.228_33, { 5039, 5039, 5039, 5039 }>;
  vect_patt_77.229_2 = WIDEN_MULT_LO_EXPR <vect_shifted_11.228_27, { 5039, 5039, 5039, 5039 }>;
  vect_patt_77.229_81 = WIDEN_MULT_HI_EXPR <vect_shifted_11.228_27, { 5039, 5039, 5039, 5039 }>;
  vect__14.230_82 = vect_patt_77.229_4 >> 24;
  vect__14.230_83 = vect_patt_77.229_3 >> 24;
  vect__14.230_84 = vect_patt_77.229_2 >> 24;
  vect__14.230_85 = vect_patt_77.229_81 >> 24;
  vect_quotient_15.231_86 = VEC_PACK_TRUNC_EXPR <vect__14.230_82, vect__14.230_83>;
  vect_quotient_15.231_87 = VEC_PACK_TRUNC_EXPR <vect__14.230_84, vect__14.230_85>;
  vect__16.232_89 = vect_quotient_15.231_86 * { 3329, 3329, 3329, 3329 };
  vect__16.232_90 = vect_quotient_15.231_87 * { 3329, 3329, 3329, 3329 };
  vect_remainder_17.233_91 = vect_shifted_11.228_33 - vect__16.232_89;
  vect_remainder_17.233_92 = vect_shifted_11.228_27 - vect__16.232_90;
  vect__18.234_94 = vect_remainder_17.233_91 ^ { 1664, 1664, 1664, 1664 };
  vect__18.234_95 = vect_remainder_17.233_92 ^ { 1664, 1664, 1664, 1664 };
  vect__19.235_96 = vect__16.232_89 - vect_shifted_11.228_33;
  vect__19.235_97 = vect__16.232_90 - vect_shifted_11.228_27;
  vect__20.236_99 = vect__19.235_96 + { 1664, 1664, 1664, 1664 };
  vect__20.236_100 = vect__19.235_97 + { 1664, 1664, 1664, 1664 };
  vect__21.237_101 = vect_remainder_17.233_91 ^ vect__20.236_99;
  vect__21.237_102 = vect_remainder_17.233_92 ^ vect__20.236_100;
  vect__22.238_103 = vect__18.234_94 | vect__21.237_101;
  vect__22.238_104 = vect__18.234_95 | vect__21.237_102;
  vect__23.239_105 = vect__22.238_103 >> 31;
  vect__23.239_106 = vect__22.238_104 >> 31;
  vect__28.240_108 = vect_remainder_17.233_91 ^ { 4993, 4993, 4993, 4993 };
  vect__28.240_109 = vect_remainder_17.233_92 ^ { 4993, 4993, 4993, 4993 };
  vect__29.241_111 = vect__19.235_96 + { 4993, 4993, 4993, 4993 };
  vect__29.241_112 = vect__19.235_97 + { 4993, 4993, 4993, 4993 };
  vect__30.242_113 = vect_remainder_17.233_91 ^ vect__29.241_111;
  vect__30.242_114 = vect_remainder_17.233_92 ^ vect__29.241_112;
  vect__31.243_115 = vect__28.240_108 | vect__30.242_113;
  vect__31.243_116 = vect__28.240_109 | vect__30.242_114;
  vect__32.244_117 = vect__31.243_115 >> 31;
  vect__32.244_118 = vect__31.243_116 >> 31;
  vect_patt_76.245_119 = VEC_PACK_TRUNC_EXPR <vect__23.239_105, vect__23.239_106>;
  vect_patt_75.246_120 = VEC_PACK_TRUNC_EXPR <vect__32.244_117, vect__32.244_118>;
  vect_patt_74.247_121 = vect_patt_76.245_119 + vect_patt_75.246_120;
  vect_patt_72.248_122 = VEC_PACK_TRUNC_EXPR <vect_quotient_15.231_86, vect_quotient_15.231_87>;
  vect_patt_71.249_123 = vect_patt_74.247_121 + vect_patt_72.248_122;
  vect__41.251_126 = vect_patt_71.249_123 & vect_cst__125;
  MEM <vector(8) short unsigned int> [(short unsigned int *)_10] = vect__41.251_126;
  ivtmp.259_25 = ivtmp.259_79 + 16;
  if (_13 != ivtmp.259_25)
    goto <bb 3>; [96.88%]
  else
    goto <bb 4>; [3.12%]

  <bb 4> [local count: 10737416]:
  return;

}



;; Function vector_decode_12 (vector_decode_12, funcdef_no=582, decl_uid=18492, cgraph_uid=583, symbol_order=591)

Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 14
__attribute__((access ("^1[384]", )))
int vector_decode_12 (struct scalar * out, const uint8_t * in, int rank)
{
  unsigned long ivtmp.285;
  unsigned long ivtmp.283;
  uint16_t * c;
  uint8_t b1;
  uint8_t b2;
  uint8_t b3;
  const uint8_t * in;
  int _5;
  signed short _22;
  signed short _23;
  signed short _24;
  signed short _25;
  signed short _26;
  short unsigned int _27;
  _Bool _29;
  unsigned char _30;
  signed short _31;
  signed short _32;
  signed short _33;
  signed short _34;
  short unsigned int _36;
  _Bool _37;
  _Bool _38;
  unsigned long _83;
  const uint8_t * _84;
  unsigned long _85;
  unsigned int _86;
  unsigned long _87;
  unsigned long _89;
  unsigned int _90;
  unsigned int _91;
  const uint8_t * _96;
  unsigned long _102;

  <bb 2> [local count: 114863530]:
  if (rank_10(D) > 0)
    goto <bb 3>; [94.50%]
  else
    goto <bb 8>; [5.50%]

  <bb 3> [local count: 108546036]:
  _96 = in_9(D) + 384;
  ivtmp.283_95 = (unsigned long) _96;
  ivtmp.285_92 = (unsigned long) out_8(D);
  _91 = (unsigned int) rank_10(D);
  _90 = _91 + 4294967295;
  _89 = (unsigned long) _90;
  _86 = (unsigned int) _89;
  _87 = (unsigned long) in_9(D);
  _102 = _87 + 768;
  _85 = WIDEN_MULT_PLUS_EXPR <_86, 384, _102>;

  <bb 4> [local count: 1014686025]:
  # ivtmp.283_40 = PHI <ivtmp.283_94(7), ivtmp.283_95(3)>
  # ivtmp.285_97 = PHI <ivtmp.285_93(7), ivtmp.285_92(3)>
  _83 = ivtmp.283_40 + 18446744073709551232;
  in_54 = (const uint8_t *) _83;
  c_16 = (uint16_t *) ivtmp.285_97;

  <bb 5> [local count: 15586333654]:
  # in_57 = PHI <in_20(6), in_54(4)>
  # c_58 = PHI <c_35(6), c_16(4)>
  b1_18 = MEM[(const uint8_t *)in_57];
  b2_19 = MEM[(const uint8_t *)in_57 + 1B];
  in_20 = in_57 + 3;
  b3_21 = MEM[(const uint8_t *)in_20 + -1B];
  _22 = (signed short) b1_18;
  _23 = (signed short) b2_19;
  _24 = _23 << 8;
  _25 = _24 & 3840;
  _26 = _22 | _25;
  _27 = (short unsigned int) _26;
  MEM[(uint16_t *)c_58] = _27;
  _29 = _26 > 3328;
  _30 = b2_19 >> 4;
  _31 = (signed short) _30;
  _32 = (signed short) b3_21;
  _33 = _32 << 4;
  _34 = _31 | _33;
  c_35 = c_58 + 4;
  _36 = (short unsigned int) _34;
  MEM[(uint16_t *)c_35 + -2B] = _36;
  _37 = _34 > 3328;
  _38 = _29 | _37;
  if (_38 != 0)
    goto <bb 9>; [5.50%]
  else
    goto <bb 6>; [94.50%]

  <bb 6> [local count: 14729085309]:
  _84 = (const uint8_t *) ivtmp.283_40;
  if (in_20 != _84)
    goto <bb 5>; [98.93%]
  else
    goto <bb 7>; [1.07%]

  <bb 7> [local count: 958878295]:
  ivtmp.283_94 = ivtmp.283_40 + 384;
  ivtmp.285_93 = ivtmp.285_97 + 512;
  if (_85 != ivtmp.283_94)
    goto <bb 4>; [94.50%]
  else
    goto <bb 8>; [5.50%]

  <bb 8> [local count: 59055800]:

  <bb 9> [local count: 114863531]:
  # _5 = PHI <0(5), 1(8)>
  return _5;

}



;; Function add_storage (add_storage, funcdef_no=601, decl_uid=18733, cgraph_uid=602, symbol_order=610)

Removing basic block 7
Removing basic block 8
int add_storage (struct scalar * p, int private, struct ML_KEM_KEY * key)
{
  int rank;
  const struct ML_KEM_VINFO * _1;
  uint8_t[64] * _2;
  uint8_t * _3;
  long unsigned int _5;
  struct ossl_ml_kem_scalar_st * _6;
  int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct ossl_ml_kem_scalar_st * _10;
  struct ossl_ml_kem_scalar_st * _11;
  int _12;
  unsigned int _32;

  <bb 2> [local count: 1073741824]:
  if (p_18(D) == 0B)
    goto <bb 6>; [30.95%]
  else
    goto <bb 3>; [69.05%]

  <bb 3> [local count: 741418728]:
  _1 = key_16(D)->vinfo;
  rank_17 = _1->rank;
  _2 = &key_16(D)->seedbuf;
  __builtin_memset (_2, 0, 64);
  key_16(D)->rho = _2;
  _3 = key_16(D) + 140;
  key_16(D)->pkhash = _3;
  MEM <vector(2) long unsigned int> [(uint8_t * *)key_16(D) + 88B] = { 0, 0 };
  key_16(D)->t = p_18(D);
  _5 = rank_17 w* 512;
  _6 = p_18(D) + _5;
  key_16(D)->m = _6;
  if (private_25(D) != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 370709364]:
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 370709364]:
  _7 = rank_17 * rank_17;
  _8 = (long unsigned int) _7;
  _32 = (unsigned int) _8;
  _9 = _32 w* 512;
  _10 = _6 + _9;
  key_16(D)->s = _10;
  _11 = _10 + _5;
  key_16(D)->z = _11;
  goto <bb 4>; [100.00%]

  <bb 6> [local count: 1073741824]:
  # _12 = PHI <0(2), 1(4)>
  return _12;

}



;; Function single_keccak (single_keccak, funcdef_no=554, decl_uid=18171, cgraph_uid=555, symbol_order=563)

Removing basic block 10
Removing basic block 11
Removing basic block 12
int single_keccak (uint8_t * out, size_t outlen, const uint8_t * in, size_t inlen, struct EVP_MD_CTX * mdctx)
{
  unsigned int sz;
  unsigned int _1;
  int _2;
  const struct EVP_MD * _3;
  int _4;
  int _5;
  unsigned int sz.13_6;
  long unsigned int _7;
  int _9;
  int _24;

  <bb 2> [local count: 1073741824]:
  _1 = (unsigned int) outlen_11(D);
  sz = _1;
  _2 = EVP_DigestUpdate (mdctx_14(D), in_15(D), inlen_16(D));
  if (_2 == 0)
    goto <bb 8>; [51.12%]
  else
    goto <bb 3>; [48.88%]

  <bb 3> [local count: 524845000]:
  _3 = EVP_MD_CTX_get0_md (mdctx_14(D));
  _4 = EVP_MD_xof (_3);
  if (_4 != 0)
    goto <bb 4>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 4> [local count: 178447302]:
  _24 = EVP_DigestFinalXOF (mdctx_14(D), out_20(D), outlen_11(D));
  goto <bb 9>; [100.00%]

  <bb 5> [local count: 346397698]:
  _5 = EVP_DigestFinal_ex (mdctx_14(D), out_20(D), &sz);
  if (_5 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 6> [local count: 173198849]:
  sz.13_6 = sz;
  _7 = (long unsigned int) sz.13_6;
  if (_7 != outlen_11(D))
    goto <bb 7>; [0.04%]
  else
    goto <bb 9>; [99.96%]

  <bb 7> [local count: 69279]:
  OPENSSL_die ("Assertion failed: (size_t) sz == outlen", "ml_kem.c", 339);

  <bb 8> [local count: 722095673]:

  <bb 9> [local count: 1073672545]:
  # _9 = PHI <0(8), _24(4), 1(6)>
  sz ={v} {CLOBBER(eos)};
  return _9;

}



;; Function matrix_expand (matrix_expand, funcdef_no=587, decl_uid=18553, cgraph_uid=588, symbol_order=596)

Removing basic block 23
Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 27
Removing basic block 28
Removing basic block 29
Removing basic block 30
Removing basic block 31
Removing basic block 32
Removing basic block 33
Removing basic block 34
Removing basic block 35
Removing basic block 36
Removing basic block 37
Removing basic block 38
int matrix_expand (struct EVP_MD_CTX * mdctx, struct ML_KEM_KEY * key)
{
  uint16_t * curr;
  uint8_t buf[168];
  uint8_t * in;
  uint16_t d;
  uint8_t b1;
  uint8_t b2;
  uint8_t b3;
  int j;
  int i;
  int rank;
  uint8_t input[34];
  struct scalar * out;
  const struct ML_KEM_VINFO * _1;
  uint8_t * _2;
  struct EVP_MD * _5;
  int _6;
  int _7;
  short unsigned int _8;
  int _13;
  short unsigned int _14;
  short unsigned int _34;
  int _35;
  short unsigned int _49;
  short unsigned int _50;
  unsigned char _51;
  short unsigned int _52;
  short unsigned int _69;
  unsigned char _81;
  unsigned long _82;
  unsigned long _83;
  unsigned char _84;

  <bb 2> [local count: 87004971]:
  out_20 = key_19(D)->m;
  _1 = key_19(D)->vinfo;
  rank_21 = _1->rank;
  _2 = key_19(D)->rho;
  __builtin_memcpy (&input, _2, 32);
  if (rank_21 > 0)
    goto <bb 16>; [97.25%]
  else
    goto <bb 17>; [2.75%]

  <bb 3> [local count: 1044213921]:
  # out_44 = PHI <out_28(22), out_42(16)>
  # j_75 = PHI <j_30(22), 0(16)>
  input[32] = _84;
  _81 = (unsigned char) j_75;
  input[33] = _81;
  _5 = key_19(D)->shake128_md;
  _6 = EVP_DigestInit_ex (mdctx_25(D), _5, 0B);
  if (_6 == 0)
    goto <bb 4>; [2.75%]
  else
    goto <bb 5>; [97.25%]

  <bb 4> [local count: 56642087]:
  goto <bb 20>; [100.00%]

  <bb 5> [local count: 1015498035]:
  _7 = EVP_DigestUpdate (mdctx_25(D), &input, 34);
  if (_7 == 0)
    goto <bb 4>; [2.75%]
  else
    goto <bb 6>; [97.25%]

  <bb 6> [local count: 987571836]:
  out_28 = out_44 + 512;
  _82 = (unsigned long) out_28;
  _83 = _82 + 18446744073709551104;
  curr_33 = (uint16_t *) _83;

  <bb 7> [local count: 9231800666]:
  # curr_57 = PHI <curr_33(6), curr_58(14)>
  _35 = EVP_DigestSqueeze (mdctx_25(D), &buf, 168);
  if (_35 == 0)
    goto <bb 19>; [5.50%]
  else
    goto <bb 8>; [94.50%]

  <bb 8> [local count: 98605669406]:
  # curr_41 = PHI <curr_57(7), curr_58(13)>
  # in_36 = PHI <&buf(7), in_39(13)>
  b1_37 = MEM[(uint8_t *)in_36];
  b2_38 = MEM[(uint8_t *)in_36 + 1B];
  in_39 = in_36 + 3;
  b3_40 = MEM[(uint8_t *)in_39 + -1B];
  if (out_28 <= curr_41)
    goto <bb 21>; [3.66%]
  else
    goto <bb 9>; [96.34%]

  <bb 9> [local count: 94996701791]:
  _14 = (short unsigned int) b2_38;
  _69 = _14 << 8;
  _8 = _69 & 3840;
  _34 = (short unsigned int) b1_37;
  d_29 = _8 + _34;
  if (d_29 <= 3328)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 47498350896]:
  curr_47 = curr_41 + 2;
  *curr_41 = d_29;
  if (out_28 <= curr_47)
    goto <bb 21>; [7.32%]
  else
    goto <bb 11>; [92.68%]

  <bb 11> [local count: 91519822425]:
  # curr_72 = PHI <curr_47(10), curr_41(9)>
  _49 = (short unsigned int) b3_40;
  _50 = _49 << 4;
  _51 = b2_38 >> 4;
  _52 = (short unsigned int) _51;
  d_53 = _50 + _52;
  if (d_53 <= 3328)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 45759911212]:
  curr_54 = curr_72 + 2;
  *curr_72 = d_53;

  <bb 13> [local count: 91519822425]:
  # curr_58 = PHI <curr_72(11), curr_54(12)>
  if (&MEM <uint8_t[168]> [(void *)&buf + 168B] != in_39)
    goto <bb 8>; [98.21%]
  else
    goto <bb 14>; [1.79%]

  <bb 14> [local count: 8244228827]:
  if (out_28 > curr_58)
    goto <bb 7>; [100.00%]
  else
    goto <bb 22>; [0.00%]

  <bb 15> [local count: 29527904]:
  i_22 = i_74 + 1;
  if (rank_21 != i_22)
    goto <bb 16>; [97.25%]
  else
    goto <bb 17>; [2.75%]

  <bb 16> [local count: 113328221]:
  # out_42 = PHI <out_28(15), out_20(2)>
  # i_74 = PHI <i_22(15), 0(2)>
  _84 = (unsigned char) i_74;
  goto <bb 3>; [100.00%]

  <bb 17> [local count: 3204654]:

  <bb 18> [local count: 87004970]:
  # _13 = PHI <0(20), 1(17)>
  input ={v} {CLOBBER(eos)};
  return _13;

  <bb 19> [local count: 27158229]:
  buf ={v} {CLOBBER(eos)};

  <bb 20> [local count: 56642087]:
  goto <bb 18>; [100.00%]

  <bb 21> [local count: 7085847009]:

  <bb 22> [local count: 960413607]:
  buf ={v} {CLOBBER(eos)};
  j_30 = j_75 + 1;
  if (rank_21 != j_30)
    goto <bb 3>; [96.93%]
  else
    goto <bb 15>; [3.07%]

}



;; Function scalar_inverse_ntt (scalar_inverse_ntt, funcdef_no=565, decl_uid=18278, cgraph_uid=566, symbol_order=574)

Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
Removing basic block 14
void scalar_inverse_ntt (struct scalar * s)
{
  uint64_t product;
  uint32_t quotient;
  uint32_t remainder;
  const uint16_t subtracted;
  uint16_t * curr;
  uint64_t product;
  uint32_t quotient;
  uint32_t remainder;
  const uint16_t subtracted;
  const uint16_t subtracted;
  uint32_t zeta;
  uint16_t odd;
  uint16_t even;
  uint16_t * pause;
  uint16_t * peer;
  uint16_t * curr;
  int offset;
  uint16_t * end;
  const uint16_t * roots;
  long unsigned int _2;
  short unsigned int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  unsigned int _8;
  unsigned int _9;
  short unsigned int _10;
  signed short subtracted.42_30;
  signed short _37;
  short unsigned int _38;
  signed short _39;
  signed short _40;
  signed short _41;
  short unsigned int _42;
  long unsigned int _43;
  long unsigned int _45;
  unsigned int _47;
  short unsigned int _49;
  signed short subtracted.42_51;
  signed short _52;
  short unsigned int _53;
  signed short _54;
  signed short _55;
  signed short _56;
  short unsigned int _57;
  short unsigned int _61;
  int _62;
  int _64;
  unsigned int _65;
  long unsigned int _66;
  long unsigned int _68;
  unsigned int _70;
  short unsigned int _72;
  signed short subtracted.42_74;
  signed short _75;
  short unsigned int _76;
  signed short _77;
  signed short _78;
  signed short _79;
  short unsigned int _80;
  unsigned int ivtmp_214;
  unsigned int ivtmp_215;
  sizetype _216;
  sizetype _218;
  unsigned long _219;
  unsigned int _220;
  sizetype _221;
  sizetype _225;
  unsigned long _227;
  unsigned int _230;
  _Bool _232;
  sizetype _233;
  sizetype _235;
  sizetype _238;

  <bb 2> [local count: 1856596]:
  end_21 = s_20(D) + 512;

  <bb 3> [local count: 12992276]:
  # roots_11 = PHI <&kInverseNTTRoots(2), roots_25(7)>
  # offset_13 = PHI <2(2), offset_35(7)>
  # ivtmp_215 = PHI <7(2), ivtmp_214(7)>
  curr_23 = &s_20(D)->c;
  _2 = offset_13 w* 2;

  <bb 4> [local count: 118111600]:
  # roots_12 = PHI <roots_11(3), roots_25(6)>
  # curr_14 = PHI <curr_23(3), peer_240(6)>
  pause_24 = curr_14 + _2;
  roots_25 = roots_12 + 2;
  _3 = MEM[(const uint16_t *)roots_25];
  zeta_26 = (uint32_t) _3;

  <bb 5> [local count: 1073741824]:
  # curr_15 = PHI <curr_14(4), curr_32(5)>
  # peer_16 = PHI <pause_24(4), peer_29(5)>
  even_27 = MEM[(uint16_t *)curr_15];
  odd_28 = MEM[(uint16_t *)peer_16];
  _4 = (int) even_27;
  _5 = (int) odd_28;
  _6 = _4 - _5;
  _7 = _6 + 3329;
  _8 = (unsigned int) _7;
  _9 = _8 * zeta_26;
  peer_29 = peer_16 + 2;
  _43 = (long unsigned int) _9;
  _220 = (unsigned int) _43;
  product_44 = _220 w* 5039;
  _45 = product_44 >> 24;
  quotient_46 = (uint32_t) _45;
  _47 = quotient_46 * 3329;
  remainder_48 = _9 - _47;
  _49 = (short unsigned int) remainder_48;
  subtracted_50 = _49 + 62207;
  subtracted.42_51 = (signed short) subtracted_50;
  _52 = subtracted.42_51 >> 15;
  _53 = _49 ^ subtracted_50;
  _54 = (signed short) _53;
  _55 = _52 & _54;
  _56 = subtracted.42_51 ^ _55;
  _57 = (short unsigned int) _56;
  MEM[(uint16_t *)peer_29 + -2B] = _57;
  _10 = even_27 + odd_28;
  curr_32 = curr_15 + 2;
  subtracted_33 = _10 + 62207;
  subtracted.42_30 = (signed short) subtracted_33;
  _37 = subtracted.42_30 >> 15;
  _38 = _10 ^ subtracted_33;
  _39 = (signed short) _38;
  _40 = _37 & _39;
  _41 = subtracted.42_30 ^ _40;
  _42 = (short unsigned int) _41;
  MEM[(uint16_t *)curr_32 + -2B] = _42;
  if (pause_24 > curr_32)
    goto <bb 5>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 6> [local count: 118111600]:
  _235 = (sizetype) curr_14;
  _221 = _235 + 1;
  _233 = (sizetype) pause_24;
  _232 = _221 <= _233;
  _219 = _2 + 18446744073709551615;
  _227 = _219 >> 1;
  _218 = _227 * 2;
  _225 = _232 ? _218 : 0;
  _238 = _233 + 2;
  _216 = _225 + _238;
  peer_240 = (uint16_t *) _216;
  if (end_21 > peer_240)
    goto <bb 4>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 12992276]:
  offset_35 = offset_13 << 1;
  ivtmp_214 = ivtmp_215 + 4294967295;
  if (ivtmp_214 != 0)
    goto <bb 3>; [85.71%]
  else
    goto <bb 8>; [14.29%]

  <bb 8> [local count: 185659639]:
  # curr_60 = PHI <curr_23(7), curr_81(8)>
  _61 = MEM[(uint16_t *)curr_60];
  _62 = (int) _61;
  _64 = _62 * 3303;
  _65 = (unsigned int) _64;
  _66 = (long unsigned int) _64;
  _230 = (unsigned int) _66;
  product_67 = _230 w* 5039;
  _68 = product_67 >> 24;
  quotient_69 = (uint32_t) _68;
  _70 = quotient_69 * 3329;
  remainder_71 = _65 - _70;
  _72 = (short unsigned int) remainder_71;
  subtracted_73 = _72 + 62207;
  subtracted.42_74 = (signed short) subtracted_73;
  _75 = subtracted.42_74 >> 15;
  _76 = _72 ^ subtracted_73;
  _77 = (signed short) _76;
  _78 = _75 & _77;
  _79 = subtracted.42_74 ^ _78;
  _80 = (short unsigned int) _79;
  curr_81 = curr_60 + 2;
  MEM[(uint16_t *)curr_81 + -2B] = _80;
  if (end_21 > curr_81)
    goto <bb 8>; [99.00%]
  else
    goto <bb 9>; [1.00%]

  <bb 9> [local count: 1856596]:
  return;

}



;; Function cbd_3 (cbd_3, funcdef_no=589, decl_uid=18588, cgraph_uid=590, symbol_order=598)

Removing basic block 8
Removing basic block 9
Removing basic block 10
Removing basic block 11
__attribute__((access ("^1[33]", )))
int cbd_3 (struct scalar * out, uint8_t * in, struct EVP_MD_CTX * mdctx, const struct ML_KEM_KEY * key)
{
  unsigned long ivtmp.458;
  unsigned long ivtmp.457;
  vector(8) short unsigned int vect_array.451[4];
  vector(8) short unsigned int vect_array.450[4];
  short unsigned int[32] * vectp_out.448;
  vector(8) short unsigned int vect__77.447;
  vector(8) short unsigned int vect__75.446;
  vector(8) signed short vect__130.445;
  vector(8) signed short vect__74.444;
  vector(8) signed short vect_value.443;
  vector(8) short unsigned int vect_value_106.442;
  vector(8) short unsigned int vect_patt_321.440;
  vector(16) unsigned char vect__70.439;
  vector(8) short unsigned int vect__68.438;
  vector(16) unsigned char vect__129.437;
  vector(16) unsigned char vect__67.436;
  vector(8) short unsigned int vect__66.435;
  vector(16) unsigned char vect__128.434;
  vector(16) unsigned char vect__65.433;
  vector(16) unsigned char vect_patt_323.432;
  vector(16) unsigned char vect__127.431;
  vector(16) unsigned char vect__63.430;
  vector(16) unsigned char vect_patt_325.429;
  vector(16) unsigned char vect__126.428;
  vector(16) unsigned char vect__60.427;
  vector(16) unsigned char vect__125.426;
  vector(16) unsigned char vect__58.425;
  vector(8) short unsigned int vect__57.424;
  vector(8) short unsigned int vect__55.423;
  vector(8) signed short vect__124.422;
  vector(8) signed short vect__54.421;
  vector(8) signed short vect_value.420;
  vector(8) short unsigned int vect_value_103.419;
  vector(8) short unsigned int vect_patt_326.417;
  vector(8) short unsigned int vect__51.416;
  vector(16) unsigned char vect__123.415;
  vector(16) unsigned char vect__50.414;
  vector(8) short unsigned int vect__48.413;
  vector(16) unsigned char vect__122.412;
  vector(16) unsigned char vect__46.411;
  vector(16) unsigned char vect_patt_328.410;
  vector(16) unsigned char vect__121.409;
  vector(16) unsigned char vect__44.408;
  vector(16) unsigned char vect_patt_330.407;
  vector(16) unsigned char vect__120.406;
  vector(16) unsigned char vect__41.405;
  vector(16) unsigned char vect__119.404;
  vector(16) unsigned char vect__39.403;
  vector(8) short unsigned int vect__38.402;
  vector(8) short unsigned int vect__36.401;
  vector(8) signed short vect__118.400;
  vector(8) signed short vect__35.399;
  vector(8) signed short vect_value.398;
  vector(8) short unsigned int vect_value_100.397;
  vector(8) short unsigned int vect_patt_331.395;
  vector(8) short unsigned int vect__32.394;
  vector(16) unsigned char vect__117.393;
  vector(16) unsigned char vect__31.392;
  vector(8) short unsigned int vect__29.391;
  vector(16) unsigned char vect__116.390;
  vector(16) unsigned char vect__28.389;
  vector(16) unsigned char vect__115.388;
  vector(16) unsigned char vect__26.387;
  vector(16) unsigned char vect_patt_333.386;
  vector(16) unsigned char vect_patt_335.385;
  vector(16) unsigned char vect__114.384;
  vector(16) unsigned char vect__22.383;
  vector(16) unsigned char vect__113.382;
  vector(16) unsigned char vect__20.381;
  vector(8) short unsigned int vect__19.380;
  vector(8) short unsigned int vect__18.379;
  vector(8) signed short vect__112.378;
  vector(8) signed short vect__17.377;
  vector(8) signed short vect_value.376;
  vector(8) short unsigned int vect_value_97.375;
  vector(8) short unsigned int vect_patt_336.373;
  vector(8) short unsigned int vect__14.372;
  vector(16) unsigned char vect__37.371;
  vector(16) unsigned char vect__13.370;
  vector(8) short unsigned int vect__11.369;
  vector(16) unsigned char vect__56.368;
  vector(16) unsigned char vect__10.367;
  vector(16) unsigned char vect__76.366;
  vector(16) unsigned char vect__8.365;
  vector(16) unsigned char vect_patt_338.364;
  vector(16) unsigned char vect_patt_340.363;
  vector(16) unsigned char vect__86.362;
  vector(16) unsigned char vect__6.361;
  vector(16) unsigned char vect__109.360;
  vector(16) unsigned char vect__3.359;
  vector(16) unsigned char vect__110.358;
  vector(16) unsigned char vect_b1_92.357;
  vector(16) unsigned char vect_b1_92.356;
  vector(16) unsigned char vect_b1_92.355;
  vector(16) unsigned char vect_array.354[3];
  unsigned char[48] * vectp_randbuf.352;
  uint8_t randbuf[192];
  vector(8) short unsigned int _16;
  vector(8) short unsigned int _17;
  vector(8) short unsigned int _18;
  vector(8) short unsigned int _19;
  int _80;
  unsigned long _93;
  unsigned long _95;
  vector(8) short unsigned int _97;
  vector(8) short unsigned int _112;
  struct EVP_MD * _131;
  int _133;
  int _134;
  vector(8) short unsigned int _176;
  vector(8) short unsigned int _177;

  <bb 2> [local count: 25379358]:
  _131 = MEM[(struct EVP_MD * *)key_90(D) + 24B];
  _133 = EVP_DigestInit_ex (mdctx_89(D), _131, 0B);
  if (_133 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 3> [local count: 8375188]:
  _134 = single_keccak (&randbuf, 192, in_88(D), 33, mdctx_89(D));
  if (_134 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 4> [local count: 4187594]:
  ivtmp.457_342 = (unsigned long) &randbuf;
  ivtmp.458_92 = (unsigned long) out_83(D);
  _95 = ivtmp.458_92 + 512;

  <bb 5> [local count: 16750376]:
  # ivtmp.457_84 = PHI <ivtmp.457_342(4), ivtmp.457_85(5)>
  # ivtmp.458_79 = PHI <ivtmp.458_92(4), ivtmp.458_78(5)>
  vectp_out.448_350 = (short unsigned int[32] *) ivtmp.458_79;
  vectp_randbuf.352_288 = (unsigned char[48] *) ivtmp.457_84;
  vect_array.354 = .LOAD_LANES (MEM <unsigned char[48]> [(uint8_t *)vectp_randbuf.352_288]);
  vect_b1_92.355_286 = vect_array.354[0];
  vect_b1_92.356_285 = vect_array.354[1];
  vect_b1_92.357_284 = vect_array.354[2];
  vect_array.354 ={v} {CLOBBER};
  vect__110.358_282 = vect_b1_92.355_286 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__3.359_281 = vect_b1_92.355_286 >> 1;
  vect__109.360_279 = vect__3.359_281 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__6.361_278 = vect_b1_92.355_286 >> 2;
  vect__86.362_276 = vect__6.361_278 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect_patt_340.363_275 = vect__86.362_276 + vect__109.360_279;
  vect_patt_338.364_274 = vect_patt_340.363_275 + vect__110.358_282;
  vect__8.365_273 = vect_b1_92.355_286 >> 3;
  vect__76.366_271 = vect__8.365_273 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__10.367_270 = vect_b1_92.355_286 >> 4;
  vect__56.368_268 = vect__10.367_270 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__11.369_267 = [vec_unpack_lo_expr] vect__56.368_268;
  vect__11.369_266 = [vec_unpack_hi_expr] vect__56.368_268;
  vect__13.370_265 = vect_b1_92.355_286 >> 5;
  vect__37.371_263 = vect__13.370_265 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__14.372_262 = [vec_unpack_lo_expr] vect__37.371_263;
  vect__14.372_261 = [vec_unpack_hi_expr] vect__37.371_263;
  vect_patt_336.373_260 = .VEC_WIDEN_MINUS_LO (vect_patt_338.364_274, vect__76.366_271);
  vect_patt_336.373_259 = .VEC_WIDEN_MINUS_HI (vect_patt_338.364_274, vect__76.366_271);
  _19 = vect__14.372_262 + vect__11.369_267;
  vect_value_97.375_256 = vect_patt_336.373_260 - _19;
  _18 = vect__14.372_261 + vect__11.369_266;
  vect_value_97.375_255 = vect_patt_336.373_259 - _18;
  vect_value.376_254 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_value_97.375_256);
  vect_value.376_253 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_value_97.375_255);
  vect__17.377_252 = vect_value.376_254 >> 15;
  vect__17.377_251 = vect_value.376_253 >> 15;
  vect__112.378_249 = vect__17.377_252 & { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect__112.378_248 = vect__17.377_251 & { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect__18.379_247 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__112.378_249);
  vect__18.379_246 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__112.378_248);
  vect__19.380_245 = vect__18.379_247 + vect_value_97.375_256;
  vect__19.380_244 = vect__18.379_246 + vect_value_97.375_255;
  vect__20.381_243 = vect_b1_92.355_286 >> 6;
  vect__113.382_241 = vect__20.381_243 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__22.383_240 = vect_b1_92.355_286 >> 7;
  vect__114.384_238 = vect_b1_92.356_285 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect_patt_335.385_237 = vect__114.384_238 + vect__22.383_240;
  vect_patt_333.386_236 = vect_patt_335.385_237 + vect__113.382_241;
  vect__26.387_235 = vect_b1_92.356_285 >> 1;
  vect__115.388_233 = vect__26.387_235 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__28.389_232 = vect_b1_92.356_285 >> 2;
  vect__116.390_230 = vect__28.389_232 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__29.391_229 = [vec_unpack_lo_expr] vect__116.390_230;
  vect__29.391_228 = [vec_unpack_hi_expr] vect__116.390_230;
  vect__31.392_227 = vect_b1_92.356_285 >> 3;
  vect__117.393_225 = vect__31.392_227 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__32.394_224 = [vec_unpack_lo_expr] vect__117.393_225;
  vect__32.394_223 = [vec_unpack_hi_expr] vect__117.393_225;
  vect_patt_331.395_222 = .VEC_WIDEN_MINUS_LO (vect_patt_333.386_236, vect__115.388_233);
  vect_patt_331.395_221 = .VEC_WIDEN_MINUS_HI (vect_patt_333.386_236, vect__115.388_233);
  _112 = vect__32.394_224 + vect__29.391_229;
  vect_value_100.397_218 = vect_patt_331.395_222 - _112;
  _17 = vect__32.394_223 + vect__29.391_228;
  vect_value_100.397_217 = vect_patt_331.395_221 - _17;
  vect_value.398_216 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_value_100.397_218);
  vect_value.398_215 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_value_100.397_217);
  vect__35.399_214 = vect_value.398_216 >> 15;
  vect__35.399_213 = vect_value.398_215 >> 15;
  vect__118.400_211 = vect__35.399_214 & { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect__118.400_210 = vect__35.399_213 & { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect__36.401_209 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__118.400_211);
  vect__36.401_208 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__118.400_210);
  vect__38.402_207 = vect__36.401_209 + vect_value_100.397_218;
  vect__38.402_206 = vect__36.401_208 + vect_value_100.397_217;
  vect__39.403_205 = vect_b1_92.356_285 >> 4;
  vect__119.404_203 = vect__39.403_205 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__41.405_202 = vect_b1_92.356_285 >> 5;
  vect__120.406_200 = vect__41.405_202 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect_patt_330.407_199 = vect__120.406_200 + vect__119.404_203;
  vect__44.408_198 = vect_b1_92.356_285 >> 6;
  vect__121.409_196 = vect__44.408_198 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect_patt_328.410_195 = vect__121.409_196 + vect_patt_330.407_199;
  vect__46.411_194 = vect_b1_92.356_285 >> 7;
  vect__122.412_192 = vect_b1_92.357_284 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__48.413_191 = [vec_unpack_lo_expr] vect__122.412_192;
  vect__48.413_190 = [vec_unpack_hi_expr] vect__122.412_192;
  vect__50.414_189 = vect_b1_92.357_284 >> 1;
  vect__123.415_187 = vect__50.414_189 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__51.416_186 = [vec_unpack_lo_expr] vect__123.415_187;
  vect__51.416_185 = [vec_unpack_hi_expr] vect__123.415_187;
  vect_patt_326.417_184 = .VEC_WIDEN_MINUS_LO (vect_patt_328.410_195, vect__46.411_194);
  vect_patt_326.417_183 = .VEC_WIDEN_MINUS_HI (vect_patt_328.410_195, vect__46.411_194);
  _16 = vect__51.416_186 + vect__48.413_191;
  vect_value_103.419_180 = vect_patt_326.417_184 - _16;
  _97 = vect__51.416_185 + vect__48.413_190;
  vect_value_103.419_179 = vect_patt_326.417_183 - _97;
  vect_value.420_178 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_value_103.419_180);
  vect_value.420_173 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_value_103.419_179);
  vect__54.421_172 = vect_value.420_178 >> 15;
  vect__54.421_167 = vect_value.420_173 >> 15;
  vect__124.422_161 = vect__54.421_172 & { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect__124.422_160 = vect__54.421_167 & { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect__55.423_155 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__124.422_161);
  vect__55.423_154 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__124.422_160);
  vect__57.424_153 = vect__55.423_155 + vect_value_103.419_180;
  vect__57.424_152 = vect__55.423_154 + vect_value_103.419_179;
  vect__58.425_151 = vect_b1_92.357_284 >> 2;
  vect__125.426_149 = vect__58.425_151 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__60.427_148 = vect_b1_92.357_284 >> 3;
  vect__126.428_146 = vect__60.427_148 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect_patt_325.429_145 = vect__126.428_146 + vect__125.426_149;
  vect__63.430_144 = vect_b1_92.357_284 >> 4;
  vect__127.431_142 = vect__63.430_144 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect_patt_323.432_141 = vect__127.431_142 + vect_patt_325.429_145;
  vect__65.433_140 = vect_b1_92.357_284 >> 5;
  vect__128.434_136 = vect__65.433_140 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__66.435_135 = [vec_unpack_lo_expr] vect__128.434_136;
  vect__66.435_132 = [vec_unpack_hi_expr] vect__128.434_136;
  vect__67.436_105 = vect_b1_92.357_284 >> 6;
  vect__129.437_99 = vect__67.436_105 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__68.438_96 = [vec_unpack_lo_expr] vect__129.437_99;
  vect__68.438_91 = [vec_unpack_hi_expr] vect__129.437_99;
  vect__70.439_72 = vect_b1_92.357_284 >> 7;
  vect_patt_321.440_69 = .VEC_WIDEN_MINUS_LO (vect_patt_323.432_141, vect__70.439_72);
  vect_patt_321.440_62 = .VEC_WIDEN_MINUS_HI (vect_patt_323.432_141, vect__70.439_72);
  _177 = vect__68.438_96 + vect__66.435_135;
  vect_value_106.442_43 = vect_patt_321.440_69 - _177;
  _176 = vect__68.438_91 + vect__66.435_132;
  vect_value_106.442_33 = vect_patt_321.440_62 - _176;
  vect_value.443_30 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_value_106.442_43);
  vect_value.443_24 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_value_106.442_33);
  vect__74.444_15 = vect_value.443_30 >> 15;
  vect__74.444_12 = vect_value.443_24 >> 15;
  vect__130.445_1 = vect__74.444_15 & { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect__130.445_345 = vect__74.444_12 & { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect__75.446_346 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__130.445_1);
  vect__75.446_347 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__130.445_345);
  vect__77.447_348 = vect_value_106.442_43 + vect__75.446_346;
  vect__77.447_349 = vect_value_106.442_33 + vect__75.446_347;
  vect_array.450 ={v} {CLOBBER};
  vect_array.450[0] = vect__19.380_245;
  vect_array.450[1] = vect__38.402_207;
  vect_array.450[2] = vect__57.424_153;
  vect_array.450[3] = vect__77.447_348;
  MEM <short unsigned int[32]> [(uint16_t *)vectp_out.448_350] = .STORE_LANES (vect_array.450);
  vect_array.450 ={v} {CLOBBER};
  _93 = ivtmp.458_79 + 64;
  vectp_out.448_359 = (short unsigned int[32] *) _93;
  vect_array.451 ={v} {CLOBBER};
  vect_array.451[0] = vect__19.380_244;
  vect_array.451[1] = vect__38.402_206;
  vect_array.451[2] = vect__57.424_152;
  vect_array.451[3] = vect__77.447_349;
  MEM <short unsigned int[32]> [(uint16_t *)vectp_out.448_359] = .STORE_LANES (vect_array.451);
  vect_array.451 ={v} {CLOBBER};
  ivtmp.457_85 = ivtmp.457_84 + 48;
  ivtmp.458_78 = ivtmp.458_79 + 128;
  if (ivtmp.458_78 != _95)
    goto <bb 5>; [75.00%]
  else
    goto <bb 7>; [25.00%]

  <bb 6> [local count: 21191764]:

  <bb 7> [local count: 25379358]:
  # _80 = PHI <0(6), 1(5)>
  randbuf ={v} {CLOBBER(eos)};
  return _80;

}



;; Function scalar_encode (scalar_encode, funcdef_no=570, decl_uid=18156, cgraph_uid=571, symbol_order=579)

Removing basic block 9
Removing basic block 10
void scalar_encode (uint8_t * out, const struct scalar * s, int bits)
{
  int used;
  uint64_t element;
  uint64_t accum;
  const uint16_t * curr;
  short unsigned int _1;
  int _2;
  int _6;
  long unsigned int _27;
  long unsigned int _29;
  const struct scalar * _37;
  unsigned char * _44;

  <bb 2> [local count: 10737416]:
  curr_19 = &s_18(D)->c;
  _37 = s_18(D) + 512;

  <bb 3> [local count: 1073741824]:
  # out_9 = PHI <out_21(D)(2), out_10(7)>
  # curr_11 = PHI <curr_19(2), curr_23(7)>
  # accum_12 = PHI <0(2), accum_13(7)>
  # used_14 = PHI <0(2), used_15(7)>
  curr_23 = curr_11 + 2;
  _1 = MEM[(const uint16_t *)curr_23 + -2B];
  element_24 = (uint64_t) _1;
  _2 = used_14 + bits_25(D);
  _29 = element_24 << used_14;
  _27 = accum_12 | _29;
  if (_2 <= 63)
    goto <bb 7>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 4> [local count: 536870912]:
  _44 = out_9 + 8;
  if (_2 != 64)
    goto <bb 5>; [66.00%]
  else
    goto <bb 6>; [34.00%]

  <bb 5> [local count: 354334800]:
  MEM <unsigned long> [(char * {ref-all})out_9] = _27;
  _6 = 64 - used_14;
  accum_30 = element_24 >> _6;
  used_31 = _2 + -64;
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 182536112]:
  MEM <unsigned long> [(char * {ref-all})out_9] = _27;

  <bb 7> [local count: 1073741824]:
  # out_10 = PHI <out_9(3), _44(5), _44(6)>
  # accum_13 = PHI <_27(3), accum_30(5), 0(6)>
  # used_15 = PHI <_2(3), used_31(5), 0(6)>
  if (curr_23 != _37)
    goto <bb 3>; [99.00%]
  else
    goto <bb 8>; [1.00%]

  <bb 8> [local count: 10737416]:
  return;

}



;; Function encode_pubkey (encode_pubkey, funcdef_no=594, decl_uid=18662, cgraph_uid=595, symbol_order=603)

Removing basic block 6
Removing basic block 7
Removing basic block 8
void encode_pubkey (uint8_t * out, const struct ML_KEM_KEY * key)
{
  const struct scalar * a;
  uint8_t * out;
  const struct ML_KEM_VINFO * vinfo;
  const uint8_t * rho;
  struct ossl_ml_kem_scalar_st * _1;
  int _2;
  long unsigned int _3;
  uint8_t * _4;
  sizetype _10;
  struct ossl_ml_kem_scalar_st * _11;
  sizetype _13;
  unsigned int _21;
  unsigned int _23;

  <bb 2> [local count: 1073741824]:
  rho_7 = key_6(D)->rho;
  vinfo_8 = key_6(D)->vinfo;
  _1 = key_6(D)->t;
  _2 = vinfo_8->rank;
  if (_2 > 0)
    goto <bb 3>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 3> [local count: 955630224]:
  _21 = (unsigned int) _2;
  _10 = (sizetype) _21;
  _23 = (unsigned int) _10;
  _13 = _23 w* 512;
  _11 = _1 + _13;

  <bb 4> [local count: 8687547538]:
  # a_24 = PHI <a_15(4), _1(3)>
  # out_25 = PHI <out_18(4), out_9(D)(3)>
  a_15 = a_24 + 512;
  scalar_encode (out_25, a_24, 12);
  out_18 = out_25 + 384;
  if (_11 != a_15)
    goto <bb 4>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 1073741824]:
  _3 = vinfo_8->vector_bytes;
  _4 = out_9(D) + _3;
  __builtin_memcpy (_4, rho_7, 32); [tail call]
  return;

}



;; Function cbd_2 (cbd_2, funcdef_no=588, decl_uid=18572, cgraph_uid=589, symbol_order=597)

Removing basic block 8
Removing basic block 9
Removing basic block 10
Removing basic block 11
__attribute__((access ("^1[33]", )))
int cbd_2 (struct scalar * out, uint8_t * in, struct EVP_MD_CTX * mdctx, const struct ML_KEM_KEY * key)
{
  unsigned long ivtmp.538;
  unsigned long ivtmp.537;
  vector(8) short unsigned int vect_array.531[2];
  vector(8) short unsigned int vect_array.530[2];
  short unsigned int[16] * vectp_out.528;
  vector(8) short unsigned int vect__27.527;
  vector(8) short unsigned int vect__25.526;
  vector(8) signed short vect__58.525;
  vector(8) signed short vect__24.524;
  vector(8) signed short vect_value.523;
  vector(8) short unsigned int vect_value_48.522;
  vector(8) short unsigned int vect_patt_127.521;
  vector(16) unsigned char vect__20.520;
  vector(8) short unsigned int vect__19.519;
  vector(16) unsigned char vect__57.518;
  vector(16) unsigned char vect__18.517;
  vector(16) unsigned char vect_patt_129.516;
  vector(16) unsigned char vect__56.515;
  vector(16) unsigned char vect__16.514;
  vector(16) unsigned char vect__55.513;
  vector(16) unsigned char vect__14.512;
  vector(8) short unsigned int vect__13.511;
  vector(8) short unsigned int vect__12.510;
  vector(8) signed short vect__54.509;
  vector(8) signed short vect__11.508;
  vector(8) signed short vect_value.507;
  vector(8) short unsigned int vect_value_45.506;
  vector(8) short unsigned int vect_patt_130.505;
  vector(8) short unsigned int vect__8.504;
  vector(16) unsigned char vect__26.503;
  vector(16) unsigned char vect__7.502;
  vector(16) unsigned char vect__36.501;
  vector(16) unsigned char vect__5.500;
  vector(16) unsigned char vect_patt_132.499;
  vector(16) unsigned char vect__51.498;
  vector(16) unsigned char vect__3.497;
  vector(16) unsigned char vect__52.496;
  vector(16) unsigned char vect_b_43.495;
  uint8_t randbuf[128];
  unsigned long _3;
  int _30;
  void * _43;
  unsigned long _52;
  struct EVP_MD * _59;
  int _61;
  int _62;

  <bb 2> [local count: 16268812]:
  _59 = MEM[(struct EVP_MD * *)key_40(D) + 24B];
  _61 = EVP_DigestInit_ex (mdctx_39(D), _59, 0B);
  if (_61 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 3> [local count: 5368708]:
  _62 = single_keccak (&randbuf, 128, in_38(D), 33, mdctx_39(D));
  if (_62 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 4> [local count: 2684354]:
  ivtmp.537_134 = (unsigned long) &randbuf;
  ivtmp.538_42 = (unsigned long) out_33(D);
  _3 = ivtmp.538_42 + 512;

  <bb 5> [local count: 21474832]:
  # ivtmp.537_34 = PHI <ivtmp.537_134(4), ivtmp.537_35(5)>
  # ivtmp.538_29 = PHI <ivtmp.538_42(4), ivtmp.538_28(5)>
  vectp_out.528_140 = (short unsigned int[16] *) ivtmp.538_29;
  _43 = (void *) ivtmp.537_34;
  vect_b_43.495_116 = MEM <vector(16) unsigned char> [(uint8_t *)_43];
  vect__52.496_114 = vect_b_43.495_116 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__3.497_113 = vect_b_43.495_116 >> 1;
  vect__51.498_111 = vect__3.497_113 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect_patt_132.499_110 = vect__51.498_111 + vect__52.496_114;
  vect__5.500_109 = vect_b_43.495_116 >> 2;
  vect__36.501_107 = vect__5.500_109 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__7.502_106 = vect_b_43.495_116 >> 3;
  vect__26.503_104 = vect__7.502_106 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__8.504_103 = [vec_unpack_lo_expr] vect__26.503_104;
  vect__8.504_102 = [vec_unpack_hi_expr] vect__26.503_104;
  vect_patt_130.505_101 = .VEC_WIDEN_MINUS_LO (vect_patt_132.499_110, vect__36.501_107);
  vect_patt_130.505_100 = .VEC_WIDEN_MINUS_HI (vect_patt_132.499_110, vect__36.501_107);
  vect_value_45.506_99 = vect_patt_130.505_101 - vect__8.504_103;
  vect_value_45.506_98 = vect_patt_130.505_100 - vect__8.504_102;
  vect_value.507_97 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_value_45.506_99);
  vect_value.507_96 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_value_45.506_98);
  vect__11.508_95 = vect_value.507_97 >> 15;
  vect__11.508_94 = vect_value.507_96 >> 15;
  vect__54.509_92 = vect__11.508_95 & { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect__54.509_91 = vect__11.508_94 & { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect__12.510_90 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__54.509_92);
  vect__12.510_89 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__54.509_91);
  vect__13.511_88 = vect__12.510_90 + vect_value_45.506_99;
  vect__13.511_87 = vect__12.510_89 + vect_value_45.506_98;
  vect__14.512_86 = vect_b_43.495_116 >> 4;
  vect__55.513_84 = vect__14.512_86 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__16.514_83 = vect_b_43.495_116 >> 5;
  vect__56.515_81 = vect__16.514_83 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect_patt_129.516_80 = vect__56.515_81 + vect__55.513_84;
  vect__18.517_79 = vect_b_43.495_116 >> 6;
  vect__57.518_77 = vect__18.517_79 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__19.519_76 = [vec_unpack_lo_expr] vect__57.518_77;
  vect__19.519_75 = [vec_unpack_hi_expr] vect__57.518_77;
  vect__20.520_74 = vect_b_43.495_116 >> 7;
  vect_patt_127.521_73 = .VEC_WIDEN_MINUS_LO (vect_patt_129.516_80, vect__20.520_74);
  vect_patt_127.521_72 = .VEC_WIDEN_MINUS_HI (vect_patt_129.516_80, vect__20.520_74);
  vect_value_48.522_69 = vect_patt_127.521_73 - vect__19.519_76;
  vect_value_48.522_68 = vect_patt_127.521_72 - vect__19.519_75;
  vect_value.523_64 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_value_48.522_69);
  vect_value.523_63 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_value_48.522_68);
  vect__24.524_60 = vect_value.523_64 >> 15;
  vect__24.524_44 = vect_value.523_63 >> 15;
  vect__58.525_22 = vect__24.524_60 & { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect__58.525_9 = vect__24.524_44 & { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect__25.526_1 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__58.525_22);
  vect__25.526_137 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__58.525_9);
  vect__27.527_138 = vect__25.526_1 + vect_value_48.522_69;
  vect__27.527_139 = vect_value_48.522_68 + vect__25.526_137;
  vect_array.530 ={v} {CLOBBER};
  vect_array.530[0] = vect__13.511_88;
  vect_array.530[1] = vect__27.527_138;
  MEM <short unsigned int[16]> [(uint16_t *)vectp_out.528_140] = .STORE_LANES (vect_array.530);
  vect_array.530 ={v} {CLOBBER};
  _52 = ivtmp.538_29 + 32;
  vectp_out.528_147 = (short unsigned int[16] *) _52;
  vect_array.531 ={v} {CLOBBER};
  vect_array.531[0] = vect__13.511_87;
  vect_array.531[1] = vect__27.527_139;
  MEM <short unsigned int[16]> [(uint16_t *)vectp_out.528_147] = .STORE_LANES (vect_array.531);
  vect_array.531 ={v} {CLOBBER};
  ivtmp.537_35 = ivtmp.537_34 + 16;
  ivtmp.538_28 = ivtmp.538_29 + 64;
  if (_3 != ivtmp.538_28)
    goto <bb 5>; [87.50%]
  else
    goto <bb 7>; [12.50%]

  <bb 6> [local count: 13584458]:

  <bb 7> [local count: 16268812]:
  # _30 = PHI <0(6), 1(5)>
  randbuf ={v} {CLOBBER(eos)};
  return _30;

}



;; Function parse_pubkey (parse_pubkey, funcdef_no=596, decl_uid=18674, cgraph_uid=597, symbol_order=605)

Removing basic block 8
Removing basic block 9
Removing basic block 10
int parse_pubkey (const uint8_t * in, struct EVP_MD_CTX * mdctx, struct ML_KEM_KEY * key)
{
  const struct ML_KEM_VINFO * vinfo;
  struct ossl_ml_kem_scalar_st * _1;
  int _2;
  int _3;
  uint8_t * _4;
  long unsigned int _5;
  const uint8_t * _6;
  uint8_t * _7;
  long unsigned int _8;
  int _10;
  int _11;
  struct EVP_MD * _24;
  int _26;
  int _27;

  <bb 2> [local count: 1073741822]:
  vinfo_16 = key_15(D)->vinfo;
  _1 = key_15(D)->t;
  _2 = vinfo_16->rank;
  _3 = vector_decode_12 (_1, in_17(D), _2);
  if (_3 == 0)
    goto <bb 3>; [51.12%]
  else
    goto <bb 4>; [48.88%]

  <bb 3> [local count: 987142398]:
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 524844999]:
  _4 = key_15(D)->rho;
  _5 = vinfo_16->vector_bytes;
  _6 = in_17(D) + _5;
  __builtin_memcpy (_4, _6, 32);
  _7 = key_15(D)->pkhash;
  _8 = vinfo_16->pubkey_bytes;
  _24 = MEM[(struct EVP_MD * *)key_15(D) + 32B];
  _26 = EVP_DigestInit_ex (mdctx_19(D), _24, 0B);
  if (_26 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 3>; [67.00%]

  <bb 5> [local count: 173198849]:
  _27 = single_keccak (_7, 32, in_17(D), _8, mdctx_19(D));
  if (_27 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 6> [local count: 173198849]:
  _10 = matrix_expand (mdctx_19(D), key_15(D)); [tail call]

  <bb 7> [local count: 1073741824]:
  # _11 = PHI <0(3), _10(6)>
  return _11;

}



;; Function encrypt_cpa (encrypt_cpa, funcdef_no=592, decl_uid=18634, cgraph_uid=593, symbol_order=601)

Removing basic block 3
Removing basic block 44
Removing basic block 45
Removing basic block 46
Removing basic block 47
Removing basic block 48
Removing basic block 49
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 60
Removing basic block 61
Removing basic block 62
Removing basic block 63
Removing basic block 64
__attribute__((access ("^0[32]^1[32]^2[32]", )))
int encrypt_cpa (uint8_t * out, const uint8_t * message, const uint8_t * r, struct scalar * tmp, struct EVP_MD_CTX * mdctx, const struct ML_KEM_KEY * key)
{
  unsigned long ivtmp.966;
  unsigned long ivtmp.949;
  unsigned long ivtmp.946;
  unsigned long ivtmp.944;
  unsigned long ivtmp.941;
  unsigned long ivtmp.934;
  unsigned long ivtmp.923;
  sizetype ivtmp.872;
  unsigned long ivtmp.847;
  unsigned long ivtmp.845;
  sizetype ivtmp.838;
  unsigned long ivtmp.836;
  vector(8) short unsigned int vect_array.792[2];
  short unsigned int[16] * vectp_v.790;
  vector(8) short unsigned int vect__167.789;
  vector(8) signed short vect__166.788;
  vector(8) signed short vect__165.787;
  vector(8) signed short vect__164.786;
  vector(8) short unsigned int vect__163.785;
  vector(8) signed short vect__162.784;
  vector(8) signed short vect_subtracted.42_161.783;
  const vector(8) short unsigned int vect_subtracted_160.782;
  vector(8) unsigned short vect_patt_1383.780;
  vector(8) unsigned short vect_patt_1382.779;
  vector(8) unsigned short vect_patt_1380.778;
  vector(8) unsigned short vect_patt_1379.777;
  vector(4) unsigned int vect_quotient_156.776;
  vector(2) long unsigned int vect__155.775;
  vector(2) long unsigned int vect_patt_1378.774;
  vector(4) unsigned int vect__152.773;
  vector(4) unsigned int vect_patt_1377.771;
  vector(4) unsigned int vect_patt_1376.770;
  vector(4) unsigned int vect__148.769;
  vector(8) short unsigned int vect__146.768;
  vector(8) signed short vect__145.767;
  vector(8) signed short vect__144.766;
  vector(8) signed short vect__143.765;
  vector(8) short unsigned int vect__142.764;
  vector(8) signed short vect__141.763;
  vector(8) signed short vect_subtracted.42_140.762;
  const vector(8) short unsigned int vect_subtracted_139.761;
  vector(8) unsigned short vect_patt_1373.759;
  vector(8) unsigned short vect_patt_1372.758;
  vector(8) unsigned short vect_patt_1370.757;
  vector(8) unsigned short vect_patt_1369.756;
  vector(4) unsigned int vect_quotient_135.755;
  vector(2) long unsigned int vect__134.754;
  vector(2) long unsigned int vect_patt_1368.753;
  vector(4) unsigned int vect__131.752;
  vector(4) unsigned int vect__88.751;
  vector(4) unsigned int vect_patt_1367.750;
  vector(4) unsigned int vect_patt_1366.749;
  vector(8) short unsigned int vect__126.748;
  vector(8) signed short vect__125.747;
  vector(8) signed short vect__124.746;
  vector(8) signed short vect__123.745;
  vector(8) short unsigned int vect__122.744;
  vector(8) signed short vect__121.743;
  vector(8) signed short vect_subtracted.42_120.742;
  const vector(8) short unsigned int vect_subtracted_119.741;
  vector(8) unsigned short vect_patt_1363.739;
  vector(8) unsigned short vect_patt_1362.738;
  vector(8) unsigned short vect_patt_1360.737;
  vector(8) unsigned short vect_patt_1359.736;
  vector(4) unsigned int vect_quotient_115.735;
  vector(2) long unsigned int vect__114.734;
  vector(2) long unsigned int vect_patt_1358.733;
  vector(4) unsigned int vect_patt_1357.732;
  vector(4) unsigned int vect__110.731;
  vector(8) short unsigned int vect__109.730;
  vector(8) short unsigned int vect__109.729;
  vector(8) short unsigned int vect_array.728[2];
  const vector(8) short unsigned int vect__107.725;
  const vector(8) short unsigned int vect__95.722;
  const vector(8) short unsigned int vect__95.721;
  const vector(8) short unsigned int vect_array.720[2];
  short unsigned int[16] * vectp_rhs.718;
  const vector(8) short unsigned int vect__92.717;
  const vector(8) short unsigned int vect__92.716;
  const vector(8) short unsigned int vect_array.715[2];
  short unsigned int[16] * vectp_lhs.713;
  vector(8) short unsigned int vect__266.710;
  vector(8) signed short vect__265.709;
  vector(8) signed short vect__264.708;
  vector(8) signed short vect__263.707;
  vector(8) short unsigned int vect__262.706;
  vector(8) signed short vect__261.705;
  vector(8) signed short vect_subtracted.42_260.704;
  const vector(8) short unsigned int vect_subtracted_259.703;
  vector(8) short unsigned int vect__258.702;
  const vector(8) short unsigned int vect__257.701;
  vector(8) short unsigned int vect__256.698;
  vector(8) short unsigned int vect__404.693;
  vector(8) signed short vect__403.692;
  vector(8) signed short vect__402.691;
  vector(8) signed short vect__401.690;
  vector(8) short unsigned int vect__400.689;
  vector(8) signed short vect__399.688;
  vector(8) signed short vect_subtracted.42_398.687;
  const vector(8) short unsigned int vect_subtracted_397.686;
  vector(8) short unsigned int vect__396.685;
  const vector(8) short unsigned int vect__395.684;
  vector(8) short unsigned int vect__394.681;
  vector(8) signed short vect__390.677;
  vector(8) signed short vect__389.676;
  vector(8) signed short vect__388.675;
  vector(8) short unsigned int vect__387.674;
  vector(8) signed short vect__386.673;
  vector(8) signed short vect_subtracted.42_385.672;
  const vector(8) short unsigned int vect_subtracted_384.671;
  vector(8) short unsigned int vect__383.670;
  vector(8) short unsigned int vect__382.669;
  vector(8) short unsigned int vect__380.668;
  const vector(16) unsigned char vect_b_379.667;
  vector(8) signed short vect__377.665;
  vector(8) signed short vect__376.664;
  vector(8) signed short vect__375.663;
  vector(8) short unsigned int vect__374.662;
  vector(8) signed short vect__373.661;
  vector(8) signed short vect_subtracted.42_372.660;
  const vector(8) short unsigned int vect_subtracted_371.659;
  vector(8) short unsigned int vect__370.658;
  vector(8) short unsigned int vect__369.657;
  vector(8) short unsigned int vect__367.656;
  vector(16) unsigned char vect__366.655;
  const vector(16) unsigned char vect_b_365.654;
  vector(8) signed short vect__363.652;
  vector(8) signed short vect__362.651;
  vector(8) signed short vect__361.650;
  vector(8) short unsigned int vect__360.649;
  vector(8) signed short vect__359.648;
  vector(8) signed short vect_subtracted.42_358.647;
  const vector(8) short unsigned int vect_subtracted_357.646;
  vector(8) short unsigned int vect__356.645;
  vector(8) short unsigned int vect__355.644;
  vector(8) short unsigned int vect__353.643;
  vector(16) unsigned char vect__352.642;
  const vector(16) unsigned char vect_b_351.641;
  vector(8) signed short vect__349.639;
  vector(8) signed short vect__348.638;
  vector(8) signed short vect__347.637;
  vector(8) short unsigned int vect__346.636;
  vector(8) signed short vect__345.635;
  vector(8) signed short vect_subtracted.42_344.634;
  const vector(8) short unsigned int vect_subtracted_343.633;
  vector(8) short unsigned int vect__342.632;
  vector(8) short unsigned int vect__341.631;
  vector(8) short unsigned int vect__339.630;
  vector(16) unsigned char vect__338.629;
  const vector(16) unsigned char vect_b_337.628;
  vector(8) signed short vect__335.626;
  vector(8) signed short vect__334.625;
  vector(8) signed short vect__333.624;
  vector(8) short unsigned int vect__332.623;
  vector(8) signed short vect__331.622;
  vector(8) signed short vect_subtracted.42_330.621;
  const vector(8) short unsigned int vect_subtracted_329.620;
  vector(8) short unsigned int vect__328.619;
  vector(8) short unsigned int vect__327.618;
  vector(8) short unsigned int vect__325.617;
  vector(16) unsigned char vect__324.616;
  const vector(16) unsigned char vect_b_323.615;
  vector(8) signed short vect__321.613;
  vector(8) signed short vect__320.612;
  vector(8) signed short vect__319.611;
  vector(8) short unsigned int vect__318.610;
  vector(8) signed short vect__317.609;
  vector(8) signed short vect_subtracted.42_316.608;
  const vector(8) short unsigned int vect_subtracted_315.607;
  vector(8) short unsigned int vect__314.606;
  vector(8) short unsigned int vect__313.605;
  vector(8) short unsigned int vect__311.604;
  vector(16) unsigned char vect__310.603;
  const vector(16) unsigned char vect_b_309.602;
  vector(8) signed short vect__307.600;
  vector(8) signed short vect__306.599;
  vector(8) signed short vect__305.598;
  vector(8) short unsigned int vect__304.597;
  vector(8) signed short vect__303.596;
  vector(8) signed short vect_subtracted.42_302.595;
  const vector(8) short unsigned int vect_subtracted_301.594;
  vector(8) short unsigned int vect__300.593;
  vector(8) short unsigned int vect__299.592;
  vector(8) short unsigned int vect__297.591;
  vector(16) unsigned char vect__296.590;
  const vector(16) unsigned char vect_b_295.589;
  vector(8) signed short vect__293.587;
  vector(8) signed short vect__292.586;
  vector(8) signed short vect__291.585;
  vector(8) short unsigned int vect__290.584;
  vector(8) signed short vect__289.583;
  vector(8) signed short vect_subtracted.42_288.582;
  const vector(8) short unsigned int vect_subtracted_287.581;
  vector(8) short unsigned int vect__286.580;
  vector(8) short unsigned int vect__285.579;
  vector(8) short unsigned int vect__284.578;
  vector(8) short unsigned int vect__284.577;
  vector(8) short unsigned int vect__284.576;
  vector(8) short unsigned int vect__284.575;
  vector(8) short unsigned int vect__284.574;
  vector(8) short unsigned int vect__284.573;
  vector(8) short unsigned int vect__284.572;
  vector(8) short unsigned int vect__284.571;
  vector(8) short unsigned int vect__284.570;
  vector(8) short unsigned int vect__284.569;
  vector(8) short unsigned int vect__284.568;
  vector(8) short unsigned int vect__284.567;
  vector(8) short unsigned int vect__284.566;
  vector(8) short unsigned int vect__284.565;
  vector(8) short unsigned int vect__284.564;
  vector(8) short unsigned int vect__284.563;
  vector(8) short unsigned int vect__282.560;
  vector(16) unsigned char vect__281.559;
  const vector(16) unsigned char vect_b_280.558;
  int stride;
  const struct scalar * a;
  uint8_t * out;
  int rank;
  const struct scalar * rhs;
  struct scalar * lhs;
  uint16_t * curr;
  const uint16_t * lc;
  const uint16_t * rc;
  const uint16_t * roots;
  uint32_t l0;
  uint32_t r0;
  uint32_t l1;
  uint32_t r1;
  uint32_t zetapow;
  const uint16_t subtracted;
  uint32_t remainder;
  uint32_t quotient;
  uint64_t product;
  const uint16_t subtracted;
  uint32_t remainder;
  uint32_t quotient;
  uint64_t product;
  const uint16_t subtracted;
  uint32_t remainder;
  uint32_t quotient;
  uint64_t product;
  int rank;
  const struct scalar * rhs;
  const struct scalar * ar;
  const struct scalar * m;
  struct scalar * out;
  uint8_t input[33];
  int rank;
  struct scalar * out;
  uint8_t input[33];
  int rank;
  struct scalar * out;
  int rank;
  struct scalar * a;
  int dv;
  int du;
  uint8_t counter;
  uint8_t input[33];
  struct scalar v;
  struct scalar * u;
  int rank;
  const struct ML_KEM_VINFO * vinfo;
  int _1;
  long unsigned int _3;
  struct ossl_ml_kem_scalar_st * _5;
  struct ossl_ml_kem_scalar_st * _6;
  int _9;
  long unsigned int _10;
  uint8_t * _11;
  int (*<T22ba>) (struct scalar *, uint8_t *, struct EVP_MD_CTX *, const struct ML_KEM_KEY *) iftmp.58_12;
  int _13;
  unsigned char _53;
  int _55;
  unsigned char _61;
  int _64;
  unsigned int _90;
  struct ossl_ml_kem_scalar_st * _110;
  void * _116;
  vector(4) short unsigned int _122;
  vector(4) short unsigned int _125;
  vector(4) short unsigned int _128;
  vector(4) short unsigned int _131;
  vector(4) short unsigned int _134;
  vector(4) short unsigned int _137;
  vector(4) short unsigned int _140;
  vector(4) short unsigned int _143;
  vector(4) short unsigned int _146;
  vector(4) short unsigned int _149;
  vector(4) short unsigned int _152;
  vector(4) short unsigned int _155;
  vector(4) short unsigned int _158;
  vector(4) short unsigned int _161;
  vector(4) short unsigned int _164;
  vector(4) short unsigned int _167;
  short unsigned int _173;
  short unsigned int _176;
  short unsigned int _179;
  short unsigned int _182;
  short unsigned int _188;
  short unsigned int _190;
  unsigned int _191;
  unsigned int _192;
  long unsigned int _193;
  long unsigned int _195;
  unsigned int _197;
  short unsigned int _199;
  signed short subtracted.42_201;
  signed short _202;
  short unsigned int _203;
  signed short _204;
  signed short _205;
  signed short _206;
  short unsigned int _207;
  unsigned int _208;
  unsigned int _209;
  unsigned int _210;
  unsigned int _212;
  long unsigned int _213;
  long unsigned int _215;
  unsigned int _217;
  short unsigned int _219;
  signed short subtracted.42_221;
  signed short _222;
  short unsigned int _223;
  signed short _224;
  signed short _225;
  signed short _226;
  short unsigned int _227;
  short unsigned int _228;
  unsigned int _229;
  unsigned int _230;
  unsigned int _231;
  unsigned int _232;
  unsigned int _233;
  long unsigned int _234;
  long unsigned int _236;
  unsigned int _238;
  short unsigned int _240;
  signed short subtracted.42_242;
  signed short _243;
  short unsigned int _244;
  signed short _245;
  signed short _246;
  signed short _247;
  short unsigned int _248;
  void * _266;
  sizetype _278;
  sizetype _279;
  sizetype _280;
  struct scalar * _281;
  unsigned int _283;
  unsigned int _286;
  unsigned int _287;
  unsigned long _288;
  long unsigned int _290;
  unsigned long _291;
  void * _307;
  unsigned long _313;
  unsigned int _314;
  unsigned int _315;
  unsigned long _316;
  unsigned long _320;
  unsigned long _321;
  unsigned long _322;
  unsigned int _394;
  sizetype _397;
  sizetype _398;
  struct scalar * _399;
  unsigned long _463;
  vector(4) unsigned int _467;
  unsigned long _469;
  short unsigned int _499;
  short unsigned int _502;
  short unsigned int _505;
  short unsigned int _508;
  short unsigned int _511;
  short unsigned int _514;
  short unsigned int _517;
  short unsigned int _520;
  short unsigned int _523;
  short unsigned int _526;
  short unsigned int _529;
  short unsigned int _532;
  short unsigned int _535;
  short unsigned int _538;
  short unsigned int _541;
  short unsigned int _544;
  short unsigned int _575;
  short unsigned int _578;
  short unsigned int _581;
  short unsigned int _584;
  short unsigned int _587;
  short unsigned int _590;
  short unsigned int _593;
  short unsigned int _596;
  short unsigned int _599;
  short unsigned int _602;
  short unsigned int _605;
  short unsigned int _608;
  short unsigned int _611;
  short unsigned int _614;
  short unsigned int _617;
  short unsigned int _620;
  short unsigned int _624;
  short unsigned int _627;
  short unsigned int _630;
  short unsigned int _633;
  short unsigned int _636;
  short unsigned int _639;
  short unsigned int _642;
  short unsigned int _645;
  short unsigned int _648;
  short unsigned int _651;
  short unsigned int _654;
  short unsigned int _657;
  short unsigned int _660;
  short unsigned int _663;
  short unsigned int _666;
  short unsigned int _669;
  short unsigned int _673;
  short unsigned int _676;
  short unsigned int _679;
  short unsigned int _682;
  short unsigned int _685;
  short unsigned int _688;
  short unsigned int _691;
  short unsigned int _694;
  short unsigned int _697;
  short unsigned int _700;
  short unsigned int _703;
  short unsigned int _706;
  short unsigned int _709;
  short unsigned int _712;
  short unsigned int _715;
  short unsigned int _718;
  short unsigned int _722;
  short unsigned int _725;
  short unsigned int _728;
  short unsigned int _731;
  short unsigned int _734;
  short unsigned int _737;
  short unsigned int _740;
  short unsigned int _743;
  short unsigned int _746;
  short unsigned int _749;
  short unsigned int _752;
  short unsigned int _755;
  short unsigned int _758;
  short unsigned int _761;
  short unsigned int _764;
  short unsigned int _767;
  short unsigned int _771;
  short unsigned int _774;
  short unsigned int _777;
  short unsigned int _780;
  short unsigned int _783;
  short unsigned int _786;
  short unsigned int _789;
  short unsigned int _792;
  short unsigned int _795;
  short unsigned int _798;
  short unsigned int _801;
  short unsigned int _804;
  short unsigned int _807;
  short unsigned int _810;
  short unsigned int _813;
  short unsigned int _816;
  short unsigned int _820;
  short unsigned int _823;
  short unsigned int _826;
  short unsigned int _829;
  short unsigned int _832;
  short unsigned int _835;
  short unsigned int _838;
  short unsigned int _841;
  short unsigned int _844;
  short unsigned int _847;
  short unsigned int _850;
  short unsigned int _853;
  short unsigned int _856;
  short unsigned int _859;
  short unsigned int _862;
  short unsigned int _865;
  short unsigned int _869;
  short unsigned int _872;
  short unsigned int _875;
  short unsigned int _878;
  short unsigned int _881;
  short unsigned int _884;
  short unsigned int _887;
  short unsigned int _890;
  short unsigned int _893;
  short unsigned int _896;
  short unsigned int _899;
  short unsigned int _902;
  short unsigned int _905;
  short unsigned int _908;
  short unsigned int _911;
  short unsigned int _914;
  unsigned int _998;
  unsigned long _999;
  unsigned int _1025;
  unsigned int _1026;
  unsigned int _1052;
  unsigned int _1053;
  unsigned int _1079;
  unsigned int _1080;
  vector(8) short unsigned int vect_perm_odd_1101;
  vector(8) short unsigned int vect_perm_even_1102;
  vector(8) short unsigned int vect_perm_odd_1103;
  vector(8) short unsigned int vect_perm_even_1104;
  vector(8) short unsigned int vect_perm_odd_1105;
  vector(8) short unsigned int vect_perm_even_1106;
  vector(8) short unsigned int vect_perm_odd_1107;
  vector(8) short unsigned int vect_perm_even_1108;
  vector(8) short unsigned int vect_perm_odd_1109;
  vector(8) short unsigned int vect_perm_even_1110;
  vector(8) short unsigned int vect_perm_odd_1111;
  vector(8) short unsigned int vect_perm_even_1112;
  vector(8) short unsigned int vect_perm_odd_1113;
  vector(8) short unsigned int vect_perm_even_1114;
  vector(8) short unsigned int vect_perm_odd_1115;
  vector(8) short unsigned int vect_perm_even_1116;
  vector(8) short unsigned int vect_perm_odd_1117;
  vector(8) short unsigned int vect_perm_even_1118;
  vector(8) short unsigned int vect_perm_odd_1119;
  vector(8) short unsigned int vect_perm_even_1120;
  vector(8) short unsigned int vect_perm_odd_1121;
  vector(8) short unsigned int vect_perm_even_1122;
  vector(8) short unsigned int vect_perm_odd_1123;
  vector(8) short unsigned int vect_perm_even_1124;
  vector(8) short unsigned int vect_perm_odd_1141;
  vector(8) short unsigned int vect_perm_even_1142;
  vector(8) short unsigned int vect_perm_odd_1143;
  vector(8) short unsigned int vect_perm_even_1144;
  vector(8) short unsigned int vect_perm_odd_1145;
  vector(8) short unsigned int vect_perm_even_1146;
  vector(8) short unsigned int vect_perm_odd_1147;
  vector(8) short unsigned int vect_perm_even_1148;
  vector(8) short unsigned int vect_perm_odd_1149;
  vector(8) short unsigned int vect_perm_even_1150;
  vector(8) short unsigned int vect_perm_odd_1151;
  vector(8) short unsigned int vect_perm_even_1152;
  vector(8) short unsigned int vect_perm_odd_1153;
  vector(8) short unsigned int vect_perm_even_1154;
  vector(8) short unsigned int vect_perm_odd_1155;
  vector(8) short unsigned int vect_perm_even_1156;
  vector(8) short unsigned int vect_perm_odd_1157;
  vector(8) short unsigned int vect_perm_even_1158;
  vector(8) short unsigned int vect_perm_odd_1159;
  vector(8) short unsigned int vect_perm_even_1160;
  vector(8) short unsigned int vect_perm_odd_1161;
  vector(8) short unsigned int vect_perm_even_1162;
  vector(8) short unsigned int vect_perm_odd_1163;
  vector(8) short unsigned int vect_perm_even_1164;
  void * _1193;
  long unsigned int _1198;
  sizetype _1199;
  struct ossl_ml_kem_scalar_st * _1204;
  vector(4) unsigned int _1224;
  sizetype _1233;

  <bb 2> [local count: 494345021]:
  vinfo_17 = key_16(D)->vinfo;
  _1 = vinfo_17->evp_type;
  if (_1 == 1454)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 168077309]:

  <bb 4> [local count: 494345021]:
  # iftmp.58_12 = PHI <cbd_3(3), cbd_2(2)>
  rank_18 = vinfo_17->rank;
  du_22 = vinfo_17->du;
  dv_23 = vinfo_17->dv;
  __builtin_memcpy (&input, r_24(D), 32);

  <bb 5> [local count: 4621126693]:
  # out_54 = PHI <tmp_19(D)(4), out_56(6)>
  # rank_57 = PHI <rank_18(4), rank_58(6)>
  # counter_450 = PHI <0(4), _53(6)>
  _53 = counter_450 + 1;
  input[32] = counter_450;
  _55 = iftmp.58_12 (out_54, &input, mdctx_25(D), key_16(D));
  if (_55 == 0)
    goto <bb 41>; [5.50%]
  else
    goto <bb 6>; [94.50%]

  <bb 6> [local count: 4366964731]:
  out_56 = out_54 + 512;
  scalar_ntt (out_54);
  rank_58 = rank_57 + -1;
  if (rank_58 > 0)
    goto <bb 5>; [94.50%]
  else
    goto <bb 42>; [5.50%]

  <bb 7> [local count: 436612074]:
  goto <bb 37>; [100.00%]

  <bb 8> [local count: 26579943]:
  _3 = rank_18 w* 512;
  u_20 = tmp_19(D) + _3;
  scalar_inverse_ntt (&v);
  if (rank_18 == 1)
    goto <bb 14>; [0.00%]
  else
    goto <bb 13>; [100.00%]

  <bb 9> [local count: 215055902]:
  _313 = (unsigned long) _5;
  ivtmp.966_312 = _313 + 1024;
  _314 = (unsigned int) rank_18;
  _315 = _314 + 4294967294;
  _316 = (unsigned long) _315;
  _1079 = (unsigned int) _316;
  _469 = _313 + 1536;
  _320 = WIDEN_MULT_PLUS_EXPR <_1079, 512, _469>;

  <bb 10> [local count: 1955053667]:
  # rhs_457 = PHI <rhs_84(12), tmp_19(D)(9)>
  # ivtmp.966_310 = PHI <ivtmp.966_311(12), ivtmp.966_312(9)>
  rhs_84 = rhs_457 + 512;
  _321 = ivtmp.966_310 + 18446744073709551104;
  _322 = (unsigned long) rhs_84;
  ivtmp.946_303 = (unsigned long) &kModRoots;
  ivtmp.949_306 = (unsigned long) &v;

  <bb 11> [local count: 31280858672]:
  # ivtmp.941_293 = PHI <_321(10), ivtmp.941_294(11)>
  # ivtmp.944_297 = PHI <_322(10), ivtmp.944_298(11)>
  # ivtmp.946_301 = PHI <ivtmp.946_303(10), ivtmp.946_302(11)>
  # ivtmp.949_304 = PHI <ivtmp.949_306(10), ivtmp.949_305(11)>
  vectp_v.790_1566 = (short unsigned int[16] *) ivtmp.949_304;
  vectp_rhs.718_1455 = (short unsigned int[16] *) ivtmp.944_297;
  vectp_lhs.713_1450 = (short unsigned int[16] *) ivtmp.941_293;
  vect_array.715 = .LOAD_LANES (MEM <short unsigned int[16]> [(const uint16_t *)vectp_lhs.713_1450]);
  vect__92.716_1452 = vect_array.715[0];
  vect__92.717_1453 = vect_array.715[1];
  vect_array.715 ={v} {CLOBBER};
  vect_array.720 = .LOAD_LANES (MEM <short unsigned int[16]> [(const uint16_t *)vectp_rhs.718_1455]);
  vect__95.721_1457 = vect_array.720[0];
  vect__95.722_1458 = vect_array.720[1];
  vect_array.720 ={v} {CLOBBER};
  _307 = (void *) ivtmp.946_301;
  vect__107.725_1461 = MEM <const vector(8) short unsigned int> [(const uint16_t *)_307];
  vect_array.728 = .LOAD_LANES (MEM <short unsigned int[16]> [(uint16_t *)vectp_v.790_1566]);
  vect__109.729_1464 = vect_array.728[0];
  vect__109.730_1465 = vect_array.728[1];
  vect_array.728 ={v} {CLOBBER};
  vect__110.731_1466 = [vec_unpack_lo_expr] vect__109.729_1464;
  vect__110.731_1467 = [vec_unpack_hi_expr] vect__109.729_1464;
  vect_patt_1357.732_1468 = WIDEN_MULT_LO_EXPR <vect__92.717_1453, vect__95.722_1458>;
  vect_patt_1357.732_1469 = WIDEN_MULT_HI_EXPR <vect__92.717_1453, vect__95.722_1458>;
  vect_patt_1358.733_1471 = WIDEN_MULT_LO_EXPR <vect_patt_1357.732_1468, { 5039, 5039, 5039, 5039 }>;
  vect_patt_1358.733_1472 = WIDEN_MULT_HI_EXPR <vect_patt_1357.732_1468, { 5039, 5039, 5039, 5039 }>;
  vect_patt_1358.733_1473 = WIDEN_MULT_LO_EXPR <vect_patt_1357.732_1469, { 5039, 5039, 5039, 5039 }>;
  vect_patt_1358.733_1474 = WIDEN_MULT_HI_EXPR <vect_patt_1357.732_1469, { 5039, 5039, 5039, 5039 }>;
  vect__114.734_1475 = vect_patt_1358.733_1471 >> 24;
  vect__114.734_1476 = vect_patt_1358.733_1472 >> 24;
  vect__114.734_1477 = vect_patt_1358.733_1473 >> 24;
  vect__114.734_1478 = vect_patt_1358.733_1474 >> 24;
  vect_quotient_115.735_1479 = VEC_PACK_TRUNC_EXPR <vect__114.734_1475, vect__114.734_1476>;
  vect_quotient_115.735_1480 = VEC_PACK_TRUNC_EXPR <vect__114.734_1477, vect__114.734_1478>;
  vect_patt_1359.736_1481 = VEC_PACK_TRUNC_EXPR <vect_quotient_115.735_1479, vect_quotient_115.735_1480>;
  vect_patt_1360.737_1483 = vect_patt_1359.736_1481 * { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect_patt_1362.738_1484 = VEC_PACK_TRUNC_EXPR <vect_patt_1357.732_1468, vect_patt_1357.732_1469>;
  vect_patt_1363.739_1485 = vect_patt_1362.738_1484 - vect_patt_1360.737_1483;
  vect_subtracted_119.741_1488 = vect_patt_1363.739_1485 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_120.742_1489 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_119.741_1488);
  vect__121.743_1490 = vect_subtracted.42_120.742_1489 >> 15;
  vect__122.744_1491 = vect_patt_1363.739_1485 ^ vect_subtracted_119.741_1488;
  vect__123.745_1492 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__122.744_1491);
  vect__124.746_1493 = vect__121.743_1490 & vect__123.745_1492;
  vect__125.747_1494 = vect_subtracted.42_120.742_1489 ^ vect__124.746_1493;
  vect__126.748_1495 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__125.747_1494);
  vect_patt_1366.749_1496 = WIDEN_MULT_LO_EXPR <vect__107.725_1461, vect__126.748_1495>;
  vect_patt_1366.749_1497 = WIDEN_MULT_HI_EXPR <vect__107.725_1461, vect__126.748_1495>;
  vect_patt_1367.750_1498 = WIDEN_MULT_LO_EXPR <vect__92.716_1452, vect__95.721_1457>;
  vect_patt_1367.750_1499 = WIDEN_MULT_HI_EXPR <vect__92.716_1452, vect__95.721_1457>;
  vect__88.751_1500 = vect__110.731_1466 + vect_patt_1367.750_1498;
  vect__88.751_1501 = vect__110.731_1467 + vect_patt_1367.750_1499;
  vect__131.752_1502 = vect_patt_1366.749_1496 + vect__88.751_1500;
  vect__131.752_1503 = vect_patt_1366.749_1497 + vect__88.751_1501;
  vect_patt_1368.753_1505 = WIDEN_MULT_LO_EXPR <vect__131.752_1502, { 5039, 5039, 5039, 5039 }>;
  vect_patt_1368.753_1506 = WIDEN_MULT_HI_EXPR <vect__131.752_1502, { 5039, 5039, 5039, 5039 }>;
  vect_patt_1368.753_1507 = WIDEN_MULT_LO_EXPR <vect__131.752_1503, { 5039, 5039, 5039, 5039 }>;
  vect_patt_1368.753_1508 = WIDEN_MULT_HI_EXPR <vect__131.752_1503, { 5039, 5039, 5039, 5039 }>;
  vect__134.754_1509 = vect_patt_1368.753_1505 >> 24;
  vect__134.754_1510 = vect_patt_1368.753_1506 >> 24;
  vect__134.754_1511 = vect_patt_1368.753_1507 >> 24;
  vect__134.754_1512 = vect_patt_1368.753_1508 >> 24;
  vect_quotient_135.755_1513 = VEC_PACK_TRUNC_EXPR <vect__134.754_1509, vect__134.754_1510>;
  vect_quotient_135.755_1514 = VEC_PACK_TRUNC_EXPR <vect__134.754_1511, vect__134.754_1512>;
  vect_patt_1369.756_1515 = VEC_PACK_TRUNC_EXPR <vect_quotient_135.755_1513, vect_quotient_135.755_1514>;
  vect_patt_1370.757_1517 = vect_patt_1369.756_1515 * { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect_patt_1372.758_1518 = VEC_PACK_TRUNC_EXPR <vect__131.752_1502, vect__131.752_1503>;
  vect_patt_1373.759_1519 = vect_patt_1372.758_1518 - vect_patt_1370.757_1517;
  vect_subtracted_139.761_1522 = vect_patt_1373.759_1519 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_140.762_1523 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_139.761_1522);
  vect__141.763_1524 = vect_subtracted.42_140.762_1523 >> 15;
  vect__142.764_1525 = vect_patt_1373.759_1519 ^ vect_subtracted_139.761_1522;
  vect__143.765_1526 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__142.764_1525);
  vect__144.766_1527 = vect__141.763_1524 & vect__143.765_1526;
  vect__145.767_1528 = vect_subtracted.42_140.762_1523 ^ vect__144.766_1527;
  vect__146.768_1529 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__145.767_1528);
  vect__148.769_1530 = [vec_unpack_lo_expr] vect__109.730_1465;
  vect__148.769_1531 = [vec_unpack_hi_expr] vect__109.730_1465;
  vect_patt_1376.770_1532 = WIDEN_MULT_LO_EXPR <vect__92.717_1453, vect__95.721_1457>;
  vect_patt_1376.770_1533 = WIDEN_MULT_HI_EXPR <vect__92.717_1453, vect__95.721_1457>;
  vect_patt_1377.771_1534 = WIDEN_MULT_LO_EXPR <vect__92.716_1452, vect__95.722_1458>;
  vect_patt_1377.771_1535 = WIDEN_MULT_HI_EXPR <vect__92.716_1452, vect__95.722_1458>;
  _1224 = vect__148.769_1530 + vect_patt_1376.770_1532;
  _467 = vect__148.769_1531 + vect_patt_1376.770_1533;
  vect__152.773_1538 = _1224 + vect_patt_1377.771_1534;
  vect__152.773_1539 = _467 + vect_patt_1377.771_1535;
  vect_patt_1378.774_1541 = WIDEN_MULT_LO_EXPR <vect__152.773_1538, { 5039, 5039, 5039, 5039 }>;
  vect_patt_1378.774_1542 = WIDEN_MULT_HI_EXPR <vect__152.773_1538, { 5039, 5039, 5039, 5039 }>;
  vect_patt_1378.774_1543 = WIDEN_MULT_LO_EXPR <vect__152.773_1539, { 5039, 5039, 5039, 5039 }>;
  vect_patt_1378.774_1544 = WIDEN_MULT_HI_EXPR <vect__152.773_1539, { 5039, 5039, 5039, 5039 }>;
  vect__155.775_1545 = vect_patt_1378.774_1541 >> 24;
  vect__155.775_1546 = vect_patt_1378.774_1542 >> 24;
  vect__155.775_1547 = vect_patt_1378.774_1543 >> 24;
  vect__155.775_1548 = vect_patt_1378.774_1544 >> 24;
  vect_quotient_156.776_1549 = VEC_PACK_TRUNC_EXPR <vect__155.775_1545, vect__155.775_1546>;
  vect_quotient_156.776_1550 = VEC_PACK_TRUNC_EXPR <vect__155.775_1547, vect__155.775_1548>;
  vect_patt_1379.777_1551 = VEC_PACK_TRUNC_EXPR <vect_quotient_156.776_1549, vect_quotient_156.776_1550>;
  vect_patt_1380.778_1553 = vect_patt_1379.777_1551 * { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect_patt_1382.779_1554 = VEC_PACK_TRUNC_EXPR <vect__152.773_1538, vect__152.773_1539>;
  vect_patt_1383.780_1555 = vect_patt_1382.779_1554 - vect_patt_1380.778_1553;
  vect_subtracted_160.782_1558 = vect_patt_1383.780_1555 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_161.783_1559 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_160.782_1558);
  vect__162.784_1560 = vect_subtracted.42_161.783_1559 >> 15;
  vect__163.785_1561 = vect_patt_1383.780_1555 ^ vect_subtracted_160.782_1558;
  vect__164.786_1562 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__163.785_1561);
  vect__165.787_1563 = vect__162.784_1560 & vect__164.786_1562;
  vect__166.788_1564 = vect_subtracted.42_161.783_1559 ^ vect__165.787_1563;
  vect__167.789_1565 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__166.788_1564);
  vect_array.792 ={v} {CLOBBER};
  vect_array.792[0] = vect__146.768_1529;
  vect_array.792[1] = vect__167.789_1565;
  MEM <short unsigned int[16]> [(uint16_t *)vectp_v.790_1566] = .STORE_LANES (vect_array.792);
  vect_array.792 ={v} {CLOBBER};
  ivtmp.941_294 = ivtmp.941_293 + 32;
  ivtmp.944_298 = ivtmp.944_297 + 32;
  ivtmp.946_302 = ivtmp.946_301 + 16;
  ivtmp.949_305 = ivtmp.949_304 + 32;
  if (ivtmp.941_294 != ivtmp.966_310)
    goto <bb 11>; [93.75%]
  else
    goto <bb 12>; [6.25%]

  <bb 12> [local count: 1955053667]:
  ivtmp.966_311 = ivtmp.966_310 + 512;
  if (ivtmp.966_311 != _320)
    goto <bb 10>; [89.00%]
  else
    goto <bb 40>; [11.00%]

  <bb 13> [local count: 241635845]:
  # u_102 = PHI <u_20(8), u_96(22)>
  __builtin_memcpy (&input, r_24(D), 32);
  goto <bb 23>; [100.00%]

  <bb 14> [local count: 0]:
  _6 = key_16(D)->m;

  <bb 15> [local count: 215055902]:
  # _110 = PHI <_6(14), _1204(40)>
  # u_96 = PHI <u_20(14), u_916(40)>
  ivtmp.934_285 = (unsigned long) u_96;
  _286 = (unsigned int) rank_18;
  _287 = _286 + 4294967295;
  _288 = (unsigned long) _287;
  _1025 = (unsigned int) _288;
  _999 = (unsigned long) u_96;
  _291 = WIDEN_MULT_PLUS_EXPR <_1025, 512, _999>;
  _283 = _286 + 4294967294;
  _278 = (sizetype) _283;
  _279 = _278 + 1;
  _280 = _279 * 512;
  _281 = tmp_19(D) + _280;

  <bb 16> [local count: 1955053644]:
  # m_38 = PHI <m_27(22), _110(15)>
  # ivtmp.934_282 = PHI <ivtmp.934_284(22), ivtmp.934_285(15)>
  out_33 = (struct scalar *) ivtmp.934_282;
  m_69 = m_38 + 512;
  scalar_mult (out_33, m_38, tmp_19(D));
  if (rank_36 != 0)
    goto <bb 17>; [89.00%]
  else
    goto <bb 22>; [11.00%]

  <bb 17> [local count: 1739997744]:
  ivtmp.923_405 = (unsigned long) m_69;

  <bb 18> [local count: 15818161402]:
  # ar_29 = PHI <ar_75(20), tmp_19(D)(17)>
  # ivtmp.923_403 = PHI <ivtmp.923_404(20), ivtmp.923_405(17)>
  ar_75 = ar_29 + 512;
  lc_170 = (const uint16_t *) ivtmp.923_403;

  <bb 19> [local count: 1581816470193]:
  # curr_184 = PHI <out_33(18), curr_185(19)>
  # lc_172 = PHI <lc_170(18), lc_178(19)>
  # rc_175 = PHI <ar_75(18), rc_181(19)>
  # roots_186 = PHI <&kModRoots(18), roots_187(19)>
  _173 = MEM[(const uint16_t *)lc_172];
  l0_174 = (uint32_t) _173;
  _176 = MEM[(const uint16_t *)rc_175];
  r0_177 = (uint32_t) _176;
  lc_178 = lc_172 + 4;
  _179 = MEM[(const uint16_t *)lc_178 + -2B];
  l1_180 = (uint32_t) _179;
  rc_181 = rc_175 + 4;
  _182 = MEM[(const uint16_t *)rc_181 + -2B];
  r1_183 = (uint32_t) _182;
  curr_185 = curr_184 + 4;
  roots_187 = roots_186 + 2;
  _188 = MEM[(const uint16_t *)roots_187 + -2B];
  zetapow_189 = (uint32_t) _188;
  _190 = MEM[(uint16_t *)curr_185 + -4B];
  _191 = (unsigned int) _190;
  _192 = l1_180 * r1_183;
  _193 = (long unsigned int) _192;
  _1053 = (unsigned int) _193;
  product_194 = _1053 w* 5039;
  _195 = product_194 >> 24;
  quotient_196 = (uint32_t) _195;
  _197 = quotient_196 * 3329;
  remainder_198 = _192 - _197;
  _199 = (short unsigned int) remainder_198;
  subtracted_200 = _199 + 62207;
  subtracted.42_201 = (signed short) subtracted_200;
  _202 = subtracted.42_201 >> 15;
  _203 = _199 ^ subtracted_200;
  _204 = (signed short) _203;
  _205 = _202 & _204;
  _206 = subtracted.42_201 ^ _205;
  _207 = (short unsigned int) _206;
  _208 = (unsigned int) _207;
  _209 = zetapow_189 * _208;
  _210 = l0_174 * r0_177;
  _90 = _191 + _210;
  _212 = _90 + _209;
  _213 = (long unsigned int) _212;
  _1052 = (unsigned int) _213;
  product_214 = _1052 w* 5039;
  _215 = product_214 >> 24;
  quotient_216 = (uint32_t) _215;
  _217 = quotient_216 * 3329;
  remainder_218 = _212 - _217;
  _219 = (short unsigned int) remainder_218;
  subtracted_220 = _219 + 62207;
  subtracted.42_221 = (signed short) subtracted_220;
  _222 = subtracted.42_221 >> 15;
  _223 = _219 ^ subtracted_220;
  _224 = (signed short) _223;
  _225 = _222 & _224;
  _226 = subtracted.42_221 ^ _225;
  _227 = (short unsigned int) _226;
  MEM[(uint16_t *)curr_185 + -4B] = _227;
  _228 = MEM[(uint16_t *)curr_185 + -2B];
  _229 = (unsigned int) _228;
  _230 = r0_177 * l1_180;
  _231 = l0_174 * r1_183;
  _232 = _230 + _231;
  _233 = _229 + _232;
  _234 = (long unsigned int) _233;
  _1026 = (unsigned int) _234;
  product_235 = _1026 w* 5039;
  _236 = product_235 >> 24;
  quotient_237 = (uint32_t) _236;
  _238 = quotient_237 * 3329;
  remainder_239 = _233 - _238;
  _240 = (short unsigned int) remainder_239;
  subtracted_241 = _240 + 62207;
  subtracted.42_242 = (signed short) subtracted_241;
  _243 = subtracted.42_242 >> 15;
  _244 = _240 ^ subtracted_241;
  _245 = (signed short) _244;
  _246 = _243 & _245;
  _247 = subtracted.42_242 ^ _246;
  _248 = (short unsigned int) _247;
  MEM[(uint16_t *)curr_185 + -2B] = _248;
  if (roots_187 != &MEM <const uint16_t[128]> [(void *)&kModRoots + 256B])
    goto <bb 19>; [99.00%]
  else
    goto <bb 20>; [1.00%]

  <bb 20> [local count: 15818161402]:
  ivtmp.923_404 = ivtmp.923_403 + 512;
  if (ar_75 != _281)
    goto <bb 18>; [89.00%]
  else
    goto <bb 21>; [11.00%]

  <bb 21> [local count: 1739997745]:
  _1199 = _280 + ivtmp.923_405;
  m_1218 = (const struct scalar *) _1199;

  <bb 22> [local count: 1955053644]:
  # m_27 = PHI <m_1218(21), m_69(16)>
  scalar_inverse_ntt (out_33);
  ivtmp.934_284 = ivtmp.934_282 + 512;
  if (ivtmp.934_282 != _291)
    goto <bb 16>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 23> [local count: 2258806716]:
  # out_62 = PHI <tmp_19(D)(13), out_63(24)>
  # rank_65 = PHI <rank_18(13), rank_66(24)>
  # counter_451 = PHI <_53(13), _61(24)>
  _61 = counter_451 + 1;
  input[32] = counter_451;
  out_63 = out_62 + 512;
  _64 = cbd_2 (out_62, &input, mdctx_25(D), key_16(D));
  if (_64 == 0)
    goto <bb 38>; [5.50%]
  else
    goto <bb 24>; [94.50%]

  <bb 24> [local count: 2134572349]:
  rank_66 = rank_65 + -1;
  if (rank_66 > 0)
    goto <bb 23>; [94.50%]
  else
    goto <bb 39>; [5.50%]

  <bb 25> [local count: 1073741824]:
  # lhs_249 = PHI <u_102(39), lhs_250(27)>
  # rhs_251 = PHI <tmp_19(D)(39), rhs_252(27)>
  # rank_253 = PHI <rank_18(39), rank_254(27)>
  lhs_250 = lhs_249 + 512;
  rhs_252 = rhs_251 + 512;

  <bb 26> [local count: 34359738448]:
  # ivtmp.872_400 = PHI <ivtmp.872_401(26), 0(25)>
  vect__256.698_452 = MEM <vector(8) short unsigned int> [(short unsigned int *)lhs_249 + ivtmp.872_400 * 1];
  vect__257.701_425 = MEM <const vector(8) short unsigned int> [(short unsigned int *)rhs_251 + ivtmp.872_400 * 1];
  vect__258.702_420 = vect__257.701_425 + vect__256.698_452;
  vect_subtracted_259.703_416 = vect__258.702_420 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_260.704_415 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_259.703_416);
  vect__261.705_411 = vect_subtracted.42_260.704_415 >> 15;
  vect__262.706_410 = vect_subtracted_259.703_416 ^ vect__258.702_420;
  vect__263.707_409 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__262.706_410);
  vect__264.708_393 = vect__263.707_409 & vect__261.705_411;
  vect__265.709_277 = vect__264.708_393 ^ vect_subtracted.42_260.704_415;
  vect__266.710_276 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__265.709_277);
  MEM <vector(8) short unsigned int> [(short unsigned int *)lhs_249 + ivtmp.872_400 * 1] = vect__266.710_276;
  ivtmp.872_401 = ivtmp.872_400 + 16;
  if (ivtmp.872_401 != 512)
    goto <bb 26>; [96.88%]
  else
    goto <bb 27>; [3.12%]

  <bb 27> [local count: 1073741824]:
  rank_254 = rank_253 + -1;
  if (rank_254 > 0)
    goto <bb 25>; [89.00%]
  else
    goto <bb 28>; [11.00%]

  <bb 28> [local count: 1073741824]:
  # a_45 = PHI <u_102(27), a_46(28)>
  # rank_47 = PHI <rank_18(27), rank_48(28)>
  a_46 = a_45 + 512;
  scalar_compress (a_45, du_22);
  rank_48 = rank_47 + -1;
  if (rank_48 > 0)
    goto <bb 28>; [89.00%]
  else
    goto <bb 29>; [11.00%]

  <bb 29> [local count: 118111600]:
  stride_268 = du_22 * 32;
  if (rank_18 > 0)
    goto <bb 31>; [89.00%]
  else
    goto <bb 30>; [11.00%]

  <bb 30> [local count: 118111600]:
  __builtin_memcpy (&input, r_24(D), 32);
  input[32] = _61;
  _9 = cbd_2 (tmp_19(D), &input, mdctx_25(D), key_16(D));
  if (_9 == 0)
    goto <bb 7>; [51.12%]
  else
    goto <bb 33>; [48.88%]

  <bb 31> [local count: 105119324]:
  _1233 = (sizetype) stride_268;
  _394 = (unsigned int) rank_18;
  _397 = (sizetype) _394;
  _998 = (unsigned int) _397;
  _398 = _998 w* 512;
  _399 = u_102 + _398;

  <bb 32> [local count: 955630224]:
  # a_460 = PHI <a_270(32), u_102(31)>
  # out_461 = PHI <out_273(32), out_32(D)(31)>
  a_270 = a_460 + 512;
  scalar_encode (out_461, a_460, du_22);
  out_273 = out_461 + _1233;
  if (a_270 != _399)
    goto <bb 32>; [89.00%]
  else
    goto <bb 30>; [11.00%]

  <bb 33> [local count: 57732950]:
  ivtmp.845_262 = (unsigned long) &v;
  ivtmp.847_265 = (unsigned long) tmp_19(D);
  _463 = ivtmp.845_262 + 512;

  <bb 34> [local count: 1847454404]:
  # ivtmp.845_260 = PHI <ivtmp.845_261(34), ivtmp.845_262(33)>
  # ivtmp.847_263 = PHI <ivtmp.847_264(34), ivtmp.847_265(33)>
  _266 = (void *) ivtmp.845_260;
  vect__394.681_492 = MEM <vector(8) short unsigned int> [(short unsigned int *)_266];
  _1193 = (void *) ivtmp.847_263;
  vect__395.684_489 = MEM <const vector(8) short unsigned int> [(short unsigned int *)_1193];
  vect__396.685_488 = vect__395.684_489 + vect__394.681_492;
  vect_subtracted_397.686_486 = vect__396.685_488 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_398.687_485 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_397.686_486);
  vect__399.688_484 = vect_subtracted.42_398.687_485 >> 15;
  vect__400.689_483 = vect_subtracted_397.686_486 ^ vect__396.685_488;
  vect__401.690_482 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__400.689_483);
  vect__402.691_481 = vect__401.690_482 & vect__399.688_484;
  vect__403.692_480 = vect__402.691_481 ^ vect_subtracted.42_398.687_485;
  vect__404.693_479 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__403.692_480);
  MEM <vector(8) short unsigned int> [(short unsigned int *)_266] = vect__404.693_479;
  ivtmp.845_261 = ivtmp.845_260 + 16;
  ivtmp.847_264 = ivtmp.847_263 + 16;
  if (ivtmp.845_261 != _463)
    goto <bb 34>; [96.88%]
  else
    goto <bb 35>; [3.12%]

  <bb 35> [local count: 115281447]:
  # ivtmp.836_121 = PHI <ivtmp.845_262(34), ivtmp.836_120(35)>
  # ivtmp.838_118 = PHI <0(34), ivtmp.838_117(35)>
  vect_b_280.558_1186 = MEM <const vector(16) unsigned char> [(const uint8_t *)message_37(D) + ivtmp.838_118 * 1];
  vect__281.559_1184 = vect_b_280.558_1186 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__282.560_1183 = [vec_unpack_lo_expr] vect__281.559_1184;
  vect__282.560_1182 = [vec_unpack_hi_expr] vect__281.559_1184;
  _116 = (void *) ivtmp.836_121;
  vect__284.563_1179 = MEM <vector(8) short unsigned int> [(uint16_t *)_116];
  vect__284.564_1177 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 16B];
  vect__284.565_1175 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 32B];
  vect__284.566_1173 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 48B];
  vect__284.567_1171 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 64B];
  vect__284.568_1169 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 80B];
  vect__284.569_1167 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 96B];
  vect__284.570_1165 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 112B];
  vect_perm_even_1164 = VEC_PERM_EXPR <vect__284.563_1179, vect__284.564_1177, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1163 = VEC_PERM_EXPR <vect__284.563_1179, vect__284.564_1177, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1162 = VEC_PERM_EXPR <vect__284.565_1175, vect__284.566_1173, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1161 = VEC_PERM_EXPR <vect__284.565_1175, vect__284.566_1173, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1160 = VEC_PERM_EXPR <vect__284.567_1171, vect__284.568_1169, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1159 = VEC_PERM_EXPR <vect__284.567_1171, vect__284.568_1169, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1158 = VEC_PERM_EXPR <vect__284.569_1167, vect__284.570_1165, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1157 = VEC_PERM_EXPR <vect__284.569_1167, vect__284.570_1165, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1156 = VEC_PERM_EXPR <vect_perm_even_1164, vect_perm_even_1162, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1155 = VEC_PERM_EXPR <vect_perm_even_1164, vect_perm_even_1162, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1154 = VEC_PERM_EXPR <vect_perm_even_1160, vect_perm_even_1158, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1153 = VEC_PERM_EXPR <vect_perm_even_1160, vect_perm_even_1158, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1152 = VEC_PERM_EXPR <vect_perm_odd_1163, vect_perm_odd_1161, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1151 = VEC_PERM_EXPR <vect_perm_odd_1163, vect_perm_odd_1161, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1150 = VEC_PERM_EXPR <vect_perm_odd_1159, vect_perm_odd_1157, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1149 = VEC_PERM_EXPR <vect_perm_odd_1159, vect_perm_odd_1157, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1148 = VEC_PERM_EXPR <vect_perm_even_1156, vect_perm_even_1154, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1147 = VEC_PERM_EXPR <vect_perm_even_1156, vect_perm_even_1154, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1146 = VEC_PERM_EXPR <vect_perm_even_1152, vect_perm_even_1150, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1145 = VEC_PERM_EXPR <vect_perm_even_1152, vect_perm_even_1150, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1144 = VEC_PERM_EXPR <vect_perm_odd_1155, vect_perm_odd_1153, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1143 = VEC_PERM_EXPR <vect_perm_odd_1155, vect_perm_odd_1153, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1142 = VEC_PERM_EXPR <vect_perm_odd_1151, vect_perm_odd_1149, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1141 = VEC_PERM_EXPR <vect_perm_odd_1151, vect_perm_odd_1149, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect__284.571_1139 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 128B];
  vect__284.572_1137 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 144B];
  vect__284.573_1135 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 160B];
  vect__284.574_1133 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 176B];
  vect__284.575_1131 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 192B];
  vect__284.576_1129 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 208B];
  vect__284.577_1127 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 224B];
  vect__284.578_1125 = MEM <vector(8) short unsigned int> [(uint16_t *)_116 + 240B];
  vect_perm_even_1124 = VEC_PERM_EXPR <vect__284.571_1139, vect__284.572_1137, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1123 = VEC_PERM_EXPR <vect__284.571_1139, vect__284.572_1137, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1122 = VEC_PERM_EXPR <vect__284.573_1135, vect__284.574_1133, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1121 = VEC_PERM_EXPR <vect__284.573_1135, vect__284.574_1133, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1120 = VEC_PERM_EXPR <vect__284.575_1131, vect__284.576_1129, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1119 = VEC_PERM_EXPR <vect__284.575_1131, vect__284.576_1129, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1118 = VEC_PERM_EXPR <vect__284.577_1127, vect__284.578_1125, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1117 = VEC_PERM_EXPR <vect__284.577_1127, vect__284.578_1125, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1116 = VEC_PERM_EXPR <vect_perm_even_1124, vect_perm_even_1122, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1115 = VEC_PERM_EXPR <vect_perm_even_1124, vect_perm_even_1122, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1114 = VEC_PERM_EXPR <vect_perm_even_1120, vect_perm_even_1118, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1113 = VEC_PERM_EXPR <vect_perm_even_1120, vect_perm_even_1118, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1112 = VEC_PERM_EXPR <vect_perm_odd_1123, vect_perm_odd_1121, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1111 = VEC_PERM_EXPR <vect_perm_odd_1123, vect_perm_odd_1121, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1110 = VEC_PERM_EXPR <vect_perm_odd_1119, vect_perm_odd_1117, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1109 = VEC_PERM_EXPR <vect_perm_odd_1119, vect_perm_odd_1117, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1108 = VEC_PERM_EXPR <vect_perm_even_1116, vect_perm_even_1114, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1107 = VEC_PERM_EXPR <vect_perm_even_1116, vect_perm_even_1114, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1106 = VEC_PERM_EXPR <vect_perm_even_1112, vect_perm_even_1110, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1105 = VEC_PERM_EXPR <vect_perm_even_1112, vect_perm_even_1110, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1104 = VEC_PERM_EXPR <vect_perm_odd_1115, vect_perm_odd_1113, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1103 = VEC_PERM_EXPR <vect_perm_odd_1115, vect_perm_odd_1113, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect_perm_even_1102 = VEC_PERM_EXPR <vect_perm_odd_1111, vect_perm_odd_1109, { 0, 2, 4, 6, 8, 10, 12, 14 }>;
  vect_perm_odd_1101 = VEC_PERM_EXPR <vect_perm_odd_1111, vect_perm_odd_1109, { 1, 3, 5, 7, 9, 11, 13, 15 }>;
  vect__285.579_1099 = vect__282.560_1183 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__285.579_1098 = vect__282.560_1182 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__286.580_1097 = vect__285.579_1099 + vect_perm_even_1148;
  vect__286.580_1096 = vect__285.579_1098 + vect_perm_even_1108;
  vect_subtracted_287.581_1094 = vect__286.580_1097 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted_287.581_1093 = vect__286.580_1096 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_288.582_1092 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_287.581_1094);
  vect_subtracted.42_288.582_1091 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_287.581_1093);
  vect__289.583_1090 = vect_subtracted.42_288.582_1092 >> 15;
  vect__289.583_1089 = vect_subtracted.42_288.582_1091 >> 15;
  vect__290.584_1088 = vect_subtracted_287.581_1094 ^ vect__286.580_1097;
  vect__290.584_1087 = vect_subtracted_287.581_1093 ^ vect__286.580_1096;
  vect__291.585_1086 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__290.584_1088);
  vect__291.585_1085 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__290.584_1087);
  vect__292.586_1084 = vect__291.585_1086 & vect__289.583_1090;
  vect__292.586_1083 = vect__291.585_1085 & vect__289.583_1089;
  vect__293.587_1082 = vect__292.586_1084 ^ vect_subtracted.42_288.582_1092;
  vect__293.587_1081 = vect__292.586_1083 ^ vect_subtracted.42_288.582_1091;
  vect_b_295.589_1078 = vect_b_280.558_1186 >> 1;
  vect__296.590_1076 = vect_b_295.589_1078 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__297.591_1075 = [vec_unpack_lo_expr] vect__296.590_1076;
  vect__297.591_1074 = [vec_unpack_hi_expr] vect__296.590_1076;
  vect__299.592_1072 = vect__297.591_1075 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__299.592_1071 = vect__297.591_1074 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__300.593_1070 = vect__299.592_1072 + vect_perm_even_1146;
  vect__300.593_1069 = vect__299.592_1071 + vect_perm_even_1106;
  vect_subtracted_301.594_1067 = vect__300.593_1070 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted_301.594_1066 = vect__300.593_1069 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_302.595_1065 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_301.594_1067);
  vect_subtracted.42_302.595_1064 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_301.594_1066);
  vect__303.596_1063 = vect_subtracted.42_302.595_1065 >> 15;
  vect__303.596_1062 = vect_subtracted.42_302.595_1064 >> 15;
  vect__304.597_1061 = vect_subtracted_301.594_1067 ^ vect__300.593_1070;
  vect__304.597_1060 = vect_subtracted_301.594_1066 ^ vect__300.593_1069;
  vect__305.598_1059 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__304.597_1061);
  vect__305.598_1058 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__304.597_1060);
  vect__306.599_1057 = vect__305.598_1059 & vect__303.596_1063;
  vect__306.599_1056 = vect__305.598_1058 & vect__303.596_1062;
  vect__307.600_1055 = vect__306.599_1057 ^ vect_subtracted.42_302.595_1065;
  vect__307.600_1054 = vect__306.599_1056 ^ vect_subtracted.42_302.595_1064;
  vect_b_309.602_1051 = vect_b_280.558_1186 >> 2;
  vect__310.603_1049 = vect_b_309.602_1051 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__311.604_1048 = [vec_unpack_lo_expr] vect__310.603_1049;
  vect__311.604_1047 = [vec_unpack_hi_expr] vect__310.603_1049;
  vect__313.605_1045 = vect__311.604_1048 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__313.605_1044 = vect__311.604_1047 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__314.606_1043 = vect__313.605_1045 + vect_perm_even_1144;
  vect__314.606_1042 = vect__313.605_1044 + vect_perm_even_1104;
  vect_subtracted_315.607_1040 = vect__314.606_1043 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted_315.607_1039 = vect__314.606_1042 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_316.608_1038 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_315.607_1040);
  vect_subtracted.42_316.608_1037 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_315.607_1039);
  vect__317.609_1036 = vect_subtracted.42_316.608_1038 >> 15;
  vect__317.609_1035 = vect_subtracted.42_316.608_1037 >> 15;
  vect__318.610_1034 = vect_subtracted_315.607_1040 ^ vect__314.606_1043;
  vect__318.610_1033 = vect_subtracted_315.607_1039 ^ vect__314.606_1042;
  vect__319.611_1032 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__318.610_1034);
  vect__319.611_1031 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__318.610_1033);
  vect__320.612_1030 = vect__319.611_1032 & vect__317.609_1036;
  vect__320.612_1029 = vect__319.611_1031 & vect__317.609_1035;
  vect__321.613_1028 = vect__320.612_1030 ^ vect_subtracted.42_316.608_1038;
  vect__321.613_1027 = vect__320.612_1029 ^ vect_subtracted.42_316.608_1037;
  vect_b_323.615_1024 = vect_b_280.558_1186 >> 3;
  vect__324.616_1022 = vect_b_323.615_1024 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__325.617_1021 = [vec_unpack_lo_expr] vect__324.616_1022;
  vect__325.617_1020 = [vec_unpack_hi_expr] vect__324.616_1022;
  vect__327.618_1018 = vect__325.617_1021 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__327.618_1017 = vect__325.617_1020 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__328.619_1016 = vect__327.618_1018 + vect_perm_even_1142;
  vect__328.619_1015 = vect__327.618_1017 + vect_perm_even_1102;
  vect_subtracted_329.620_1013 = vect__328.619_1016 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted_329.620_1012 = vect__328.619_1015 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_330.621_1011 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_329.620_1013);
  vect_subtracted.42_330.621_1010 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_329.620_1012);
  vect__331.622_1009 = vect_subtracted.42_330.621_1011 >> 15;
  vect__331.622_1008 = vect_subtracted.42_330.621_1010 >> 15;
  vect__332.623_1007 = vect_subtracted_329.620_1013 ^ vect__328.619_1016;
  vect__332.623_1006 = vect_subtracted_329.620_1012 ^ vect__328.619_1015;
  vect__333.624_1005 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__332.623_1007);
  vect__333.624_1004 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__332.623_1006);
  vect__334.625_1003 = vect__333.624_1005 & vect__331.622_1009;
  vect__334.625_1002 = vect__333.624_1004 & vect__331.622_1008;
  vect__335.626_1001 = vect__334.625_1003 ^ vect_subtracted.42_330.621_1011;
  vect__335.626_1000 = vect__334.625_1002 ^ vect_subtracted.42_330.621_1010;
  vect_b_337.628_997 = vect_b_280.558_1186 >> 4;
  vect__338.629_995 = vect_b_337.628_997 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__339.630_994 = [vec_unpack_lo_expr] vect__338.629_995;
  vect__339.630_993 = [vec_unpack_hi_expr] vect__338.629_995;
  vect__341.631_991 = vect__339.630_994 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__341.631_990 = vect__339.630_993 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__342.632_989 = vect__341.631_991 + vect_perm_odd_1147;
  vect__342.632_988 = vect__341.631_990 + vect_perm_odd_1107;
  vect_subtracted_343.633_986 = vect__342.632_989 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted_343.633_985 = vect__342.632_988 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_344.634_984 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_343.633_986);
  vect_subtracted.42_344.634_983 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_343.633_985);
  vect__345.635_982 = vect_subtracted.42_344.634_984 >> 15;
  vect__345.635_981 = vect_subtracted.42_344.634_983 >> 15;
  vect__346.636_980 = vect_subtracted_343.633_986 ^ vect__342.632_989;
  vect__346.636_979 = vect_subtracted_343.633_985 ^ vect__342.632_988;
  vect__347.637_978 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__346.636_980);
  vect__347.637_977 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__346.636_979);
  vect__348.638_976 = vect__347.637_978 & vect__345.635_982;
  vect__348.638_975 = vect__347.637_977 & vect__345.635_981;
  vect__349.639_974 = vect__348.638_976 ^ vect_subtracted.42_344.634_984;
  vect__349.639_973 = vect__348.638_975 ^ vect_subtracted.42_344.634_983;
  vect_b_351.641_970 = vect_b_280.558_1186 >> 5;
  vect__352.642_968 = vect_b_351.641_970 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__353.643_967 = [vec_unpack_lo_expr] vect__352.642_968;
  vect__353.643_966 = [vec_unpack_hi_expr] vect__352.642_968;
  vect__355.644_964 = vect__353.643_967 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__355.644_963 = vect__353.643_966 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__356.645_962 = vect__355.644_964 + vect_perm_odd_1145;
  vect__356.645_961 = vect__355.644_963 + vect_perm_odd_1105;
  vect_subtracted_357.646_959 = vect__356.645_962 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted_357.646_958 = vect__356.645_961 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_358.647_957 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_357.646_959);
  vect_subtracted.42_358.647_956 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_357.646_958);
  vect__359.648_955 = vect_subtracted.42_358.647_957 >> 15;
  vect__359.648_954 = vect_subtracted.42_358.647_956 >> 15;
  vect__360.649_953 = vect_subtracted_357.646_959 ^ vect__356.645_962;
  vect__360.649_952 = vect_subtracted_357.646_958 ^ vect__356.645_961;
  vect__361.650_951 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__360.649_953);
  vect__361.650_950 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__360.649_952);
  vect__362.651_949 = vect__361.650_951 & vect__359.648_955;
  vect__362.651_948 = vect__361.650_950 & vect__359.648_954;
  vect__363.652_947 = vect__362.651_949 ^ vect_subtracted.42_358.647_957;
  vect__363.652_946 = vect__362.651_948 ^ vect_subtracted.42_358.647_956;
  vect_b_365.654_943 = vect_b_280.558_1186 >> 6;
  vect__366.655_941 = vect_b_365.654_943 & { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
  vect__367.656_940 = [vec_unpack_lo_expr] vect__366.655_941;
  vect__367.656_939 = [vec_unpack_hi_expr] vect__366.655_941;
  vect__369.657_937 = vect__367.656_940 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__369.657_936 = vect__367.656_939 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__370.658_935 = vect__369.657_937 + vect_perm_odd_1143;
  vect__370.658_934 = vect__369.657_936 + vect_perm_odd_1103;
  vect_subtracted_371.659_932 = vect__370.658_935 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted_371.659_931 = vect__370.658_934 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_372.660_930 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_371.659_932);
  vect_subtracted.42_372.660_929 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_371.659_931);
  vect__373.661_928 = vect_subtracted.42_372.660_930 >> 15;
  vect__373.661_927 = vect_subtracted.42_372.660_929 >> 15;
  vect__374.662_926 = vect_subtracted_371.659_932 ^ vect__370.658_935;
  vect__374.662_925 = vect_subtracted_371.659_931 ^ vect__370.658_934;
  vect__375.663_924 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__374.662_926);
  vect__375.663_923 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__374.662_925);
  vect__376.664_922 = vect__375.663_924 & vect__373.661_928;
  vect__376.664_921 = vect__375.663_923 & vect__373.661_927;
  vect__377.665_920 = vect__376.664_922 ^ vect_subtracted.42_372.660_930;
  vect__377.665_919 = vect__376.664_921 ^ vect_subtracted.42_372.660_929;
  _914 = BIT_FIELD_REF <vect__293.587_1082, 16, 0>;
  _911 = BIT_FIELD_REF <vect__293.587_1082, 16, 16>;
  _908 = BIT_FIELD_REF <vect__293.587_1082, 16, 32>;
  _905 = BIT_FIELD_REF <vect__293.587_1082, 16, 48>;
  _902 = BIT_FIELD_REF <vect__293.587_1082, 16, 64>;
  _899 = BIT_FIELD_REF <vect__293.587_1082, 16, 80>;
  _896 = BIT_FIELD_REF <vect__293.587_1082, 16, 96>;
  _893 = BIT_FIELD_REF <vect__293.587_1082, 16, 112>;
  _890 = BIT_FIELD_REF <vect__293.587_1081, 16, 0>;
  _887 = BIT_FIELD_REF <vect__293.587_1081, 16, 16>;
  _884 = BIT_FIELD_REF <vect__293.587_1081, 16, 32>;
  _881 = BIT_FIELD_REF <vect__293.587_1081, 16, 48>;
  _878 = BIT_FIELD_REF <vect__293.587_1081, 16, 64>;
  _875 = BIT_FIELD_REF <vect__293.587_1081, 16, 80>;
  _872 = BIT_FIELD_REF <vect__293.587_1081, 16, 96>;
  _869 = BIT_FIELD_REF <vect__293.587_1081, 16, 112>;
  _865 = BIT_FIELD_REF <vect__307.600_1055, 16, 0>;
  _862 = BIT_FIELD_REF <vect__307.600_1055, 16, 16>;
  _859 = BIT_FIELD_REF <vect__307.600_1055, 16, 32>;
  _856 = BIT_FIELD_REF <vect__307.600_1055, 16, 48>;
  _853 = BIT_FIELD_REF <vect__307.600_1055, 16, 64>;
  _850 = BIT_FIELD_REF <vect__307.600_1055, 16, 80>;
  _847 = BIT_FIELD_REF <vect__307.600_1055, 16, 96>;
  _844 = BIT_FIELD_REF <vect__307.600_1055, 16, 112>;
  _841 = BIT_FIELD_REF <vect__307.600_1054, 16, 0>;
  _838 = BIT_FIELD_REF <vect__307.600_1054, 16, 16>;
  _835 = BIT_FIELD_REF <vect__307.600_1054, 16, 32>;
  _832 = BIT_FIELD_REF <vect__307.600_1054, 16, 48>;
  _829 = BIT_FIELD_REF <vect__307.600_1054, 16, 64>;
  _826 = BIT_FIELD_REF <vect__307.600_1054, 16, 80>;
  _823 = BIT_FIELD_REF <vect__307.600_1054, 16, 96>;
  _820 = BIT_FIELD_REF <vect__307.600_1054, 16, 112>;
  _816 = BIT_FIELD_REF <vect__321.613_1028, 16, 0>;
  _813 = BIT_FIELD_REF <vect__321.613_1028, 16, 16>;
  _810 = BIT_FIELD_REF <vect__321.613_1028, 16, 32>;
  _807 = BIT_FIELD_REF <vect__321.613_1028, 16, 48>;
  _804 = BIT_FIELD_REF <vect__321.613_1028, 16, 64>;
  _801 = BIT_FIELD_REF <vect__321.613_1028, 16, 80>;
  _798 = BIT_FIELD_REF <vect__321.613_1028, 16, 96>;
  _795 = BIT_FIELD_REF <vect__321.613_1028, 16, 112>;
  _792 = BIT_FIELD_REF <vect__321.613_1027, 16, 0>;
  _789 = BIT_FIELD_REF <vect__321.613_1027, 16, 16>;
  _786 = BIT_FIELD_REF <vect__321.613_1027, 16, 32>;
  _783 = BIT_FIELD_REF <vect__321.613_1027, 16, 48>;
  _780 = BIT_FIELD_REF <vect__321.613_1027, 16, 64>;
  _777 = BIT_FIELD_REF <vect__321.613_1027, 16, 80>;
  _774 = BIT_FIELD_REF <vect__321.613_1027, 16, 96>;
  _771 = BIT_FIELD_REF <vect__321.613_1027, 16, 112>;
  _767 = BIT_FIELD_REF <vect__335.626_1001, 16, 0>;
  _122 = {_914, _865, _816, _767};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116] = _122;
  _764 = BIT_FIELD_REF <vect__335.626_1001, 16, 16>;
  _125 = {_911, _862, _813, _764};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 16B] = _125;
  _761 = BIT_FIELD_REF <vect__335.626_1001, 16, 32>;
  _128 = {_908, _859, _810, _761};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 32B] = _128;
  _758 = BIT_FIELD_REF <vect__335.626_1001, 16, 48>;
  _131 = {_905, _856, _807, _758};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 48B] = _131;
  _755 = BIT_FIELD_REF <vect__335.626_1001, 16, 64>;
  _134 = {_902, _853, _804, _755};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 64B] = _134;
  _752 = BIT_FIELD_REF <vect__335.626_1001, 16, 80>;
  _137 = {_899, _850, _801, _752};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 80B] = _137;
  _749 = BIT_FIELD_REF <vect__335.626_1001, 16, 96>;
  _140 = {_896, _847, _798, _749};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 96B] = _140;
  _746 = BIT_FIELD_REF <vect__335.626_1001, 16, 112>;
  _143 = {_893, _844, _795, _746};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 112B] = _143;
  _743 = BIT_FIELD_REF <vect__335.626_1000, 16, 0>;
  _146 = {_890, _841, _792, _743};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 128B] = _146;
  _740 = BIT_FIELD_REF <vect__335.626_1000, 16, 16>;
  _149 = {_887, _838, _789, _740};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 144B] = _149;
  _737 = BIT_FIELD_REF <vect__335.626_1000, 16, 32>;
  _152 = {_884, _835, _786, _737};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 160B] = _152;
  _734 = BIT_FIELD_REF <vect__335.626_1000, 16, 48>;
  _155 = {_881, _832, _783, _734};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 176B] = _155;
  _731 = BIT_FIELD_REF <vect__335.626_1000, 16, 64>;
  _158 = {_878, _829, _780, _731};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 192B] = _158;
  _728 = BIT_FIELD_REF <vect__335.626_1000, 16, 80>;
  _161 = {_875, _826, _777, _728};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 208B] = _161;
  _725 = BIT_FIELD_REF <vect__335.626_1000, 16, 96>;
  _164 = {_872, _823, _774, _725};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 224B] = _164;
  _722 = BIT_FIELD_REF <vect__335.626_1000, 16, 112>;
  _167 = {_869, _820, _771, _722};
  MEM <vector(4) short unsigned int> [(uint16_t *)_116 + 240B] = _167;
  _718 = BIT_FIELD_REF <vect__349.639_974, 16, 0>;
  MEM[(uint16_t *)_116 + 8B] = _718;
  _715 = BIT_FIELD_REF <vect__349.639_974, 16, 16>;
  MEM[(uint16_t *)_116 + 24B] = _715;
  _712 = BIT_FIELD_REF <vect__349.639_974, 16, 32>;
  MEM[(uint16_t *)_116 + 40B] = _712;
  _709 = BIT_FIELD_REF <vect__349.639_974, 16, 48>;
  MEM[(uint16_t *)_116 + 56B] = _709;
  _706 = BIT_FIELD_REF <vect__349.639_974, 16, 64>;
  MEM[(uint16_t *)_116 + 72B] = _706;
  _703 = BIT_FIELD_REF <vect__349.639_974, 16, 80>;
  MEM[(uint16_t *)_116 + 88B] = _703;
  _700 = BIT_FIELD_REF <vect__349.639_974, 16, 96>;
  MEM[(uint16_t *)_116 + 104B] = _700;
  _697 = BIT_FIELD_REF <vect__349.639_974, 16, 112>;
  MEM[(uint16_t *)_116 + 120B] = _697;
  _694 = BIT_FIELD_REF <vect__349.639_973, 16, 0>;
  MEM[(uint16_t *)_116 + 136B] = _694;
  _691 = BIT_FIELD_REF <vect__349.639_973, 16, 16>;
  MEM[(uint16_t *)_116 + 152B] = _691;
  _688 = BIT_FIELD_REF <vect__349.639_973, 16, 32>;
  MEM[(uint16_t *)_116 + 168B] = _688;
  _685 = BIT_FIELD_REF <vect__349.639_973, 16, 48>;
  MEM[(uint16_t *)_116 + 184B] = _685;
  _682 = BIT_FIELD_REF <vect__349.639_973, 16, 64>;
  MEM[(uint16_t *)_116 + 200B] = _682;
  _679 = BIT_FIELD_REF <vect__349.639_973, 16, 80>;
  MEM[(uint16_t *)_116 + 216B] = _679;
  _676 = BIT_FIELD_REF <vect__349.639_973, 16, 96>;
  MEM[(uint16_t *)_116 + 232B] = _676;
  _673 = BIT_FIELD_REF <vect__349.639_973, 16, 112>;
  MEM[(uint16_t *)_116 + 248B] = _673;
  _669 = BIT_FIELD_REF <vect__363.652_947, 16, 0>;
  MEM[(uint16_t *)_116 + 10B] = _669;
  _666 = BIT_FIELD_REF <vect__363.652_947, 16, 16>;
  MEM[(uint16_t *)_116 + 26B] = _666;
  _663 = BIT_FIELD_REF <vect__363.652_947, 16, 32>;
  MEM[(uint16_t *)_116 + 42B] = _663;
  _660 = BIT_FIELD_REF <vect__363.652_947, 16, 48>;
  MEM[(uint16_t *)_116 + 58B] = _660;
  _657 = BIT_FIELD_REF <vect__363.652_947, 16, 64>;
  MEM[(uint16_t *)_116 + 74B] = _657;
  _654 = BIT_FIELD_REF <vect__363.652_947, 16, 80>;
  MEM[(uint16_t *)_116 + 90B] = _654;
  _651 = BIT_FIELD_REF <vect__363.652_947, 16, 96>;
  MEM[(uint16_t *)_116 + 106B] = _651;
  _648 = BIT_FIELD_REF <vect__363.652_947, 16, 112>;
  MEM[(uint16_t *)_116 + 122B] = _648;
  _645 = BIT_FIELD_REF <vect__363.652_946, 16, 0>;
  MEM[(uint16_t *)_116 + 138B] = _645;
  _642 = BIT_FIELD_REF <vect__363.652_946, 16, 16>;
  MEM[(uint16_t *)_116 + 154B] = _642;
  _639 = BIT_FIELD_REF <vect__363.652_946, 16, 32>;
  MEM[(uint16_t *)_116 + 170B] = _639;
  _636 = BIT_FIELD_REF <vect__363.652_946, 16, 48>;
  MEM[(uint16_t *)_116 + 186B] = _636;
  _633 = BIT_FIELD_REF <vect__363.652_946, 16, 64>;
  MEM[(uint16_t *)_116 + 202B] = _633;
  _630 = BIT_FIELD_REF <vect__363.652_946, 16, 80>;
  MEM[(uint16_t *)_116 + 218B] = _630;
  _627 = BIT_FIELD_REF <vect__363.652_946, 16, 96>;
  MEM[(uint16_t *)_116 + 234B] = _627;
  _624 = BIT_FIELD_REF <vect__363.652_946, 16, 112>;
  MEM[(uint16_t *)_116 + 250B] = _624;
  _620 = BIT_FIELD_REF <vect__377.665_920, 16, 0>;
  MEM[(uint16_t *)_116 + 12B] = _620;
  _617 = BIT_FIELD_REF <vect__377.665_920, 16, 16>;
  MEM[(uint16_t *)_116 + 28B] = _617;
  _614 = BIT_FIELD_REF <vect__377.665_920, 16, 32>;
  MEM[(uint16_t *)_116 + 44B] = _614;
  _611 = BIT_FIELD_REF <vect__377.665_920, 16, 48>;
  MEM[(uint16_t *)_116 + 60B] = _611;
  _608 = BIT_FIELD_REF <vect__377.665_920, 16, 64>;
  MEM[(uint16_t *)_116 + 76B] = _608;
  _605 = BIT_FIELD_REF <vect__377.665_920, 16, 80>;
  MEM[(uint16_t *)_116 + 92B] = _605;
  _602 = BIT_FIELD_REF <vect__377.665_920, 16, 96>;
  MEM[(uint16_t *)_116 + 108B] = _602;
  _599 = BIT_FIELD_REF <vect__377.665_920, 16, 112>;
  MEM[(uint16_t *)_116 + 124B] = _599;
  _596 = BIT_FIELD_REF <vect__377.665_919, 16, 0>;
  MEM[(uint16_t *)_116 + 140B] = _596;
  _593 = BIT_FIELD_REF <vect__377.665_919, 16, 16>;
  MEM[(uint16_t *)_116 + 156B] = _593;
  _590 = BIT_FIELD_REF <vect__377.665_919, 16, 32>;
  MEM[(uint16_t *)_116 + 172B] = _590;
  _587 = BIT_FIELD_REF <vect__377.665_919, 16, 48>;
  MEM[(uint16_t *)_116 + 188B] = _587;
  _584 = BIT_FIELD_REF <vect__377.665_919, 16, 64>;
  MEM[(uint16_t *)_116 + 204B] = _584;
  _581 = BIT_FIELD_REF <vect__377.665_919, 16, 80>;
  MEM[(uint16_t *)_116 + 220B] = _581;
  _578 = BIT_FIELD_REF <vect__377.665_919, 16, 96>;
  MEM[(uint16_t *)_116 + 236B] = _578;
  _575 = BIT_FIELD_REF <vect__377.665_919, 16, 112>;
  MEM[(uint16_t *)_116 + 252B] = _575;
  vect_b_379.667_572 = vect_b_280.558_1186 >> 7;
  vect__380.668_571 = [vec_unpack_lo_expr] vect_b_379.667_572;
  vect__380.668_570 = [vec_unpack_hi_expr] vect_b_379.667_572;
  vect__382.669_568 = vect__380.668_571 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__382.669_567 = vect__380.668_570 * { 1665, 1665, 1665, 1665, 1665, 1665, 1665, 1665 };
  vect__383.670_566 = vect__382.669_568 + vect_perm_odd_1141;
  vect__383.670_565 = vect__382.669_567 + vect_perm_odd_1101;
  vect_subtracted_384.671_563 = vect__383.670_566 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted_384.671_562 = vect__383.670_565 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_385.672_561 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_384.671_563);
  vect_subtracted.42_385.672_560 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_384.671_562);
  vect__386.673_559 = vect_subtracted.42_385.672_561 >> 15;
  vect__386.673_558 = vect_subtracted.42_385.672_560 >> 15;
  vect__387.674_557 = vect_subtracted_384.671_563 ^ vect__383.670_566;
  vect__387.674_556 = vect_subtracted_384.671_562 ^ vect__383.670_565;
  vect__388.675_555 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__387.674_557);
  vect__388.675_554 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__387.674_556);
  vect__389.676_553 = vect__388.675_555 & vect__386.673_559;
  vect__389.676_552 = vect__388.675_554 & vect__386.673_558;
  vect__390.677_551 = vect__389.676_553 ^ vect_subtracted.42_385.672_561;
  vect__390.677_550 = vect__389.676_552 ^ vect_subtracted.42_385.672_560;
  _544 = BIT_FIELD_REF <vect__390.677_551, 16, 0>;
  MEM[(uint16_t *)_116 + 14B] = _544;
  _541 = BIT_FIELD_REF <vect__390.677_551, 16, 16>;
  MEM[(uint16_t *)_116 + 30B] = _541;
  _538 = BIT_FIELD_REF <vect__390.677_551, 16, 32>;
  MEM[(uint16_t *)_116 + 46B] = _538;
  _535 = BIT_FIELD_REF <vect__390.677_551, 16, 48>;
  MEM[(uint16_t *)_116 + 62B] = _535;
  _532 = BIT_FIELD_REF <vect__390.677_551, 16, 64>;
  MEM[(uint16_t *)_116 + 78B] = _532;
  _529 = BIT_FIELD_REF <vect__390.677_551, 16, 80>;
  MEM[(uint16_t *)_116 + 94B] = _529;
  _526 = BIT_FIELD_REF <vect__390.677_551, 16, 96>;
  MEM[(uint16_t *)_116 + 110B] = _526;
  _523 = BIT_FIELD_REF <vect__390.677_551, 16, 112>;
  MEM[(uint16_t *)_116 + 126B] = _523;
  _520 = BIT_FIELD_REF <vect__390.677_550, 16, 0>;
  MEM[(uint16_t *)_116 + 142B] = _520;
  _517 = BIT_FIELD_REF <vect__390.677_550, 16, 16>;
  MEM[(uint16_t *)_116 + 158B] = _517;
  _514 = BIT_FIELD_REF <vect__390.677_550, 16, 32>;
  MEM[(uint16_t *)_116 + 174B] = _514;
  _511 = BIT_FIELD_REF <vect__390.677_550, 16, 48>;
  MEM[(uint16_t *)_116 + 190B] = _511;
  _508 = BIT_FIELD_REF <vect__390.677_550, 16, 64>;
  MEM[(uint16_t *)_116 + 206B] = _508;
  _505 = BIT_FIELD_REF <vect__390.677_550, 16, 80>;
  MEM[(uint16_t *)_116 + 222B] = _505;
  _502 = BIT_FIELD_REF <vect__390.677_550, 16, 96>;
  MEM[(uint16_t *)_116 + 238B] = _502;
  _499 = BIT_FIELD_REF <vect__390.677_550, 16, 112>;
  MEM[(uint16_t *)_116 + 254B] = _499;
  ivtmp.836_120 = ivtmp.836_121 + 256;
  ivtmp.838_117 = ivtmp.838_118 + 16;
  if (ivtmp.838_117 != 32)
    goto <bb 35>; [49.92%]
  else
    goto <bb 36>; [50.08%]

  <bb 36> [local count: 57732950]:
  scalar_compress (&v, dv_23);
  _10 = vinfo_17->u_vector_bytes;
  _11 = out_32(D) + _10;
  scalar_encode (_11, &v, dv_23);

  <bb 37> [local count: 494345021]:
  # _13 = PHI <0(7), _9(36)>
  v ={v} {CLOBBER(eos)};
  input ={v} {CLOBBER(eos)};
  return _13;

  <bb 38> [local count: 123524245]:
  input ={v} {CLOBBER(eos)};
  goto <bb 7>; [100.00%]

  <bb 39> [local count: 118111601]:
  input ={v} {CLOBBER(eos)};
  goto <bb 25>; [100.00%]

  <bb 40> [local count: 215055902]:
  _290 = (long unsigned int) rank_18;
  _1080 = (unsigned int) _290;
  _1198 = _1080 w* 512;
  u_916 = tmp_19(D) + _1198;
  scalar_inverse_ntt (&v);
  _1204 = key_16(D)->m;
  goto <bb 15>; [100.00%]

  <bb 41> [local count: 252709177]:
  input ={v} {CLOBBER(eos)};
  goto <bb 7>; [100.00%]

  <bb 42> [local count: 241635845]:
  input ={v} {CLOBBER(eos)};
  _5 = key_16(D)->t;
  scalar_mult (&v, _5, tmp_19(D));
  rank_36 = rank_18 + -1;
  if (rank_36 > 0)
    goto <bb 9>; [89.00%]
  else
    goto <bb 8>; [11.00%]

}



;; Function encap (encap, funcdef_no=599, decl_uid=18704, cgraph_uid=600, symbol_order=608)

Removing basic block 8
Removing basic block 9
Removing basic block 10
__attribute__((access ("^1[32]^2[32]", )))
int encap (uint8_t * ctext, uint8_t * secret, const uint8_t * entropy, struct scalar * tmp, struct EVP_MD_CTX * mdctx, const struct ML_KEM_KEY * key)
{
  uint8_t Kr[64];
  uint8_t input[64];
  uint8_t * _1;
  int _3;
  int iftmp.57_18;
  struct EVP_MD * _23;
  int _25;
  int _26;

  <bb 2> [local count: 1073741824]:
  __builtin_memcpy (&input, entropy_7(D), 32);
  _1 = key_8(D)->pkhash;
  __builtin_memcpy (&MEM <uint8_t[64]> [(void *)&input + 32B], _1, 32);
  _23 = MEM[(struct EVP_MD * *)key_8(D) + 40B];
  _25 = EVP_DigestInit_ex (mdctx_9(D), _23, 0B);
  if (_25 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 3>; [67.00%]

  <bb 3> [local count: 1133978741]:
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 354334800]:
  _26 = single_keccak (&Kr, 64, &input, 64, mdctx_9(D));
  if (_26 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 5> [local count: 354334800]:
  _3 = encrypt_cpa (ctext_11(D), entropy_7(D), &MEM <uint8_t[64]> [(void *)&Kr + 32B], tmp_12(D), mdctx_9(D), key_8(D));
  if (_3 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 3>; [67.00%]

  <bb 6> [local count: 116930483]:
  __builtin_memcpy (secret_14(D), &Kr, 32);

  <bb 7> [local count: 1073741824]:
  # iftmp.57_18 = PHI <0(3), _3(6)>
  OPENSSL_cleanse (&input, 64);
  input ={v} {CLOBBER(eos)};
  Kr ={v} {CLOBBER(eos)};
  return iftmp.57_18;

}



;; Function decap (decap, funcdef_no=600, decl_uid=18716, cgraph_uid=601, symbol_order=609)

Removing basic block 32
Removing basic block 33
Removing basic block 34
Removing basic block 35
Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
Removing basic block 40
Removing basic block 41
Removing basic block 42
Removing basic block 43
Removing basic block 44
Removing basic block 45
Removing basic block 46
Removing basic block 47
Removing basic block 48
Removing basic block 49
Removing basic block 50
__attribute__((access ("^0[32]", )))
int decap (uint8_t * secret, const uint8_t * ctext, uint8_t * tmp_ctext, struct scalar * tmp, struct EVP_MD_CTX * mdctx, const struct ML_KEM_KEY * key)
{
  unsigned long ivtmp.1210;
  unsigned long ivtmp.1202;
  unsigned long ivtmp.1196;
  unsigned long ivtmp.1192;
  unsigned long ivtmp.1176;
  unsigned long ivtmp.1174;
  unsigned long ivtmp.1172;
  unsigned long ivtmp.1169;
  unsigned long ivtmp.1164;
  unsigned long ivtmp.1162;
  unsigned long ivtmp.1154;
  sizetype ivtmp.1137;
  vector(8) short unsigned int vect__148.1126;
  vector(8) short unsigned int vect__147.1125;
  vector(8) short unsigned int vect__146.1124;
  vector(4) unsigned int vect__145.1123;
  vector(4) unsigned int vect_lower_143.1122;
  vector(4) unsigned int vect_remainder_142.1121;
  vector(4) unsigned int vect_patt_659.1120;
  vector(8) short unsigned int vect__136.1119;
  vector(8) short unsigned int vect__125.1114;
  vector(8) short unsigned int vect__124.1113;
  vector(8) short unsigned int vect__123.1112;
  vector(4) unsigned int vect__122.1111;
  vector(4) unsigned int vect_lower_120.1110;
  vector(4) unsigned int vect_remainder_119.1109;
  vector(4) unsigned int vect_patt_637.1108;
  vector(8) short unsigned int vect__113.1107;
  vector(8) short unsigned int vect_array.1104[2];
  short unsigned int[16] * vectp_mask.1102;
  vector(8) short unsigned int vect__230.1101;
  vector(8) signed short vect__229.1100;
  vector(8) signed short vect__228.1099;
  vector(8) signed short vect__227.1098;
  vector(8) short unsigned int vect__226.1097;
  vector(8) signed short vect__225.1096;
  vector(8) signed short vect_subtracted.42_224.1095;
  const vector(8) short unsigned int vect_subtracted_223.1094;
  vector(8) unsigned short vect_patt_394.1092;
  vector(8) unsigned short vect_patt_395.1091;
  vector(8) unsigned short vect_patt_397.1090;
  vector(8) unsigned short vect_patt_398.1089;
  vector(4) unsigned int vect_quotient_219.1088;
  vector(2) long unsigned int vect__218.1087;
  vector(2) long unsigned int vect_patt_399.1086;
  vector(4) unsigned int vect__215.1085;
  vector(4) unsigned int vect_patt_400.1083;
  vector(4) unsigned int vect_patt_401.1082;
  vector(4) unsigned int vect__211.1081;
  vector(8) short unsigned int vect__209.1080;
  vector(8) signed short vect__208.1079;
  vector(8) signed short vect__207.1078;
  vector(8) signed short vect__206.1077;
  vector(8) short unsigned int vect__205.1076;
  vector(8) signed short vect__204.1075;
  vector(8) signed short vect_subtracted.42_203.1074;
  const vector(8) short unsigned int vect_subtracted_202.1073;
  vector(8) unsigned short vect_patt_404.1071;
  vector(8) unsigned short vect_patt_405.1070;
  vector(8) unsigned short vect_patt_407.1069;
  vector(8) unsigned short vect_patt_408.1068;
  vector(4) unsigned int vect_quotient_198.1067;
  vector(2) long unsigned int vect__197.1066;
  vector(2) long unsigned int vect_patt_409.1065;
  vector(4) unsigned int vect__194.1064;
  vector(4) unsigned int vect__272.1063;
  vector(4) unsigned int vect_patt_410.1062;
  vector(4) unsigned int vect_patt_411.1061;
  vector(8) short unsigned int vect__189.1060;
  vector(8) signed short vect__188.1059;
  vector(8) signed short vect__187.1058;
  vector(8) signed short vect__186.1057;
  vector(8) short unsigned int vect__185.1056;
  vector(8) signed short vect__184.1055;
  vector(8) signed short vect_subtracted.42_183.1054;
  const vector(8) short unsigned int vect_subtracted_182.1053;
  vector(8) unsigned short vect_patt_414.1051;
  vector(8) unsigned short vect_patt_415.1050;
  vector(8) unsigned short vect_patt_417.1049;
  vector(8) unsigned short vect_patt_418.1048;
  vector(4) unsigned int vect_quotient_178.1047;
  vector(2) long unsigned int vect__177.1046;
  vector(2) long unsigned int vect_patt_419.1045;
  vector(4) unsigned int vect_patt_420.1044;
  vector(4) unsigned int vect__173.1043;
  vector(8) short unsigned int vect__172.1042;
  vector(8) short unsigned int vect__172.1041;
  vector(8) short unsigned int vect_array.1040[2];
  const vector(8) short unsigned int vect__170.1037;
  const vector(8) short unsigned int vect__158.1034;
  const vector(8) short unsigned int vect__158.1033;
  const vector(8) short unsigned int vect_array.1032[2];
  short unsigned int[16] * vectp_rhs.1030;
  const vector(8) short unsigned int vect__155.1029;
  const vector(8) short unsigned int vect__155.1028;
  const vector(8) short unsigned int vect_array.1027[2];
  short unsigned int[16] * vectp_lhs.1025;
  vector(8) short unsigned int vect__104.1022;
  vector(8) signed short vect__103.1021;
  vector(8) signed short vect__102.1020;
  vector(8) signed short vect__101.1019;
  vector(8) short unsigned int vect__100.1018;
  vector(8) signed short vect__99.1017;
  vector(8) signed short vect_subtracted.1016;
  vector(8) short unsigned int vect__97.1015;
  vector(8) short unsigned int vect__96.1014;
  const vector(8) short unsigned int vect__95.1013;
  vector(8) short unsigned int vect__94.1010;
  uint8_t stmp_out_byte_88.1007;
  vector(8) unsigned char vect_patt_509.1004;
  vector(8) unsigned char vect_patt_512.1001;
  vector(8) unsigned char vect_patt_513.1000;
  const vector(4) short unsigned int vect__82.999;
  const vector(4) short unsigned int vect__82.998;
  int stride;
  const uint8_t * in;
  struct scalar * out;
  uint32_t power;
  const struct scalar * lhs;
  uint8_t * out;
  const struct ML_KEM_VINFO * vinfo;
  struct scalar v;
  struct scalar mask;
  int rank;
  int du;
  int dv;
  unsigned int r;
  unsigned int r;
  const struct ML_KEM_VINFO * vinfo;
  const uint8_t * pkhash;
  uint8_t Kr[64];
  uint8_t failure_key[32];
  uint8_t decrypted[64];
  uint8_t * _1;
  long unsigned int _2;
  int _5;
  long unsigned int _6;
  int _7;
  unsigned char _8;
  unsigned char _9;
  int _13;
  unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  unsigned int _43;
  signed int a.93_44;
  signed int _45;
  unsigned int _47;
  unsigned int _48;
  unsigned int _50;
  unsigned int _53;
  unsigned int _54;
  unsigned char _55;
  struct EVP_MD * _60;
  struct EVP_MD * _61;
  int _63;
  int _64;
  int _65;
  int _66;
  int _69;
  int _70;
  long unsigned int _76;
  const uint8_t * _77;
  struct ossl_ml_kem_scalar_st * _78;
  unsigned long _97;
  unsigned long _98;
  unsigned long _99;
  void * _103;
  unsigned int _104;
  unsigned int _105;
  int _116;
  unsigned int _118;
  void * _119;
  uint8_t * _124;
  void * _142;
  unsigned long _149;
  void * _154;
  struct scalar * _161;
  unsigned long _162;
  unsigned int _163;
  unsigned int _164;
  unsigned long _165;
  unsigned long _169;
  unsigned long _171;
  unsigned long _274;
  vector(8) unsigned char _474;
  vector(8) unsigned char _475;
  vector(8) unsigned char _476;
  vector(8) unsigned char _477;
  vector(8) unsigned char _478;
  vector(8) unsigned char _479;
  void * _484;
  void * _486;
  unsigned int _569;
  unsigned long _575;
  unsigned int _576;
  unsigned long _585;
  vector(4) unsigned int _586;
  vector(4) unsigned int _587;
  unsigned long _588;
  sizetype _590;
  int _591;
  unsigned int _592;
  unsigned int _593;
  int _594;
  int _596;
  signed int _599;
  unsigned int _600;
  unsigned int _601;
  vector(4) unsigned int vect_cst__644;
  vector(4) unsigned int vect_cst__666;

  <bb 2> [local count: 206317544]:
  pkhash_19 = key_18(D)->pkhash;
  vinfo_20 = key_18(D)->vinfo;
  _1 = key_18(D)->z;
  _2 = vinfo_20->ctext_bytes;
  _61 = MEM[(struct EVP_MD * *)key_18(D) + 24B];
  _63 = EVP_DigestInit_ex (mdctx_22(D), _61, 0B);
  if (_63 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 3>; [67.00%]

  <bb 3> [local count: 202610328]:
  goto <bb 31>; [100.00%]

  <bb 4> [local count: 68084789]:
  _64 = EVP_DigestUpdate (mdctx_22(D), _1, 32);
  if (_64 != 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 3>; [67.00%]

  <bb 5> [local count: 22467980]:
  _65 = EVP_DigestUpdate (mdctx_22(D), ctext_21(D), _2);
  if (_65 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 3>; [67.00%]

  <bb 6> [local count: 7414433]:
  _66 = EVP_DigestFinalXOF (mdctx_22(D), &failure_key, 32);
  if (_66 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 7> [local count: 100848015]:
  vinfo_72 = key_18(D)->vinfo;
  rank_73 = vinfo_72->rank;
  du_74 = vinfo_72->du;
  dv_75 = vinfo_72->dv;
  stride_127 = du_74 * 32;
  if (rank_73 > 0)
    goto <bb 9>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 100848015]:
  _76 = vinfo_72->u_vector_bytes;
  _77 = ctext_21(D) + _76;
  scalar_decode (&v, _77, dv_75);
  _116 = 1 << dv_75;
  power_117 = (uint32_t) _116;
  _118 = power_117 + 4294967295;
  _596 = dv_75 + -1;
  vect_cst__644 = {_118, _118, _118, _118};
  ivtmp.1196_102 = (unsigned long) &v;
  _575 = ivtmp.1196_102 + 512;
  goto <bb 13>; [100.00%]

  <bb 9> [local count: 89754733]:
  _590 = (sizetype) stride_127;
  _591 = 1 << du_74;
  _592 = (unsigned int) _591;
  _593 = _592 + 4294967295;
  _594 = du_74 + -1;
  _161 = tmp_24(D) + 512;
  ivtmp.1210_160 = (unsigned long) _161;
  _163 = (unsigned int) rank_73;
  _164 = _163 + 4294967295;
  _165 = (unsigned long) _164;
  _105 = (unsigned int) _165;
  _169 = (unsigned long) tmp_24(D);
  _585 = _169 + 1024;
  _171 = WIDEN_MULT_PLUS_EXPR <_105, 512, _585>;

  <bb 10> [local count: 815952126]:
  # in_280 = PHI <in_131(12), ctext_21(D)(9)>
  # ivtmp.1210_158 = PHI <ivtmp.1210_159(12), ivtmp.1210_160(9)>
  _162 = ivtmp.1210_158 + 18446744073709551104;
  out_279 = (struct scalar *) _162;
  scalar_decode (out_279, in_280, du_74);
  vect_cst__666 = {_593, _593, _593, _593};

  <bb 11> [local count: 26110468093]:
  # ivtmp.1202_574 = PHI <ivtmp.1202_168(11), _162(10)>
  _154 = (void *) ivtmp.1202_574;
  vect__136.1119_662 = MEM <vector(8) short unsigned int> [(short unsigned int *)_154];
  vect_patt_659.1120_664 = WIDEN_MULT_LO_EXPR <vect__136.1119_662, { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 }>;
  vect_patt_659.1120_665 = WIDEN_MULT_HI_EXPR <vect__136.1119_662, { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 }>;
  vect_remainder_142.1121_667 = vect_patt_659.1120_664 & vect_cst__666;
  vect_remainder_142.1121_668 = vect_patt_659.1120_665 & vect_cst__666;
  vect_lower_143.1122_669 = vect_patt_659.1120_664 >> du_74;
  vect_lower_143.1122_670 = vect_patt_659.1120_665 >> du_74;
  vect__145.1123_671 = vect_remainder_142.1121_667 >> _594;
  vect__145.1123_672 = vect_remainder_142.1121_668 >> _594;
  vect__146.1124_673 = VEC_PACK_TRUNC_EXPR <vect__145.1123_671, vect__145.1123_672>;
  vect__147.1125_674 = VEC_PACK_TRUNC_EXPR <vect_lower_143.1122_669, vect_lower_143.1122_670>;
  vect__148.1126_675 = vect__146.1124_673 + vect__147.1125_674;
  MEM <vector(8) short unsigned int> [(short unsigned int *)_154] = vect__148.1126_675;
  ivtmp.1202_168 = ivtmp.1202_574 + 16;
  if (ivtmp.1210_158 != ivtmp.1202_168)
    goto <bb 11>; [96.88%]
  else
    goto <bb 12>; [3.12%]

  <bb 12> [local count: 815952126]:
  scalar_ntt (out_279);
  in_131 = in_280 + _590;
  ivtmp.1210_159 = ivtmp.1210_158 + 512;
  if (ivtmp.1210_159 != _171)
    goto <bb 10>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 13> [local count: 3227136488]:
  # ivtmp.1196_100 = PHI <ivtmp.1196_101(13), ivtmp.1196_102(8)>
  _103 = (void *) ivtmp.1196_100;
  vect__113.1107_640 = MEM <vector(8) short unsigned int> [(short unsigned int *)_103];
  vect_patt_637.1108_642 = WIDEN_MULT_LO_EXPR <vect__113.1107_640, { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 }>;
  vect_patt_637.1108_643 = WIDEN_MULT_HI_EXPR <vect__113.1107_640, { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 }>;
  vect_remainder_119.1109_645 = vect_patt_637.1108_642 & vect_cst__644;
  vect_remainder_119.1109_646 = vect_patt_637.1108_643 & vect_cst__644;
  vect_lower_120.1110_647 = vect_patt_637.1108_642 >> dv_75;
  vect_lower_120.1110_648 = vect_patt_637.1108_643 >> dv_75;
  vect__122.1111_649 = vect_remainder_119.1109_645 >> _596;
  vect__122.1111_650 = vect_remainder_119.1109_646 >> _596;
  vect__123.1112_651 = VEC_PACK_TRUNC_EXPR <vect__122.1111_649, vect__122.1111_650>;
  vect__124.1113_652 = VEC_PACK_TRUNC_EXPR <vect_lower_120.1110_647, vect_lower_120.1110_648>;
  vect__125.1114_653 = vect__123.1112_651 + vect__124.1113_652;
  MEM <vector(8) short unsigned int> [(short unsigned int *)_103] = vect__125.1114_653;
  ivtmp.1196_101 = ivtmp.1196_100 + 16;
  if (ivtmp.1196_101 != _575)
    goto <bb 13>; [96.88%]
  else
    goto <bb 14>; [3.12%]

  <bb 14> [local count: 100848015]:
  _78 = key_18(D)->s;
  scalar_mult (&mask, _78, tmp_24(D));
  if (rank_73 > 1)
    goto <bb 16>; [89.00%]
  else
    goto <bb 15>; [11.00%]

  <bb 15> [local count: 100848015]:
  scalar_inverse_ntt (&mask);
  ivtmp.1164_481 = (unsigned long) &mask;
  goto <bb 20>; [100.00%]

  <bb 16> [local count: 89754733]:
  _149 = (unsigned long) tmp_24(D);
  ivtmp.1192_148 = _149 + 1024;
  _569 = (unsigned int) rank_73;
  _576 = _569 + 4294967294;
  _274 = (unsigned long) _576;
  _104 = (unsigned int) _274;
  _588 = _149 + 1536;
  _97 = WIDEN_MULT_PLUS_EXPR <_104, 512, _588>;

  <bb 17> [local count: 815952126]:
  # lhs_275 = PHI <lhs_107(19), _78(16)>
  # ivtmp.1192_146 = PHI <ivtmp.1192_147(19), ivtmp.1192_148(16)>
  lhs_107 = lhs_275 + 512;
  ivtmp.1169_501 = (unsigned long) &mask;
  ivtmp.1172_502 = (unsigned long) &kModRoots;
  _98 = ivtmp.1192_146 + 18446744073709551104;
  _99 = (unsigned long) lhs_107;

  <bb 18> [local count: 13055234016]:
  # ivtmp.1169_500 = PHI <ivtmp.1169_501(17), ivtmp.1169_689(18)>
  # ivtmp.1172_688 = PHI <ivtmp.1172_502(17), ivtmp.1172_687(18)>
  # ivtmp.1174_472 = PHI <_98(17), ivtmp.1174_494(18)>
  # ivtmp.1176_282 = PHI <_99(17), ivtmp.1176_136(18)>
  vectp_mask.1102_628 = (short unsigned int[16] *) ivtmp.1169_500;
  vectp_rhs.1030_322 = (short unsigned int[16] *) ivtmp.1174_472;
  vectp_lhs.1025_327 = (short unsigned int[16] *) ivtmp.1176_282;
  vect_array.1027 = .LOAD_LANES (MEM <short unsigned int[16]> [(const uint16_t *)vectp_lhs.1025_327]);
  vect__155.1028_325 = vect_array.1027[0];
  vect__155.1029_324 = vect_array.1027[1];
  vect_array.1027 ={v} {CLOBBER};
  vect_array.1032 = .LOAD_LANES (MEM <short unsigned int[16]> [(const uint16_t *)vectp_rhs.1030_322]);
  vect__158.1033_320 = vect_array.1032[0];
  vect__158.1034_319 = vect_array.1032[1];
  vect_array.1032 ={v} {CLOBBER};
  _142 = (void *) ivtmp.1172_688;
  vect__170.1037_316 = MEM <const vector(8) short unsigned int> [(const uint16_t *)_142];
  vect_array.1040 = .LOAD_LANES (MEM <short unsigned int[16]> [(uint16_t *)vectp_mask.1102_628]);
  vect__172.1041_313 = vect_array.1040[0];
  vect__172.1042_312 = vect_array.1040[1];
  vect_array.1040 ={v} {CLOBBER};
  vect__173.1043_311 = [vec_unpack_lo_expr] vect__172.1041_313;
  vect__173.1043_310 = [vec_unpack_hi_expr] vect__172.1041_313;
  vect_patt_420.1044_309 = WIDEN_MULT_LO_EXPR <vect__158.1034_319, vect__155.1029_324>;
  vect_patt_420.1044_308 = WIDEN_MULT_HI_EXPR <vect__158.1034_319, vect__155.1029_324>;
  vect_patt_419.1045_306 = WIDEN_MULT_LO_EXPR <vect_patt_420.1044_309, { 5039, 5039, 5039, 5039 }>;
  vect_patt_419.1045_305 = WIDEN_MULT_HI_EXPR <vect_patt_420.1044_309, { 5039, 5039, 5039, 5039 }>;
  vect_patt_419.1045_304 = WIDEN_MULT_LO_EXPR <vect_patt_420.1044_308, { 5039, 5039, 5039, 5039 }>;
  vect_patt_419.1045_303 = WIDEN_MULT_HI_EXPR <vect_patt_420.1044_308, { 5039, 5039, 5039, 5039 }>;
  vect__177.1046_302 = vect_patt_419.1045_306 >> 24;
  vect__177.1046_301 = vect_patt_419.1045_305 >> 24;
  vect__177.1046_300 = vect_patt_419.1045_304 >> 24;
  vect__177.1046_299 = vect_patt_419.1045_303 >> 24;
  vect_quotient_178.1047_298 = VEC_PACK_TRUNC_EXPR <vect__177.1046_302, vect__177.1046_301>;
  vect_quotient_178.1047_297 = VEC_PACK_TRUNC_EXPR <vect__177.1046_300, vect__177.1046_299>;
  vect_patt_418.1048_296 = VEC_PACK_TRUNC_EXPR <vect_quotient_178.1047_298, vect_quotient_178.1047_297>;
  vect_patt_417.1049_294 = vect_patt_418.1048_296 * { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect_patt_415.1050_290 = VEC_PACK_TRUNC_EXPR <vect_patt_420.1044_309, vect_patt_420.1044_308>;
  vect_patt_414.1051_286 = vect_patt_415.1050_290 - vect_patt_417.1049_294;
  vect_subtracted_182.1053_267 = vect_patt_414.1051_286 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_183.1054_266 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_182.1053_267);
  vect__184.1055_265 = vect_subtracted.42_183.1054_266 >> 15;
  vect__185.1056_264 = vect_subtracted_182.1053_267 ^ vect_patt_414.1051_286;
  vect__186.1057_263 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__185.1056_264);
  vect__187.1058_246 = vect__186.1057_263 & vect__184.1055_265;
  vect__188.1059_240 = vect__187.1058_246 ^ vect_subtracted.42_183.1054_266;
  vect__189.1060_239 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__188.1059_240);
  vect_patt_411.1061_238 = WIDEN_MULT_LO_EXPR <vect__189.1060_239, vect__170.1037_316>;
  vect_patt_411.1061_237 = WIDEN_MULT_HI_EXPR <vect__189.1060_239, vect__170.1037_316>;
  vect_patt_410.1062_236 = WIDEN_MULT_LO_EXPR <vect__158.1033_320, vect__155.1028_325>;
  vect_patt_410.1062_235 = WIDEN_MULT_HI_EXPR <vect__158.1033_320, vect__155.1028_325>;
  vect__272.1063_234 = vect_patt_410.1062_236 + vect__173.1043_311;
  vect__272.1063_233 = vect_patt_410.1062_235 + vect__173.1043_310;
  vect__194.1064_232 = vect__272.1063_234 + vect_patt_411.1061_238;
  vect__194.1064_231 = vect__272.1063_233 + vect_patt_411.1061_237;
  vect_patt_409.1065_153 = WIDEN_MULT_LO_EXPR <vect__194.1064_232, { 5039, 5039, 5039, 5039 }>;
  vect_patt_409.1065_152 = WIDEN_MULT_HI_EXPR <vect__194.1064_232, { 5039, 5039, 5039, 5039 }>;
  vect_patt_409.1065_151 = WIDEN_MULT_LO_EXPR <vect__194.1064_231, { 5039, 5039, 5039, 5039 }>;
  vect_patt_409.1065_135 = WIDEN_MULT_HI_EXPR <vect__194.1064_231, { 5039, 5039, 5039, 5039 }>;
  vect__197.1066_133 = vect_patt_409.1065_153 >> 24;
  vect__197.1066_129 = vect_patt_409.1065_152 >> 24;
  vect__197.1066_128 = vect_patt_409.1065_151 >> 24;
  vect__197.1066_112 = vect_patt_409.1065_135 >> 24;
  vect_quotient_198.1067_110 = VEC_PACK_TRUNC_EXPR <vect__197.1066_133, vect__197.1066_129>;
  vect_quotient_198.1067_108 = VEC_PACK_TRUNC_EXPR <vect__197.1066_128, vect__197.1066_112>;
  vect_patt_408.1068_106 = VEC_PACK_TRUNC_EXPR <vect_quotient_198.1067_110, vect_quotient_198.1067_108>;
  vect_patt_407.1069_90 = vect_patt_408.1068_106 * { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect_patt_405.1070_87 = VEC_PACK_TRUNC_EXPR <vect__194.1064_232, vect__194.1064_231>;
  vect_patt_404.1071_80 = vect_patt_405.1070_87 - vect_patt_407.1069_90;
  vect_subtracted_202.1073_68 = vect_patt_404.1071_80 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_203.1074_67 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_202.1073_68);
  vect__204.1075_62 = vect_subtracted.42_203.1074_67 >> 15;
  vect__205.1076_57 = vect_subtracted_202.1073_68 ^ vect_patt_404.1071_80;
  vect__206.1077_39 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__205.1076_57);
  vect__207.1078_25 = vect__206.1077_39 & vect__204.1075_62;
  vect__208.1079_23 = vect__207.1078_25 ^ vect_subtracted.42_203.1074_67;
  vect__209.1080_15 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__208.1079_23);
  vect__211.1081_12 = [vec_unpack_lo_expr] vect__172.1042_312;
  vect__211.1081_3 = [vec_unpack_hi_expr] vect__172.1042_312;
  vect_patt_401.1082_597 = WIDEN_MULT_LO_EXPR <vect__158.1033_320, vect__155.1029_324>;
  vect_patt_401.1082_598 = WIDEN_MULT_HI_EXPR <vect__158.1033_320, vect__155.1029_324>;
  vect_patt_400.1083_139 = WIDEN_MULT_LO_EXPR <vect__158.1034_319, vect__155.1028_325>;
  vect_patt_400.1083_140 = WIDEN_MULT_HI_EXPR <vect__158.1034_319, vect__155.1028_325>;
  _587 = vect__211.1081_12 + vect_patt_401.1082_597;
  _586 = vect__211.1081_3 + vect_patt_401.1082_598;
  vect__215.1085_144 = vect_patt_400.1083_139 + _587;
  vect__215.1085_130 = vect_patt_400.1083_140 + _586;
  vect_patt_399.1086_58 = WIDEN_MULT_LO_EXPR <vect__215.1085_144, { 5039, 5039, 5039, 5039 }>;
  vect_patt_399.1086_46 = WIDEN_MULT_HI_EXPR <vect__215.1085_144, { 5039, 5039, 5039, 5039 }>;
  vect_patt_399.1086_51 = WIDEN_MULT_LO_EXPR <vect__215.1085_130, { 5039, 5039, 5039, 5039 }>;
  vect_patt_399.1086_606 = WIDEN_MULT_HI_EXPR <vect__215.1085_130, { 5039, 5039, 5039, 5039 }>;
  vect__218.1087_607 = vect_patt_399.1086_58 >> 24;
  vect__218.1087_608 = vect_patt_399.1086_46 >> 24;
  vect__218.1087_609 = vect_patt_399.1086_51 >> 24;
  vect__218.1087_610 = vect_patt_399.1086_606 >> 24;
  vect_quotient_219.1088_611 = VEC_PACK_TRUNC_EXPR <vect__218.1087_607, vect__218.1087_608>;
  vect_quotient_219.1088_612 = VEC_PACK_TRUNC_EXPR <vect__218.1087_609, vect__218.1087_610>;
  vect_patt_398.1089_613 = VEC_PACK_TRUNC_EXPR <vect_quotient_219.1088_611, vect_quotient_219.1088_612>;
  vect_patt_397.1090_615 = vect_patt_398.1089_613 * { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect_patt_395.1091_616 = VEC_PACK_TRUNC_EXPR <vect__215.1085_144, vect__215.1085_130>;
  vect_patt_394.1092_617 = vect_patt_395.1091_616 - vect_patt_397.1090_615;
  vect_subtracted_223.1094_620 = vect_patt_394.1092_617 + { 62207, 62207, 62207, 62207, 62207, 62207, 62207, 62207 };
  vect_subtracted.42_224.1095_621 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect_subtracted_223.1094_620);
  vect__225.1096_622 = vect_subtracted.42_224.1095_621 >> 15;
  vect__226.1097_623 = vect_patt_394.1092_617 ^ vect_subtracted_223.1094_620;
  vect__227.1098_624 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__226.1097_623);
  vect__228.1099_625 = vect__225.1096_622 & vect__227.1098_624;
  vect__229.1100_626 = vect_subtracted.42_224.1095_621 ^ vect__228.1099_625;
  vect__230.1101_627 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__229.1100_626);
  vect_array.1104 ={v} {CLOBBER};
  vect_array.1104[0] = vect__209.1080_15;
  vect_array.1104[1] = vect__230.1101_627;
  MEM <short unsigned int[16]> [(uint16_t *)vectp_mask.1102_628] = .STORE_LANES (vect_array.1104);
  vect_array.1104 ={v} {CLOBBER};
  ivtmp.1169_689 = ivtmp.1169_500 + 32;
  ivtmp.1172_687 = ivtmp.1172_688 + 16;
  ivtmp.1174_494 = ivtmp.1174_472 + 32;
  ivtmp.1176_136 = ivtmp.1176_282 + 32;
  if (ivtmp.1192_146 != ivtmp.1174_494)
    goto <bb 18>; [93.75%]
  else
    goto <bb 19>; [6.25%]

  <bb 19> [local count: 815952126]:
  ivtmp.1192_147 = ivtmp.1192_146 + 512;
  if (_97 != ivtmp.1192_147)
    goto <bb 17>; [89.00%]
  else
    goto <bb 15>; [11.00%]

  <bb 20> [local count: 3227136488]:
  # ivtmp.1162_113 = PHI <ivtmp.1162_278(20), ivtmp.1196_102(15)>
  # ivtmp.1164_480 = PHI <ivtmp.1164_471(20), ivtmp.1164_481(15)>
  _484 = (void *) ivtmp.1162_113;
  vect__94.1010_468 = MEM <vector(8) short unsigned int> [(short unsigned int *)_484];
  _486 = (void *) ivtmp.1164_480;
  vect__95.1013_465 = MEM <const vector(8) short unsigned int> [(short unsigned int *)_486];
  vect__96.1014_464 = vect__94.1010_468 - vect__95.1013_465;
  vect__97.1015_462 = vect__96.1014_464 + { 3329, 3329, 3329, 3329, 3329, 3329, 3329, 3329 };
  vect_subtracted.1016_461 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__96.1014_464);
  vect__99.1017_460 = vect_subtracted.1016_461 >> 15;
  vect__100.1018_459 = vect__97.1015_462 ^ vect__96.1014_464;
  vect__101.1019_458 = VIEW_CONVERT_EXPR<vector(8) signed short>(vect__100.1018_459);
  vect__102.1020_457 = vect__101.1019_458 & vect__99.1017_460;
  vect__103.1021_456 = vect__102.1020_457 ^ vect_subtracted.1016_461;
  vect__104.1022_455 = VIEW_CONVERT_EXPR<vector(8) short unsigned int>(vect__103.1021_456);
  MEM <vector(8) short unsigned int> [(short unsigned int *)_484] = vect__104.1022_455;
  ivtmp.1162_278 = ivtmp.1162_113 + 16;
  ivtmp.1164_471 = ivtmp.1164_480 + 16;
  if (ivtmp.1162_278 != _575)
    goto <bb 20>; [96.88%]
  else
    goto <bb 21>; [3.12%]

  <bb 21> [local count: 100848015]:
  scalar_compress (&v, 1);

  <bb 22> [local count: 3227469367]:
  # out_273 = PHI <out_91(22), &decrypted(21)>
  # ivtmp.1154_123 = PHI <ivtmp.1154_122(22), ivtmp.1196_102(21)>
  _119 = (void *) ivtmp.1154_123;
  vect__82.998_492 = MEM <const vector(4) short unsigned int> [(short unsigned int *)_119];
  vect__82.999_490 = MEM <const vector(4) short unsigned int> [(short unsigned int *)_119 + 8B];
  vect_patt_513.1000_489 = VEC_PACK_TRUNC_EXPR <vect__82.998_492, vect__82.999_490>;
  vect_patt_512.1001_487 = vect_patt_513.1000_489 & { 1, 1, 1, 1, 1, 1, 1, 1 };
  vect_patt_509.1004_483 = vect_patt_512.1001_487 << { 0, 1, 2, 3, 4, 5, 6, 7 };
  _479 = VEC_PERM_EXPR <vect_patt_509.1004_483, { 0, 0, 0, 0, 0, 0, 0, 0 }, { 4, 5, 6, 7, 8, 9, 10, 11 }>;
  _478 = _479 | vect_patt_509.1004_483;
  _477 = VEC_PERM_EXPR <_478, { 0, 0, 0, 0, 0, 0, 0, 0 }, { 2, 3, 4, 5, 6, 7, 8, 9 }>;
  _476 = _477 | _478;
  _475 = VEC_PERM_EXPR <_476, { 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 2, 3, 4, 5, 6, 7, 8 }>;
  _474 = _475 | _476;
  stmp_out_byte_88.1007_473 = BIT_FIELD_REF <_474, 8, 0>;
  MEM[(uint8_t *)out_273] = stmp_out_byte_88.1007_473;
  out_91 = out_273 + 1;
  ivtmp.1154_122 = ivtmp.1154_123 + 16;
  if (&MEM <uint8_t[64]> [(void *)&decrypted + 32B] != out_91)
    goto <bb 22>; [96.88%]
  else
    goto <bb 23>; [3.12%]

  <bb 23> [local count: 100848015]:
  v ={v} {CLOBBER(eos)};
  mask ={v} {CLOBBER(eos)};
  __builtin_memcpy (&MEM <uint8_t[64]> [(void *)&decrypted + 32B], pkhash_19, 32);
  _60 = MEM[(struct EVP_MD * *)key_18(D) + 40B];
  _69 = EVP_DigestInit_ex (mdctx_22(D), _60, 0B);
  if (_69 != 0)
    goto <bb 25>; [33.00%]
  else
    goto <bb 24>; [67.00%]

  <bb 24> [local count: 118233406]:
  MEM <unsigned char[32]> [(char * {ref-all})secret_32(D)] = MEM <unsigned char[32]> [(char * {ref-all})&failure_key];
  OPENSSL_cleanse (&decrypted, 32);
  goto <bb 30>; [100.00%]

  <bb 25> [local count: 33279845]:
  _70 = single_keccak (&Kr, 64, &decrypted, 64, mdctx_22(D));
  if (_70 != 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  <bb 26> [local count: 66559689]:
  _5 = encrypt_cpa (tmp_ctext_27(D), &decrypted, &MEM <uint8_t[64]> [(void *)&Kr + 32B], tmp_24(D), mdctx_22(D), key_18(D));
  if (_5 == 0)
    goto <bb 24>; [51.12%]
  else
    goto <bb 27>; [48.88%]

  <bb 27> [local count: 32534376]:
  _6 = vinfo_20->ctext_bytes;
  _7 = CRYPTO_memcmp (ctext_21(D), tmp_ctext_27(D), _6);
  _40 = (unsigned int) _7;
  _41 = ~_40;
  _42 = _40 + 4294967295;
  _43 = _41 & _42;
  a.93_44 = (signed int) _43;
  _45 = a.93_44 >> 31;
  _599 = _45 & 255;
  _600 = (unsigned int) _599;
  _601 = ~_600;

  <bb 28> [local count: 1041207448]:
  # ivtmp.1137_570 = PHI <ivtmp.1137_571(28), 1(27)>
  _8 = MEM[(unsigned char *)&Kr + -1B + ivtmp.1137_570 * 1];
  _9 = MEM[(unsigned char *)&failure_key + -1B + ivtmp.1137_570 * 1];
  _47 = (unsigned int) _8;
  _48 = (unsigned int) _9;
  __asm__("" : "=r" r_49 : "0" _600);
  _50 = _47 & r_49;
  __asm__("" : "=r" r_52 : "0" _601);
  _53 = _48 & r_52;
  _54 = _50 | _53;
  _55 = (unsigned char) _54;
  _124 = secret_32(D) + 18446744073709551615;
  MEM[(uint8_t *)_124 + ivtmp.1137_570 * 1] = _55;
  ivtmp.1137_571 = ivtmp.1137_570 + 1;
  if (ivtmp.1137_571 != 33)
    goto <bb 28>; [96.88%]
  else
    goto <bb 29>; [3.12%]

  <bb 29> [local count: 32534376]:
  OPENSSL_cleanse (&decrypted, 32);
  OPENSSL_cleanse (&Kr, 64);

  <bb 30> [local count: 118233406]:

  <bb 31> [local count: 206317545]:
  # _13 = PHI <0(3), 1(30)>
  decrypted ={v} {CLOBBER(eos)};
  failure_key ={v} {CLOBBER(eos)};
  Kr ={v} {CLOBBER(eos)};
  return _13;

}



;; Function ossl_ml_kem_key_reset (ossl_ml_kem_key_reset, funcdef_no=602, decl_uid=16849, cgraph_uid=603, symbol_order=611)

Removing basic block 7
Removing basic block 8
void ossl_ml_kem_key_reset (struct ML_KEM_KEY * key)
{
  struct ossl_ml_kem_scalar_st * _1;
  struct ossl_ml_kem_scalar_st * _2;
  const struct ML_KEM_VINFO * _3;
  int _4;
  long unsigned int _7;
  struct ossl_ml_kem_scalar_st * pretmp_20;
  struct ossl_ml_kem_scalar_st * prephitmp_21;

  <bb 2> [local count: 1073741824]:
  _1 = key_12(D)->t;
  if (_1 == 0B)
    goto <bb 6>; [18.09%]
  else
    goto <bb 3>; [81.91%]

  <bb 3> [local count: 879501928]:
  _2 = key_12(D)->s;
  if (_2 != 0B)
    goto <bb 4>; [53.47%]
  else
    goto <bb 5>; [46.53%]

  <bb 4> [local count: 470269680]:
  _3 = key_12(D)->vinfo;
  _4 = _3->rank;
  _7 = WIDEN_MULT_PLUS_EXPR <_4, 512, 64>;
  OPENSSL_cleanse (_2, _7);
  pretmp_20 = key_12(D)->t;

  <bb 5> [local count: 879501928]:
  # prephitmp_21 = PHI <_1(3), pretmp_20(4)>
  CRYPTO_free (prephitmp_21, "ml_kem.c", 1554);
  MEM <vector(2) long unsigned int> [(void *)key_12(D) + 64B] = { 0, 0 };
  MEM <vector(2) long unsigned int> [(void *)key_12(D) + 80B] = { 0, 0 };
  key_12(D)->d = 0B;

  <bb 6> [local count: 1073741824]:
  return;

}



;; Function ossl_ml_kem_key_free.part.0 (ossl_ml_kem_key_free.part.0, funcdef_no=618, decl_uid=19669, cgraph_uid=689, symbol_order=698)

Removing basic block 9
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
void ossl_ml_kem_key_free.part.0 (struct ML_KEM_KEY * key)
{
  struct EVP_MD * _2;
  struct EVP_MD * _3;
  struct EVP_MD * _4;
  struct EVP_MD * _5;
  uint8_t * _6;
  struct ossl_ml_kem_scalar_st * _7;
  uint8_t * _8;
  uint8_t[64] * _9;
  uint8_t * _10;
  const struct ML_KEM_VINFO * _11;
  long unsigned int _12;
  uint8_t * _13;

  <bb 2> [local count: 741418728]:
  _2 = key_1(D)->shake128_md;
  EVP_MD_free (_2);
  _3 = key_1(D)->shake256_md;
  EVP_MD_free (_3);
  _4 = key_1(D)->sha3_256_md;
  EVP_MD_free (_4);
  _5 = key_1(D)->sha3_512_md;
  EVP_MD_free (_5);
  _6 = key_1(D)->encoded_dk;
  if (_6 != 0B)
    goto <bb 6>; [53.47%]
  else
    goto <bb 3>; [46.53%]

  <bb 3> [local count: 344982135]:
  _7 = key_1(D)->s;
  if (_7 == 0B)
    goto <bb 5>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 4> [local count: 490707074]:
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 103494640]:
  _8 = key_1(D)->d;
  if (_8 != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 4>; [30.00%]

  <bb 6> [local count: 468882841]:
  _9 = &key_1(D)->seedbuf;
  OPENSSL_cleanse (_9, 64);
  _10 = key_1(D)->encoded_dk;
  if (_10 != 0B)
    goto <bb 7>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 7> [local count: 250711655]:
  _11 = key_1(D)->vinfo;
  _12 = _11->prvkey_bytes;
  OPENSSL_cleanse (_10, _12);
  _13 = key_1(D)->encoded_dk;
  CRYPTO_free (_13, "ml_kem.c", 1679);

  <bb 8> [local count: 741418728]:
  ossl_ml_kem_key_reset (key_1(D));
  CRYPTO_free (key_1(D), "ml_kem.c", 1683); [tail call]
  return;

}



;; Function ossl_ml_kem_get_vinfo (ossl_ml_kem_get_vinfo, funcdef_no=603, decl_uid=16824, cgraph_uid=604, symbol_order=612)

Removing basic block 5
Removing basic block 7
Removing basic block 8
const struct ML_KEM_VINFO * ossl_ml_kem_get_vinfo (int evp_type)
{
  const struct ML_KEM_VINFO * _1;

  <bb 2> [local count: 1073741824]:
  if (evp_type_2(D) == 1455)
    goto <bb 6>; [25.00%]
  else
    goto <bb 3>; [75.00%]

  <bb 3> [local count: 805306368]:
  if (evp_type_2(D) == 1456)
    goto <bb 6>; [33.33%]
  else
    goto <bb 4>; [66.67%]

  <bb 4> [local count: 536870910]:
  if (evp_type_2(D) == 1454)
    goto <bb 6>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 268435455]:

  <bb 6> [local count: 1073741824]:
  # _1 = PHI <&vinfo_map[0](4), &vinfo_map[1](2), &vinfo_map[2](3), 0B(5)>
  return _1;

}



;; Function ossl_ml_kem_key_new (ossl_ml_kem_key_new, funcdef_no=604, decl_uid=16847, cgraph_uid=605, symbol_order=613)

Removing basic block 12
Removing basic block 13
Removing basic block 14
Removing basic block 15
Removing basic block 16
Removing basic block 17
Removing basic block 18
Removing basic block 19
Removing basic block 20
struct ML_KEM_KEY * ossl_ml_kem_key_new (struct OSSL_LIB_CTX * libctx, const char * properties, int evp_type)
{
  struct ML_KEM_KEY * key;
  struct EVP_MD * _1;
  struct EVP_MD * _2;
  struct EVP_MD * _3;
  struct EVP_MD * _4;
  struct EVP_MD * _5;
  struct EVP_MD * _6;
  struct EVP_MD * _7;
  struct ML_KEM_KEY * _8;
  const struct ML_KEM_VINFO * _35;
  _Bool _36;
  _Bool _38;
  _Bool _39;

  <bb 2> [local count: 1073741822]:
  if (evp_type_11(D) == 1455)
    goto <bb 5>; [25.00%]
  else
    goto <bb 3>; [75.00%]

  <bb 3> [local count: 805306367]:
  if (evp_type_11(D) == 1456)
    goto <bb 5>; [33.33%]
  else
    goto <bb 4>; [66.67%]

  <bb 4> [local count: 536870909]:
  if (evp_type_11(D) == 1454)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 805306367]:
  # _35 = PHI <&vinfo_map[1](2), &vinfo_map[0](4), &vinfo_map[2](3)>
  key_13 = CRYPTO_malloc (184, "ml_kem.c", 1588);
  if (key_13 == 0B)
    goto <bb 6>; [15.47%]
  else
    goto <bb 7>; [84.53%]

  <bb 6> [local count: 610415278]:
  goto <bb 11>; [100.00%]

  <bb 7> [local count: 680725469]:
  key_13->vinfo = _35;
  key_13->libctx = libctx_15(D);
  key_13->prov_flags = 13;
  _1 = EVP_MD_fetch (libctx_15(D), "SHAKE128", properties_18(D));
  key_13->shake128_md = _1;
  _2 = EVP_MD_fetch (libctx_15(D), "SHAKE256", properties_18(D));
  key_13->shake256_md = _2;
  _3 = EVP_MD_fetch (libctx_15(D), "SHA3-256", properties_18(D));
  key_13->sha3_256_md = _3;
  _4 = EVP_MD_fetch (libctx_15(D), "SHA3-512", properties_18(D));
  key_13->sha3_512_md = _4;
  key_13->encoded_dk = 0B;
  key_13->pkhash = 0B;
  key_13->rho = 0B;
  key_13->z = 0B;
  key_13->d = 0B;
  key_13->t = 0B;
  key_13->m = 0B;
  key_13->s = 0B;
  _5 = key_13->shake128_md;
  if (_5 != 0B)
    goto <bb 8>; [92.06%]
  else
    goto <bb 10>; [7.94%]

  <bb 8> [local count: 626675865]:
  _6 = key_13->shake256_md;
  if (_6 != 0B)
    goto <bb 9>; [85.10%]
  else
    goto <bb 10>; [14.90%]

  <bb 9> [local count: 533301163]:
  _7 = key_13->sha3_256_md;
  _36 = _4 != 0B;
  _38 = _7 != 0B;
  _39 = _36 & _38;
  if (_39 != 0)
    goto <bb 11>; [63.52%]
  else
    goto <bb 10>; [36.48%]

  <bb 10> [local count: 341979823]:
  ossl_ml_kem_key_free.part.0 (key_13);
  goto <bb 6>; [100.00%]

  <bb 11> [local count: 1073741824]:
  # _8 = PHI <0B(6), key_13(9)>
  return _8;

}



;; Function ossl_ml_kem_key_dup (ossl_ml_kem_key_dup, funcdef_no=605, decl_uid=16854, cgraph_uid=606, symbol_order=614)

Removing basic block 24
Removing basic block 25
Removing basic block 26
Removing basic block 27
Removing basic block 28
Removing basic block 29
Removing basic block 30
Removing basic block 31
Removing basic block 32
Removing basic block 33
Removing basic block 34
Removing basic block 35
Removing basic block 36
Removing basic block 37
struct ML_KEM_KEY * ossl_ml_kem_key_dup (const struct ML_KEM_KEY * key, int selection)
{
  int rank;
  struct ML_KEM_KEY * ret;
  int ok;
  uint8_t * _1;
  struct ossl_ml_kem_scalar_st * _2;
  uint8_t * _3;
  struct ossl_ml_kem_scalar_st * _4;
  struct ossl_ml_kem_scalar_st * _5;
  int _6;
  const struct ML_KEM_VINFO * _7;
  long unsigned int _8;
  void * _9;
  const struct ML_KEM_VINFO * _12;
  long unsigned int _13;
  void * _14;
  uint8_t * _15;
  uint8_t * _16;
  uint8_t * _17;
  struct EVP_MD * _18;
  struct EVP_MD * _19;
  struct EVP_MD * _20;
  struct EVP_MD * _21;
  struct ML_KEM_KEY * _24;
  const struct ML_KEM_VINFO * _58;
  uint8_t[64] * _60;
  long unsigned int _64;
  struct ossl_ml_kem_scalar_st * _65;
  uint8_t[64] * _80;
  uint8_t * _81;
  int _83;

  <bb 2> [local count: 1073741820]:
  _1 = key_29(D)->encoded_dk;
  if (_1 != 0B)
    goto <bb 3>; [32.93%]
  else
    goto <bb 5>; [67.07%]

  <bb 3> [local count: 514359841]:

  <bb 4> [local count: 155607946]:
  goto <bb 23>; [100.00%]

  <bb 5> [local count: 720158637]:
  _2 = key_29(D)->s;
  if (_2 == 0B)
    goto <bb 6>; [46.53%]
  else
    goto <bb 7>; [53.47%]

  <bb 6> [local count: 335089815]:
  _3 = key_29(D)->d;
  if (_3 != 0B)
    goto <bb 3>; [32.93%]
  else
    goto <bb 7>; [67.07%]

  <bb 7> [local count: 609813562]:
  ret_31 = CRYPTO_memdup (key_29(D), 184, "ml_kem.c", 1624);
  if (ret_31 == 0B)
    goto <bb 3>; [8.27%]
  else
    goto <bb 8>; [91.73%]

  <bb 8> [local count: 559381981]:
  ret_31->d = 0B;
  MEM <vector(2) long unsigned int> [(void *)ret_31 + 48B] = { 0, 0 };
  MEM <vector(2) long unsigned int> [(void *)ret_31 + 64B] = { 0, 0 };
  MEM <vector(2) long unsigned int> [(void *)ret_31 + 80B] = { 0, 0 };
  _4 = key_29(D)->t;
  if (_4 == 0B)
    goto <bb 21>; [17.43%]
  else
    goto <bb 9>; [82.57%]

  <bb 9> [local count: 461881702]:
  _5 = key_29(D)->s;
  if (_5 == 0B)
    goto <bb 10>; [30.00%]
  else
    goto <bb 11>; [70.00%]

  <bb 10> [local count: 138564509]:
  _83 = selection_39(D) & 2;
  if (_83 != 0)
    goto <bb 14>; [33.33%]
  else
    goto <bb 22>; [66.67%]

  <bb 11> [local count: 323317194]:
  _6 = selection_39(D) & 3;
  if (_6 == 1)
    goto <bb 17>; [35.71%]
  else
    goto <bb 12>; [64.29%]

  <bb 12> [local count: 207846768]:
  if (_6 == 2)
    goto <bb 14>; [33.33%]
  else
    goto <bb 13>; [66.67%]

  <bb 13> [local count: 138564511]:
  if (_6 == 0)
    goto <bb 22>; [16.67%]
  else
    goto <bb 20>; [83.33%]

  <bb 14> [local count: 115470426]:
  _7 = key_29(D)->vinfo;
  _8 = _7->puballoc;
  _9 = CRYPTO_memdup (_4, _8, "ml_kem.c", 1640);
  _81 = ret_31 + 140;
  if (_9 == 0B)
    goto <bb 15>; [30.95%]
  else
    goto <bb 16>; [69.05%]

  <bb 15> [local count: 35738097]:
  _80 = &ret_31->seedbuf;
  ret_31->rho = _80;
  ret_31->pkhash = _81;
  goto <bb 20>; [100.00%]

  <bb 16> [local count: 79732329]:
  _58 = ret_31->vinfo;
  rank_59 = _58->rank;
  _60 = &ret_31->seedbuf;
  __builtin_memset (_60, 0, 64);
  MEM <vector(2) long unsigned int> [(uint8_t * *)ret_31 + 88B] = { 0, 0 };
  ret_31->t = _9;
  _64 = rank_59 w* 512;
  _65 = _9 + _64;
  ret_31->m = _65;
  ret_31->rho = _60;
  ret_31->pkhash = _81;
  goto <bb 22>; [100.00%]

  <bb 17> [local count: 115470426]:
  _12 = key_29(D)->vinfo;
  _13 = _12->prvalloc;
  _14 = CRYPTO_memdup (_4, _13, "ml_kem.c", 1645);
  ok_48 = add_storage (_14, 1, ret_31);
  _15 = key_29(D)->d;
  if (_15 != 0B)
    goto <bb 18>; [70.00%]
  else
    goto <bb 19>; [30.00%]

  <bb 18> [local count: 80829298]:
  _16 = ret_31->z;
  _17 = _16 + 32;
  ret_31->d = _17;

  <bb 19> [local count: 115470425]:
  if (ok_48 == 0)
    goto <bb 20>; [3.81%]
  else
    goto <bb 21>; [96.19%]

  <bb 20> [local count: 155607946]:
  CRYPTO_free (ret_31, "ml_kem.c", 1653);
  goto <bb 4>; [100.00%]

  <bb 21> [local count: 208571283]:

  <bb 22> [local count: 403774037]:
  _18 = ret_31->shake128_md;
  EVP_MD_up_ref (_18);
  _19 = ret_31->shake256_md;
  EVP_MD_up_ref (_19);
  _20 = ret_31->sha3_256_md;
  EVP_MD_up_ref (_20);
  _21 = ret_31->sha3_512_md;
  EVP_MD_up_ref (_21);

  <bb 23> [local count: 1073741824]:
  # _24 = PHI <0B(4), ret_31(22)>
  return _24;

}



;; Function ossl_ml_kem_key_free (ossl_ml_kem_key_free, funcdef_no=606, decl_uid=16851, cgraph_uid=607, symbol_order=615)

Removing basic block 5
void ossl_ml_kem_key_free (struct ML_KEM_KEY * key)
{
  <bb 2> [local count: 1073741824]:
  if (key_2(D) == 0B)
    goto <bb 4>; [30.95%]
  else
    goto <bb 3>; [69.05%]

  <bb 3> [local count: 741418728]:
  ossl_ml_kem_key_free.part.0 (key_2(D)); [tail call]

  <bb 4> [local count: 1073741824]:
  return;

}



;; Function ossl_ml_kem_encode_public_key (ossl_ml_kem_encode_public_key, funcdef_no=607, decl_uid=16874, cgraph_uid=608, symbol_order=616)

Removing basic block 6
Removing basic block 7
int ossl_ml_kem_encode_public_key (uint8_t * out, size_t len, const struct ML_KEM_KEY * key)
{
  struct ossl_ml_kem_scalar_st * _1;
  const struct ML_KEM_VINFO * _2;
  long unsigned int _3;
  int _4;

  <bb 2> [local count: 1073741824]:
  _1 = key_7(D)->t;
  if (_1 == 0B)
    goto <bb 5>; [18.09%]
  else
    goto <bb 3>; [81.91%]

  <bb 3> [local count: 879501928]:
  _2 = key_7(D)->vinfo;
  _3 = _2->pubkey_bytes;
  if (_3 != len_8(D))
    goto <bb 5>; [67.00%]
  else
    goto <bb 4>; [33.00%]

  <bb 4> [local count: 290235635]:
  encode_pubkey (out_9(D), key_7(D));

  <bb 5> [local count: 1073741824]:
  # _4 = PHI <0(2), 1(4), 0(3)>
  return _4;

}



;; Function ossl_ml_kem_encode_private_key (ossl_ml_kem_encode_private_key, funcdef_no=608, decl_uid=16878, cgraph_uid=609, symbol_order=617)

Removing basic block 9
Removing basic block 10
Removing basic block 11
Removing basic block 12
Removing basic block 13
int ossl_ml_kem_encode_private_key (uint8_t * out, size_t len, const struct ML_KEM_KEY * key)
{
  const struct scalar * a;
  uint8_t * out;
  uint8_t * out;
  struct ossl_ml_kem_scalar_st * _1;
  const struct ML_KEM_VINFO * _2;
  long unsigned int _3;
  int _4;
  sizetype _11;
  int _13;
  long unsigned int _14;
  long unsigned int _16;
  uint8_t * _18;
  sizetype _19;
  uint8_t * _21;
  uint8_t * _22;
  unsigned int _23;
  unsigned int _29;

  <bb 2> [local count: 1073741824]:
  _1 = key_7(D)->s;
  if (_1 == 0B)
    goto <bb 8>; [18.09%]
  else
    goto <bb 3>; [81.91%]

  <bb 3> [local count: 879501928]:
  _2 = key_7(D)->vinfo;
  _3 = _2->prvkey_bytes;
  if (_3 != len_8(D))
    goto <bb 8>; [67.00%]
  else
    goto <bb 4>; [33.00%]

  <bb 4> [local count: 290235635]:
  _13 = _2->rank;
  if (_13 > 0)
    goto <bb 5>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 5> [local count: 258309715]:
  _29 = (unsigned int) _13;
  _11 = (sizetype) _29;
  _23 = (unsigned int) _11;
  _19 = _23 w* 384;
  _22 = out_9(D) + _19;

  <bb 6> [local count: 2348270152]:
  # a_27 = PHI <a_25(6), _1(5)>
  # out_10 = PHI <out_28(6), out_9(D)(5)>
  a_25 = a_27 + 512;
  scalar_encode (out_10, a_27, 12);
  out_28 = out_10 + 384;
  if (_22 != out_28)
    goto <bb 6>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 290235635]:
  _14 = _2->vector_bytes;
  out_15 = out_9(D) + _14;
  encode_pubkey (out_15, key_7(D));
  _16 = _2->pubkey_bytes;
  out_17 = out_15 + _16;
  _18 = key_7(D)->pkhash;
  __builtin_memcpy (out_17, _18, 32);
  out_20 = out_17 + 32;
  _21 = key_7(D)->z;
  __builtin_memcpy (out_20, _21, 32);

  <bb 8> [local count: 1073741824]:
  # _4 = PHI <0(3), 1(7), 0(2)>
  return _4;

}



;; Function ossl_ml_kem_encode_seed (ossl_ml_kem_encode_seed, funcdef_no=609, decl_uid=16882, cgraph_uid=610, symbol_order=618)

Removing basic block 6
Removing basic block 7
int ossl_ml_kem_encode_seed (uint8_t * out, size_t len, const struct ML_KEM_KEY * key)
{
  uint8_t * _1;
  uint8_t * _2;
  int _3;
  _Bool _10;
  _Bool _11;
  _Bool _14;

  <bb 2> [local count: 1073741824]:
  if (key_5(D) == 0B)
    goto <bb 5>; [18.09%]
  else
    goto <bb 3>; [81.91%]

  <bb 3> [local count: 879501928]:
  _1 = key_5(D)->d;
  _11 = len_7(D) != 64;
  _10 = _1 == 0B;
  _14 = _10 | _11;
  if (_14 != 0)
    goto <bb 5>; [72.97%]
  else
    goto <bb 4>; [27.03%]

  <bb 4> [local count: 237732008]:
  __builtin_memcpy (out_8(D), _1, 32);
  out_9 = out_8(D) + 32;
  _2 = key_5(D)->z;
  __builtin_memcpy (out_9, _2, 32);

  <bb 5> [local count: 1073741824]:
  # _3 = PHI <0(2), 1(4), 0(3)>
  return _3;

}



;; Function ossl_ml_kem_set_seed (ossl_ml_kem_set_seed, funcdef_no=610, decl_uid=16866, cgraph_uid=611, symbol_order=619)

Removing basic block 7
Removing basic block 8
Removing basic block 9
struct ML_KEM_KEY * ossl_ml_kem_set_seed (const uint8_t * seed, size_t seedlen, struct ML_KEM_KEY * key)
{
  struct ossl_ml_kem_scalar_st * _1;
  uint8_t * _2;
  uint8_t[64] * _3;
  uint8_t * _4;
  _Bool _5;
  struct ML_KEM_KEY * _6;
  _Bool _15;
  _Bool _16;

  <bb 2> [local count: 1073741822]:
  if (key_8(D) == 0B)
    goto <bb 6>; [8.27%]
  else
    goto <bb 3>; [91.73%]

  <bb 3> [local count: 984943374]:
  _1 = key_8(D)->t;
  if (_1 != 0B)
    goto <bb 6>; [32.93%]
  else
    goto <bb 4>; [67.07%]

  <bb 4> [local count: 660601520]:
  _2 = key_8(D)->d;
  _16 = seedlen_10(D) != 64;
  _15 = _2 != 0B;
  _5 = _15 | _16;
  if (_5 != 0)
    goto <bb 6>; [63.33%]
  else
    goto <bb 5>; [36.67%]

  <bb 5> [local count: 242223876]:
  _3 = &key_8(D)->seedbuf;
  key_8(D)->z = _3;
  _4 = key_8(D) + 140;
  key_8(D)->d = _4;
  __builtin_memcpy (_4, seed_13(D), 32);
  seed_14 = seed_13(D) + 32;
  __builtin_memcpy (_3, seed_14, 32);

  <bb 6> [local count: 1073741824]:
  # _6 = PHI <key_8(D)(2), key_8(D)(5), 0B(3), _1(4)>
  return _6;

}



;; Function ossl_ml_kem_parse_public_key (ossl_ml_kem_parse_public_key, funcdef_no=611, decl_uid=16858, cgraph_uid=612, symbol_order=620)

Removing basic block 13
Removing basic block 14
Removing basic block 15
Removing basic block 16
Removing basic block 17
Removing basic block 18
Removing basic block 19
Removing basic block 20
int ossl_ml_kem_parse_public_key (const uint8_t * in, size_t len, struct ML_KEM_KEY * key)
{
  int rank;
  int ret;
  const struct ML_KEM_VINFO * vinfo;
  struct EVP_MD_CTX * mdctx;
  struct ossl_ml_kem_scalar_st * _1;
  uint8_t * _2;
  long unsigned int _3;
  long unsigned int _4;
  void * _5;
  int _7;
  const struct ML_KEM_VINFO * _27;
  uint8_t[64] * _29;
  uint8_t * _31;
  long unsigned int _33;
  struct ossl_ml_kem_scalar_st * _34;

  <bb 2> [local count: 1073741824]:
  if (key_13(D) == 0B)
    goto <bb 3>; [18.09%]
  else
    goto <bb 4>; [81.91%]

  <bb 3> [local count: 1032416391]:
  goto <bb 12>; [100.00%]

  <bb 4> [local count: 879501928]:
  _1 = key_13(D)->t;
  if (_1 != 0B)
    goto <bb 3>; [54.59%]
  else
    goto <bb 5>; [45.41%]

  <bb 5> [local count: 399381824]:
  _2 = key_13(D)->encoded_dk;
  if (_2 != 0B)
    goto <bb 3>; [54.59%]
  else
    goto <bb 6>; [45.41%]

  <bb 6> [local count: 181359285]:
  vinfo_15 = key_13(D)->vinfo;
  _3 = vinfo_15->pubkey_bytes;
  if (_3 != len_16(D))
    goto <bb 3>; [67.00%]
  else
    goto <bb 7>; [33.00%]

  <bb 7> [local count: 59848564]:
  mdctx_18 = EVP_MD_CTX_new ();
  if (mdctx_18 == 0B)
    goto <bb 3>; [30.95%]
  else
    goto <bb 8>; [69.05%]

  <bb 8> [local count: 41325433]:
  _4 = vinfo_15->puballoc;
  _5 = CRYPTO_malloc (_4, "ml_kem.c", 1765);
  if (_5 == 0B)
    goto <bb 9>; [30.95%]
  else
    goto <bb 10>; [69.05%]

  <bb 9> [local count: 30994075]:
  ossl_ml_kem_key_reset (key_13(D));
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 28535211]:
  _27 = key_13(D)->vinfo;
  rank_28 = _27->rank;
  _29 = &key_13(D)->seedbuf;
  __builtin_memset (_29, 0, 64);
  key_13(D)->rho = _29;
  _31 = key_13(D) + 140;
  key_13(D)->pkhash = _31;
  MEM <vector(2) long unsigned int> [(uint8_t * *)key_13(D) + 88B] = { 0, 0 };
  key_13(D)->t = _5;
  _33 = rank_28 w* 512;
  _34 = _5 + _33;
  key_13(D)->m = _34;
  ret_23 = parse_pubkey (in_21(D), mdctx_18, key_13(D));
  if (ret_23 == 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 41325433]:
  # ret_12 = PHI <ret_23(10), 0(9)>
  EVP_MD_CTX_free (mdctx_18);

  <bb 12> [local count: 1073741824]:
  # _7 = PHI <0(3), ret_12(11)>
  return _7;

}



;; Function ossl_ml_kem_parse_private_key (ossl_ml_kem_parse_private_key, funcdef_no=612, decl_uid=16862, cgraph_uid=613, symbol_order=621)

Removing basic block 16
Removing basic block 17
Removing basic block 18
Removing basic block 19
Removing basic block 20
Removing basic block 21
Removing basic block 22
Removing basic block 23
Removing basic block 24
int ossl_ml_kem_parse_private_key (const uint8_t * in, size_t len, struct ML_KEM_KEY * key)
{
  const struct ML_KEM_VINFO * vinfo;
  const uint8_t * in;
  int ret;
  const struct ML_KEM_VINFO * vinfo;
  struct EVP_MD_CTX * mdctx;
  struct ossl_ml_kem_scalar_st * _1;
  uint8_t * _2;
  long unsigned int _3;
  long unsigned int _4;
  void * _5;
  int _6;
  int _7;
  struct ossl_ml_kem_scalar_st * _28;
  int _29;
  int _30;
  long unsigned int _31;
  int _33;
  long unsigned int _34;
  uint8_t * _36;
  int _37;
  uint8_t * _39;

  <bb 2> [local count: 1073741824]:
  if (key_13(D) == 0B)
    goto <bb 3>; [18.09%]
  else
    goto <bb 4>; [81.91%]

  <bb 3> [local count: 1032416391]:
  goto <bb 15>; [100.00%]

  <bb 4> [local count: 879501928]:
  _1 = key_13(D)->t;
  if (_1 != 0B)
    goto <bb 3>; [54.59%]
  else
    goto <bb 5>; [45.41%]

  <bb 5> [local count: 399381824]:
  _2 = key_13(D)->encoded_dk;
  if (_2 != 0B)
    goto <bb 3>; [54.59%]
  else
    goto <bb 6>; [45.41%]

  <bb 6> [local count: 181359285]:
  vinfo_15 = key_13(D)->vinfo;
  _3 = vinfo_15->prvkey_bytes;
  if (_3 != len_16(D))
    goto <bb 3>; [67.00%]
  else
    goto <bb 7>; [33.00%]

  <bb 7> [local count: 59848564]:
  mdctx_18 = EVP_MD_CTX_new ();
  if (mdctx_18 == 0B)
    goto <bb 3>; [30.95%]
  else
    goto <bb 8>; [69.05%]

  <bb 8> [local count: 41325433]:
  _4 = vinfo_15->prvalloc;
  _5 = CRYPTO_malloc (_4, "ml_kem.c", 1793);
  _6 = add_storage (_5, 1, key_13(D));
  if (_6 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 9> [local count: 20662717]:
  vinfo_27 = key_13(D)->vinfo;
  _28 = key_13(D)->s;
  _29 = vinfo_27->rank;
  _30 = vector_decode_12 (_28, in_21(D), _29);
  if (_30 == 0)
    goto <bb 13>; [51.12%]
  else
    goto <bb 10>; [48.88%]

  <bb 10> [local count: 10099936]:
  _31 = vinfo_27->vector_bytes;
  in_32 = in_21(D) + _31;
  _33 = parse_pubkey (in_32, mdctx_18, key_13(D));
  if (_33 == 0)
    goto <bb 13>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 11> [local count: 6665958]:
  _34 = vinfo_27->pubkey_bytes;
  in_35 = in_32 + _34;
  _36 = key_13(D)->pkhash;
  _37 = __builtin_memcmp_eq (_36, in_35, 32);
  if (_37 != 0)
    goto <bb 13>; [51.12%]
  else
    goto <bb 12>; [48.88%]

  <bb 12> [local count: 3258320]:
  in_38 = in_35 + 32;
  _39 = key_13(D)->z;
  __builtin_memcpy (_39, in_38, 32);
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 38067114]:
  ossl_ml_kem_key_reset (key_13(D));

  <bb 14> [local count: 41325433]:
  # ret_12 = PHI <_33(12), 0(13)>
  EVP_MD_CTX_free (mdctx_18);

  <bb 15> [local count: 1073741824]:
  # _7 = PHI <0(3), ret_12(14)>
  return _7;

}



;; Function ossl_ml_kem_genkey (ossl_ml_kem_genkey, funcdef_no=613, decl_uid=16870, cgraph_uid=614, symbol_order=622)

Removing basic block 17
Removing basic block 60
Removing basic block 61
Removing basic block 62
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 66
Removing basic block 67
Removing basic block 68
Removing basic block 69
Removing basic block 71
Removing basic block 72
Removing basic block 73
Removing basic block 74
Removing basic block 75
Removing basic block 76
Removing basic block 77
Removing basic block 78
Removing basic block 79
Removing basic block 80
Removing basic block 81
Removing basic block 82
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 87
Removing basic block 88
Removing basic block 89
Removing basic block 90
Removing basic block 91
int ossl_ml_kem_genkey (uint8_t * pubenc, size_t publen, struct ML_KEM_KEY * key)
{
  unsigned long ivtmp.1351;
  unsigned long ivtmp.1350;
  unsigned long ivtmp.1347;
  sizetype ivtmp.1323;
  const struct ML_KEM_VINFO * vinfo;
  const struct scalar * t;
  const struct scalar * end;
  unsigned int sz;
  uint8_t buf[384];
  uint16_t * curr;
  const uint16_t * lc;
  const uint16_t * rc;
  const uint16_t * roots;
  uint32_t l0;
  uint32_t r0;
  uint32_t l1;
  uint32_t r1;
  uint32_t zetapow;
  const uint16_t subtracted;
  uint32_t remainder;
  uint32_t quotient;
  uint64_t product;
  const uint16_t subtracted;
  uint32_t remainder;
  uint32_t quotient;
  uint64_t product;
  const uint16_t subtracted;
  uint32_t remainder;
  uint32_t quotient;
  uint64_t product;
  uint16_t * end;
  const uint16_t * roots;
  uint32_t l0;
  uint32_t r0;
  uint32_t l1;
  uint32_t r1;
  uint32_t zetapow;
  const uint16_t subtracted;
  uint32_t remainder;
  uint32_t quotient;
  uint64_t product;
  const uint16_t subtracted;
  uint32_t remainder;
  uint32_t quotient;
  uint64_t product;
  const uint16_t subtracted;
  uint32_t remainder;
  uint32_t quotient;
  uint64_t product;
  const struct scalar * mc;
  const struct scalar * mr;
  const struct scalar * ar;
  struct scalar * out;
  uint8_t input[33];
  int rank;
  struct scalar * out;
  uint8_t input[33];
  int rank;
  struct scalar * out;
  uint8_t hashed[64];
  uint8_t augmented_seed[33];
  const struct ML_KEM_VINFO * vinfo;
  int rank;
  uint8_t counter;
  const struct ML_KEM_VINFO * vinfo;
  struct EVP_MD_CTX * mdctx;
  uint8_t seed[64];
  struct ossl_ml_kem_scalar_st * _1;
  uint8_t * _2;
  long unsigned int _3;
  uint8_t * _4;
  int _5;
  struct OSSL_LIB_CTX * _6;
  int _8;
  unsigned int _9;
  int _10;
  long unsigned int _11;
  void * _12;
  int _13;
  int _15;
  int _39;
  unsigned char _41;
  uint8_t * _43;
  int _45;
  struct ossl_ml_kem_scalar_st * _46;
  int (*<T22ba>) (struct scalar *, uint8_t *, struct EVP_MD_CTX *, const struct ML_KEM_KEY *) iftmp.20_47;
  struct ossl_ml_kem_scalar_st * _49;
  struct ossl_ml_kem_scalar_st * _51;
  struct ossl_ml_kem_scalar_st * _52;
  struct ossl_ml_kem_scalar_st * _53;
  uint8_t * _54;
  uint8_t * _56;
  long unsigned int _57;
  uint8_t * _59;
  uint8_t * _62;
  uint8_t * _63;
  int _64;
  int _65;
  struct EVP_MD * _68;
  struct EVP_MD * _69;
  int _71;
  int _72;
  unsigned char _75;
  int _77;
  int _85;
  long unsigned int _93;
  long unsigned int _94;
  unsigned int _106;
  short unsigned int _109;
  short unsigned int _112;
  short unsigned int _115;
  short unsigned int _118;
  short unsigned int _124;
  short unsigned int _126;
  unsigned int _127;
  unsigned int _128;
  long unsigned int _129;
  long unsigned int _131;
  unsigned int _133;
  short unsigned int _135;
  signed short subtracted.42_137;
  signed short _138;
  short unsigned int _139;
  signed short _140;
  signed short _141;
  signed short _142;
  short unsigned int _143;
  unsigned int _144;
  unsigned int _145;
  unsigned int _146;
  unsigned int _148;
  long unsigned int _149;
  long unsigned int _151;
  unsigned int _153;
  short unsigned int _155;
  signed short subtracted.42_157;
  signed short _158;
  short unsigned int _159;
  signed short _160;
  signed short _161;
  signed short _162;
  short unsigned int _163;
  short unsigned int _164;
  unsigned int _165;
  unsigned int _166;
  unsigned int _167;
  unsigned int _168;
  unsigned int _169;
  long unsigned int _170;
  long unsigned int _172;
  unsigned int _174;
  short unsigned int _176;
  signed short subtracted.42_178;
  signed short _179;
  short unsigned int _180;
  signed short _181;
  signed short _182;
  signed short _183;
  short unsigned int _184;
  unsigned int _185;
  unsigned int _187;
  short unsigned int _190;
  short unsigned int _193;
  short unsigned int _196;
  short unsigned int _199;
  short unsigned int _205;
  short unsigned int _207;
  unsigned int _208;
  unsigned int _209;
  long unsigned int _210;
  long unsigned int _212;
  unsigned int _214;
  short unsigned int _216;
  signed short subtracted.42_218;
  signed short _219;
  short unsigned int _220;
  signed short _221;
  signed short _222;
  signed short _223;
  short unsigned int _224;
  unsigned int _225;
  unsigned int _226;
  unsigned int _227;
  unsigned int _229;
  long unsigned int _230;
  long unsigned int _232;
  unsigned int _234;
  short unsigned int _236;
  signed short subtracted.42_238;
  signed short _239;
  short unsigned int _240;
  signed short _241;
  signed short _242;
  signed short _243;
  short unsigned int _244;
  short unsigned int _245;
  unsigned int _246;
  unsigned int _247;
  unsigned int _248;
  unsigned int _249;
  unsigned int _250;
  long unsigned int _251;
  long unsigned int _253;
  unsigned int _255;
  short unsigned int _257;
  signed short subtracted.42_259;
  signed short _260;
  short unsigned int _261;
  signed short _262;
  signed short _263;
  signed short _264;
  short unsigned int _265;
  int _268;
  long unsigned int _270;
  struct EVP_MD * _272;
  int _273;
  int _276;
  uint8_t * _277;
  int _278;
  int _279;
  unsigned int sz.56_280;
  int _283;
  int _284;
  unsigned int _291;
  unsigned int _294;
  unsigned int _298;
  unsigned int _319;
  unsigned char _588;
  unsigned char _589;
  unsigned int _590;
  struct ossl_ml_kem_scalar_st * _592;
  sizetype _593;
  sizetype _594;
  struct scalar * _597;
  unsigned int _598;
  const struct scalar * _602;
  struct scalar * _610;
  struct ossl_ml_kem_scalar_st * _611;
  const struct scalar * _612;
  struct ossl_ml_kem_scalar_st * _617;
  sizetype _618;
  sizetype _619;
  sizetype _620;
  unsigned int _621;
  unsigned int _624;
  unsigned int _784;

  <bb 2> [local count: 1073741822]:
  if (key_19(D) == 0B)
    goto <bb 3>; [18.09%]
  else
    goto <bb 5>; [81.91%]

  <bb 3> [local count: 1018153104]:

  <bb 4> [local count: 11251157]:
  goto <bb 52>; [100.00%]

  <bb 5> [local count: 879501926]:
  _1 = key_19(D)->t;
  if (_1 != 0B)
    goto <bb 3>; [54.59%]
  else
    goto <bb 6>; [45.41%]

  <bb 6> [local count: 399381823]:
  _2 = key_19(D)->encoded_dk;
  if (_2 != 0B)
    goto <bb 3>; [54.59%]
  else
    goto <bb 7>; [45.41%]

  <bb 7> [local count: 181359285]:
  vinfo_21 = key_19(D)->vinfo;
  if (pubenc_22(D) != 0B)
    goto <bb 8>; [70.00%]
  else
    goto <bb 9>; [30.00%]

  <bb 8> [local count: 126951500]:
  _3 = vinfo_21->pubkey_bytes;
  if (_3 != publen_23(D))
    goto <bb 3>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 117883535]:
  _4 = key_19(D)->d;
  if (_4 != 0B)
    goto <bb 10>; [70.00%]
  else
    goto <bb 12>; [30.00%]

  <bb 10> [local count: 82518475]:
  _5 = ossl_ml_kem_encode_seed (&seed, 64, key_19(D));
  if (_5 == 0)
    goto <bb 3>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 11> [local count: 54462193]:
  MEM <vector(2) long unsigned int> [(uint8_t * *)key_19(D) + 88B] = { 0, 0 };
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 35365060]:
  _6 = key_19(D)->libctx;
  _8 = vinfo_21->secbits;
  _9 = (unsigned int) _8;
  _10 = RAND_priv_bytes_ex (_6, &seed, 64, _9);
  if (_10 <= 0)
    goto <bb 3>; [26.36%]
  else
    goto <bb 13>; [73.64%]

  <bb 13> [local count: 80505024]:
  mdctx_29 = EVP_MD_CTX_new ();
  if (mdctx_29 == 0B)
    goto <bb 3>; [30.95%]
  else
    goto <bb 14>; [69.05%]

  <bb 14> [local count: 55588719]:
  _11 = vinfo_21->prvalloc;
  _12 = CRYPTO_malloc (_11, "ml_kem.c", 1840);
  _13 = add_storage (_12, 1, key_19(D));
  if (_13 != 0)
    goto <bb 16>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 15> [local count: 37244442]:
  OPENSSL_cleanse (&seed, 64);
  EVP_MD_CTX_free (mdctx_29);
  goto <bb 51>; [100.00%]

  <bb 16> [local count: 18344277]:
  vinfo_38 = key_19(D)->vinfo;
  _39 = vinfo_38->evp_type;
  if (_39 == 1454)
    goto <bb 17>; [34.00%]
  else
    goto <bb 18>; [66.00%]

  <bb 17> [local count: 6237054]:

  <bb 18> [local count: 18344277]:
  # iftmp.20_47 = PHI <cbd_3(17), cbd_2(16)>
  rank_40 = vinfo_38->rank;
  __builtin_memcpy (&augmented_seed, &seed, 32);
  _41 = (unsigned char) rank_40;
  augmented_seed[32] = _41;
  _68 = MEM[(struct EVP_MD * *)key_19(D) + 40B];
  _71 = EVP_DigestInit_ex (mdctx_29, _68, 0B);
  if (_71 != 0)
    goto <bb 19>; [33.00%]
  else
    goto <bb 53>; [67.00%]

  <bb 19> [local count: 6053611]:
  _72 = single_keccak (&hashed, 64, &augmented_seed, 33, mdctx_29);
  if (_72 != 0)
    goto <bb 20>; [50.00%]
  else
    goto <bb 53>; [50.00%]

  <bb 20> [local count: 8966683]:
  _43 = key_19(D)->rho;
  __builtin_memcpy (_43, &hashed, 32);
  _45 = matrix_expand (mdctx_29, key_19(D));
  if (_45 == 0)
    goto <bb 53>; [51.12%]
  else
    goto <bb 21>; [48.88%]

  <bb 21> [local count: 4382914]:
  _46 = key_19(D)->s;
  __builtin_memcpy (&input, &MEM <uint8_t[64]> [(void *)&hashed + 32B], 32);

  <bb 22> [local count: 40971386]:
  # out_76 = PHI <_46(21), out_78(23)>
  # rank_79 = PHI <rank_40(21), rank_80(23)>
  # counter_357 = PHI <0(21), _75(23)>
  _75 = counter_357 + 1;
  input[32] = counter_357;
  _77 = iftmp.20_47 (out_76, &input, mdctx_29, key_19(D));
  if (_77 == 0)
    goto <bb 58>; [5.50%]
  else
    goto <bb 23>; [94.50%]

  <bb 23> [local count: 38717960]:
  out_78 = out_76 + 512;
  scalar_ntt (out_76);
  rank_80 = rank_79 + -1;
  if (rank_80 > 0)
    goto <bb 22>; [94.50%]
  else
    goto <bb 59>; [5.50%]

  <bb 24> [local count: 20026820]:
  # out_84 = PHI <_49(59), out_86(25)>
  # rank_87 = PHI <rank_40(59), rank_88(25)>
  _589 = _41 + _75;
  _588 = (unsigned char) rank_87;
  counter_358 = _589 - _588;
  input[32] = counter_358;
  _85 = iftmp.20_47 (out_84, &input, mdctx_29, key_19(D));
  if (_85 == 0)
    goto <bb 56>; [5.50%]
  else
    goto <bb 25>; [94.50%]

  <bb 25> [local count: 18925345]:
  out_86 = out_84 + 512;
  scalar_ntt (out_84);
  rank_88 = rank_87 + -1;
  if (rank_88 > 0)
    goto <bb 24>; [94.50%]
  else
    goto <bb 57>; [5.50%]

  <bb 26> [local count: 931999]:
  _93 = (long unsigned int) rank_40;
  _319 = (unsigned int) _93;
  _94 = _319 w* 512;
  ivtmp.1347_606 = (unsigned long) _52;
  _602 = _52 + 2;
  ivtmp.1350_603 = (unsigned long) _602;
  _597 = _51 + 2;
  ivtmp.1351_599 = (unsigned long) _597;
  _598 = (unsigned int) rank_40;
  _594 = (sizetype) _598;
  _294 = (unsigned int) _594;
  _593 = _294 w* 512;
  _592 = _51 + _593;
  _621 = _598 + 4294967294;
  _620 = (sizetype) _621;
  _619 = _620 + 1;
  _618 = _619 * 512;
  _617 = _53 + _618;

  <bb 27> [local count: 8472719]:
  # out_305 = PHI <end_105(33), _51(26)>
  # ivtmp.1347_608 = PHI <ivtmp.1347_607(33), ivtmp.1347_606(26)>
  # ivtmp.1350_605 = PHI <ivtmp.1350_604(33), ivtmp.1350_603(26)>
  # ivtmp.1351_601 = PHI <ivtmp.1351_600(33), ivtmp.1351_599(26)>
  mc_188 = (const struct scalar *) ivtmp.1347_608;
  end_105 = out_305 + 512;

  <bb 28> [local count: 847272077]:
  # roots_122 = PHI <&kModRoots(27), roots_123(28)>
  # ivtmp.1323_615 = PHI <0(27), ivtmp.1323_614(28)>
  _109 = MEM[(const uint16_t *)mc_188 + ivtmp.1323_615 * 1];
  l0_110 = (uint32_t) _109;
  _112 = MEM[(const uint16_t *)_53 + ivtmp.1323_615 * 1];
  r0_113 = (uint32_t) _112;
  _612 = (const struct scalar *) ivtmp.1350_605;
  _115 = MEM[(const uint16_t *)_612 + ivtmp.1323_615 * 1];
  l1_116 = (uint32_t) _115;
  _611 = _53 + 2;
  _118 = MEM[(const uint16_t *)_611 + ivtmp.1323_615 * 1];
  r1_119 = (uint32_t) _118;
  roots_123 = roots_122 + 2;
  _124 = MEM[(const uint16_t *)roots_123 + -2B];
  zetapow_125 = (uint32_t) _124;
  _126 = MEM[(uint16_t *)out_305 + ivtmp.1323_615 * 1];
  _127 = (unsigned int) _126;
  _128 = l1_116 * r1_119;
  _129 = (long unsigned int) _128;
  _784 = (unsigned int) _129;
  product_130 = _784 w* 5039;
  _131 = product_130 >> 24;
  quotient_132 = (uint32_t) _131;
  _133 = quotient_132 * 3329;
  remainder_134 = _128 - _133;
  _135 = (short unsigned int) remainder_134;
  subtracted_136 = _135 + 62207;
  subtracted.42_137 = (signed short) subtracted_136;
  _138 = subtracted.42_137 >> 15;
  _139 = _135 ^ subtracted_136;
  _140 = (signed short) _139;
  _141 = _138 & _140;
  _142 = subtracted.42_137 ^ _141;
  _143 = (short unsigned int) _142;
  _144 = (unsigned int) _143;
  _145 = zetapow_125 * _144;
  _146 = l0_110 * r0_113;
  _185 = _127 + _146;
  _148 = _145 + _185;
  _149 = (long unsigned int) _148;
  _590 = (unsigned int) _149;
  product_150 = _590 w* 5039;
  _151 = product_150 >> 24;
  quotient_152 = (uint32_t) _151;
  _153 = quotient_152 * 3329;
  remainder_154 = _148 - _153;
  _155 = (short unsigned int) remainder_154;
  subtracted_156 = _155 + 62207;
  subtracted.42_157 = (signed short) subtracted_156;
  _158 = subtracted.42_157 >> 15;
  _159 = _155 ^ subtracted_156;
  _160 = (signed short) _159;
  _161 = _158 & _160;
  _162 = subtracted.42_157 ^ _161;
  _163 = (short unsigned int) _162;
  MEM[(uint16_t *)out_305 + ivtmp.1323_615 * 1] = _163;
  _610 = (struct scalar *) ivtmp.1351_601;
  _164 = MEM[(uint16_t *)_610 + ivtmp.1323_615 * 1];
  _165 = (unsigned int) _164;
  _166 = r0_113 * l1_116;
  _167 = l0_110 * r1_119;
  _168 = _166 + _167;
  _169 = _165 + _168;
  _170 = (long unsigned int) _169;
  _106 = (unsigned int) _170;
  product_171 = _106 w* 5039;
  _172 = product_171 >> 24;
  quotient_173 = (uint32_t) _172;
  _174 = quotient_173 * 3329;
  remainder_175 = _169 - _174;
  _176 = (short unsigned int) remainder_175;
  subtracted_177 = _176 + 62207;
  subtracted.42_178 = (signed short) subtracted_177;
  _179 = subtracted.42_178 >> 15;
  _180 = _176 ^ subtracted_177;
  _181 = (signed short) _180;
  _182 = _179 & _181;
  _183 = subtracted.42_178 ^ _182;
  _184 = (short unsigned int) _183;
  MEM[(uint16_t *)_610 + ivtmp.1323_615 * 1] = _184;
  ivtmp.1323_614 = ivtmp.1323_615 + 4;
  if (roots_123 != &MEM <const uint16_t[128]> [(void *)&kModRoots + 256B])
    goto <bb 28>; [99.00%]
  else
    goto <bb 29>; [1.00%]

  <bb 29> [local count: 8472719]:
  if (rank_40 != 1)
    goto <bb 30>; [89.00%]
  else
    goto <bb 33>; [11.00%]

  <bb 30> [local count: 68552000]:
  # mr_303 = PHI <mr_96(32), mc_188(29)>
  # ar_55 = PHI <ar_98(32), _53(29)>
  mr_96 = mr_303 + _94;
  ar_98 = ar_55 + 512;

  <bb 31> [local count: 6855201430]:
  # curr_201 = PHI <out_305(30), curr_202(31)>
  # lc_189 = PHI <mr_96(30), lc_195(31)>
  # rc_192 = PHI <ar_98(30), rc_198(31)>
  # roots_203 = PHI <&kModRoots(30), roots_204(31)>
  _190 = MEM[(const uint16_t *)lc_189];
  l0_191 = (uint32_t) _190;
  _193 = MEM[(const uint16_t *)rc_192];
  r0_194 = (uint32_t) _193;
  lc_195 = lc_189 + 4;
  _196 = MEM[(const uint16_t *)lc_195 + -2B];
  l1_197 = (uint32_t) _196;
  rc_198 = rc_192 + 4;
  _199 = MEM[(const uint16_t *)rc_198 + -2B];
  r1_200 = (uint32_t) _199;
  curr_202 = curr_201 + 4;
  roots_204 = roots_203 + 2;
  _205 = MEM[(const uint16_t *)roots_204 + -2B];
  zetapow_206 = (uint32_t) _205;
  _207 = MEM[(uint16_t *)curr_202 + -4B];
  _208 = (unsigned int) _207;
  _209 = l1_197 * r1_200;
  _210 = (long unsigned int) _209;
  _291 = (unsigned int) _210;
  product_211 = _291 w* 5039;
  _212 = product_211 >> 24;
  quotient_213 = (uint32_t) _212;
  _214 = quotient_213 * 3329;
  remainder_215 = _209 - _214;
  _216 = (short unsigned int) remainder_215;
  subtracted_217 = _216 + 62207;
  subtracted.42_218 = (signed short) subtracted_217;
  _219 = subtracted.42_218 >> 15;
  _220 = _216 ^ subtracted_217;
  _221 = (signed short) _220;
  _222 = _219 & _221;
  _223 = subtracted.42_218 ^ _222;
  _224 = (short unsigned int) _223;
  _225 = (unsigned int) _224;
  _226 = zetapow_206 * _225;
  _227 = l0_191 * r0_194;
  _298 = _208 + _227;
  _229 = _226 + _298;
  _230 = (long unsigned int) _229;
  _624 = (unsigned int) _230;
  product_231 = _624 w* 5039;
  _232 = product_231 >> 24;
  quotient_233 = (uint32_t) _232;
  _234 = quotient_233 * 3329;
  remainder_235 = _229 - _234;
  _236 = (short unsigned int) remainder_235;
  subtracted_237 = _236 + 62207;
  subtracted.42_238 = (signed short) subtracted_237;
  _239 = subtracted.42_238 >> 15;
  _240 = _236 ^ subtracted_237;
  _241 = (signed short) _240;
  _242 = _239 & _241;
  _243 = subtracted.42_238 ^ _242;
  _244 = (short unsigned int) _243;
  MEM[(uint16_t *)curr_202 + -4B] = _244;
  _245 = MEM[(uint16_t *)curr_202 + -2B];
  _246 = (unsigned int) _245;
  _247 = r0_194 * l1_197;
  _248 = l0_191 * r1_200;
  _249 = _247 + _248;
  _250 = _246 + _249;
  _251 = (long unsigned int) _250;
  _187 = (unsigned int) _251;
  product_252 = _187 w* 5039;
  _253 = product_252 >> 24;
  quotient_254 = (uint32_t) _253;
  _255 = quotient_254 * 3329;
  remainder_256 = _250 - _255;
  _257 = (short unsigned int) remainder_256;
  subtracted_258 = _257 + 62207;
  subtracted.42_259 = (signed short) subtracted_258;
  _260 = subtracted.42_259 >> 15;
  _261 = _257 ^ subtracted_258;
  _262 = (signed short) _261;
  _263 = _260 & _262;
  _264 = subtracted.42_259 ^ _263;
  _265 = (short unsigned int) _264;
  MEM[(uint16_t *)curr_202 + -2B] = _265;
  if (roots_204 != &MEM <const uint16_t[128]> [(void *)&kModRoots + 256B])
    goto <bb 31>; [99.00%]
  else
    goto <bb 32>; [1.00%]

  <bb 32> [local count: 68552000]:
  if (ar_98 != _617)
    goto <bb 30>; [89.00%]
  else
    goto <bb 33>; [11.00%]

  <bb 33> [local count: 8472719]:
  ivtmp.1347_607 = ivtmp.1347_608 + 512;
  ivtmp.1350_604 = ivtmp.1350_605 + 512;
  ivtmp.1351_600 = ivtmp.1351_601 + 512;
  if (end_105 != _592)
    goto <bb 27>; [89.00%]
  else
    goto <bb 34>; [11.00%]

  <bb 34> [local count: 1047190]:
  if (pubenc_22(D) == 0B)
    goto <bb 35>; [30.00%]
  else
    goto <bb 46>; [70.00%]

  <bb 35> [local count: 314157]:
  _54 = key_19(D)->pkhash;
  vinfo_266 = key_19(D)->vinfo;
  _268 = vinfo_266->rank;
  _272 = key_19(D)->sha3_256_md;
  _273 = EVP_DigestInit_ex (mdctx_29, _272, 0B);
  if (_273 == 0)
    goto <bb 44>; [34.00%]
  else
    goto <bb 36>; [66.00%]

  <bb 36> [local count: 207344]:
  _270 = _268 w* 512;
  end_271 = _51 + _270;

  <bb 37> [local count: 1938244]:
  # t_274 = PHI <_51(36), t_275(39)>
  t_275 = t_274 + 512;
  scalar_encode (&buf, t_274, 12);
  _276 = EVP_DigestUpdate (mdctx_29, &buf, 384);
  if (_276 == 0)
    goto <bb 38>; [5.50%]
  else
    goto <bb 39>; [94.50%]

  <bb 38> [local count: 106603]:
  buf ={v} {CLOBBER(eos)};
  sz ={v} {CLOBBER(eos)};
  goto <bb 54>; [100.00%]

  <bb 39> [local count: 1831640]:
  buf ={v} {CLOBBER(eos)};
  if (end_271 > t_275)
    goto <bb 37>; [94.50%]
  else
    goto <bb 40>; [5.50%]

  <bb 40> [local count: 100740]:
  _277 = key_19(D)->rho;
  _278 = EVP_DigestUpdate (mdctx_29, _277, 32);
  if (_278 == 0)
    goto <bb 44>; [51.12%]
  else
    goto <bb 41>; [48.88%]

  <bb 41> [local count: 49242]:
  _279 = EVP_DigestFinal_ex (mdctx_29, _54, &sz);
  if (_279 != 0)
    goto <bb 42>; [50.00%]
  else
    goto <bb 44>; [50.00%]

  <bb 42> [local count: 24621]:
  sz.56_280 = sz;
  if (sz.56_280 != 32)
    goto <bb 43>; [0.04%]
  else
    goto <bb 45>; [99.96%]

  <bb 43> [local count: 10]:
  OPENSSL_die ("Assertion failed: sz == ML_KEM_PKHASH_BYTES", "ml_kem.c", 389);

  <bb 44> [local count: 182932]:
  sz ={v} {CLOBBER(eos)};
  goto <bb 54>; [100.00%]

  <bb 45> [local count: 24611]:
  sz ={v} {CLOBBER(eos)};
  goto <bb 48>; [100.00%]

  <bb 46> [local count: 733033]:
  encode_pubkey (pubenc_22(D), key_19(D));
  _56 = key_19(D)->pkhash;
  _57 = vinfo_38->pubkey_bytes;
  _69 = MEM[(struct EVP_MD * *)key_19(D) + 32B];
  _283 = EVP_DigestInit_ex (mdctx_29, _69, 0B);
  if (_283 != 0)
    goto <bb 47>; [33.00%]
  else
    goto <bb 53>; [67.00%]

  <bb 47> [local count: 241901]:
  _284 = single_keccak (_56, 32, pubenc_22(D), _57, mdctx_29);
  if (_284 != 0)
    goto <bb 48>; [50.00%]
  else
    goto <bb 53>; [50.00%]

  <bb 48> [local count: 691145]:
  _59 = key_19(D)->z;
  __builtin_memcpy (_59, &MEM <uint8_t[64]> [(void *)&seed + 32B], 32);
  _62 = key_19(D)->z;
  _63 = _62 + 32;
  key_19(D)->d = _63;
  _64 = key_19(D)->prov_flags;
  _65 = _64 & 8;
  if (_65 != 0)
    goto <bb 49>; [50.00%]
  else
    goto <bb 50>; [50.00%]

  <bb 49> [local count: 345573]:
  __builtin_memcpy (_63, &seed, 32);
  goto <bb 55>; [100.00%]

  <bb 50> [local count: 345573]:
  OPENSSL_cleanse (_63, 32);
  key_19(D)->d = 0B;
  goto <bb 55>; [100.00%]

  <bb 51> [local count: 11251157]:
  ossl_ml_kem_key_reset (key_19(D));
  goto <bb 4>; [100.00%]

  <bb 52> [local count: 1073741824]:
  # _15 = PHI <0(4), _45(55)>
  seed ={v} {CLOBBER(eos)};
  return _15;

  <bb 53> [local count: 23849048]:

  <bb 54> [local count: 1094341]:
  OPENSSL_cleanse (&augmented_seed, 32);
  OPENSSL_cleanse (&MEM <uint8_t[64]> [(void *)&hashed + 32B], 32);
  hashed ={v} {CLOBBER(eos)};
  augmented_seed ={v} {CLOBBER(eos)};
  OPENSSL_cleanse (&seed, 64);
  EVP_MD_CTX_free (mdctx_29);
  goto <bb 51>; [100.00%]

  <bb 55> [local count: 691146]:
  OPENSSL_cleanse (&augmented_seed, 32);
  OPENSSL_cleanse (&MEM <uint8_t[64]> [(void *)&hashed + 32B], 32);
  hashed ={v} {CLOBBER(eos)};
  augmented_seed ={v} {CLOBBER(eos)};
  OPENSSL_cleanse (&seed, 64);
  EVP_MD_CTX_free (mdctx_29);
  goto <bb 52>; [100.00%]

  <bb 56> [local count: 1095179]:
  input ={v} {CLOBBER(eos)};
  goto <bb 53>; [100.00%]

  <bb 57> [local count: 1047190]:
  input ={v} {CLOBBER(eos)};
  _51 = key_19(D)->t;
  _52 = key_19(D)->m;
  _53 = key_19(D)->s;
  if (rank_40 > 0)
    goto <bb 26>; [89.00%]
  else
    goto <bb 34>; [11.00%]

  <bb 58> [local count: 2240546]:
  input ={v} {CLOBBER(eos)};
  goto <bb 53>; [100.00%]

  <bb 59> [local count: 2142369]:
  input ={v} {CLOBBER(eos)};
  _49 = key_19(D)->t;
  __builtin_memcpy (&input, &MEM <uint8_t[64]> [(void *)&hashed + 32B], 32);
  goto <bb 24>; [100.00%]

}



;; Function ossl_ml_kem_encap_seed (ossl_ml_kem_encap_seed, funcdef_no=614, decl_uid=16890, cgraph_uid=615, symbol_order=623)

Removing basic block 18
Removing basic block 19
Removing basic block 20
Removing basic block 21
Removing basic block 22
Removing basic block 23
Removing basic block 24
Removing basic block 25
int ossl_ml_kem_encap_seed (uint8_t * ctext, size_t clen, uint8_t * shared_secret, size_t slen, const uint8_t * entropy, size_t elen, const struct ML_KEM_KEY * key)
{
  struct scalar tmp[8];
  struct scalar tmp[6];
  struct scalar tmp[4];
  int ret;
  struct EVP_MD_CTX * mdctx;
  const struct ML_KEM_VINFO * vinfo;
  struct ossl_ml_kem_scalar_st * _1;
  long unsigned int _2;
  _Bool _3;
  _Bool _4;
  _Bool _5;
  _Bool _6;
  _Bool _7;
  _Bool _8;
  int _9;
  int _11;

  <bb 2> [local count: 1073741822]:
  if (key_15(D) == 0B)
    goto <bb 3>; [18.09%]
  else
    goto <bb 4>; [81.91%]

  <bb 3> [local count: 995778076]:
  goto <bb 17>; [100.00%]

  <bb 4> [local count: 879501926]:
  _1 = key_15(D)->t;
  if (_1 == 0B)
    goto <bb 3>; [18.09%]
  else
    goto <bb 5>; [81.91%]

  <bb 5> [local count: 720400028]:
  if (ctext_18(D) == 0B)
    goto <bb 3>; [18.09%]
  else
    goto <bb 6>; [81.91%]

  <bb 6> [local count: 590079663]:
  vinfo_17 = key_15(D)->vinfo;
  _2 = vinfo_17->ctext_bytes;
  if (_2 != clen_19(D))
    goto <bb 3>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [local count: 295039832]:
  _3 = shared_secret_20(D) == 0B;
  _4 = slen_21(D) != 32;
  _5 = _3 | _4;
  if (_5 != 0)
    goto <bb 3>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 8> [local count: 194726288]:
  _6 = entropy_22(D) == 0B;
  _7 = elen_23(D) != 32;
  _8 = _6 | _7;
  if (_8 != 0)
    goto <bb 3>; [51.12%]
  else
    goto <bb 9>; [48.88%]

  <bb 9> [local count: 95182209]:
  mdctx_25 = EVP_MD_CTX_new ();
  if (mdctx_25 == 0B)
    goto <bb 3>; [18.09%]
  else
    goto <bb 10>; [81.91%]

  <bb 10> [local count: 77963747]:
  _9 = vinfo_17->evp_type;
  if (_9 == 1455)
    goto <bb 14>; [25.00%]
  else
    goto <bb 11>; [75.00%]

  <bb 11> [local count: 58472810]:
  if (_9 == 1456)
    goto <bb 15>; [33.33%]
  else
    goto <bb 12>; [66.67%]

  <bb 12> [local count: 38981873]:
  if (_9 == 1454)
    goto <bb 13>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 13> [local count: 19490937]:
  ret_35 = encap (ctext_18(D), shared_secret_20(D), entropy_22(D), &tmp, mdctx_25, key_15(D));
  OPENSSL_cleanse (&tmp, 2048);
  tmp ={v} {CLOBBER(eos)};
  goto <bb 16>; [100.00%]

  <bb 14> [local count: 19490937]:
  ret_31 = encap (ctext_18(D), shared_secret_20(D), entropy_22(D), &tmp, mdctx_25, key_15(D));
  OPENSSL_cleanse (&tmp, 3072);
  tmp ={v} {CLOBBER(eos)};
  goto <bb 16>; [100.00%]

  <bb 15> [local count: 19490937]:
  ret_27 = encap (ctext_18(D), shared_secret_20(D), entropy_22(D), &tmp, mdctx_25, key_15(D));
  OPENSSL_cleanse (&tmp, 4096);
  tmp ={v} {CLOBBER(eos)};

  <bb 16> [local count: 77963747]:
  # ret_10 = PHI <0(12), ret_35(13), ret_31(14), ret_27(15)>
  EVP_MD_CTX_free (mdctx_25);

  <bb 17> [local count: 1073741824]:
  # _11 = PHI <0(3), ret_10(16)>
  return _11;

}



;; Function ossl_ml_kem_encap_rand (ossl_ml_kem_encap_rand, funcdef_no=615, decl_uid=16896, cgraph_uid=616, symbol_order=624)

Removing basic block 7
Removing basic block 8
int ossl_ml_kem_encap_rand (uint8_t * ctext, size_t clen, uint8_t * shared_secret, size_t slen, const struct ML_KEM_KEY * key)
{
  uint8_t r[32];
  struct OSSL_LIB_CTX * _1;
  const struct ML_KEM_VINFO * _2;
  int _3;
  unsigned int _4;
  int _5;
  int _6;
  int _16;

  <bb 2> [local count: 1073741824]:
  if (key_8(D) == 0B)
    goto <bb 3>; [30.95%]
  else
    goto <bb 4>; [69.05%]

  <bb 3> [local count: 644386240]:
  goto <bb 6>; [100.00%]

  <bb 4> [local count: 741418728]:
  _1 = key_8(D)->libctx;
  _2 = key_8(D)->vinfo;
  _3 = _2->secbits;
  _4 = (unsigned int) _3;
  _5 = RAND_bytes_ex (_1, &r, 32, _4);
  if (_5 <= 0)
    goto <bb 3>; [42.09%]
  else
    goto <bb 5>; [57.91%]

  <bb 5> [local count: 429355584]:
  _16 = ossl_ml_kem_encap_seed (ctext_11(D), clen_12(D), shared_secret_13(D), slen_14(D), &r, 32, key_8(D));

  <bb 6> [local count: 1073741824]:
  # _6 = PHI <0(3), _16(5)>
  r ={v} {CLOBBER(eos)};
  return _6;

}



;; Function ossl_ml_kem_decap (ossl_ml_kem_decap, funcdef_no=616, decl_uid=16902, cgraph_uid=617, symbol_order=625)

Removing basic block 16
Removing basic block 17
Removing basic block 18
Removing basic block 19
Removing basic block 20
int ossl_ml_kem_decap (uint8_t * shared_secret, size_t slen, const uint8_t * ctext, size_t clen, const struct ML_KEM_KEY * key)
{
  struct scalar tmp[8];
  uint8_t cbuf[1568];
  struct scalar tmp[6];
  uint8_t cbuf[1088];
  struct scalar tmp[4];
  uint8_t cbuf[768];
  int ret;
  struct EVP_MD_CTX * mdctx;
  const struct ML_KEM_VINFO * vinfo;
  struct ossl_ml_kem_scalar_st * _1;
  _Bool _2;
  _Bool _3;
  long unsigned int _5;
  struct OSSL_LIB_CTX * _6;
  int _7;
  unsigned int _8;
  int _9;
  int _11;
  _Bool _41;
  _Bool _42;
  _Bool _43;

  <bb 2> [local count: 1073741822]:
  _1 = key_16(D)->s;
  if (_1 == 0B)
    goto <bb 5>; [18.09%]
  else
    goto <bb 3>; [81.91%]

  <bb 3> [local count: 879501926]:
  vinfo_17 = key_16(D)->vinfo;
  _2 = shared_secret_18(D) == 0B;
  _3 = slen_19(D) != 32;
  _41 = ctext_20(D) == 0B;
  _43 = _3 | _41;
  _42 = _2 | _43;
  if (_42 != 0)
    goto <bb 4>; [34.67%]
  else
    goto <bb 6>; [65.33%]

  <bb 4> [local count: 724188241]:
  _6 = key_16(D)->libctx;
  _7 = vinfo_17->secbits;
  _8 = (unsigned int) _7;
  RAND_bytes_ex (_6, shared_secret_18(D), 32, _8);

  <bb 5> [local count: 194239896]:
  goto <bb 15>; [100.00%]

  <bb 6> [local count: 574591063]:
  _5 = vinfo_17->ctext_bytes;
  if (_5 != clen_21(D))
    goto <bb 4>; [67.00%]
  else
    goto <bb 7>; [33.00%]

  <bb 7> [local count: 189615050]:
  mdctx_23 = EVP_MD_CTX_new ();
  if (mdctx_23 == 0B)
    goto <bb 4>; [18.09%]
  else
    goto <bb 8>; [81.91%]

  <bb 8> [local count: 155313687]:
  _9 = vinfo_17->evp_type;
  if (_9 == 1455)
    goto <bb 12>; [25.00%]
  else
    goto <bb 9>; [75.00%]

  <bb 9> [local count: 116485265]:
  if (_9 == 1456)
    goto <bb 13>; [33.33%]
  else
    goto <bb 10>; [66.67%]

  <bb 10> [local count: 77656843]:
  if (_9 == 1454)
    goto <bb 11>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 11> [local count: 38828422]:
  ret_35 = decap (shared_secret_18(D), ctext_20(D), &cbuf, &tmp, mdctx_23, key_16(D));
  OPENSSL_cleanse (&tmp, 2048);
  cbuf ={v} {CLOBBER(eos)};
  tmp ={v} {CLOBBER(eos)};
  goto <bb 14>; [100.00%]

  <bb 12> [local count: 38828422]:
  ret_30 = decap (shared_secret_18(D), ctext_20(D), &cbuf, &tmp, mdctx_23, key_16(D));
  OPENSSL_cleanse (&tmp, 3072);
  cbuf ={v} {CLOBBER(eos)};
  tmp ={v} {CLOBBER(eos)};
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 38828422]:
  ret_25 = decap (shared_secret_18(D), ctext_20(D), &cbuf, &tmp, mdctx_23, key_16(D));
  OPENSSL_cleanse (&tmp, 4096);
  cbuf ={v} {CLOBBER(eos)};
  tmp ={v} {CLOBBER(eos)};

  <bb 14> [local count: 155313687]:
  # ret_10 = PHI <0(10), ret_35(11), ret_30(12), ret_25(13)>
  EVP_MD_CTX_free (mdctx_23);

  <bb 15> [local count: 1073741824]:
  # _11 = PHI <0(5), ret_10(14)>
  return _11;

}



;; Function ossl_ml_kem_pubkey_cmp (ossl_ml_kem_pubkey_cmp, funcdef_no=617, decl_uid=16905, cgraph_uid=618, symbol_order=626)

Removing basic block 7
Removing basic block 8
int ossl_ml_kem_pubkey_cmp (const struct ML_KEM_KEY * key1, const struct ML_KEM_KEY * key2)
{
  struct ossl_ml_kem_scalar_st * _1;
  uint8_t * _3;
  uint8_t * _4;
  int _5;
  _Bool _6;
  _Bool _7;
  _Bool _9;
  int _10;
  int _14;
  int _15;
  _Bool _16;
  struct ossl_ml_kem_scalar_st * pretmp_19;

  <bb 2> [local count: 1073741822]:
  _1 = key1_12(D)->t;
  pretmp_19 = key2_13(D)->t;
  if (_1 != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 5>; [30.00%]

  <bb 3> [local count: 751619279]:
  if (pretmp_19 != 0B)
    goto <bb 4>; [54.59%]
  else
    goto <bb 5>; [45.41%]

  <bb 4> [local count: 410308966]:
  _3 = key1_12(D)->pkhash;
  _4 = key2_13(D)->pkhash;
  _5 = __builtin_memcmp_eq (_3, _4, 32);
  _6 = _5 == 0;
  _14 = (int) _6;
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 663432857]:
  _7 = _1 != 0B;
  _9 = pretmp_19 != 0B;
  _16 = _7 ^ _9;
  _15 = (int) _16;

  <bb 6> [local count: 1073741824]:
  # _10 = PHI <_14(4), _15(5)>
  return _10;

}


