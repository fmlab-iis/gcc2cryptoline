
;; Function secp256k1_fe_mul_inner (secp256k1_fe_mul_inner, funcdef_no=81, decl_uid=4375, cgraph_uid=81, symbol_order=81)

secp256k1_fe_mul_inner (uint64_t * r, const uint64_t * a, const uint64_t * restrict b)
{
  uint64_t a4;
  uint64_t a3;
  uint64_t a2;
  uint64_t a1;
  uint64_t a0;
  uint64_t u0;
  uint64_t tx;
  uint64_t t4;
  uint64_t t3;
  uint128_t d;
  uint128_t c;
  long unsigned int _2;
  __int128 unsigned _4;
  long unsigned int _6;
  __int128 unsigned _8;
  long unsigned int _11;
  __int128 unsigned _13;
  long unsigned int _15;
  __int128 unsigned _17;
  long unsigned int _20;
  __int128 unsigned _22;
  __int128 unsigned _23;
  long unsigned int _24;
  long unsigned int _25;
  __int128 unsigned _26;
  __int128 unsigned _27;
  __int128 unsigned _29;
  __int128 unsigned _30;
  __int128 unsigned _33;
  __int128 unsigned _35;
  long unsigned int _36;
  __int128 unsigned _37;
  __int128 unsigned _38;
  __int128 unsigned _40;
  __int128 unsigned _41;
  __int128 unsigned _43;
  long unsigned int _44;
  long unsigned int _45;
  __int128 unsigned _47;
  long unsigned int _48;
  long unsigned int _49;
  __int128 unsigned _50;
  __int128 unsigned _51;
  __int128 unsigned _53;
  __int128 unsigned _54;
  __int128 unsigned _55;
  __int128 unsigned _56;
  __int128 unsigned _57;
  __int128 unsigned _58;
  __int128 unsigned _59;
  long unsigned int _60;
  long unsigned int _61;
  __int128 unsigned _62;
  __int128 unsigned _63;
  __int128 unsigned _65;
  __int128 unsigned _67;
  __int128 unsigned _68;
  __int128 unsigned _69;
  __int128 unsigned _70;
  __int128 unsigned _71;
  long unsigned int _72;
  long unsigned int _73;
  __int128 unsigned _74;
  __int128 unsigned _75;
  __int128 unsigned _76;
  long unsigned int _77;
  long unsigned int _78;
  __int128 unsigned _79;
  long unsigned int _80;
  long unsigned int _88;
  __int128 unsigned _126;
  __int128 unsigned _127;
  __int128 unsigned _128;
  __int128 unsigned _129;
  __int128 unsigned _130;
  __int128 unsigned _132;
  __int128 unsigned _133;
  __int128 unsigned _135;
  __int128 unsigned _136;
  __int128 unsigned _137;
  __int128 unsigned _138;
  __int128 unsigned _139;
  __int128 unsigned _141;
  __int128 unsigned _142;

  <bb 2> [local count: 1073741825]:
  a0_83 = *a_82(D);
  a1_84 = MEM[(const uint64_t *)a_82(D) + 8B];
  a2_85 = MEM[(const uint64_t *)a_82(D) + 16B];
  a3_86 = MEM[(const uint64_t *)a_82(D) + 24B];
  a4_87 = MEM[(const uint64_t *)a_82(D) + 32B];
  _2 = MEM[(const uint64_t *)b_89(D) + 24B];
  _4 = a0_83 w* _2;
  _6 = MEM[(const uint64_t *)b_89(D) + 16B];
  _8 = a1_84 w* _6;
  _141 = _4 + _8;
  _11 = *b_89(D);
  _13 = a3_86 w* _11;
  _15 = MEM[(const uint64_t *)b_89(D) + 8B];
  _17 = a2_85 w* _15;
  _142 = _13 + _141;
  d_90 = _17 + _142;
  _20 = MEM[(const uint64_t *)b_89(D) + 32B];
  c_91 = a4_87 w* _20;
  _22 = c_91 & 4503599627370495;
  _23 = _22 * 68719492368;
  d_92 = _23 + d_90;
  c_93 = c_91 >> 52;
  _24 = (long unsigned int) d_92;
  t3_94 = _24 & 4503599627370495;
  d_95 = d_92 >> 52;
  _26 = a0_83 w* _20;
  _27 = _2 w* a1_84;
  _135 = _26 + _27;
  _29 = a3_86 w* _15;
  _30 = _6 w* a2_85;
  _136 = _29 + _135;
  _137 = _30 + _136;
  _33 = _11 w* a4_87;
  _138 = _33 + _137;
  _35 = c_93 * 68719492368;
  _139 = _35 + _138;
  d_97 = d_95 + _139;
  _36 = (long unsigned int) d_97;
  d_98 = d_97 >> 52;
  _25 = _36 >> 48;
  tx_99 = _25 & 15;
  t4_100 = _36 & 281474976710655;
  c_101 = a0_83 w* _11;
  _37 = a1_84 w* _20;
  _38 = _2 w* a2_85;
  _132 = _37 + _38;
  _40 = _15 w* a4_87;
  _41 = _6 w* a3_86;
  _133 = _40 + _132;
  _43 = _41 + _133;
  d_102 = _43 + d_98;
  _44 = (long unsigned int) d_102;
  d_103 = d_102 >> 52;
  _88 = _44 << 4;
  _45 = _88 & 72057594037927920;
  u0_104 = _45 | tx_99;
  _47 = u0_104 w* 4294968273;
  c_105 = _47 + c_101;
  _48 = (long unsigned int) c_105;
  _49 = _48 & 4503599627370495;
  *r_106(D) = _49;
  c_108 = c_105 >> 52;
  _50 = a0_83 w* _15;
  _51 = a1_84 w* _11;
  _129 = _50 + _51;
  _53 = a2_85 w* _20;
  _54 = _2 w* a3_86;
  _55 = _53 + _54;
  _56 = _6 w* a4_87;
  _57 = _55 + _56;
  d_110 = _57 + d_103;
  _58 = d_110 & 4503599627370495;
  _59 = _58 * 68719492368;
  _130 = _59 + _129;
  c_111 = c_108 + _130;
  d_112 = d_110 >> 52;
  _60 = (long unsigned int) c_111;
  _61 = _60 & 4503599627370495;
  MEM[(uint64_t *)r_106(D) + 8B] = _61;
  c_114 = c_111 >> 52;
  _62 = a0_83 w* _6;
  _63 = a1_84 w* _15;
  _128 = _62 + _63;
  _65 = _11 w* a2_85;
  _127 = _65 + _128;
  _67 = a3_86 w* _20;
  _68 = _2 w* a4_87;
  _69 = _67 + _68;
  d_116 = _69 + d_112;
  _70 = d_116 & 4503599627370495;
  _71 = _70 * 68719492368;
  _126 = _71 + _127;
  c_117 = c_114 + _126;
  d_118 = d_116 >> 52;
  _72 = (long unsigned int) c_117;
  _73 = _72 & 4503599627370495;
  MEM[(uint64_t *)r_106(D) + 16B] = _73;
  c_120 = c_117 >> 52;
  _74 = d_118 * 68719492368;
  _75 = (__int128 unsigned) t3_94;
  _76 = _74 + _75;
  c_121 = _76 + c_120;
  _77 = (long unsigned int) c_121;
  _78 = _77 & 4503599627370495;
  MEM[(uint64_t *)r_106(D) + 24B] = _78;
  c_123 = c_121 >> 52;
  _79 = (__int128 unsigned) t4_100;
  c_124 = _79 + c_123;
  _80 = (long unsigned int) c_124;
  MEM[(uint64_t *)r_106(D) + 32B] = _80;
  return;

}



;; Function secp256k1_fe_sqr_inner (secp256k1_fe_sqr_inner, funcdef_no=82, decl_uid=4392, cgraph_uid=82, symbol_order=82)

secp256k1_fe_sqr_inner (uint64_t * r, const uint64_t * a)
{
  int64_t u0;
  int64_t tx;
  int64_t t4;
  int64_t t3;
  uint64_t a4;
  uint64_t a3;
  uint64_t a2;
  uint64_t a1;
  uint64_t a0;
  uint128_t d;
  uint128_t c;
  long unsigned int _1;
  __int128 unsigned _4;
  long unsigned int _5;
  __int128 unsigned _8;
  long int _10;
  __int128 unsigned _11;
  __int128 unsigned _12;
  long int _13;
  __int128 unsigned _16;
  __int128 unsigned _17;
  __int128 unsigned _18;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _21;
  long int _22;
  __int128 unsigned _24;
  long unsigned int _25;
  __int128 unsigned _27;
  __int128 unsigned _28;
  long int _29;
  long int _30;
  __int128 unsigned _32;
  long unsigned int _33;
  long unsigned int _34;
  __int128 unsigned _35;
  __int128 unsigned _36;
  __int128 unsigned _37;
  __int128 unsigned _38;
  __int128 unsigned _39;
  __int128 unsigned _40;
  long unsigned int _41;
  long unsigned int _42;
  __int128 unsigned _43;
  __int128 unsigned _44;
  __int128 unsigned _45;
  __int128 unsigned _46;
  __int128 unsigned _47;
  __int128 unsigned _48;
  long unsigned int _49;
  long unsigned int _50;
  __int128 unsigned _51;
  __int128 unsigned _52;
  __int128 unsigned _53;
  long unsigned int _54;
  long unsigned int _55;
  __int128 unsigned _56;
  long unsigned int _57;
  long int _65;
  __int128 unsigned _103;
  __int128 unsigned _104;
  __int128 unsigned _105;

  <bb 2> [local count: 1073741825]:
  a0_60 = *a_59(D);
  a1_61 = MEM[(const uint64_t *)a_59(D) + 8B];
  a2_62 = MEM[(const uint64_t *)a_59(D) + 16B];
  a3_63 = MEM[(const uint64_t *)a_59(D) + 24B];
  a4_64 = MEM[(const uint64_t *)a_59(D) + 32B];
  _1 = a0_60 * 2;
  _4 = _1 w* a3_63;
  _5 = a1_61 * 2;
  _8 = _5 w* a2_62;
  d_66 = _4 + _8;
  c_67 = a4_64 w* a4_64;
  _11 = c_67 & 4503599627370495;
  _12 = _11 * 68719492368;
  d_68 = _12 + d_66;
  c_69 = c_67 >> 52;
  _13 = (long int) d_68;
  t3_70 = _13 & 4503599627370495;
  d_71 = d_68 >> 52;
  a4_72 = a4_64 * 2;
  _16 = a0_60 w* a4_72;
  _17 = a3_63 w* _5;
  _18 = _16 + _17;
  _19 = a2_62 w* a2_62;
  _20 = _18 + _19;
  _21 = c_69 * 68719492368;
  _105 = _20 + _21;
  d_74 = d_71 + _105;
  _22 = (long int) d_74;
  d_75 = d_74 >> 52;
  _10 = _22 >> 48;
  tx_76 = _10 & 15;
  t4_77 = _22 & 281474976710655;
  c_78 = a0_60 w* a0_60;
  _24 = a4_72 w* a1_61;
  _25 = a2_62 * 2;
  _27 = a3_63 w* _25;
  _28 = _24 + _27;
  d_79 = _28 + d_75;
  _29 = (long int) d_79;
  d_80 = d_79 >> 52;
  _65 = _29 << 4;
  _30 = _65 & 72057594037927920;
  u0_81 = _30 | tx_76;
  _32 = u0_81 w* 4294968273;
  c_82 = _32 + c_78;
  _33 = (long unsigned int) c_82;
  _34 = _33 & 4503599627370495;
  *r_83(D) = _34;
  c_85 = c_82 >> 52;
  _35 = _1 w* a1_61;
  _36 = a2_62 w* a4_72;
  _37 = a3_63 w* a3_63;
  _38 = _36 + _37;
  d_87 = _38 + d_80;
  _39 = d_87 & 4503599627370495;
  _40 = _39 * 68719492368;
  _103 = _35 + _40;
  c_88 = c_85 + _103;
  d_89 = d_87 >> 52;
  _41 = (long unsigned int) c_88;
  _42 = _41 & 4503599627370495;
  MEM[(uint64_t *)r_83(D) + 8B] = _42;
  c_91 = c_88 >> 52;
  _43 = _1 w* a2_62;
  _44 = a1_61 w* a1_61;
  _45 = _43 + _44;
  _46 = a3_63 w* a4_72;
  d_93 = _46 + d_89;
  _47 = d_93 & 4503599627370495;
  _48 = _47 * 68719492368;
  _104 = _45 + _48;
  c_94 = c_91 + _104;
  d_95 = d_93 >> 52;
  _49 = (long unsigned int) c_94;
  _50 = _49 & 4503599627370495;
  MEM[(uint64_t *)r_83(D) + 16B] = _50;
  c_97 = c_94 >> 52;
  _51 = d_95 * 68719492368;
  _52 = (__int128 unsigned) t3_70;
  _53 = _51 + _52;
  c_98 = _53 + c_97;
  _54 = (long unsigned int) c_98;
  _55 = _54 & 4503599627370495;
  MEM[(uint64_t *)r_83(D) + 24B] = _55;
  c_100 = c_98 >> 52;
  _56 = (__int128 unsigned) t4_77;
  c_101 = _56 + c_100;
  _57 = (long unsigned int) c_101;
  MEM[(uint64_t *)r_83(D) + 32B] = _57;
  return;

}



;; Function secp256k1_fe_normalize_var (secp256k1_fe_normalize_var, funcdef_no=85, decl_uid=4297, cgraph_uid=85, symbol_order=85)

secp256k1_fe_normalize_var (struct secp256k1_fe * r)
{
  uint64_t x;
  uint64_t m;
  uint64_t t4;
  uint64_t t3;
  uint64_t t2;
  uint64_t t1;
  uint64_t t0;
  long long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  _Bool _6;
  long unsigned int _7;
  _Bool _8;
  _Bool _9;
  _Bool _10;
  _Bool _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  vector(2) long unsigned int _58;
  vector(2) long unsigned int _60;

  <bb 2> [local count: 1073741825]:
  t0_24 = r_23(D)->n[0];
  t1_25 = r_23(D)->n[1];
  t2_26 = r_23(D)->n[2];
  t3_27 = r_23(D)->n[3];
  t4_28 = r_23(D)->n[4];
  x_29 = t4_28 >> 48;
  t4_30 = t4_28 & 281474976710655;
  _1 = x_29 * 4294968273;
  t0_31 = _1 + t0_24;
  _2 = t0_31 >> 52;
  t1_32 = _2 + t1_25;
  t0_33 = t0_31 & 4503599627370495;
  _3 = t1_32 >> 52;
  t2_34 = _3 + t2_26;
  t1_35 = t1_32 & 4503599627370495;
  _4 = t2_34 >> 52;
  t3_36 = _4 + t3_27;
  t2_37 = t2_34 & 4503599627370495;
  m_38 = t1_35 & t2_37;
  _5 = t3_36 >> 52;
  t4_39 = _5 + t4_30;
  t3_40 = t3_36 & 4503599627370495;
  m_41 = m_38 & t3_40;
  _7 = t4_39 >> 48;
  _8 = t4_39 == 281474976710655;
  _9 = m_41 == 4503599627370495;
  _10 = _8 & _9;
  _11 = t0_33 > 4503595332402222;
  _6 = _10 & _11;
  _12 = (long unsigned int) _6;
  x_42 = _7 | _12;
  if (x_42 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870912]:
  t0_43 = t0_33 + 4294968273;
  _13 = t0_43 >> 52;
  t1_44 = _13 + t1_35;
  t0_45 = t0_43 & 4503599627370495;
  _14 = t1_44 >> 52;
  t2_46 = _14 + t2_37;
  t1_47 = t1_44 & 4503599627370495;
  _15 = t2_46 >> 52;
  t3_48 = _15 + t3_40;
  t2_49 = t2_46 & 4503599627370495;
  _16 = t3_48 >> 52;
  t4_50 = _16 + t4_39;
  t3_51 = t3_48 & 4503599627370495;
  t4_52 = t4_50 & 281474976710655;

  <bb 4> [local count: 1073741825]:
  # t0_17 = PHI <t0_45(3), t0_33(2)>
  # t1_18 = PHI <t1_47(3), t1_35(2)>
  # t2_19 = PHI <t2_49(3), t2_37(2)>
  # t3_20 = PHI <t3_51(3), t3_40(2)>
  # t4_21 = PHI <t4_52(3), t4_39(2)>
  _58 = {t2_19, t3_20};
  _60 = {t0_17, t1_18};
  MEM[(long unsigned int *)r_23(D)] = _60;
  MEM[(long unsigned int *)r_23(D) + 16B] = _58;
  r_23(D)->n[4] = t4_21;
  return;

}



;; Function secp256k1_fe_set_b32 (secp256k1_fe_set_b32, funcdef_no=93, decl_uid=4322, cgraph_uid=93, symbol_order=93)

secp256k1_fe_set_b32 (struct secp256k1_fe * r, const unsigned char * a)
{
  unsigned int _1;
  unsigned int _2;
  unsigned short _3;
  unsigned short patt_4;
  unsigned int _5;
  unsigned int load_dst_6;
  unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  unsigned short _10;
  unsigned short patt_11;
  unsigned int _12;
  unsigned int _13;
  long unsigned int _14;
  unsigned char _15;
  long unsigned int _16;
  long unsigned int _17;
  unsigned char _19;
  long unsigned int _20;
  long unsigned int _21;
  unsigned char _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  unsigned char _28;
  unsigned char _29;
  long unsigned int _30;
  unsigned char _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  unsigned char _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  unsigned char _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  unsigned char _43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  unsigned char _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  unsigned char _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  unsigned int _55;
  unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  unsigned int bswapdst_60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _68;
  unsigned char _69;
  long unsigned int _70;
  long unsigned int _71;
  unsigned char _73;
  long unsigned int _74;
  long unsigned int _75;
  unsigned char _77;
  long unsigned int _78;
  long unsigned int _79;
  long unsigned int _80;
  long unsigned int _81;
  unsigned char _82;
  unsigned char _83;
  long unsigned int _84;
  unsigned char _85;
  long unsigned int _86;
  long unsigned int _87;
  long unsigned int _88;
  unsigned char _89;
  long unsigned int _90;
  long unsigned int _91;
  long unsigned int _92;
  unsigned char _93;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int _96;
  unsigned char _97;
  long unsigned int _98;
  long unsigned int _99;
  long unsigned int _100;
  unsigned char _101;
  long unsigned int _102;
  long unsigned int _103;
  long unsigned int _104;
  unsigned char _105;
  long unsigned int _106;
  long unsigned int _107;
  long unsigned int _108;
  unsigned int load_dst_114;
  long unsigned int _122;
  unsigned char _123;
  long unsigned int _124;
  long unsigned int _125;
  unsigned char _127;
  long unsigned int _128;
  long unsigned int _129;
  long unsigned int _130;
  unsigned int bswapdst_131;
  long unsigned int _132;
  int _133;
  _Bool _142;
  _Bool _143;
  _Bool _144;
  _Bool _145;
  int _146;
  unsigned int _150;
  unsigned int load_dst_151;
  unsigned int bswapdst_152;

  <bb 2> [local count: 1073741825]:
  load_dst_151 = MEM[(const unsigned char *)a_134(D) + 28B];
  bswapdst_152 = __builtin_bswap32 (load_dst_151);
  _14 = (long unsigned int) bswapdst_152;
  _15 = MEM[(const unsigned char *)a_134(D) + 27B];
  _16 = (long unsigned int) _15;
  _17 = _16 << 32;
  _19 = MEM[(const unsigned char *)a_134(D) + 26B];
  _20 = (long unsigned int) _19;
  _21 = _20 << 40;
  _62 = _17 | _21;
  _23 = MEM[(const unsigned char *)a_134(D) + 25B];
  _24 = (long unsigned int) _23;
  _25 = _24 << 48;
  _26 = _25 & 4222124650659840;
  _63 = _26 | _62;
  _27 = _14 | _63;
  r_136(D)->n[0] = _27;
  _28 = MEM[(const unsigned char *)a_134(D) + 25B];
  _29 = _28 >> 4;
  _30 = (long unsigned int) _29;
  _31 = MEM[(const unsigned char *)a_134(D) + 24B];
  _32 = (long unsigned int) _31;
  _33 = _32 << 4;
  _34 = _30 | _33;
  _35 = MEM[(const unsigned char *)a_134(D) + 23B];
  _36 = (long unsigned int) _35;
  _37 = _36 << 12;
  _38 = _34 | _37;
  _39 = MEM[(const unsigned char *)a_134(D) + 22B];
  _40 = (long unsigned int) _39;
  _41 = _40 << 20;
  _42 = _38 | _41;
  _43 = MEM[(const unsigned char *)a_134(D) + 21B];
  _44 = (long unsigned int) _43;
  _45 = _44 << 28;
  _46 = _42 | _45;
  _47 = MEM[(const unsigned char *)a_134(D) + 20B];
  _48 = (long unsigned int) _47;
  _49 = _48 << 36;
  _50 = _46 | _49;
  _51 = MEM[(const unsigned char *)a_134(D) + 19B];
  _52 = (long unsigned int) _51;
  _53 = _52 << 44;
  _54 = _50 | _53;
  r_136(D)->n[1] = _54;
  load_dst_114 = MEM[(const unsigned char *)a_134(D) + 15B];
  bswapdst_131 = __builtin_bswap32 (load_dst_114);
  _68 = (long unsigned int) bswapdst_131;
  _69 = MEM[(const unsigned char *)a_134(D) + 14B];
  _70 = (long unsigned int) _69;
  _71 = _70 << 32;
  _73 = MEM[(const unsigned char *)a_134(D) + 13B];
  _74 = (long unsigned int) _73;
  _75 = _74 << 40;
  _59 = _71 | _75;
  _77 = MEM[(const unsigned char *)a_134(D) + 12B];
  _78 = (long unsigned int) _77;
  _79 = _78 << 48;
  _80 = _79 & 4222124650659840;
  _61 = _59 | _80;
  _81 = _61 | _68;
  r_136(D)->n[2] = _81;
  _82 = MEM[(const unsigned char *)a_134(D) + 12B];
  _83 = _82 >> 4;
  _84 = (long unsigned int) _83;
  _85 = MEM[(const unsigned char *)a_134(D) + 11B];
  _86 = (long unsigned int) _85;
  _87 = _86 << 4;
  _88 = _84 | _87;
  _89 = MEM[(const unsigned char *)a_134(D) + 10B];
  _90 = (long unsigned int) _89;
  _91 = _90 << 12;
  _92 = _88 | _91;
  _93 = MEM[(const unsigned char *)a_134(D) + 9B];
  _94 = (long unsigned int) _93;
  _95 = _94 << 20;
  _96 = _92 | _95;
  _97 = MEM[(const unsigned char *)a_134(D) + 8B];
  _98 = (long unsigned int) _97;
  _99 = _98 << 28;
  _100 = _96 | _99;
  _101 = MEM[(const unsigned char *)a_134(D) + 7B];
  _102 = (long unsigned int) _101;
  _103 = _102 << 36;
  _104 = _100 | _103;
  _105 = MEM[(const unsigned char *)a_134(D) + 6B];
  _106 = (long unsigned int) _105;
  _107 = _106 << 44;
  _108 = _104 | _107;
  r_136(D)->n[3] = _108;
  load_dst_6 = MEM[(const unsigned char *)a_134(D) + 2B];
  bswapdst_60 = __builtin_bswap32 (load_dst_6);
  _122 = (long unsigned int) bswapdst_60;
  _123 = MEM[(const unsigned char *)a_134(D) + 1B];
  _124 = (long unsigned int) _123;
  _125 = _124 << 32;
  _127 = *a_134(D);
  _128 = (long unsigned int) _127;
  _129 = _128 << 40;
  _58 = _125 | _129;
  _130 = _58 | _122;
  r_136(D)->n[4] = _130;
  if (_130 == 281474976710655)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  _57 = _54 & _108;
  _132 = _57 & _81;
  _143 = _27 > 4503595332402222;
  _142 = _132 == 4503599627370495;
  _144 = _142 & _143;
  _145 = ~_144;
  _146 = (int) _145;

  <bb 4> [local count: 1073741825]:
  # _133 = PHI <_146(3), 1(2)>
  return _133;

}



;; Function secp256k1_fe_get_b32 (secp256k1_fe_get_b32, funcdef_no=94, decl_uid=4325, cgraph_uid=94, symbol_order=94)

secp256k1_fe_get_b32 (unsigned char * r, const struct secp256k1_fe * a)
{
  long unsigned int _1;
  long unsigned int _2;
  unsigned char _3;
  long unsigned int _4;
  long unsigned int _5;
  unsigned char _6;
  long unsigned int _7;
  long unsigned int _8;
  unsigned char _9;
  long unsigned int _10;
  long unsigned int _11;
  unsigned char _12;
  long unsigned int _13;
  long unsigned int _14;
  unsigned char _15;
  long unsigned int _16;
  unsigned char _17;
  long unsigned int _18;
  long unsigned int _19;
  unsigned char _20;
  long unsigned int _21;
  long unsigned int _22;
  unsigned char _23;
  long unsigned int _24;
  long unsigned int _25;
  unsigned char _26;
  long unsigned int _27;
  long unsigned int _28;
  unsigned char _29;
  long unsigned int _30;
  long unsigned int _31;
  unsigned char _32;
  long unsigned int _33;
  long unsigned int _34;
  unsigned char _35;
  long unsigned int _36;
  long unsigned int _37;
  unsigned char _38;
  unsigned char _39;
  long unsigned int _40;
  unsigned char _41;
  unsigned char _42;
  unsigned char _43;
  long unsigned int _44;
  long unsigned int _45;
  unsigned char _46;
  long unsigned int _47;
  long unsigned int _48;
  unsigned char _49;
  long unsigned int _50;
  long unsigned int _51;
  unsigned char _52;
  long unsigned int _53;
  long unsigned int _54;
  unsigned char _55;
  long unsigned int _56;
  long unsigned int _57;
  unsigned char _58;
  long unsigned int _59;
  unsigned char _60;
  long unsigned int _61;
  long unsigned int _62;
  unsigned char _63;
  long unsigned int _64;
  long unsigned int _65;
  unsigned char _66;
  long unsigned int _67;
  long unsigned int _68;
  unsigned char _69;
  long unsigned int _70;
  long unsigned int _71;
  unsigned char _72;
  long unsigned int _73;
  long unsigned int _74;
  unsigned char _75;
  long unsigned int _76;
  long unsigned int _77;
  unsigned char _78;
  long unsigned int _79;
  long unsigned int _80;
  unsigned char _81;
  unsigned char _82;
  long unsigned int _83;
  unsigned char _84;
  unsigned char _85;
  unsigned char _86;
  long unsigned int _87;
  long unsigned int _88;
  unsigned char _89;
  long unsigned int _90;
  long unsigned int _91;
  unsigned char _92;
  long unsigned int _93;
  long unsigned int _94;
  unsigned char _95;
  long unsigned int _96;
  long unsigned int _97;
  unsigned char _98;
  long unsigned int _99;
  long unsigned int _100;
  unsigned char _101;
  long unsigned int _102;
  unsigned char _103;

  <bb 2> [local count: 1073741825]:
  _1 = a_105(D)->n[4];
  _2 = _1 >> 40;
  _3 = (unsigned char) _2;
  *r_106(D) = _3;
  _4 = a_105(D)->n[4];
  _5 = _4 >> 32;
  _6 = (unsigned char) _5;
  MEM[(unsigned char *)r_106(D) + 1B] = _6;
  _7 = a_105(D)->n[4];
  _8 = _7 >> 24;
  _9 = (unsigned char) _8;
  MEM[(unsigned char *)r_106(D) + 2B] = _9;
  _10 = a_105(D)->n[4];
  _11 = _10 >> 16;
  _12 = (unsigned char) _11;
  MEM[(unsigned char *)r_106(D) + 3B] = _12;
  _13 = a_105(D)->n[4];
  _14 = _13 >> 8;
  _15 = (unsigned char) _14;
  MEM[(unsigned char *)r_106(D) + 4B] = _15;
  _16 = a_105(D)->n[4];
  _17 = (unsigned char) _16;
  MEM[(unsigned char *)r_106(D) + 5B] = _17;
  _18 = a_105(D)->n[3];
  _19 = _18 >> 44;
  _20 = (unsigned char) _19;
  MEM[(unsigned char *)r_106(D) + 6B] = _20;
  _21 = a_105(D)->n[3];
  _22 = _21 >> 36;
  _23 = (unsigned char) _22;
  MEM[(unsigned char *)r_106(D) + 7B] = _23;
  _24 = a_105(D)->n[3];
  _25 = _24 >> 28;
  _26 = (unsigned char) _25;
  MEM[(unsigned char *)r_106(D) + 8B] = _26;
  _27 = a_105(D)->n[3];
  _28 = _27 >> 20;
  _29 = (unsigned char) _28;
  MEM[(unsigned char *)r_106(D) + 9B] = _29;
  _30 = a_105(D)->n[3];
  _31 = _30 >> 12;
  _32 = (unsigned char) _31;
  MEM[(unsigned char *)r_106(D) + 10B] = _32;
  _33 = a_105(D)->n[3];
  _34 = _33 >> 4;
  _35 = (unsigned char) _34;
  MEM[(unsigned char *)r_106(D) + 11B] = _35;
  _36 = a_105(D)->n[2];
  _37 = _36 >> 48;
  _38 = (unsigned char) _37;
  _39 = _38 & 15;
  _40 = a_105(D)->n[3];
  _41 = (unsigned char) _40;
  _42 = _41 << 4;
  _43 = _39 | _42;
  MEM[(unsigned char *)r_106(D) + 12B] = _43;
  _44 = a_105(D)->n[2];
  _45 = _44 >> 40;
  _46 = (unsigned char) _45;
  MEM[(unsigned char *)r_106(D) + 13B] = _46;
  _47 = a_105(D)->n[2];
  _48 = _47 >> 32;
  _49 = (unsigned char) _48;
  MEM[(unsigned char *)r_106(D) + 14B] = _49;
  _50 = a_105(D)->n[2];
  _51 = _50 >> 24;
  _52 = (unsigned char) _51;
  MEM[(unsigned char *)r_106(D) + 15B] = _52;
  _53 = a_105(D)->n[2];
  _54 = _53 >> 16;
  _55 = (unsigned char) _54;
  MEM[(unsigned char *)r_106(D) + 16B] = _55;
  _56 = a_105(D)->n[2];
  _57 = _56 >> 8;
  _58 = (unsigned char) _57;
  MEM[(unsigned char *)r_106(D) + 17B] = _58;
  _59 = a_105(D)->n[2];
  _60 = (unsigned char) _59;
  MEM[(unsigned char *)r_106(D) + 18B] = _60;
  _61 = a_105(D)->n[1];
  _62 = _61 >> 44;
  _63 = (unsigned char) _62;
  MEM[(unsigned char *)r_106(D) + 19B] = _63;
  _64 = a_105(D)->n[1];
  _65 = _64 >> 36;
  _66 = (unsigned char) _65;
  MEM[(unsigned char *)r_106(D) + 20B] = _66;
  _67 = a_105(D)->n[1];
  _68 = _67 >> 28;
  _69 = (unsigned char) _68;
  MEM[(unsigned char *)r_106(D) + 21B] = _69;
  _70 = a_105(D)->n[1];
  _71 = _70 >> 20;
  _72 = (unsigned char) _71;
  MEM[(unsigned char *)r_106(D) + 22B] = _72;
  _73 = a_105(D)->n[1];
  _74 = _73 >> 12;
  _75 = (unsigned char) _74;
  MEM[(unsigned char *)r_106(D) + 23B] = _75;
  _76 = a_105(D)->n[1];
  _77 = _76 >> 4;
  _78 = (unsigned char) _77;
  MEM[(unsigned char *)r_106(D) + 24B] = _78;
  _79 = a_105(D)->n[0];
  _80 = _79 >> 48;
  _81 = (unsigned char) _80;
  _82 = _81 & 15;
  _83 = a_105(D)->n[1];
  _84 = (unsigned char) _83;
  _85 = _84 << 4;
  _86 = _82 | _85;
  MEM[(unsigned char *)r_106(D) + 25B] = _86;
  _87 = a_105(D)->n[0];
  _88 = _87 >> 40;
  _89 = (unsigned char) _88;
  MEM[(unsigned char *)r_106(D) + 26B] = _89;
  _90 = a_105(D)->n[0];
  _91 = _90 >> 32;
  _92 = (unsigned char) _91;
  MEM[(unsigned char *)r_106(D) + 27B] = _92;
  _93 = a_105(D)->n[0];
  _94 = _93 >> 24;
  _95 = (unsigned char) _94;
  MEM[(unsigned char *)r_106(D) + 28B] = _95;
  _96 = a_105(D)->n[0];
  _97 = _96 >> 16;
  _98 = (unsigned char) _97;
  MEM[(unsigned char *)r_106(D) + 29B] = _98;
  _99 = a_105(D)->n[0];
  _100 = _99 >> 8;
  _101 = (unsigned char) _100;
  MEM[(unsigned char *)r_106(D) + 30B] = _101;
  _102 = a_105(D)->n[0];
  _103 = (unsigned char) _102;
  MEM[(unsigned char *)r_106(D) + 31B] = _103;
  return;

}



;; Function secp256k1_scalar_set_b32 (secp256k1_scalar_set_b32, funcdef_no=119, decl_uid=4812, cgraph_uid=119, symbol_order=119)

secp256k1_scalar_set_b32 (struct secp256k1_scalar * r, const unsigned char * b32, int * overflow)
{
  int yes;
  int no;
  uint128_t t;
  _Bool _6;
  long unsigned int _30;
  int _36;
  long unsigned int _60;
  long unsigned int load_dst_66;
  long unsigned int _90;
  long unsigned int _120;
  int _121;
  __int128 unsigned _131;
  long unsigned int _132;
  long unsigned int _133;
  __int128 unsigned _134;
  long unsigned int _136;
  __int128 unsigned _138;
  long unsigned int _139;
  __int128 unsigned _140;
  __int128 unsigned _141;
  long unsigned int _143;
  __int128 unsigned _145;
  __int128 unsigned _146;
  __int128 unsigned _147;
  long unsigned int _149;
  __int128 unsigned _151;
  long unsigned int _153;
  _Bool _154;
  _Bool _155;
  _Bool _156;
  _Bool _158;
  int _159;
  int _160;
  int _161;
  _Bool _162;
  _Bool _163;
  _Bool _165;
  int _167;
  _Bool _170;
  long unsigned int load_dst_182;
  long unsigned int load_dst_185;
  long unsigned int load_dst_188;

  <bb 2> [local count: 1073741825]:
  load_dst_188 = MEM[(const unsigned char *)b32_123(D) + 24B];
  _30 = __builtin_bswap64 (load_dst_188);
  r_125(D)->d[0] = _30;
  load_dst_185 = MEM[(const unsigned char *)b32_123(D) + 16B];
  _60 = __builtin_bswap64 (load_dst_185);
  r_125(D)->d[1] = _60;
  load_dst_182 = MEM[(const unsigned char *)b32_123(D) + 8B];
  _90 = __builtin_bswap64 (load_dst_182);
  r_125(D)->d[2] = _90;
  load_dst_66 = MEM[(const unsigned char *)b32_123(D)];
  _120 = __builtin_bswap64 (load_dst_66);
  _154 = _120 != 18446744073709551615;
  _155 = _90 <= 18446744073709551613;
  _156 = _154 | _155;
  no_157 = (int) _156;
  _158 = _90 == 18446744073709551615;
  _159 = (int) _158;
  _160 = ~no_157;
  _161 = _159 & _160;
  _162 = _60 <= 13451932020343611450;
  _163 = _156 | _162;
  no_164 = (int) _163;
  _165 = _60 > 13451932020343611451;
  _167 = ~no_164;
  _170 = _30 > 13822214165235122496;
  _6 = _165 | _170;
  _36 = (int) _6;
  _121 = _36 & _167;
  yes_173 = _121 | _161;
  _131 = (__int128 unsigned) _30;
  _132 = (long unsigned int) yes_173;
  _133 = _132 * 4624529908474429119;
  _134 = (__int128 unsigned) _133;
  t_135 = _131 + _134;
  _136 = _30 + _133;
  r_125(D)->d[0] = _136;
  t_137 = t_135 >> 64;
  _138 = (__int128 unsigned) _60;
  _139 = _132 * 4994812053365940164;
  _140 = (__int128 unsigned) _139;
  _141 = _138 + _140;
  t_142 = t_137 + _141;
  _143 = (long unsigned int) t_142;
  r_125(D)->d[1] = _143;
  t_144 = t_142 >> 64;
  _145 = (__int128 unsigned) _90;
  _146 = (__int128 unsigned) yes_173;
  _147 = _145 + _146;
  t_148 = t_144 + _147;
  _149 = (long unsigned int) t_148;
  r_125(D)->d[2] = _149;
  t_150 = t_148 >> 64;
  _151 = (__int128 unsigned) _120;
  t_152 = t_150 + _151;
  _153 = (long unsigned int) t_152;
  r_125(D)->d[3] = _153;
  if (overflow_129(D) != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 4>; [30.00%]

  <bb 3> [local count: 751619277]:
  *overflow_129(D) = yes_173;

  <bb 4> [local count: 1073741825]:
  return;

}



;; Function secp256k1_scalar_get_b32 (secp256k1_scalar_get_b32, funcdef_no=120, decl_uid=4818, cgraph_uid=120, symbol_order=120)

secp256k1_scalar_get_b32 (unsigned char * bin, const struct secp256k1_scalar * a)
{
  long unsigned int _1;
  long unsigned int _2;
  unsigned char _3;
  long unsigned int _4;
  long unsigned int _5;
  unsigned char _6;
  long unsigned int _7;
  long unsigned int _8;
  unsigned char _9;
  long unsigned int _10;
  long unsigned int _11;
  unsigned char _12;
  long unsigned int _13;
  long unsigned int _14;
  unsigned char _15;
  long unsigned int _16;
  long unsigned int _17;
  unsigned char _18;
  long unsigned int _19;
  long unsigned int _20;
  unsigned char _21;
  long unsigned int _22;
  unsigned char _23;
  long unsigned int _24;
  long unsigned int _25;
  unsigned char _26;
  long unsigned int _27;
  long unsigned int _28;
  unsigned char _29;
  long unsigned int _30;
  long unsigned int _31;
  unsigned char _32;
  long unsigned int _33;
  long unsigned int _34;
  unsigned char _35;
  long unsigned int _36;
  long unsigned int _37;
  unsigned char _38;
  long unsigned int _39;
  long unsigned int _40;
  unsigned char _41;
  long unsigned int _42;
  long unsigned int _43;
  unsigned char _44;
  long unsigned int _45;
  unsigned char _46;
  long unsigned int _47;
  long unsigned int _48;
  unsigned char _49;
  long unsigned int _50;
  long unsigned int _51;
  unsigned char _52;
  long unsigned int _53;
  long unsigned int _54;
  unsigned char _55;
  long unsigned int _56;
  long unsigned int _57;
  unsigned char _58;
  long unsigned int _59;
  long unsigned int _60;
  unsigned char _61;
  long unsigned int _62;
  long unsigned int _63;
  unsigned char _64;
  long unsigned int _65;
  long unsigned int _66;
  unsigned char _67;
  long unsigned int _68;
  unsigned char _69;
  long unsigned int _70;
  long unsigned int _71;
  unsigned char _72;
  long unsigned int _73;
  long unsigned int _74;
  unsigned char _75;
  long unsigned int _76;
  long unsigned int _77;
  unsigned char _78;
  long unsigned int _79;
  long unsigned int _80;
  unsigned char _81;
  long unsigned int _82;
  long unsigned int _83;
  unsigned char _84;
  long unsigned int _85;
  long unsigned int _86;
  unsigned char _87;
  long unsigned int _88;
  long unsigned int _89;
  unsigned char _90;
  long unsigned int _91;
  unsigned char _92;

  <bb 2> [local count: 1073741825]:
  _1 = a_94(D)->d[3];
  _2 = _1 >> 56;
  _3 = (unsigned char) _2;
  *bin_95(D) = _3;
  _4 = a_94(D)->d[3];
  _5 = _4 >> 48;
  _6 = (unsigned char) _5;
  MEM[(unsigned char *)bin_95(D) + 1B] = _6;
  _7 = a_94(D)->d[3];
  _8 = _7 >> 40;
  _9 = (unsigned char) _8;
  MEM[(unsigned char *)bin_95(D) + 2B] = _9;
  _10 = a_94(D)->d[3];
  _11 = _10 >> 32;
  _12 = (unsigned char) _11;
  MEM[(unsigned char *)bin_95(D) + 3B] = _12;
  _13 = a_94(D)->d[3];
  _14 = _13 >> 24;
  _15 = (unsigned char) _14;
  MEM[(unsigned char *)bin_95(D) + 4B] = _15;
  _16 = a_94(D)->d[3];
  _17 = _16 >> 16;
  _18 = (unsigned char) _17;
  MEM[(unsigned char *)bin_95(D) + 5B] = _18;
  _19 = a_94(D)->d[3];
  _20 = _19 >> 8;
  _21 = (unsigned char) _20;
  MEM[(unsigned char *)bin_95(D) + 6B] = _21;
  _22 = a_94(D)->d[3];
  _23 = (unsigned char) _22;
  MEM[(unsigned char *)bin_95(D) + 7B] = _23;
  _24 = a_94(D)->d[2];
  _25 = _24 >> 56;
  _26 = (unsigned char) _25;
  MEM[(unsigned char *)bin_95(D) + 8B] = _26;
  _27 = a_94(D)->d[2];
  _28 = _27 >> 48;
  _29 = (unsigned char) _28;
  MEM[(unsigned char *)bin_95(D) + 9B] = _29;
  _30 = a_94(D)->d[2];
  _31 = _30 >> 40;
  _32 = (unsigned char) _31;
  MEM[(unsigned char *)bin_95(D) + 10B] = _32;
  _33 = a_94(D)->d[2];
  _34 = _33 >> 32;
  _35 = (unsigned char) _34;
  MEM[(unsigned char *)bin_95(D) + 11B] = _35;
  _36 = a_94(D)->d[2];
  _37 = _36 >> 24;
  _38 = (unsigned char) _37;
  MEM[(unsigned char *)bin_95(D) + 12B] = _38;
  _39 = a_94(D)->d[2];
  _40 = _39 >> 16;
  _41 = (unsigned char) _40;
  MEM[(unsigned char *)bin_95(D) + 13B] = _41;
  _42 = a_94(D)->d[2];
  _43 = _42 >> 8;
  _44 = (unsigned char) _43;
  MEM[(unsigned char *)bin_95(D) + 14B] = _44;
  _45 = a_94(D)->d[2];
  _46 = (unsigned char) _45;
  MEM[(unsigned char *)bin_95(D) + 15B] = _46;
  _47 = a_94(D)->d[1];
  _48 = _47 >> 56;
  _49 = (unsigned char) _48;
  MEM[(unsigned char *)bin_95(D) + 16B] = _49;
  _50 = a_94(D)->d[1];
  _51 = _50 >> 48;
  _52 = (unsigned char) _51;
  MEM[(unsigned char *)bin_95(D) + 17B] = _52;
  _53 = a_94(D)->d[1];
  _54 = _53 >> 40;
  _55 = (unsigned char) _54;
  MEM[(unsigned char *)bin_95(D) + 18B] = _55;
  _56 = a_94(D)->d[1];
  _57 = _56 >> 32;
  _58 = (unsigned char) _57;
  MEM[(unsigned char *)bin_95(D) + 19B] = _58;
  _59 = a_94(D)->d[1];
  _60 = _59 >> 24;
  _61 = (unsigned char) _60;
  MEM[(unsigned char *)bin_95(D) + 20B] = _61;
  _62 = a_94(D)->d[1];
  _63 = _62 >> 16;
  _64 = (unsigned char) _63;
  MEM[(unsigned char *)bin_95(D) + 21B] = _64;
  _65 = a_94(D)->d[1];
  _66 = _65 >> 8;
  _67 = (unsigned char) _66;
  MEM[(unsigned char *)bin_95(D) + 22B] = _67;
  _68 = a_94(D)->d[1];
  _69 = (unsigned char) _68;
  MEM[(unsigned char *)bin_95(D) + 23B] = _69;
  _70 = a_94(D)->d[0];
  _71 = _70 >> 56;
  _72 = (unsigned char) _71;
  MEM[(unsigned char *)bin_95(D) + 24B] = _72;
  _73 = a_94(D)->d[0];
  _74 = _73 >> 48;
  _75 = (unsigned char) _74;
  MEM[(unsigned char *)bin_95(D) + 25B] = _75;
  _76 = a_94(D)->d[0];
  _77 = _76 >> 40;
  _78 = (unsigned char) _77;
  MEM[(unsigned char *)bin_95(D) + 26B] = _78;
  _79 = a_94(D)->d[0];
  _80 = _79 >> 32;
  _81 = (unsigned char) _80;
  MEM[(unsigned char *)bin_95(D) + 27B] = _81;
  _82 = a_94(D)->d[0];
  _83 = _82 >> 24;
  _84 = (unsigned char) _83;
  MEM[(unsigned char *)bin_95(D) + 28B] = _84;
  _85 = a_94(D)->d[0];
  _86 = _85 >> 16;
  _87 = (unsigned char) _86;
  MEM[(unsigned char *)bin_95(D) + 29B] = _87;
  _88 = a_94(D)->d[0];
  _89 = _88 >> 8;
  _90 = (unsigned char) _89;
  MEM[(unsigned char *)bin_95(D) + 30B] = _90;
  _91 = a_94(D)->d[0];
  _92 = (unsigned char) _91;
  MEM[(unsigned char *)bin_95(D) + 31B] = _92;
  return;

}



;; Function secp256k1_der_read_len (secp256k1_der_read_len, funcdef_no=199, decl_uid=6065, cgraph_uid=199, symbol_order=204)

secp256k1_der_read_len (const unsigned char * * sigp, const unsigned char * sigend)
{
  unsigned long ivtmp.196;
  size_t ret;
  int b1;
  const unsigned char * _1;
  signed char _3;
  const unsigned char * _4;
  unsigned char _5;
  long int _6;
  long int _7;
  unsigned char _8;
  long unsigned int _9;
  unsigned long _10;
  unsigned char _11;
  long unsigned int _12;
  long unsigned int _14;
  long int _15;
  long unsigned int _16;
  const unsigned char * _17;
  int _20;
  long unsigned int _31;
  unsigned char _32;
  int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  const unsigned char * _44;
  unsigned long _46;
  long unsigned int _47;
  long unsigned int _48;
  unsigned long _49;
  unsigned long _50;
  unsigned char _55;
  long unsigned int _56;

  <bb 2> [local count: 210818003]:
  _1 = *sigp_24(D);
  if (_1 >= sigend_25(D))
    goto <bb 3>; [1.04%]
  else
    goto <bb 4>; [98.96%]

  <bb 3> [local count: 69885602]:
  goto <bb 16>; [100.00%]

  <bb 4> [local count: 208625496]:
  _4 = _1 + 1;
  *sigp_24(D) = _4;
  _5 = *_1;
  b1_27 = (int) _5;
  if (b1_27 == 255)
    goto <bb 3>; [0.54%]
  else
    goto <bb 5>; [99.46%]

  <bb 5> [local count: 207498918]:
  _3 = (signed char) _5;
  if (_3 >= 0)
    goto <bb 16>; [42.57%]
  else
    goto <bb 6>; [57.43%]

  <bb 6> [local count: 119166629]:
  if (b1_27 == 128)
    goto <bb 3>; [0.54%]
  else
    goto <bb 7>; [99.46%]

  <bb 7> [local count: 118523129]:
  _32 = _5 & 127;
  _6 = (long int) _32;
  _7 = sigend_25(D) - _4;
  if (_6 > _7)
    goto <bb 3>; [1.04%]
  else
    goto <bb 8>; [98.96%]

  <bb 8> [local count: 117290488]:
  _8 = MEM[(const unsigned char *)_1 + 1B];
  if (_8 == 0)
    goto <bb 3>; [2.07%]
  else
    goto <bb 9>; [97.93%]

  <bb 9> [local count: 114863533]:
  _55 = _32 + 255;
  if (_55 <= 7)
    goto <bb 10>; [94.50%]
  else
    goto <bb 3>; [5.50%]

  <bb 10> [local count: 108546039]:
  _35 = (long unsigned int) _8;
  _34 = (long unsigned int) _32;
  _40 = _34 + _35;
  _47 = (long unsigned int) _7;
  if (_40 > _47)
    goto <bb 3>; [5.50%]
  else
    goto <bb 11>; [94.50%]

  <bb 11> [local count: 102576007]:
  _44 = _1 + 2;
  ivtmp.196_2 = (unsigned long) _44;
  _42 = (unsigned int) _32;
  _41 = _42 + 4294967295;
  _46 = (unsigned long) _41;
  _10 = (unsigned long) _1;
  _49 = _10 + 2;
  _50 = _46 + _49;
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 906139985]:
  _9 = ret_53 << 8;
  _11 = MEM[base: _17, offset: 0B];
  _12 = (long unsigned int) _11;
  ret_29 = _9 | _12;
  _48 = _10 + 1;
  _31 = _34 + _48;
  _56 = _31 - ivtmp.196_54;
  _14 = ret_29 + _56;
  _15 = sigend_25(D) - _17;
  _16 = (long unsigned int) _15;
  ivtmp.196_52 = ivtmp.196_54 + 1;
  if (_14 > _16)
    goto <bb 3>; [5.50%]
  else
    goto <bb 13>; [94.50%]

  <bb 13> [local count: 958878292]:
  # ret_53 = PHI <_35(11), ret_29(12)>
  # ivtmp.196_54 = PHI <ivtmp.196_2(11), ivtmp.196_52(12)>
  _17 = (const unsigned char *) ivtmp.196_54;
  *sigp_24(D) = _17;
  if (_50 != ivtmp.196_54)
    goto <bb 12>; [94.50%]
  else
    goto <bb 14>; [5.50%]

  <bb 14> [local count: 52738306]:
  if (ret_53 <= 127)
    goto <bb 3>; [0.26%]
  else
    goto <bb 15>; [99.74%]

  <bb 15> [local count: 58441620]:
  _33 = (int) ret_53;

  <bb 16> [local count: 210818002]:
  # _20 = PHI <-1(3), _33(15), b1_27(5)>
  return _20;

}



;; Function default_error_callback_fn (default_error_callback_fn, funcdef_no=212, decl_uid=6204, cgraph_uid=212, symbol_order=218) (executed once)

default_error_callback_fn (const char * str, void * data)
{
  struct _IO_FILE * stderr.120_1;

  <bb 2> [local count: 1073741825]:
  stderr.120_1 = stderr;
  __fprintf_chk (stderr.120_1, 1, "[libsecp256k1] internal consistency check failed: %s\n", str_3(D));
  abort ();

}



;; Function default_illegal_callback_fn (default_illegal_callback_fn, funcdef_no=211, decl_uid=6199, cgraph_uid=211, symbol_order=216) (executed once)

default_illegal_callback_fn (const char * str, void * data)
{
  struct _IO_FILE * stderr.121_1;

  <bb 2> [local count: 1073741825]:
  stderr.121_1 = stderr;
  __fprintf_chk (stderr.121_1, 1, "[libsecp256k1] illegal argument: %s\n", str_3(D));
  abort ();

}



;; Function secp256k1_sha256_write (secp256k1_sha256_write, funcdef_no=184, decl_uid=5726, cgraph_uid=184, symbol_order=186)

secp256k1_sha256_write (struct secp256k1_sha256_t * hash, const unsigned char * data, size_t len)
{
  long unsigned int ivtmp.210;
  uint32_t a;
  uint32_t b;
  uint32_t c;
  uint32_t d;
  uint32_t e;
  uint32_t f;
  uint32_t g;
  uint32_t h;
  uint32_t w0;
  uint32_t w1;
  uint32_t w2;
  uint32_t w3;
  uint32_t w4;
  uint32_t w5;
  uint32_t w6;
  uint32_t w7;
  uint32_t w8;
  uint32_t w9;
  uint32_t w10;
  uint32_t w11;
  uint32_t w12;
  uint32_t w13;
  uint32_t w14;
  uint32_t w15;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  uint32_t t1;
  uint32_t t2;
  size_t bufsize;
  long unsigned int _1;
  long unsigned int _3;
  long unsigned int _4;
  void * _6;
  long unsigned int _9;
  unsigned int load_dst_10;
  unsigned int _13;
  unsigned int _14;
  unsigned int _39;
  unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  unsigned int _43;
  unsigned int load_dst_44;
  unsigned int _45;
  unsigned int _46;
  unsigned int _47;
  unsigned int load_dst_48;
  unsigned int load_dst_53;
  unsigned int load_dst_56;
  unsigned int load_dst_59;
  unsigned int _61;
  unsigned int _62;
  unsigned int _63;
  unsigned int _64;
  unsigned int _65;
  unsigned int _66;
  unsigned int _67;
  unsigned int _68;
  unsigned int _69;
  unsigned int _73;
  unsigned int _74;
  unsigned int _75;
  unsigned int _76;
  unsigned int _77;
  unsigned int load_dst_78;
  unsigned int _79;
  unsigned int _80;
  unsigned int _81;
  unsigned int load_dst_82;
  unsigned int load_dst_87;
  unsigned int load_dst_90;
  unsigned int load_dst_93;
  unsigned int _95;
  unsigned int _96;
  unsigned int _97;
  unsigned int _98;
  unsigned int _99;
  unsigned int _100;
  unsigned int _101;
  unsigned int _102;
  unsigned int _103;
  unsigned int _107;
  unsigned int _108;
  unsigned int _109;
  unsigned int _110;
  unsigned int _111;
  unsigned int load_dst_112;
  unsigned int _113;
  unsigned int _114;
  unsigned int _115;
  unsigned int load_dst_116;
  unsigned int load_dst_121;
  unsigned int load_dst_124;
  unsigned int load_dst_127;
  unsigned int _129;
  unsigned int _130;
  unsigned int _131;
  unsigned int _132;
  unsigned int _133;
  unsigned int _134;
  unsigned int _135;
  unsigned int _136;
  unsigned int _137;
  unsigned int _141;
  unsigned int _142;
  unsigned int _143;
  unsigned int _144;
  unsigned int _145;
  unsigned int _147;
  unsigned int _148;
  unsigned int _149;
  unsigned int _163;
  unsigned int _164;
  unsigned int _165;
  unsigned int _166;
  unsigned int _167;
  unsigned int _168;
  unsigned int _169;
  unsigned int _170;
  unsigned int _171;
  unsigned int _175;
  unsigned int _176;
  unsigned int _177;
  unsigned int _178;
  unsigned int _179;
  unsigned int _181;
  unsigned int _182;
  unsigned int _183;
  uint32_t[16] * prephitmp_195;
  unsigned int _197;
  unsigned int _198;
  unsigned int _199;
  unsigned int _200;
  unsigned int _201;
  unsigned int _202;
  unsigned int _203;
  unsigned int _204;
  unsigned int _205;
  unsigned int _209;
  unsigned int _210;
  unsigned int _211;
  unsigned int _212;
  unsigned int _213;
  uint32_t[16] * pretmp_214;
  unsigned int _215;
  unsigned int _216;
  unsigned int _217;
  uint32_t[16] * _218;
  unsigned int _231;
  unsigned int _232;
  unsigned int _233;
  unsigned int _234;
  unsigned int _235;
  unsigned int _236;
  unsigned int _237;
  unsigned int _238;
  unsigned int _239;
  unsigned int _243;
  unsigned int _244;
  unsigned int _245;
  unsigned int _246;
  unsigned int _247;
  unsigned int _249;
  unsigned int _250;
  unsigned int _251;
  unsigned int _265;
  unsigned int _266;
  unsigned int _267;
  unsigned int _268;
  unsigned int _269;
  unsigned int _270;
  unsigned int _271;
  unsigned int _272;
  unsigned int _273;
  unsigned int _277;
  unsigned int _278;
  unsigned int _279;
  unsigned int _280;
  unsigned int _281;
  unsigned int _283;
  unsigned int _284;
  unsigned int _285;
  unsigned int _299;
  unsigned int _300;
  unsigned int _301;
  unsigned int _302;
  unsigned int _303;
  unsigned int _304;
  unsigned int _305;
  unsigned int _306;
  unsigned int _307;
  unsigned int _311;
  unsigned int _312;
  unsigned int _313;
  unsigned int _314;
  unsigned int _315;
  unsigned int _317;
  unsigned int _318;
  unsigned int _319;
  unsigned int _333;
  unsigned int _334;
  unsigned int _335;
  unsigned int _336;
  unsigned int _337;
  unsigned int _338;
  unsigned int _339;
  unsigned int _340;
  unsigned int _341;
  unsigned int _345;
  unsigned int _346;
  unsigned int _347;
  unsigned int _348;
  unsigned int _349;
  unsigned int _351;
  unsigned int _352;
  unsigned int _353;
  unsigned int _367;
  unsigned int _368;
  unsigned int _369;
  unsigned int _370;
  unsigned int _371;
  unsigned int _372;
  unsigned int _373;
  unsigned int _374;
  unsigned int _375;
  unsigned int _379;
  unsigned int _380;
  unsigned int _381;
  unsigned int _382;
  unsigned int _383;
  unsigned int _385;
  unsigned int _386;
  unsigned int _387;
  unsigned int _401;
  unsigned int _402;
  unsigned int _403;
  unsigned int _404;
  unsigned int _405;
  unsigned int _406;
  unsigned int _407;
  unsigned int _408;
  unsigned int _409;
  unsigned int _413;
  unsigned int _414;
  unsigned int _415;
  unsigned int _416;
  unsigned int _417;
  unsigned int _419;
  unsigned int _420;
  unsigned int _421;
  unsigned int _435;
  unsigned int _436;
  unsigned int _437;
  unsigned int _438;
  unsigned int _439;
  unsigned int _440;
  unsigned int _441;
  unsigned int _442;
  unsigned int _443;
  unsigned int _447;
  unsigned int _448;
  unsigned int _449;
  unsigned int _450;
  unsigned int _451;
  unsigned int _453;
  unsigned int _454;
  unsigned int _455;
  unsigned int _469;
  unsigned int _470;
  unsigned int _471;
  unsigned int _472;
  unsigned int _473;
  unsigned int _474;
  unsigned int _475;
  unsigned int _476;
  unsigned int _477;
  unsigned int _481;
  unsigned int _482;
  unsigned int _483;
  unsigned int _484;
  unsigned int _485;
  unsigned int _487;
  unsigned int _488;
  unsigned int _489;
  unsigned int _503;
  unsigned int _504;
  unsigned int _505;
  unsigned int _506;
  unsigned int _507;
  unsigned int _508;
  unsigned int _509;
  unsigned int _510;
  unsigned int _511;
  unsigned int _515;
  unsigned int _516;
  unsigned int _517;
  unsigned int _518;
  unsigned int _519;
  unsigned int _521;
  unsigned int _522;
  unsigned int _523;
  unsigned int _537;
  unsigned int _538;
  unsigned int _539;
  unsigned int _540;
  unsigned int _541;
  unsigned int _542;
  unsigned int _543;
  unsigned int _544;
  unsigned int _545;
  unsigned int _549;
  unsigned int _550;
  unsigned int _551;
  unsigned int _552;
  unsigned int _553;
  unsigned int _555;
  unsigned int _556;
  unsigned int _557;
  unsigned int _571;
  unsigned int _572;
  unsigned int _573;
  unsigned int _574;
  unsigned int _575;
  unsigned int _576;
  unsigned int _577;
  unsigned int _578;
  unsigned int _579;
  unsigned int _583;
  unsigned int _584;
  unsigned int _585;
  unsigned int _586;
  unsigned int _587;
  unsigned int _589;
  unsigned int _590;
  unsigned int _591;
  unsigned int _593;
  unsigned int _594;
  unsigned int _595;
  unsigned int _596;
  unsigned int _597;
  unsigned int _599;
  unsigned int _600;
  unsigned int _601;
  unsigned int _602;
  unsigned int _603;
  unsigned int _608;
  unsigned int _609;
  unsigned int _610;
  unsigned int _611;
  unsigned int _612;
  unsigned int _613;
  unsigned int _614;
  unsigned int _615;
  unsigned int _616;
  unsigned int _620;
  unsigned int _621;
  unsigned int _622;
  unsigned int _623;
  unsigned int _624;
  unsigned int _626;
  unsigned int _627;
  unsigned int _628;
  unsigned int _630;
  unsigned int _631;
  unsigned int _632;
  unsigned int _633;
  unsigned int _634;
  unsigned int _636;
  unsigned int _637;
  unsigned int _638;
  unsigned int _639;
  unsigned int _640;
  unsigned int _645;
  unsigned int _646;
  unsigned int _647;
  unsigned int _648;
  unsigned int _649;
  unsigned int _650;
  unsigned int _651;
  unsigned int _652;
  unsigned int _653;
  unsigned int _657;
  unsigned int _658;
  unsigned int _659;
  unsigned int _660;
  unsigned int _661;
  unsigned int _663;
  unsigned int _664;
  unsigned int _665;
  unsigned int _667;
  unsigned int _668;
  unsigned int _669;
  unsigned int _670;
  unsigned int _671;
  unsigned int _673;
  unsigned int _674;
  unsigned int _675;
  unsigned int _676;
  unsigned int _677;
  unsigned int _682;
  unsigned int _683;
  unsigned int _684;
  unsigned int _685;
  unsigned int _686;
  unsigned int _687;
  unsigned int _688;
  unsigned int _689;
  unsigned int _690;
  unsigned int _694;
  unsigned int _695;
  unsigned int _696;
  unsigned int _697;
  unsigned int _698;
  unsigned int _700;
  unsigned int _701;
  unsigned int _702;
  unsigned int _704;
  unsigned int _705;
  unsigned int _706;
  unsigned int _707;
  unsigned int _708;
  unsigned int _710;
  unsigned int _711;
  unsigned int _712;
  unsigned int _713;
  unsigned int _714;
  unsigned int _719;
  unsigned int _720;
  unsigned int _721;
  unsigned int _722;
  unsigned int _723;
  unsigned int _724;
  unsigned int _725;
  unsigned int _726;
  unsigned int _727;
  unsigned int _731;
  unsigned int _732;
  unsigned int _733;
  unsigned int _734;
  unsigned int _735;
  unsigned int _737;
  unsigned int _738;
  unsigned int _739;
  unsigned int _741;
  unsigned int _742;
  unsigned int _743;
  unsigned int _744;
  unsigned int _745;
  unsigned int _747;
  unsigned int _748;
  unsigned int _749;
  unsigned int _750;
  unsigned int _751;
  unsigned int _756;
  unsigned int _757;
  unsigned int _758;
  unsigned int _759;
  unsigned int _760;
  unsigned int _761;
  unsigned int _762;
  unsigned int _763;
  unsigned int _764;
  unsigned int _768;
  unsigned int _769;
  unsigned int _770;
  unsigned int _771;
  unsigned int _772;
  unsigned int _774;
  unsigned int _775;
  unsigned int _776;
  unsigned int _778;
  unsigned int _779;
  unsigned int _780;
  unsigned int _781;
  unsigned int _782;
  unsigned int _784;
  unsigned int _785;
  unsigned int _786;
  unsigned int _787;
  unsigned int _788;
  unsigned int _793;
  unsigned int _794;
  unsigned int _795;
  unsigned int _796;
  unsigned int _797;
  unsigned int _798;
  unsigned int _799;
  unsigned int _800;
  unsigned int _801;
  unsigned int _805;
  unsigned int _806;
  unsigned int _807;
  unsigned int _808;
  unsigned int _809;
  unsigned int _811;
  unsigned int _812;
  unsigned int _813;
  unsigned int _815;
  unsigned int _816;
  unsigned int _817;
  unsigned int _818;
  unsigned int _819;
  unsigned int _821;
  unsigned int _822;
  unsigned int _823;
  unsigned int _824;
  unsigned int _825;
  unsigned int _830;
  unsigned int _831;
  unsigned int _832;
  unsigned int _833;
  unsigned int _834;
  unsigned int _835;
  unsigned int _836;
  unsigned int _837;
  unsigned int _838;
  unsigned int _842;
  unsigned int _843;
  unsigned int _844;
  unsigned int _845;
  unsigned int _846;
  unsigned int _848;
  unsigned int _849;
  unsigned int _850;
  unsigned int _852;
  unsigned int _853;
  unsigned int _854;
  unsigned int _855;
  unsigned int _856;
  unsigned int _858;
  unsigned int _859;
  unsigned int _860;
  unsigned int _861;
  unsigned int _862;
  unsigned int _867;
  unsigned int _868;
  unsigned int _869;
  unsigned int _870;
  unsigned int _871;
  unsigned int _872;
  unsigned int _873;
  unsigned int _874;
  unsigned int _875;
  unsigned int _879;
  unsigned int _880;
  unsigned int _881;
  unsigned int _882;
  unsigned int _883;
  unsigned int _885;
  unsigned int _886;
  unsigned int _887;
  unsigned int _889;
  unsigned int _890;
  unsigned int _891;
  unsigned int _892;
  unsigned int _893;
  unsigned int _895;
  unsigned int _896;
  unsigned int _897;
  unsigned int _898;
  unsigned int _899;
  unsigned int _904;
  unsigned int _905;
  unsigned int _906;
  unsigned int _907;
  unsigned int _908;
  unsigned int _909;
  unsigned int _910;
  unsigned int _911;
  unsigned int _912;
  unsigned int _916;
  unsigned int _917;
  unsigned int _918;
  unsigned int _919;
  unsigned int _920;
  unsigned int _922;
  unsigned int _923;
  unsigned int _924;
  unsigned int _926;
  unsigned int _927;
  unsigned int _928;
  unsigned int _929;
  unsigned int _930;
  unsigned int _932;
  unsigned int _933;
  unsigned int _934;
  unsigned int _935;
  unsigned int _936;
  unsigned int _941;
  unsigned int _942;
  unsigned int _943;
  unsigned int _944;
  unsigned int _945;
  unsigned int _946;
  unsigned int _947;
  unsigned int _948;
  unsigned int _949;
  unsigned int _953;
  unsigned int _954;
  unsigned int _955;
  unsigned int _956;
  unsigned int _957;
  unsigned int _959;
  unsigned int _960;
  unsigned int _961;
  unsigned int _963;
  unsigned int _964;
  unsigned int _965;
  unsigned int _966;
  unsigned int _967;
  unsigned int _969;
  unsigned int _970;
  unsigned int _971;
  unsigned int _972;
  unsigned int _973;
  unsigned int _978;
  unsigned int _979;
  unsigned int _980;
  unsigned int _981;
  unsigned int _982;
  unsigned int _983;
  unsigned int _984;
  unsigned int _985;
  unsigned int _986;
  unsigned int _990;
  unsigned int _991;
  unsigned int _992;
  unsigned int _993;
  unsigned int _994;
  unsigned int _996;
  unsigned int _997;
  unsigned int _998;
  unsigned int _1000;
  unsigned int _1001;
  unsigned int _1002;
  unsigned int _1003;
  unsigned int _1004;
  unsigned int _1006;
  unsigned int _1007;
  unsigned int _1008;
  unsigned int _1009;
  unsigned int _1010;
  unsigned int _1015;
  unsigned int _1016;
  unsigned int _1017;
  unsigned int _1018;
  unsigned int _1019;
  unsigned int _1020;
  unsigned int _1021;
  unsigned int _1022;
  unsigned int _1023;
  unsigned int _1027;
  unsigned int _1028;
  unsigned int _1029;
  unsigned int _1030;
  unsigned int _1031;
  unsigned int _1033;
  unsigned int _1034;
  unsigned int _1035;
  unsigned int _1037;
  unsigned int _1038;
  unsigned int _1039;
  unsigned int _1040;
  unsigned int _1041;
  unsigned int _1043;
  unsigned int _1044;
  unsigned int _1045;
  unsigned int _1046;
  unsigned int _1047;
  unsigned int _1052;
  unsigned int _1053;
  unsigned int _1054;
  unsigned int _1055;
  unsigned int _1056;
  unsigned int _1057;
  unsigned int _1058;
  unsigned int _1059;
  unsigned int _1060;
  unsigned int _1064;
  unsigned int _1065;
  unsigned int _1066;
  unsigned int _1067;
  unsigned int _1068;
  unsigned int _1070;
  unsigned int _1071;
  unsigned int _1072;
  unsigned int _1074;
  unsigned int _1075;
  unsigned int _1076;
  unsigned int _1077;
  unsigned int _1078;
  unsigned int _1080;
  unsigned int _1081;
  unsigned int _1082;
  unsigned int _1083;
  unsigned int _1084;
  unsigned int _1089;
  unsigned int _1090;
  unsigned int _1091;
  unsigned int _1092;
  unsigned int _1093;
  unsigned int _1094;
  unsigned int _1095;
  unsigned int _1096;
  unsigned int _1097;
  unsigned int _1101;
  unsigned int _1102;
  unsigned int _1103;
  unsigned int _1104;
  unsigned int _1105;
  unsigned int _1107;
  unsigned int _1108;
  unsigned int _1109;
  unsigned int _1111;
  unsigned int _1112;
  unsigned int _1113;
  unsigned int _1114;
  unsigned int _1115;
  unsigned int _1117;
  unsigned int _1118;
  unsigned int _1119;
  unsigned int _1120;
  unsigned int _1121;
  unsigned int _1126;
  unsigned int _1127;
  unsigned int _1128;
  unsigned int _1129;
  unsigned int _1130;
  unsigned int _1131;
  unsigned int _1132;
  unsigned int _1133;
  unsigned int _1134;
  unsigned int _1138;
  unsigned int _1139;
  unsigned int _1140;
  unsigned int _1141;
  unsigned int _1142;
  unsigned int _1144;
  unsigned int _1145;
  unsigned int _1146;
  unsigned int _1148;
  unsigned int _1149;
  unsigned int _1150;
  unsigned int _1151;
  unsigned int _1152;
  unsigned int _1154;
  unsigned int _1155;
  unsigned int _1156;
  unsigned int _1157;
  unsigned int _1158;
  unsigned int _1163;
  unsigned int _1164;
  unsigned int _1165;
  unsigned int _1166;
  unsigned int _1167;
  unsigned int _1168;
  unsigned int _1169;
  unsigned int _1170;
  unsigned int _1171;
  unsigned int _1175;
  unsigned int _1176;
  unsigned int _1177;
  unsigned int _1178;
  unsigned int _1179;
  unsigned int _1181;
  unsigned int _1182;
  unsigned int _1183;
  unsigned int _1185;
  unsigned int _1186;
  unsigned int _1187;
  unsigned int _1188;
  unsigned int _1189;
  unsigned int _1191;
  unsigned int _1192;
  unsigned int _1193;
  unsigned int _1194;
  unsigned int _1195;
  unsigned int _1200;
  unsigned int _1201;
  unsigned int _1202;
  unsigned int _1203;
  unsigned int _1204;
  unsigned int _1205;
  unsigned int _1206;
  unsigned int _1207;
  unsigned int _1208;
  unsigned int _1212;
  unsigned int _1213;
  unsigned int _1214;
  unsigned int _1215;
  unsigned int _1216;
  unsigned int _1218;
  unsigned int _1219;
  unsigned int _1220;
  unsigned int _1222;
  unsigned int _1223;
  unsigned int _1224;
  unsigned int _1225;
  unsigned int _1226;
  unsigned int _1228;
  unsigned int _1229;
  unsigned int _1230;
  unsigned int _1231;
  unsigned int _1232;
  unsigned int _1237;
  unsigned int _1238;
  unsigned int _1239;
  unsigned int _1240;
  unsigned int _1241;
  unsigned int _1242;
  unsigned int _1243;
  unsigned int _1244;
  unsigned int _1245;
  unsigned int _1249;
  unsigned int _1250;
  unsigned int _1251;
  unsigned int _1252;
  unsigned int _1253;
  unsigned int _1255;
  unsigned int _1256;
  unsigned int _1257;
  unsigned int _1259;
  unsigned int _1260;
  unsigned int _1261;
  unsigned int _1262;
  unsigned int _1263;
  unsigned int _1265;
  unsigned int _1266;
  unsigned int _1267;
  unsigned int _1268;
  unsigned int _1269;
  unsigned int _1274;
  unsigned int _1275;
  unsigned int _1276;
  unsigned int _1277;
  unsigned int _1278;
  unsigned int _1279;
  unsigned int _1280;
  unsigned int _1281;
  unsigned int _1282;
  unsigned int _1286;
  unsigned int _1287;
  unsigned int _1288;
  unsigned int _1289;
  unsigned int _1290;
  unsigned int _1292;
  unsigned int _1293;
  unsigned int _1294;
  unsigned int _1296;
  unsigned int _1297;
  unsigned int _1298;
  unsigned int _1299;
  unsigned int _1300;
  unsigned int _1302;
  unsigned int _1303;
  unsigned int _1304;
  unsigned int _1305;
  unsigned int _1306;
  unsigned int _1311;
  unsigned int _1312;
  unsigned int _1313;
  unsigned int _1314;
  unsigned int _1315;
  unsigned int _1316;
  unsigned int _1317;
  unsigned int _1318;
  unsigned int _1319;
  unsigned int _1323;
  unsigned int _1324;
  unsigned int _1325;
  unsigned int _1326;
  unsigned int _1327;
  unsigned int _1329;
  unsigned int _1330;
  unsigned int _1331;
  unsigned int _1333;
  unsigned int _1334;
  unsigned int _1335;
  unsigned int _1336;
  unsigned int _1337;
  unsigned int _1339;
  unsigned int _1340;
  unsigned int _1341;
  unsigned int _1342;
  unsigned int _1343;
  unsigned int _1348;
  unsigned int _1349;
  unsigned int _1350;
  unsigned int _1351;
  unsigned int _1352;
  unsigned int _1353;
  unsigned int _1354;
  unsigned int _1355;
  unsigned int _1356;
  unsigned int _1360;
  unsigned int _1361;
  unsigned int _1362;
  unsigned int _1363;
  unsigned int _1364;
  unsigned int _1366;
  unsigned int _1367;
  unsigned int _1368;
  unsigned int _1370;
  unsigned int _1371;
  unsigned int _1372;
  unsigned int _1373;
  unsigned int _1374;
  unsigned int _1376;
  unsigned int _1377;
  unsigned int _1378;
  unsigned int _1379;
  unsigned int _1380;
  unsigned int _1385;
  unsigned int _1386;
  unsigned int _1387;
  unsigned int _1388;
  unsigned int _1389;
  unsigned int _1390;
  unsigned int _1391;
  unsigned int _1392;
  unsigned int _1393;
  unsigned int _1397;
  unsigned int _1398;
  unsigned int _1399;
  unsigned int _1400;
  unsigned int _1401;
  unsigned int _1403;
  unsigned int _1404;
  unsigned int _1405;
  unsigned int _1407;
  unsigned int _1408;
  unsigned int _1409;
  unsigned int _1410;
  unsigned int _1411;
  unsigned int _1413;
  unsigned int _1414;
  unsigned int _1415;
  unsigned int _1416;
  unsigned int _1417;
  unsigned int _1422;
  unsigned int _1423;
  unsigned int _1424;
  unsigned int _1425;
  unsigned int _1426;
  unsigned int _1427;
  unsigned int _1428;
  unsigned int _1429;
  unsigned int _1430;
  unsigned int _1434;
  unsigned int _1435;
  unsigned int _1436;
  unsigned int _1437;
  unsigned int _1438;
  unsigned int _1440;
  unsigned int _1441;
  unsigned int _1442;
  unsigned int _1444;
  unsigned int _1445;
  unsigned int _1446;
  unsigned int _1447;
  unsigned int _1448;
  unsigned int _1450;
  unsigned int _1451;
  unsigned int _1452;
  unsigned int _1453;
  unsigned int _1454;
  unsigned int _1459;
  unsigned int _1460;
  unsigned int _1461;
  unsigned int _1462;
  unsigned int _1463;
  unsigned int _1464;
  unsigned int _1465;
  unsigned int _1466;
  unsigned int _1467;
  unsigned int _1471;
  unsigned int _1472;
  unsigned int _1473;
  unsigned int _1474;
  unsigned int _1475;
  unsigned int _1477;
  unsigned int _1478;
  unsigned int _1479;
  unsigned int _1481;
  unsigned int _1482;
  unsigned int _1483;
  unsigned int _1484;
  unsigned int _1485;
  unsigned int _1487;
  unsigned int _1488;
  unsigned int _1489;
  unsigned int _1490;
  unsigned int _1491;
  unsigned int _1496;
  unsigned int _1497;
  unsigned int _1498;
  unsigned int _1499;
  unsigned int _1500;
  unsigned int _1501;
  unsigned int _1502;
  unsigned int _1503;
  unsigned int _1504;
  unsigned int _1508;
  unsigned int _1509;
  unsigned int _1510;
  unsigned int _1511;
  unsigned int _1512;
  unsigned int _1514;
  unsigned int _1515;
  unsigned int _1516;
  unsigned int _1518;
  unsigned int _1519;
  unsigned int _1520;
  unsigned int _1521;
  unsigned int _1522;
  unsigned int _1524;
  unsigned int _1525;
  unsigned int _1526;
  unsigned int _1527;
  unsigned int _1528;
  unsigned int _1533;
  unsigned int _1534;
  unsigned int _1535;
  unsigned int _1536;
  unsigned int _1537;
  unsigned int _1538;
  unsigned int _1539;
  unsigned int _1540;
  unsigned int _1541;
  unsigned int _1545;
  unsigned int _1546;
  unsigned int _1547;
  unsigned int _1548;
  unsigned int _1549;
  unsigned int _1551;
  unsigned int _1552;
  unsigned int _1553;
  unsigned int _1555;
  unsigned int _1556;
  unsigned int _1557;
  unsigned int _1558;
  unsigned int _1559;
  unsigned int _1561;
  unsigned int _1562;
  unsigned int _1563;
  unsigned int _1564;
  unsigned int _1565;
  unsigned int _1570;
  unsigned int _1571;
  unsigned int _1572;
  unsigned int _1573;
  unsigned int _1574;
  unsigned int _1575;
  unsigned int _1576;
  unsigned int _1577;
  unsigned int _1578;
  unsigned int _1582;
  unsigned int _1583;
  unsigned int _1584;
  unsigned int _1585;
  unsigned int _1586;
  unsigned int _1588;
  unsigned int _1589;
  unsigned int _1590;
  unsigned int _1592;
  unsigned int _1593;
  unsigned int _1594;
  unsigned int _1595;
  unsigned int _1596;
  unsigned int _1598;
  unsigned int _1599;
  unsigned int _1600;
  unsigned int _1601;
  unsigned int _1602;
  unsigned int _1607;
  unsigned int _1608;
  unsigned int _1609;
  unsigned int _1610;
  unsigned int _1611;
  unsigned int _1612;
  unsigned int _1613;
  unsigned int _1614;
  unsigned int _1615;
  unsigned int _1619;
  unsigned int _1620;
  unsigned int _1621;
  unsigned int _1622;
  unsigned int _1623;
  unsigned int _1625;
  unsigned int _1626;
  unsigned int _1627;
  unsigned int _1629;
  unsigned int _1630;
  unsigned int _1631;
  unsigned int _1632;
  unsigned int _1633;
  unsigned int _1635;
  unsigned int _1636;
  unsigned int _1637;
  unsigned int _1638;
  unsigned int _1639;
  unsigned int _1644;
  unsigned int _1645;
  unsigned int _1646;
  unsigned int _1647;
  unsigned int _1648;
  unsigned int _1649;
  unsigned int _1650;
  unsigned int _1651;
  unsigned int _1652;
  unsigned int _1656;
  unsigned int _1657;
  unsigned int _1658;
  unsigned int _1659;
  unsigned int _1660;
  unsigned int _1662;
  unsigned int _1663;
  unsigned int _1664;
  unsigned int _1666;
  unsigned int _1667;
  unsigned int _1668;
  unsigned int _1669;
  unsigned int _1670;
  unsigned int _1672;
  unsigned int _1673;
  unsigned int _1674;
  unsigned int _1675;
  unsigned int _1676;
  unsigned int _1681;
  unsigned int _1682;
  unsigned int _1683;
  unsigned int _1684;
  unsigned int _1685;
  unsigned int _1686;
  unsigned int _1687;
  unsigned int _1688;
  unsigned int _1689;
  unsigned int _1693;
  unsigned int _1694;
  unsigned int _1695;
  unsigned int _1696;
  unsigned int _1697;
  unsigned int _1699;
  unsigned int _1700;
  unsigned int _1701;
  unsigned int _1703;
  unsigned int _1704;
  unsigned int _1705;
  unsigned int _1706;
  unsigned int _1707;
  unsigned int _1709;
  unsigned int _1710;
  unsigned int _1711;
  unsigned int _1712;
  unsigned int _1713;
  unsigned int _1718;
  unsigned int _1719;
  unsigned int _1720;
  unsigned int _1721;
  unsigned int _1722;
  unsigned int _1723;
  unsigned int _1724;
  unsigned int _1725;
  unsigned int _1726;
  unsigned int _1730;
  unsigned int _1731;
  unsigned int _1732;
  unsigned int _1733;
  unsigned int _1734;
  unsigned int _1736;
  unsigned int _1737;
  unsigned int _1738;
  unsigned int _1740;
  unsigned int _1741;
  unsigned int _1742;
  unsigned int _1743;
  unsigned int _1744;
  unsigned int _1746;
  unsigned int _1747;
  unsigned int _1748;
  unsigned int _1749;
  unsigned int _1750;
  unsigned int _1755;
  unsigned int _1756;
  unsigned int _1757;
  unsigned int _1758;
  unsigned int _1759;
  unsigned int _1760;
  unsigned int _1761;
  unsigned int _1762;
  unsigned int _1763;
  unsigned int _1767;
  unsigned int _1768;
  unsigned int _1769;
  unsigned int _1770;
  unsigned int _1771;
  unsigned int _1773;
  unsigned int _1774;
  unsigned int _1775;
  unsigned int _1777;
  unsigned int _1778;
  unsigned int _1779;
  unsigned int _1780;
  unsigned int _1781;
  unsigned int _1783;
  unsigned int _1784;
  unsigned int _1785;
  unsigned int _1786;
  unsigned int _1787;
  unsigned int _1792;
  unsigned int _1793;
  unsigned int _1794;
  unsigned int _1795;
  unsigned int _1796;
  unsigned int _1797;
  unsigned int _1798;
  unsigned int _1799;
  unsigned int _1800;
  unsigned int _1804;
  unsigned int _1805;
  unsigned int _1806;
  unsigned int _1807;
  unsigned int _1808;
  unsigned int _1810;
  unsigned int _1811;
  unsigned int _1812;
  unsigned int _1814;
  unsigned int _1815;
  unsigned int _1816;
  unsigned int _1817;
  unsigned int _1818;
  unsigned int _1820;
  unsigned int _1821;
  unsigned int _1822;
  unsigned int _1823;
  unsigned int _1824;
  unsigned int _1829;
  unsigned int _1830;
  unsigned int _1831;
  unsigned int _1832;
  unsigned int _1833;
  unsigned int _1834;
  unsigned int _1835;
  unsigned int _1836;
  unsigned int _1837;
  unsigned int _1841;
  unsigned int _1842;
  unsigned int _1843;
  unsigned int _1844;
  unsigned int _1845;
  unsigned int _1847;
  unsigned int _1848;
  unsigned int _1849;
  unsigned int _1851;
  unsigned int _1852;
  unsigned int _1853;
  unsigned int _1854;
  unsigned int _1855;
  unsigned int _1857;
  unsigned int _1858;
  unsigned int _1859;
  unsigned int _1860;
  unsigned int _1861;
  unsigned int _1866;
  unsigned int _1867;
  unsigned int _1868;
  unsigned int _1869;
  unsigned int _1870;
  unsigned int _1871;
  unsigned int _1872;
  unsigned int _1873;
  unsigned int _1874;
  unsigned int _1878;
  unsigned int _1879;
  unsigned int _1880;
  unsigned int _1881;
  unsigned int _1882;
  unsigned int _1884;
  unsigned int _1885;
  unsigned int _1886;
  unsigned int _1888;
  unsigned int _1889;
  unsigned int _1890;
  unsigned int _1891;
  unsigned int _1892;
  unsigned int _1894;
  unsigned int _1895;
  unsigned int _1896;
  unsigned int _1897;
  unsigned int _1898;
  unsigned int _1903;
  unsigned int _1904;
  unsigned int _1905;
  unsigned int _1906;
  unsigned int _1907;
  unsigned int _1908;
  unsigned int _1909;
  unsigned int _1910;
  unsigned int _1911;
  unsigned int _1915;
  unsigned int _1916;
  unsigned int _1917;
  unsigned int _1918;
  unsigned int _1919;
  unsigned int _1921;
  unsigned int _1922;
  unsigned int _1923;
  unsigned int _1925;
  unsigned int _1926;
  unsigned int _1927;
  unsigned int _1928;
  unsigned int _1929;
  unsigned int _1931;
  unsigned int _1932;
  unsigned int _1933;
  unsigned int _1934;
  unsigned int _1935;
  unsigned int _1940;
  unsigned int _1941;
  unsigned int _1942;
  unsigned int _1943;
  unsigned int _1944;
  unsigned int _1945;
  unsigned int _1946;
  unsigned int _1947;
  unsigned int _1948;
  unsigned int _1952;
  unsigned int _1953;
  unsigned int _1954;
  unsigned int _1955;
  unsigned int _1956;
  unsigned int _1958;
  unsigned int _1959;
  unsigned int _1960;
  unsigned int _1962;
  unsigned int _1963;
  unsigned int _1964;
  unsigned int _1965;
  unsigned int _1966;
  unsigned int _1968;
  unsigned int _1969;
  unsigned int _1970;
  unsigned int _1971;
  unsigned int _1972;
  unsigned int _1977;
  unsigned int _1978;
  unsigned int _1979;
  unsigned int _1980;
  unsigned int _1981;
  unsigned int _1982;
  unsigned int _1983;
  unsigned int _1984;
  unsigned int _1985;
  unsigned int _1989;
  unsigned int _1990;
  unsigned int _1991;
  unsigned int _1992;
  unsigned int _1993;
  unsigned int _1995;
  unsigned int _1996;
  unsigned int _1997;
  unsigned int _1999;
  unsigned int _2000;
  unsigned int _2001;
  unsigned int _2002;
  unsigned int _2003;
  unsigned int _2005;
  unsigned int _2006;
  unsigned int _2007;
  unsigned int _2008;
  unsigned int _2009;
  unsigned int _2014;
  unsigned int _2015;
  unsigned int _2016;
  unsigned int _2017;
  unsigned int _2018;
  unsigned int _2019;
  unsigned int _2020;
  unsigned int _2021;
  unsigned int _2022;
  unsigned int _2026;
  unsigned int _2027;
  unsigned int _2028;
  unsigned int _2029;
  unsigned int _2030;
  unsigned int _2032;
  unsigned int _2033;
  unsigned int _2034;
  unsigned int _2036;
  unsigned int _2037;
  unsigned int _2038;
  unsigned int _2039;
  unsigned int _2040;
  unsigned int _2042;
  unsigned int _2043;
  unsigned int _2044;
  unsigned int _2045;
  unsigned int _2046;
  unsigned int _2051;
  unsigned int _2052;
  unsigned int _2053;
  unsigned int _2054;
  unsigned int _2055;
  unsigned int _2056;
  unsigned int _2057;
  unsigned int _2058;
  unsigned int _2059;
  unsigned int _2063;
  unsigned int _2064;
  unsigned int _2065;
  unsigned int _2066;
  unsigned int _2067;
  unsigned int _2069;
  unsigned int _2070;
  unsigned int _2071;
  unsigned int _2073;
  unsigned int _2074;
  unsigned int _2075;
  unsigned int _2076;
  unsigned int _2077;
  unsigned int _2079;
  unsigned int _2080;
  unsigned int _2081;
  unsigned int _2082;
  unsigned int _2083;
  unsigned int _2088;
  unsigned int _2089;
  unsigned int _2090;
  unsigned int _2091;
  unsigned int _2092;
  unsigned int _2093;
  unsigned int _2094;
  unsigned int _2095;
  unsigned int _2096;
  unsigned int _2100;
  unsigned int _2101;
  unsigned int _2102;
  unsigned int _2103;
  unsigned int _2104;
  unsigned int _2106;
  unsigned int _2107;
  unsigned int _2108;
  unsigned int _2110;
  unsigned int _2111;
  unsigned int _2112;
  unsigned int _2113;
  unsigned int _2114;
  unsigned int _2116;
  unsigned int _2117;
  unsigned int _2118;
  unsigned int _2119;
  unsigned int _2120;
  unsigned int _2125;
  unsigned int _2126;
  unsigned int _2127;
  unsigned int _2128;
  unsigned int _2129;
  unsigned int _2130;
  unsigned int _2131;
  unsigned int _2132;
  unsigned int _2133;
  unsigned int _2137;
  unsigned int _2138;
  unsigned int _2139;
  unsigned int _2140;
  unsigned int _2141;
  unsigned int _2143;
  unsigned int _2144;
  unsigned int _2145;
  unsigned int _2147;
  unsigned int _2148;
  unsigned int _2149;
  unsigned int _2150;
  unsigned int _2151;
  unsigned int _2153;
  unsigned int _2154;
  unsigned int _2155;
  unsigned int _2156;
  unsigned int _2157;
  unsigned int _2162;
  unsigned int _2163;
  unsigned int _2164;
  unsigned int _2165;
  unsigned int _2166;
  unsigned int _2167;
  unsigned int _2168;
  unsigned int _2169;
  unsigned int _2170;
  unsigned int _2174;
  unsigned int _2175;
  unsigned int _2176;
  unsigned int _2177;
  unsigned int _2178;
  unsigned int _2180;
  unsigned int _2181;
  unsigned int _2182;
  unsigned int _2184;
  unsigned int _2185;
  unsigned int _2186;
  unsigned int _2187;
  unsigned int _2188;
  unsigned int _2190;
  unsigned int _2191;
  unsigned int _2192;
  unsigned int _2193;
  unsigned int _2194;
  unsigned int _2199;
  unsigned int _2200;
  unsigned int _2201;
  unsigned int _2202;
  unsigned int _2203;
  unsigned int _2204;
  unsigned int _2205;
  unsigned int _2206;
  unsigned int _2207;
  unsigned int _2211;
  unsigned int _2212;
  unsigned int _2213;
  unsigned int _2214;
  unsigned int _2215;
  unsigned int _2217;
  unsigned int _2218;
  unsigned int _2219;
  unsigned int _2221;
  unsigned int _2222;
  unsigned int _2223;
  unsigned int _2224;
  unsigned int _2225;
  unsigned int _2227;
  unsigned int _2228;
  unsigned int _2229;
  unsigned int _2230;
  unsigned int _2231;
  unsigned int _2236;
  unsigned int _2237;
  unsigned int _2238;
  unsigned int _2239;
  unsigned int _2240;
  unsigned int _2241;
  unsigned int _2242;
  unsigned int _2243;
  unsigned int _2244;
  unsigned int _2248;
  unsigned int _2249;
  unsigned int _2250;
  unsigned int _2251;
  unsigned int _2252;
  unsigned int _2254;
  unsigned int _2255;
  unsigned int _2256;
  unsigned int _2258;
  unsigned int _2259;
  unsigned int _2260;
  unsigned int _2261;
  unsigned int _2262;
  unsigned int _2264;
  unsigned int _2265;
  unsigned int _2266;
  unsigned int _2267;
  unsigned int _2268;
  unsigned int _2273;
  unsigned int _2274;
  unsigned int _2275;
  unsigned int _2276;
  unsigned int _2277;
  unsigned int _2278;
  unsigned int _2279;
  unsigned int _2280;
  unsigned int _2281;
  unsigned int _2285;
  unsigned int _2286;
  unsigned int _2287;
  unsigned int _2288;
  unsigned int _2289;
  unsigned int _2291;
  unsigned int _2292;
  unsigned int _2293;
  unsigned int _2295;
  unsigned int _2296;
  unsigned int _2297;
  unsigned int _2298;
  unsigned int _2299;
  unsigned int _2302;
  unsigned int _2303;
  unsigned int _2304;
  unsigned int _2305;
  unsigned int _2306;
  unsigned int _2310;
  unsigned int _2311;
  unsigned int _2312;
  unsigned int _2313;
  unsigned int _2314;
  unsigned int _2315;
  unsigned int _2316;
  unsigned int _2317;
  unsigned int _2318;
  unsigned int _2322;
  unsigned int _2323;
  unsigned int _2324;
  unsigned int _2325;
  unsigned int _2326;
  unsigned int _2328;
  unsigned int _2329;
  unsigned int _2330;
  unsigned int _2332;
  unsigned int _2333;
  unsigned int _2334;
  unsigned int _2335;
  unsigned int _2336;
  unsigned int _2339;
  unsigned int _2340;
  unsigned int _2341;
  unsigned int _2342;
  unsigned int _2343;
  unsigned int _2347;
  unsigned int _2348;
  unsigned int _2349;
  unsigned int _2350;
  unsigned int _2351;
  unsigned int _2352;
  unsigned int _2353;
  unsigned int _2354;
  unsigned int _2355;
  unsigned int _2359;
  unsigned int _2360;
  unsigned int _2361;
  unsigned int _2362;
  unsigned int _2363;
  unsigned int _2364;
  unsigned int _2365;
  unsigned int _2366;
  unsigned int _2375;
  unsigned int _2376;
  unsigned int _2378;
  unsigned int _2381;
  unsigned int _2382;
  unsigned int _2383;
  unsigned int _2387;
  unsigned int _2388;
  unsigned int _2389;
  unsigned int _2390;
  unsigned int _2391;
  unsigned int _2392;
  unsigned int _2393;
  unsigned int _2394;
  unsigned int _2395;
  unsigned int _2396;
  unsigned int _2397;
  unsigned int _2398;
  unsigned int _2399;
  unsigned int _2400;
  unsigned int _2401;
  unsigned int _2402;
  unsigned int _2403;
  unsigned int _2404;
  unsigned int _2405;
  unsigned int _2406;
  unsigned int _2407;
  unsigned int _2408;
  unsigned int _2409;
  unsigned int _2410;
  unsigned int _2411;
  unsigned int _2412;
  unsigned int _2413;
  unsigned int _2414;
  unsigned int _2415;
  unsigned int _2416;
  unsigned int _2417;
  unsigned int _2418;
  unsigned int _2419;
  unsigned int _2420;
  unsigned int _2421;
  unsigned int _2422;
  unsigned int _2423;
  unsigned int _2424;
  unsigned int _2425;
  unsigned int _2426;
  unsigned int _2427;
  unsigned int _2428;
  unsigned int _2429;
  unsigned int _2430;
  unsigned int _2431;
  unsigned int _2432;
  unsigned int _2433;
  unsigned int _2434;
  unsigned int _2435;
  unsigned int _2436;
  unsigned int _2437;
  unsigned int _2438;
  unsigned int _2439;
  unsigned int _2440;
  unsigned int _2441;
  unsigned int _2442;
  unsigned int _2443;
  unsigned int _2444;
  unsigned int _2445;
  unsigned int _2446;
  unsigned int _2447;
  unsigned int _2448;
  unsigned int _2449;
  unsigned int _2450;
  unsigned int _2451;
  unsigned int _2452;
  unsigned int _2453;
  unsigned int _2454;
  unsigned int _2455;
  unsigned int _2456;
  unsigned int _2457;
  unsigned int _2458;
  unsigned int _2459;
  unsigned int _2460;
  unsigned int _2461;
  unsigned int _2462;
  unsigned int _2463;
  unsigned int _2464;
  unsigned int _2465;
  unsigned int _2466;
  unsigned int _2467;
  unsigned int _2468;
  unsigned int _2469;
  unsigned int _2470;
  unsigned int _2471;
  unsigned int _2472;
  unsigned int _2473;
  unsigned int _2474;
  unsigned int _2475;
  unsigned int _2476;
  unsigned int _2477;
  unsigned int _2478;
  unsigned int _2479;
  unsigned int _2480;
  unsigned int _2481;
  unsigned int _2482;
  unsigned int _2483;
  unsigned int _2484;
  unsigned int _2485;
  unsigned int _2486;
  unsigned int _2487;
  unsigned int _2488;
  unsigned int _2489;
  unsigned int _2490;
  unsigned int _2491;
  unsigned int _2492;
  unsigned int _2493;
  unsigned int _2494;
  unsigned int _2495;
  unsigned int _2496;
  unsigned int _2497;
  unsigned int _2498;
  unsigned int _2499;
  unsigned int _2500;
  unsigned int _2501;
  unsigned int _2502;
  unsigned int _2503;
  unsigned int _2504;
  unsigned int _2505;
  unsigned int _2506;
  unsigned int _2507;
  unsigned int _2508;
  unsigned int _2509;
  unsigned int _2510;
  unsigned int _2511;
  unsigned int _2512;
  unsigned int _2513;
  unsigned int _2514;
  unsigned int _2515;
  unsigned int _2516;
  unsigned int _2517;
  unsigned int _2518;
  unsigned int _2519;
  unsigned int _2520;
  unsigned int _2521;
  unsigned int _2522;
  unsigned int _2523;
  unsigned int _2524;
  unsigned int _2525;
  unsigned int _2526;
  unsigned int _2527;
  unsigned int _2528;
  unsigned int _2529;
  unsigned int _2530;
  unsigned int _2531;
  unsigned int _2532;
  unsigned int _2533;
  unsigned int _2534;
  unsigned int _2535;
  unsigned int _2536;
  unsigned int _2537;
  unsigned int _2538;
  unsigned int _2539;
  unsigned int _2540;
  unsigned int _2541;
  unsigned int _2542;
  unsigned int _2543;
  unsigned int _2544;
  unsigned int _2545;
  unsigned int _2546;
  unsigned int _2547;
  unsigned int _2548;
  unsigned int _2549;
  unsigned int _2550;
  unsigned int _2551;
  unsigned int _2552;
  unsigned int _2553;
  unsigned int _2554;
  unsigned int _2555;
  unsigned int _2556;
  unsigned int _2557;
  unsigned int _2558;
  unsigned int _2559;
  unsigned int _2560;
  unsigned int _2561;
  unsigned int _2562;
  unsigned int _2563;
  unsigned int _2564;
  unsigned int _2565;
  unsigned int _2566;
  unsigned int _2567;
  unsigned int _2568;
  unsigned int _2569;
  unsigned int _2570;
  unsigned int _2571;
  unsigned int _2572;
  unsigned int _2573;
  unsigned int _2574;
  unsigned int _2575;
  unsigned int _2576;
  unsigned int _2577;
  unsigned int _2578;
  unsigned int _2579;
  unsigned int _2580;
  unsigned int _2581;
  unsigned int _2582;
  unsigned int _2583;
  unsigned int _2584;
  unsigned int _2585;
  unsigned int _2586;
  unsigned int _2587;
  unsigned int _2588;
  unsigned int _2589;
  unsigned int _2590;
  unsigned int _2591;
  unsigned int _2592;
  unsigned int _2593;
  unsigned int _2594;
  unsigned int _2595;
  unsigned int _2596;
  unsigned int _2597;
  unsigned int _2598;
  unsigned int _2599;
  unsigned int _2600;
  unsigned int _2601;
  unsigned int _2602;
  unsigned int _2603;
  unsigned int _2604;
  unsigned int _2605;
  unsigned int _2606;
  unsigned int _2607;
  unsigned int _2608;
  unsigned int _2609;
  unsigned int _2610;
  unsigned int _2611;
  unsigned int _2612;
  unsigned int _2613;
  unsigned int _2614;
  unsigned int _2615;
  unsigned int _2616;
  unsigned int _2617;
  unsigned int _2618;
  unsigned int _2619;
  unsigned int _2620;
  unsigned int _2621;
  unsigned int _2622;
  unsigned int _2623;
  unsigned int _2624;
  unsigned int _2625;
  unsigned int _2628;
  unsigned int _2629;
  unsigned int _2630;
  unsigned int _2633;
  unsigned int _2634;
  unsigned int _2635;
  unsigned int _2638;
  unsigned int _2639;
  unsigned int _2640;
  unsigned int _2643;
  unsigned int _2644;
  unsigned int _2645;
  unsigned int _2648;
  unsigned int _2649;
  unsigned int _2650;
  unsigned int _2653;
  unsigned int _2654;
  unsigned int _2655;
  unsigned int _2658;
  unsigned int _2659;
  unsigned int _2660;
  unsigned int _2663;
  unsigned int _2664;
  unsigned int _2665;
  unsigned int _2668;
  unsigned int _2669;
  unsigned int _2670;
  unsigned int _2673;
  unsigned int _2674;
  unsigned int _2675;
  unsigned int _2678;
  unsigned int _2679;
  unsigned int _2680;
  unsigned int _2683;
  unsigned int _2684;
  unsigned int _2685;
  unsigned int _2688;
  unsigned int _2689;
  unsigned int _2690;
  unsigned int _2693;
  unsigned int _2694;
  unsigned int _2695;
  unsigned int _2698;
  unsigned int _2699;
  unsigned int _2700;

  <bb 2> [local count: 118111601]:
  _1 = hash_19(D)->bytes;
  bufsize_20 = _1 & 63;
  _3 = _1 + len_21(D);
  hash_19(D)->bytes = _3;
  _9 = bufsize_20 + len_21(D);
  pretmp_214 = &hash_19(D)->buf;
  if (_9 > 63)
    goto <bb 4>; [89.00%]
  else
    goto <bb 3>; [11.00%]

  <bb 3> [local count: 12992276]:
  _218 = pretmp_214 + bufsize_20;
  goto <bb 6>; [100.00%]

  <bb 4> [local count: 955630224]:
  # data_26 = PHI <data_23(D)(2), data_24(4)>
  # bufsize_2377 = PHI <bufsize_20(2), 0(4)>
  # ivtmp.210_51 = PHI <_9(2), ivtmp.210_52(4)>
  _4 = 64 - bufsize_2377;
  _6 = pretmp_214 + bufsize_2377;
  __builtin_memcpy (_6, data_26, _4);
  data_24 = data_26 + _4;
  a_31 = MEM[(uint32_t *)hash_19(D)];
  b_32 = MEM[(uint32_t *)hash_19(D) + 4B];
  c_33 = MEM[(uint32_t *)hash_19(D) + 8B];
  d_34 = MEM[(uint32_t *)hash_19(D) + 12B];
  e_35 = MEM[(uint32_t *)hash_19(D) + 16B];
  f_36 = MEM[(uint32_t *)hash_19(D) + 20B];
  g_37 = MEM[(uint32_t *)hash_19(D) + 24B];
  h_38 = MEM[(uint32_t *)hash_19(D) + 28B];
  _39 = e_35 r>> 6;
  _40 = e_35 r>> 11;
  _41 = _39 ^ _40;
  _42 = e_35 r>> 25;
  _43 = _41 ^ _42;
  _2698 = h_38 + 1116352408;
  _45 = f_36 ^ g_37;
  _46 = e_35 & _45;
  _47 = g_37 ^ _46;
  _2699 = _43 + _2698;
  load_dst_127 = MEM[(const uint32_t *)hash_19(D) + 32B];
  w0_58 = __builtin_bswap32 (load_dst_127);
  _2700 = _47 + _2699;
  t1_60 = w0_58 + _2700;
  _61 = a_31 r>> 2;
  _62 = a_31 r>> 13;
  _63 = _61 ^ _62;
  _64 = a_31 r>> 22;
  _65 = _63 ^ _64;
  _66 = a_31 & b_32;
  _67 = a_31 | b_32;
  _68 = c_33 & _67;
  _69 = _66 | _68;
  t2_70 = _65 + _69;
  d_71 = d_34 + t1_60;
  h_72 = t1_60 + t2_70;
  _73 = d_71 r>> 6;
  _74 = d_71 r>> 11;
  _75 = _73 ^ _74;
  _76 = d_71 r>> 25;
  _77 = _75 ^ _76;
  _2693 = g_37 + 1899447441;
  _79 = e_35 ^ f_36;
  _80 = d_71 & _79;
  _81 = f_36 ^ _80;
  load_dst_124 = MEM[(const uint32_t *)hash_19(D) + 36B];
  w1_92 = __builtin_bswap32 (load_dst_124);
  _2694 = w1_92 + _2693;
  _2695 = _81 + _2694;
  t1_94 = _77 + _2695;
  _95 = h_72 r>> 2;
  _96 = h_72 r>> 13;
  _97 = _95 ^ _96;
  _98 = h_72 r>> 22;
  _99 = _97 ^ _98;
  _100 = a_31 & h_72;
  _101 = a_31 | h_72;
  _102 = b_32 & _101;
  _103 = _100 | _102;
  t2_104 = _99 + _103;
  c_105 = c_33 + t1_94;
  g_106 = t1_94 + t2_104;
  _107 = c_105 r>> 6;
  _108 = c_105 r>> 11;
  _109 = _107 ^ _108;
  _110 = c_105 r>> 25;
  _111 = _109 ^ _110;
  _2688 = f_36 + 3049323471;
  _113 = e_35 ^ d_71;
  _114 = c_105 & _113;
  _115 = e_35 ^ _114;
  load_dst_121 = MEM[(const uint32_t *)hash_19(D) + 40B];
  w2_126 = __builtin_bswap32 (load_dst_121);
  _2689 = w2_126 + _2688;
  _2690 = _115 + _2689;
  t1_128 = _111 + _2690;
  _129 = g_106 r>> 2;
  _130 = g_106 r>> 13;
  _131 = _129 ^ _130;
  _132 = g_106 r>> 22;
  _133 = _131 ^ _132;
  _134 = h_72 & g_106;
  _135 = h_72 | g_106;
  _136 = a_31 & _135;
  _137 = _134 | _136;
  t2_138 = _133 + _137;
  b_139 = b_32 + t1_128;
  f_140 = t1_128 + t2_138;
  _141 = b_139 r>> 6;
  _142 = b_139 r>> 11;
  _143 = _141 ^ _142;
  _144 = b_139 r>> 25;
  _145 = _143 ^ _144;
  _2683 = e_35 + 3921009573;
  _147 = d_71 ^ c_105;
  _148 = b_139 & _147;
  _149 = d_71 ^ _148;
  load_dst_116 = MEM[(const uint32_t *)hash_19(D) + 44B];
  w3_160 = __builtin_bswap32 (load_dst_116);
  _2684 = w3_160 + _2683;
  _2685 = _149 + _2684;
  t1_162 = _145 + _2685;
  _163 = f_140 r>> 2;
  _164 = f_140 r>> 13;
  _165 = _163 ^ _164;
  _166 = f_140 r>> 22;
  _167 = _165 ^ _166;
  _168 = g_106 & f_140;
  _169 = g_106 | f_140;
  _170 = h_72 & _169;
  _171 = _168 | _170;
  t2_172 = _167 + _171;
  a_173 = a_31 + t1_162;
  e_174 = t1_162 + t2_172;
  _175 = a_173 r>> 6;
  _176 = a_173 r>> 11;
  _177 = _175 ^ _176;
  _178 = a_173 r>> 25;
  _179 = _177 ^ _178;
  _181 = c_105 ^ b_139;
  _182 = a_173 & _181;
  _183 = c_105 ^ _182;
  load_dst_112 = MEM[(const uint32_t *)hash_19(D) + 48B];
  w4_194 = __builtin_bswap32 (load_dst_112);
  _2678 = w4_194 + 961987163;
  _2679 = d_71 + _2678;
  _2680 = _183 + _2679;
  t1_196 = _179 + _2680;
  _197 = e_174 r>> 2;
  _198 = e_174 r>> 13;
  _199 = _197 ^ _198;
  _200 = e_174 r>> 22;
  _201 = _199 ^ _200;
  _202 = f_140 & e_174;
  _203 = f_140 | e_174;
  _204 = g_106 & _203;
  _205 = _202 | _204;
  t2_206 = _201 + _205;
  h_207 = h_72 + t1_196;
  d_208 = t1_196 + t2_206;
  _209 = h_207 r>> 6;
  _210 = h_207 r>> 11;
  _211 = _209 ^ _210;
  _212 = h_207 r>> 25;
  _213 = _211 ^ _212;
  _215 = b_139 ^ a_173;
  _216 = h_207 & _215;
  _217 = b_139 ^ _216;
  load_dst_93 = MEM[(const uint32_t *)hash_19(D) + 52B];
  w5_228 = __builtin_bswap32 (load_dst_93);
  _2673 = w5_228 + 1508970993;
  _2674 = c_105 + _2673;
  _2675 = _217 + _2674;
  t1_230 = _213 + _2675;
  _231 = d_208 r>> 2;
  _232 = d_208 r>> 13;
  _233 = _231 ^ _232;
  _234 = d_208 r>> 22;
  _235 = _233 ^ _234;
  _236 = e_174 & d_208;
  _237 = e_174 | d_208;
  _238 = f_140 & _237;
  _239 = _236 | _238;
  t2_240 = _235 + _239;
  g_241 = g_106 + t1_230;
  c_242 = t1_230 + t2_240;
  _243 = g_241 r>> 6;
  _244 = g_241 r>> 11;
  _245 = _243 ^ _244;
  _246 = g_241 r>> 25;
  _247 = _245 ^ _246;
  _249 = a_173 ^ h_207;
  _250 = g_241 & _249;
  _251 = a_173 ^ _250;
  load_dst_90 = MEM[(const uint32_t *)hash_19(D) + 56B];
  w6_262 = __builtin_bswap32 (load_dst_90);
  _2668 = w6_262 + 2453635748;
  _2669 = b_139 + _2668;
  _2670 = _251 + _2669;
  t1_264 = _247 + _2670;
  _265 = c_242 r>> 2;
  _266 = c_242 r>> 13;
  _267 = _265 ^ _266;
  _268 = c_242 r>> 22;
  _269 = _267 ^ _268;
  _270 = d_208 & c_242;
  _271 = d_208 | c_242;
  _272 = e_174 & _271;
  _273 = _270 | _272;
  t2_274 = _269 + _273;
  f_275 = f_140 + t1_264;
  b_276 = t1_264 + t2_274;
  _277 = f_275 r>> 6;
  _278 = f_275 r>> 11;
  _279 = _277 ^ _278;
  _280 = f_275 r>> 25;
  _281 = _279 ^ _280;
  _283 = h_207 ^ g_241;
  _284 = f_275 & _283;
  _285 = h_207 ^ _284;
  load_dst_87 = MEM[(const uint32_t *)hash_19(D) + 60B];
  w7_296 = __builtin_bswap32 (load_dst_87);
  _2663 = w7_296 + 2870763221;
  _2664 = a_173 + _2663;
  _2665 = _285 + _2664;
  t1_298 = _281 + _2665;
  _299 = b_276 r>> 2;
  _300 = b_276 r>> 13;
  _301 = _299 ^ _300;
  _302 = b_276 r>> 22;
  _303 = _301 ^ _302;
  _304 = c_242 & b_276;
  _305 = c_242 | b_276;
  _306 = d_208 & _305;
  _307 = _304 | _306;
  t2_308 = _303 + _307;
  e_309 = e_174 + t1_298;
  a_310 = t1_298 + t2_308;
  _311 = e_309 r>> 6;
  _312 = e_309 r>> 11;
  _313 = _311 ^ _312;
  _314 = e_309 r>> 25;
  _315 = _313 ^ _314;
  _317 = g_241 ^ f_275;
  _318 = e_309 & _317;
  _319 = g_241 ^ _318;
  load_dst_82 = MEM[(const uint32_t *)hash_19(D) + 64B];
  w8_330 = __builtin_bswap32 (load_dst_82);
  _2658 = w8_330 + 3624381080;
  _2659 = h_207 + _2658;
  _2660 = _319 + _2659;
  t1_332 = _315 + _2660;
  _333 = a_310 r>> 2;
  _334 = a_310 r>> 13;
  _335 = _333 ^ _334;
  _336 = a_310 r>> 22;
  _337 = _335 ^ _336;
  _338 = b_276 & a_310;
  _339 = b_276 | a_310;
  _340 = c_242 & _339;
  _341 = _338 | _340;
  t2_342 = _337 + _341;
  d_343 = d_208 + t1_332;
  h_344 = t1_332 + t2_342;
  _345 = d_343 r>> 6;
  _346 = d_343 r>> 11;
  _347 = _345 ^ _346;
  _348 = d_343 r>> 25;
  _349 = _347 ^ _348;
  _351 = f_275 ^ e_309;
  _352 = d_343 & _351;
  _353 = f_275 ^ _352;
  load_dst_78 = MEM[(const uint32_t *)hash_19(D) + 68B];
  w9_364 = __builtin_bswap32 (load_dst_78);
  _2653 = w9_364 + 310598401;
  _2654 = g_241 + _2653;
  _2655 = _353 + _2654;
  t1_366 = _349 + _2655;
  _367 = h_344 r>> 2;
  _368 = h_344 r>> 13;
  _369 = _367 ^ _368;
  _370 = h_344 r>> 22;
  _371 = _369 ^ _370;
  _372 = a_310 & h_344;
  _373 = a_310 | h_344;
  _374 = b_276 & _373;
  _375 = _372 | _374;
  t2_376 = _371 + _375;
  c_377 = c_242 + t1_366;
  g_378 = t1_366 + t2_376;
  _379 = c_377 r>> 6;
  _380 = c_377 r>> 11;
  _381 = _379 ^ _380;
  _382 = c_377 r>> 25;
  _383 = _381 ^ _382;
  _385 = e_309 ^ d_343;
  _386 = c_377 & _385;
  _387 = e_309 ^ _386;
  load_dst_59 = MEM[(const uint32_t *)hash_19(D) + 72B];
  w10_398 = __builtin_bswap32 (load_dst_59);
  _2648 = w10_398 + 607225278;
  _2649 = f_275 + _2648;
  _2650 = _387 + _2649;
  t1_400 = _383 + _2650;
  _401 = g_378 r>> 2;
  _402 = g_378 r>> 13;
  _403 = _401 ^ _402;
  _404 = g_378 r>> 22;
  _405 = _403 ^ _404;
  _406 = h_344 & g_378;
  _407 = h_344 | g_378;
  _408 = a_310 & _407;
  _409 = _406 | _408;
  t2_410 = _405 + _409;
  b_411 = b_276 + t1_400;
  f_412 = t1_400 + t2_410;
  _413 = b_411 r>> 6;
  _414 = b_411 r>> 11;
  _415 = _413 ^ _414;
  _416 = b_411 r>> 25;
  _417 = _415 ^ _416;
  _419 = d_343 ^ c_377;
  _420 = b_411 & _419;
  _421 = d_343 ^ _420;
  load_dst_56 = MEM[(const uint32_t *)hash_19(D) + 76B];
  w11_432 = __builtin_bswap32 (load_dst_56);
  _2643 = w11_432 + 1426881987;
  _2644 = e_309 + _2643;
  _2645 = _421 + _2644;
  t1_434 = _417 + _2645;
  _435 = f_412 r>> 2;
  _436 = f_412 r>> 13;
  _437 = _435 ^ _436;
  _438 = f_412 r>> 22;
  _439 = _437 ^ _438;
  _440 = g_378 & f_412;
  _441 = g_378 | f_412;
  _442 = h_344 & _441;
  _443 = _440 | _442;
  t2_444 = _439 + _443;
  a_445 = a_310 + t1_434;
  e_446 = t1_434 + t2_444;
  _447 = a_445 r>> 6;
  _448 = a_445 r>> 11;
  _449 = _447 ^ _448;
  _450 = a_445 r>> 25;
  _451 = _449 ^ _450;
  _453 = c_377 ^ b_411;
  _454 = a_445 & _453;
  _455 = c_377 ^ _454;
  load_dst_53 = MEM[(const uint32_t *)hash_19(D) + 80B];
  w12_466 = __builtin_bswap32 (load_dst_53);
  _2638 = w12_466 + 1925078388;
  _2639 = d_343 + _2638;
  _2640 = _455 + _2639;
  t1_468 = _451 + _2640;
  _469 = e_446 r>> 2;
  _470 = e_446 r>> 13;
  _471 = _469 ^ _470;
  _472 = e_446 r>> 22;
  _473 = _471 ^ _472;
  _474 = f_412 & e_446;
  _475 = f_412 | e_446;
  _476 = g_378 & _475;
  _477 = _474 | _476;
  t2_478 = _473 + _477;
  h_479 = h_344 + t1_468;
  d_480 = t1_468 + t2_478;
  _481 = h_479 r>> 6;
  _482 = h_479 r>> 11;
  _483 = _481 ^ _482;
  _484 = h_479 r>> 25;
  _485 = _483 ^ _484;
  _487 = b_411 ^ a_445;
  _488 = h_479 & _487;
  _489 = b_411 ^ _488;
  load_dst_48 = MEM[(const uint32_t *)hash_19(D) + 84B];
  w13_500 = __builtin_bswap32 (load_dst_48);
  _2633 = w13_500 + 2162078206;
  _2634 = c_377 + _2633;
  _2635 = _489 + _2634;
  t1_502 = _485 + _2635;
  _503 = d_480 r>> 2;
  _504 = d_480 r>> 13;
  _505 = _503 ^ _504;
  _506 = d_480 r>> 22;
  _507 = _505 ^ _506;
  _508 = e_446 & d_480;
  _509 = e_446 | d_480;
  _510 = f_412 & _509;
  _511 = _508 | _510;
  t2_512 = _507 + _511;
  g_513 = g_378 + t1_502;
  c_514 = t1_502 + t2_512;
  _515 = g_513 r>> 6;
  _516 = g_513 r>> 11;
  _517 = _515 ^ _516;
  _518 = g_513 r>> 25;
  _519 = _517 ^ _518;
  _521 = a_445 ^ h_479;
  _522 = g_513 & _521;
  _523 = a_445 ^ _522;
  load_dst_44 = MEM[(const uint32_t *)hash_19(D) + 88B];
  w14_534 = __builtin_bswap32 (load_dst_44);
  _2628 = w14_534 + 2614888103;
  _2629 = b_411 + _2628;
  _2630 = _523 + _2629;
  t1_536 = _519 + _2630;
  _537 = c_514 r>> 2;
  _538 = c_514 r>> 13;
  _539 = _537 ^ _538;
  _540 = c_514 r>> 22;
  _541 = _539 ^ _540;
  _542 = d_480 & c_514;
  _543 = d_480 | c_514;
  _544 = e_446 & _543;
  _545 = _542 | _544;
  t2_546 = _541 + _545;
  f_547 = f_412 + t1_536;
  b_548 = t1_536 + t2_546;
  _549 = f_547 r>> 6;
  _550 = f_547 r>> 11;
  _551 = _549 ^ _550;
  _552 = f_547 r>> 25;
  _553 = _551 ^ _552;
  _555 = h_479 ^ g_513;
  _556 = f_547 & _555;
  _557 = h_479 ^ _556;
  load_dst_10 = MEM[(const uint32_t *)hash_19(D) + 92B];
  w15_568 = __builtin_bswap32 (load_dst_10);
  _2623 = w15_568 + 3248222580;
  _2624 = a_445 + _2623;
  _2625 = _557 + _2624;
  t1_570 = _553 + _2625;
  _571 = b_548 r>> 2;
  _572 = b_548 r>> 13;
  _573 = _571 ^ _572;
  _574 = b_548 r>> 22;
  _575 = _573 ^ _574;
  _576 = c_514 & b_548;
  _577 = c_514 | b_548;
  _578 = d_480 & _577;
  _579 = _576 | _578;
  t2_580 = _575 + _579;
  e_581 = e_446 + t1_570;
  a_582 = t1_570 + t2_580;
  _583 = e_581 r>> 6;
  _584 = e_581 r>> 11;
  _585 = _583 ^ _584;
  _586 = e_581 r>> 25;
  _587 = _585 ^ _586;
  _589 = g_513 ^ f_547;
  _590 = e_581 & _589;
  _591 = g_513 ^ _590;
  _593 = w14_534 r>> 17;
  _594 = w14_534 r>> 19;
  _595 = _593 ^ _594;
  _596 = w14_534 >> 10;
  _597 = _595 ^ _596;
  _2621 = w0_58 + w9_364;
  _599 = w1_92 r>> 7;
  _600 = w1_92 r>> 18;
  _601 = _599 ^ _600;
  _602 = w1_92 >> 3;
  _603 = _601 ^ _602;
  _2622 = _597 + _2621;
  w0_605 = _603 + _2622;
  _2618 = w0_605 + 3835390401;
  _2619 = h_479 + _2618;
  _2620 = _591 + _2619;
  t1_607 = _587 + _2620;
  _608 = a_582 r>> 2;
  _609 = a_582 r>> 13;
  _610 = _608 ^ _609;
  _611 = a_582 r>> 22;
  _612 = _610 ^ _611;
  _613 = b_548 & a_582;
  _614 = b_548 | a_582;
  _615 = c_514 & _614;
  _616 = _613 | _615;
  t2_617 = _612 + _616;
  d_618 = d_480 + t1_607;
  h_619 = t1_607 + t2_617;
  _620 = d_618 r>> 6;
  _621 = d_618 r>> 11;
  _622 = _620 ^ _621;
  _623 = d_618 r>> 25;
  _624 = _622 ^ _623;
  _626 = f_547 ^ e_581;
  _627 = d_618 & _626;
  _628 = f_547 ^ _627;
  _630 = w15_568 r>> 17;
  _631 = w15_568 r>> 19;
  _632 = _630 ^ _631;
  _633 = w15_568 >> 10;
  _634 = _632 ^ _633;
  _2616 = w1_92 + w10_398;
  _636 = w2_126 r>> 7;
  _637 = w2_126 r>> 18;
  _638 = _636 ^ _637;
  _639 = w2_126 >> 3;
  _640 = _638 ^ _639;
  _2617 = _634 + _2616;
  w1_642 = _640 + _2617;
  _2613 = w1_642 + 4022224774;
  _2614 = g_513 + _2613;
  _2615 = _628 + _2614;
  t1_644 = _624 + _2615;
  _645 = h_619 r>> 2;
  _646 = h_619 r>> 13;
  _647 = _645 ^ _646;
  _648 = h_619 r>> 22;
  _649 = _647 ^ _648;
  _650 = a_582 & h_619;
  _651 = a_582 | h_619;
  _652 = b_548 & _651;
  _653 = _650 | _652;
  t2_654 = _649 + _653;
  c_655 = c_514 + t1_644;
  g_656 = t1_644 + t2_654;
  _657 = c_655 r>> 6;
  _658 = c_655 r>> 11;
  _659 = _657 ^ _658;
  _660 = c_655 r>> 25;
  _661 = _659 ^ _660;
  _663 = e_581 ^ d_618;
  _664 = c_655 & _663;
  _665 = e_581 ^ _664;
  _667 = w0_605 r>> 17;
  _668 = w0_605 r>> 19;
  _669 = _667 ^ _668;
  _670 = w0_605 >> 10;
  _671 = _669 ^ _670;
  _2611 = w2_126 + w11_432;
  _673 = w3_160 r>> 7;
  _674 = w3_160 r>> 18;
  _675 = _673 ^ _674;
  _676 = w3_160 >> 3;
  _677 = _675 ^ _676;
  _2612 = _677 + _2611;
  w2_679 = _671 + _2612;
  _2608 = w2_679 + 264347078;
  _2609 = f_547 + _2608;
  _2610 = _665 + _2609;
  t1_681 = _661 + _2610;
  _682 = g_656 r>> 2;
  _683 = g_656 r>> 13;
  _684 = _682 ^ _683;
  _685 = g_656 r>> 22;
  _686 = _684 ^ _685;
  _687 = h_619 & g_656;
  _688 = h_619 | g_656;
  _689 = a_582 & _688;
  _690 = _687 | _689;
  t2_691 = _686 + _690;
  b_692 = b_548 + t1_681;
  f_693 = t1_681 + t2_691;
  _694 = b_692 r>> 6;
  _695 = b_692 r>> 11;
  _696 = _694 ^ _695;
  _697 = b_692 r>> 25;
  _698 = _696 ^ _697;
  _700 = d_618 ^ c_655;
  _701 = b_692 & _700;
  _702 = d_618 ^ _701;
  _704 = w1_642 r>> 17;
  _705 = w1_642 r>> 19;
  _706 = _704 ^ _705;
  _707 = w1_642 >> 10;
  _708 = _706 ^ _707;
  _2606 = w3_160 + w12_466;
  _710 = w4_194 r>> 7;
  _711 = w4_194 r>> 18;
  _712 = _710 ^ _711;
  _713 = w4_194 >> 3;
  _714 = _712 ^ _713;
  _2607 = _714 + _2606;
  w3_716 = _708 + _2607;
  _2603 = w3_716 + 604807628;
  _2604 = e_581 + _2603;
  _2605 = _702 + _2604;
  t1_718 = _698 + _2605;
  _719 = f_693 r>> 2;
  _720 = f_693 r>> 13;
  _721 = _719 ^ _720;
  _722 = f_693 r>> 22;
  _723 = _721 ^ _722;
  _724 = g_656 & f_693;
  _725 = g_656 | f_693;
  _726 = h_619 & _725;
  _727 = _724 | _726;
  t2_728 = _723 + _727;
  a_729 = a_582 + t1_718;
  e_730 = t1_718 + t2_728;
  _731 = a_729 r>> 6;
  _732 = a_729 r>> 11;
  _733 = _731 ^ _732;
  _734 = a_729 r>> 25;
  _735 = _733 ^ _734;
  _737 = c_655 ^ b_692;
  _738 = a_729 & _737;
  _739 = c_655 ^ _738;
  _741 = w2_679 r>> 17;
  _742 = w2_679 r>> 19;
  _743 = _741 ^ _742;
  _744 = w2_679 >> 10;
  _745 = _743 ^ _744;
  _2601 = w4_194 + w13_500;
  _747 = w5_228 r>> 7;
  _748 = w5_228 r>> 18;
  _749 = _747 ^ _748;
  _750 = w5_228 >> 3;
  _751 = _749 ^ _750;
  _2602 = _751 + _2601;
  w4_753 = _745 + _2602;
  _2598 = w4_753 + 770255983;
  _2599 = d_618 + _2598;
  _2600 = _739 + _2599;
  t1_755 = _735 + _2600;
  _756 = e_730 r>> 2;
  _757 = e_730 r>> 13;
  _758 = _756 ^ _757;
  _759 = e_730 r>> 22;
  _760 = _758 ^ _759;
  _761 = f_693 & e_730;
  _762 = f_693 | e_730;
  _763 = g_656 & _762;
  _764 = _761 | _763;
  t2_765 = _760 + _764;
  h_766 = h_619 + t1_755;
  d_767 = t1_755 + t2_765;
  _768 = h_766 r>> 6;
  _769 = h_766 r>> 11;
  _770 = _768 ^ _769;
  _771 = h_766 r>> 25;
  _772 = _770 ^ _771;
  _774 = b_692 ^ a_729;
  _775 = h_766 & _774;
  _776 = b_692 ^ _775;
  _778 = w3_716 r>> 17;
  _779 = w3_716 r>> 19;
  _780 = _778 ^ _779;
  _781 = w3_716 >> 10;
  _782 = _780 ^ _781;
  _2596 = w5_228 + w14_534;
  _784 = w6_262 r>> 7;
  _785 = w6_262 r>> 18;
  _786 = _784 ^ _785;
  _787 = w6_262 >> 3;
  _788 = _786 ^ _787;
  _2597 = _788 + _2596;
  w5_790 = _782 + _2597;
  _2593 = w5_790 + 1249150122;
  _2594 = c_655 + _2593;
  _2595 = _776 + _2594;
  t1_792 = _772 + _2595;
  _793 = d_767 r>> 2;
  _794 = d_767 r>> 13;
  _795 = _793 ^ _794;
  _796 = d_767 r>> 22;
  _797 = _795 ^ _796;
  _798 = e_730 & d_767;
  _799 = e_730 | d_767;
  _800 = f_693 & _799;
  _801 = _798 | _800;
  t2_802 = _797 + _801;
  g_803 = g_656 + t1_792;
  c_804 = t1_792 + t2_802;
  _805 = g_803 r>> 6;
  _806 = g_803 r>> 11;
  _807 = _805 ^ _806;
  _808 = g_803 r>> 25;
  _809 = _807 ^ _808;
  _811 = a_729 ^ h_766;
  _812 = g_803 & _811;
  _813 = a_729 ^ _812;
  _815 = w4_753 r>> 17;
  _816 = w4_753 r>> 19;
  _817 = _815 ^ _816;
  _818 = w4_753 >> 10;
  _819 = _817 ^ _818;
  _2591 = w6_262 + w15_568;
  _821 = w7_296 r>> 7;
  _822 = w7_296 r>> 18;
  _823 = _821 ^ _822;
  _824 = w7_296 >> 3;
  _825 = _823 ^ _824;
  _2592 = _825 + _2591;
  w6_827 = _819 + _2592;
  _2588 = w6_827 + 1555081692;
  _2589 = b_692 + _2588;
  _2590 = _813 + _2589;
  t1_829 = _809 + _2590;
  _830 = c_804 r>> 2;
  _831 = c_804 r>> 13;
  _832 = _830 ^ _831;
  _833 = c_804 r>> 22;
  _834 = _832 ^ _833;
  _835 = d_767 & c_804;
  _836 = d_767 | c_804;
  _837 = e_730 & _836;
  _838 = _835 | _837;
  t2_839 = _834 + _838;
  f_840 = f_693 + t1_829;
  b_841 = t1_829 + t2_839;
  _842 = f_840 r>> 6;
  _843 = f_840 r>> 11;
  _844 = _842 ^ _843;
  _845 = f_840 r>> 25;
  _846 = _844 ^ _845;
  _848 = h_766 ^ g_803;
  _849 = f_840 & _848;
  _850 = h_766 ^ _849;
  _852 = w5_790 r>> 17;
  _853 = w5_790 r>> 19;
  _854 = _852 ^ _853;
  _855 = w5_790 >> 10;
  _856 = _854 ^ _855;
  _858 = w8_330 r>> 7;
  _859 = w8_330 r>> 18;
  _860 = _858 ^ _859;
  _861 = w8_330 >> 3;
  _862 = _860 ^ _861;
  _2586 = w7_296 + _862;
  _2587 = w0_605 + _2586;
  w7_864 = _856 + _2587;
  _2583 = w7_864 + 1996064986;
  _2584 = a_729 + _2583;
  _2585 = _850 + _2584;
  t1_866 = _846 + _2585;
  _867 = b_841 r>> 2;
  _868 = b_841 r>> 13;
  _869 = _867 ^ _868;
  _870 = b_841 r>> 22;
  _871 = _869 ^ _870;
  _872 = c_804 & b_841;
  _873 = c_804 | b_841;
  _874 = d_767 & _873;
  _875 = _872 | _874;
  t2_876 = _871 + _875;
  e_877 = e_730 + t1_866;
  a_878 = t1_866 + t2_876;
  _879 = e_877 r>> 6;
  _880 = e_877 r>> 11;
  _881 = _879 ^ _880;
  _882 = e_877 r>> 25;
  _883 = _881 ^ _882;
  _885 = g_803 ^ f_840;
  _886 = e_877 & _885;
  _887 = g_803 ^ _886;
  _889 = w6_827 r>> 17;
  _890 = w6_827 r>> 19;
  _891 = _889 ^ _890;
  _892 = w6_827 >> 10;
  _893 = _891 ^ _892;
  _895 = w9_364 r>> 7;
  _896 = w9_364 r>> 18;
  _897 = _895 ^ _896;
  _898 = w9_364 >> 3;
  _899 = _897 ^ _898;
  _2581 = w8_330 + _899;
  _2582 = w1_642 + _2581;
  w8_901 = _893 + _2582;
  _2578 = w8_901 + 2554220882;
  _2579 = h_766 + _2578;
  _2580 = _887 + _2579;
  t1_903 = _883 + _2580;
  _904 = a_878 r>> 2;
  _905 = a_878 r>> 13;
  _906 = _904 ^ _905;
  _907 = a_878 r>> 22;
  _908 = _906 ^ _907;
  _909 = b_841 & a_878;
  _910 = b_841 | a_878;
  _911 = c_804 & _910;
  _912 = _909 | _911;
  t2_913 = _908 + _912;
  d_914 = d_767 + t1_903;
  h_915 = t1_903 + t2_913;
  _916 = d_914 r>> 6;
  _917 = d_914 r>> 11;
  _918 = _916 ^ _917;
  _919 = d_914 r>> 25;
  _920 = _918 ^ _919;
  _922 = f_840 ^ e_877;
  _923 = d_914 & _922;
  _924 = f_840 ^ _923;
  _926 = w7_864 r>> 17;
  _927 = w7_864 r>> 19;
  _928 = _926 ^ _927;
  _929 = w7_864 >> 10;
  _930 = _928 ^ _929;
  _932 = w10_398 r>> 7;
  _933 = w10_398 r>> 18;
  _934 = _932 ^ _933;
  _935 = w10_398 >> 3;
  _936 = _934 ^ _935;
  _2576 = w9_364 + _936;
  _2577 = w2_679 + _2576;
  w9_938 = _930 + _2577;
  _2573 = w9_938 + 2821834349;
  _2574 = g_803 + _2573;
  _2575 = _924 + _2574;
  t1_940 = _920 + _2575;
  _941 = h_915 r>> 2;
  _942 = h_915 r>> 13;
  _943 = _941 ^ _942;
  _944 = h_915 r>> 22;
  _945 = _943 ^ _944;
  _946 = a_878 & h_915;
  _947 = a_878 | h_915;
  _948 = b_841 & _947;
  _949 = _946 | _948;
  t2_950 = _945 + _949;
  c_951 = c_804 + t1_940;
  g_952 = t1_940 + t2_950;
  _953 = c_951 r>> 6;
  _954 = c_951 r>> 11;
  _955 = _953 ^ _954;
  _956 = c_951 r>> 25;
  _957 = _955 ^ _956;
  _959 = e_877 ^ d_914;
  _960 = c_951 & _959;
  _961 = e_877 ^ _960;
  _963 = w8_901 r>> 17;
  _964 = w8_901 r>> 19;
  _965 = _963 ^ _964;
  _966 = w8_901 >> 10;
  _967 = _965 ^ _966;
  _969 = w11_432 r>> 7;
  _970 = w11_432 r>> 18;
  _971 = _969 ^ _970;
  _972 = w11_432 >> 3;
  _973 = _971 ^ _972;
  _2571 = w10_398 + _973;
  _2572 = w3_716 + _2571;
  w10_975 = _967 + _2572;
  _2568 = w10_975 + 2952996808;
  _2569 = f_840 + _2568;
  _2570 = _961 + _2569;
  t1_977 = _957 + _2570;
  _978 = g_952 r>> 2;
  _979 = g_952 r>> 13;
  _980 = _978 ^ _979;
  _981 = g_952 r>> 22;
  _982 = _980 ^ _981;
  _983 = h_915 & g_952;
  _984 = h_915 | g_952;
  _985 = a_878 & _984;
  _986 = _983 | _985;
  t2_987 = _982 + _986;
  b_988 = b_841 + t1_977;
  f_989 = t1_977 + t2_987;
  _990 = b_988 r>> 6;
  _991 = b_988 r>> 11;
  _992 = _990 ^ _991;
  _993 = b_988 r>> 25;
  _994 = _992 ^ _993;
  _996 = d_914 ^ c_951;
  _997 = b_988 & _996;
  _998 = d_914 ^ _997;
  _1000 = w9_938 r>> 17;
  _1001 = w9_938 r>> 19;
  _1002 = _1000 ^ _1001;
  _1003 = w9_938 >> 10;
  _1004 = _1002 ^ _1003;
  _1006 = w12_466 r>> 7;
  _1007 = w12_466 r>> 18;
  _1008 = _1006 ^ _1007;
  _1009 = w12_466 >> 3;
  _1010 = _1008 ^ _1009;
  _2566 = w11_432 + _1010;
  _2567 = w4_753 + _2566;
  w11_1012 = _1004 + _2567;
  _2563 = w11_1012 + 3210313671;
  _2564 = e_877 + _2563;
  _2565 = _998 + _2564;
  t1_1014 = _994 + _2565;
  _1015 = f_989 r>> 2;
  _1016 = f_989 r>> 13;
  _1017 = _1015 ^ _1016;
  _1018 = f_989 r>> 22;
  _1019 = _1017 ^ _1018;
  _1020 = g_952 & f_989;
  _1021 = g_952 | f_989;
  _1022 = h_915 & _1021;
  _1023 = _1020 | _1022;
  t2_1024 = _1019 + _1023;
  a_1025 = a_878 + t1_1014;
  e_1026 = t1_1014 + t2_1024;
  _1027 = a_1025 r>> 6;
  _1028 = a_1025 r>> 11;
  _1029 = _1027 ^ _1028;
  _1030 = a_1025 r>> 25;
  _1031 = _1029 ^ _1030;
  _1033 = c_951 ^ b_988;
  _1034 = a_1025 & _1033;
  _1035 = c_951 ^ _1034;
  _1037 = w10_975 r>> 17;
  _1038 = w10_975 r>> 19;
  _1039 = _1037 ^ _1038;
  _1040 = w10_975 >> 10;
  _1041 = _1039 ^ _1040;
  _1043 = w13_500 r>> 7;
  _1044 = w13_500 r>> 18;
  _1045 = _1043 ^ _1044;
  _1046 = w13_500 >> 3;
  _1047 = _1045 ^ _1046;
  _2561 = w12_466 + _1047;
  _2562 = w5_790 + _2561;
  w12_1049 = _1041 + _2562;
  _2558 = w12_1049 + 3336571891;
  _2559 = d_914 + _2558;
  _2560 = _1035 + _2559;
  t1_1051 = _1031 + _2560;
  _1052 = e_1026 r>> 2;
  _1053 = e_1026 r>> 13;
  _1054 = _1052 ^ _1053;
  _1055 = e_1026 r>> 22;
  _1056 = _1054 ^ _1055;
  _1057 = f_989 & e_1026;
  _1058 = f_989 | e_1026;
  _1059 = g_952 & _1058;
  _1060 = _1057 | _1059;
  t2_1061 = _1056 + _1060;
  h_1062 = h_915 + t1_1051;
  d_1063 = t1_1051 + t2_1061;
  _1064 = h_1062 r>> 6;
  _1065 = h_1062 r>> 11;
  _1066 = _1064 ^ _1065;
  _1067 = h_1062 r>> 25;
  _1068 = _1066 ^ _1067;
  _1070 = b_988 ^ a_1025;
  _1071 = h_1062 & _1070;
  _1072 = b_988 ^ _1071;
  _1074 = w11_1012 r>> 17;
  _1075 = w11_1012 r>> 19;
  _1076 = _1074 ^ _1075;
  _1077 = w11_1012 >> 10;
  _1078 = _1076 ^ _1077;
  _1080 = w14_534 r>> 7;
  _1081 = w14_534 r>> 18;
  _1082 = _1080 ^ _1081;
  _1083 = w14_534 >> 3;
  _1084 = _1082 ^ _1083;
  _2556 = w13_500 + _1084;
  _2557 = w6_827 + _2556;
  w13_1086 = _1078 + _2557;
  _2553 = w13_1086 + 3584528711;
  _2554 = c_951 + _2553;
  _2555 = _1072 + _2554;
  t1_1088 = _1068 + _2555;
  _1089 = d_1063 r>> 2;
  _1090 = d_1063 r>> 13;
  _1091 = _1089 ^ _1090;
  _1092 = d_1063 r>> 22;
  _1093 = _1091 ^ _1092;
  _1094 = e_1026 & d_1063;
  _1095 = e_1026 | d_1063;
  _1096 = f_989 & _1095;
  _1097 = _1094 | _1096;
  t2_1098 = _1093 + _1097;
  g_1099 = g_952 + t1_1088;
  c_1100 = t1_1088 + t2_1098;
  _1101 = g_1099 r>> 6;
  _1102 = g_1099 r>> 11;
  _1103 = _1101 ^ _1102;
  _1104 = g_1099 r>> 25;
  _1105 = _1103 ^ _1104;
  _1107 = a_1025 ^ h_1062;
  _1108 = g_1099 & _1107;
  _1109 = a_1025 ^ _1108;
  _1111 = w12_1049 r>> 17;
  _1112 = w12_1049 r>> 19;
  _1113 = _1111 ^ _1112;
  _1114 = w12_1049 >> 10;
  _1115 = _1113 ^ _1114;
  _1117 = w15_568 r>> 7;
  _1118 = w15_568 r>> 18;
  _1119 = _1117 ^ _1118;
  _1120 = w15_568 >> 3;
  _1121 = _1119 ^ _1120;
  _2551 = w14_534 + _1121;
  _2552 = w7_864 + _2551;
  w14_1123 = _1115 + _2552;
  _2548 = w14_1123 + 113926993;
  _2549 = b_988 + _2548;
  _2550 = _1109 + _2549;
  t1_1125 = _1105 + _2550;
  _1126 = c_1100 r>> 2;
  _1127 = c_1100 r>> 13;
  _1128 = _1126 ^ _1127;
  _1129 = c_1100 r>> 22;
  _1130 = _1128 ^ _1129;
  _1131 = d_1063 & c_1100;
  _1132 = d_1063 | c_1100;
  _1133 = e_1026 & _1132;
  _1134 = _1131 | _1133;
  t2_1135 = _1130 + _1134;
  f_1136 = f_989 + t1_1125;
  b_1137 = t1_1125 + t2_1135;
  _1138 = f_1136 r>> 6;
  _1139 = f_1136 r>> 11;
  _1140 = _1138 ^ _1139;
  _1141 = f_1136 r>> 25;
  _1142 = _1140 ^ _1141;
  _1144 = h_1062 ^ g_1099;
  _1145 = f_1136 & _1144;
  _1146 = h_1062 ^ _1145;
  _1148 = w13_1086 r>> 17;
  _1149 = w13_1086 r>> 19;
  _1150 = _1148 ^ _1149;
  _1151 = w13_1086 >> 10;
  _1152 = _1150 ^ _1151;
  _1154 = w0_605 r>> 7;
  _1155 = w0_605 r>> 18;
  _1156 = _1154 ^ _1155;
  _1157 = w0_605 >> 3;
  _1158 = _1156 ^ _1157;
  _2546 = w15_568 + _1158;
  _2547 = w8_901 + _2546;
  w15_1160 = _1152 + _2547;
  _2543 = w15_1160 + 338241895;
  _2544 = a_1025 + _2543;
  _2545 = _1146 + _2544;
  t1_1162 = _1142 + _2545;
  _1163 = b_1137 r>> 2;
  _1164 = b_1137 r>> 13;
  _1165 = _1163 ^ _1164;
  _1166 = b_1137 r>> 22;
  _1167 = _1165 ^ _1166;
  _1168 = c_1100 & b_1137;
  _1169 = c_1100 | b_1137;
  _1170 = d_1063 & _1169;
  _1171 = _1168 | _1170;
  t2_1172 = _1167 + _1171;
  e_1173 = e_1026 + t1_1162;
  a_1174 = t1_1162 + t2_1172;
  _1175 = e_1173 r>> 6;
  _1176 = e_1173 r>> 11;
  _1177 = _1175 ^ _1176;
  _1178 = e_1173 r>> 25;
  _1179 = _1177 ^ _1178;
  _1181 = g_1099 ^ f_1136;
  _1182 = e_1173 & _1181;
  _1183 = g_1099 ^ _1182;
  _1185 = w14_1123 r>> 17;
  _1186 = w14_1123 r>> 19;
  _1187 = _1185 ^ _1186;
  _1188 = w14_1123 >> 10;
  _1189 = _1187 ^ _1188;
  _1191 = w1_642 r>> 7;
  _1192 = w1_642 r>> 18;
  _1193 = _1191 ^ _1192;
  _1194 = w1_642 >> 3;
  _1195 = _1193 ^ _1194;
  _2541 = w0_605 + _1195;
  _2542 = w9_938 + _2541;
  w0_1197 = _1189 + _2542;
  _2538 = w0_1197 + 666307205;
  _2539 = h_1062 + _2538;
  _2540 = _1183 + _2539;
  t1_1199 = _1179 + _2540;
  _1200 = a_1174 r>> 2;
  _1201 = a_1174 r>> 13;
  _1202 = _1200 ^ _1201;
  _1203 = a_1174 r>> 22;
  _1204 = _1202 ^ _1203;
  _1205 = b_1137 & a_1174;
  _1206 = b_1137 | a_1174;
  _1207 = c_1100 & _1206;
  _1208 = _1205 | _1207;
  t2_1209 = _1204 + _1208;
  d_1210 = d_1063 + t1_1199;
  h_1211 = t1_1199 + t2_1209;
  _1212 = d_1210 r>> 6;
  _1213 = d_1210 r>> 11;
  _1214 = _1212 ^ _1213;
  _1215 = d_1210 r>> 25;
  _1216 = _1214 ^ _1215;
  _1218 = f_1136 ^ e_1173;
  _1219 = d_1210 & _1218;
  _1220 = f_1136 ^ _1219;
  _1222 = w15_1160 r>> 17;
  _1223 = w15_1160 r>> 19;
  _1224 = _1222 ^ _1223;
  _1225 = w15_1160 >> 10;
  _1226 = _1224 ^ _1225;
  _1228 = w2_679 r>> 7;
  _1229 = w2_679 r>> 18;
  _1230 = _1228 ^ _1229;
  _1231 = w2_679 >> 3;
  _1232 = _1230 ^ _1231;
  _2536 = w1_642 + _1232;
  _2537 = w10_975 + _2536;
  w1_1234 = _1226 + _2537;
  _2533 = w1_1234 + 773529912;
  _2534 = g_1099 + _2533;
  _2535 = _1220 + _2534;
  t1_1236 = _1216 + _2535;
  _1237 = h_1211 r>> 2;
  _1238 = h_1211 r>> 13;
  _1239 = _1237 ^ _1238;
  _1240 = h_1211 r>> 22;
  _1241 = _1239 ^ _1240;
  _1242 = a_1174 & h_1211;
  _1243 = a_1174 | h_1211;
  _1244 = b_1137 & _1243;
  _1245 = _1242 | _1244;
  t2_1246 = _1241 + _1245;
  c_1247 = c_1100 + t1_1236;
  g_1248 = t1_1236 + t2_1246;
  _1249 = c_1247 r>> 6;
  _1250 = c_1247 r>> 11;
  _1251 = _1249 ^ _1250;
  _1252 = c_1247 r>> 25;
  _1253 = _1251 ^ _1252;
  _1255 = e_1173 ^ d_1210;
  _1256 = c_1247 & _1255;
  _1257 = e_1173 ^ _1256;
  _1259 = w0_1197 r>> 17;
  _1260 = w0_1197 r>> 19;
  _1261 = _1259 ^ _1260;
  _1262 = w0_1197 >> 10;
  _1263 = _1261 ^ _1262;
  _1265 = w3_716 r>> 7;
  _1266 = w3_716 r>> 18;
  _1267 = _1265 ^ _1266;
  _1268 = w3_716 >> 3;
  _1269 = _1267 ^ _1268;
  _2531 = w2_679 + _1269;
  _2532 = w11_1012 + _2531;
  w2_1271 = _1263 + _2532;
  _2528 = w2_1271 + 1294757372;
  _2529 = f_1136 + _2528;
  _2530 = _1257 + _2529;
  t1_1273 = _1253 + _2530;
  _1274 = g_1248 r>> 2;
  _1275 = g_1248 r>> 13;
  _1276 = _1274 ^ _1275;
  _1277 = g_1248 r>> 22;
  _1278 = _1276 ^ _1277;
  _1279 = h_1211 & g_1248;
  _1280 = h_1211 | g_1248;
  _1281 = a_1174 & _1280;
  _1282 = _1279 | _1281;
  t2_1283 = _1278 + _1282;
  b_1284 = b_1137 + t1_1273;
  f_1285 = t1_1273 + t2_1283;
  _1286 = b_1284 r>> 6;
  _1287 = b_1284 r>> 11;
  _1288 = _1286 ^ _1287;
  _1289 = b_1284 r>> 25;
  _1290 = _1288 ^ _1289;
  _1292 = d_1210 ^ c_1247;
  _1293 = b_1284 & _1292;
  _1294 = d_1210 ^ _1293;
  _1296 = w1_1234 r>> 17;
  _1297 = w1_1234 r>> 19;
  _1298 = _1296 ^ _1297;
  _1299 = w1_1234 >> 10;
  _1300 = _1298 ^ _1299;
  _1302 = w4_753 r>> 7;
  _1303 = w4_753 r>> 18;
  _1304 = _1302 ^ _1303;
  _1305 = w4_753 >> 3;
  _1306 = _1304 ^ _1305;
  _2526 = w3_716 + _1306;
  _2527 = w12_1049 + _2526;
  w3_1308 = _1300 + _2527;
  _2523 = w3_1308 + 1396182291;
  _2524 = e_1173 + _2523;
  _2525 = _1294 + _2524;
  t1_1310 = _1290 + _2525;
  _1311 = f_1285 r>> 2;
  _1312 = f_1285 r>> 13;
  _1313 = _1311 ^ _1312;
  _1314 = f_1285 r>> 22;
  _1315 = _1313 ^ _1314;
  _1316 = g_1248 & f_1285;
  _1317 = g_1248 | f_1285;
  _1318 = h_1211 & _1317;
  _1319 = _1316 | _1318;
  t2_1320 = _1315 + _1319;
  a_1321 = a_1174 + t1_1310;
  e_1322 = t1_1310 + t2_1320;
  _1323 = a_1321 r>> 6;
  _1324 = a_1321 r>> 11;
  _1325 = _1323 ^ _1324;
  _1326 = a_1321 r>> 25;
  _1327 = _1325 ^ _1326;
  _1329 = c_1247 ^ b_1284;
  _1330 = a_1321 & _1329;
  _1331 = c_1247 ^ _1330;
  _1333 = w2_1271 r>> 17;
  _1334 = w2_1271 r>> 19;
  _1335 = _1333 ^ _1334;
  _1336 = w2_1271 >> 10;
  _1337 = _1335 ^ _1336;
  _1339 = w5_790 r>> 7;
  _1340 = w5_790 r>> 18;
  _1341 = _1339 ^ _1340;
  _1342 = w5_790 >> 3;
  _1343 = _1341 ^ _1342;
  _2521 = w4_753 + _1343;
  _2522 = w13_1086 + _2521;
  w4_1345 = _1337 + _2522;
  _2518 = w4_1345 + 1695183700;
  _2519 = d_1210 + _2518;
  _2520 = _1331 + _2519;
  t1_1347 = _1327 + _2520;
  _1348 = e_1322 r>> 2;
  _1349 = e_1322 r>> 13;
  _1350 = _1348 ^ _1349;
  _1351 = e_1322 r>> 22;
  _1352 = _1350 ^ _1351;
  _1353 = f_1285 & e_1322;
  _1354 = f_1285 | e_1322;
  _1355 = g_1248 & _1354;
  _1356 = _1353 | _1355;
  t2_1357 = _1352 + _1356;
  h_1358 = h_1211 + t1_1347;
  d_1359 = t1_1347 + t2_1357;
  _1360 = h_1358 r>> 6;
  _1361 = h_1358 r>> 11;
  _1362 = _1360 ^ _1361;
  _1363 = h_1358 r>> 25;
  _1364 = _1362 ^ _1363;
  _1366 = b_1284 ^ a_1321;
  _1367 = h_1358 & _1366;
  _1368 = b_1284 ^ _1367;
  _1370 = w3_1308 r>> 17;
  _1371 = w3_1308 r>> 19;
  _1372 = _1370 ^ _1371;
  _1373 = w3_1308 >> 10;
  _1374 = _1372 ^ _1373;
  _1376 = w6_827 r>> 7;
  _1377 = w6_827 r>> 18;
  _1378 = _1376 ^ _1377;
  _1379 = w6_827 >> 3;
  _1380 = _1378 ^ _1379;
  _2516 = w5_790 + _1380;
  _2517 = w14_1123 + _2516;
  w5_1382 = _1374 + _2517;
  _2513 = w5_1382 + 1986661051;
  _2514 = c_1247 + _2513;
  _2515 = _1368 + _2514;
  t1_1384 = _1364 + _2515;
  _1385 = d_1359 r>> 2;
  _1386 = d_1359 r>> 13;
  _1387 = _1385 ^ _1386;
  _1388 = d_1359 r>> 22;
  _1389 = _1387 ^ _1388;
  _1390 = e_1322 & d_1359;
  _1391 = e_1322 | d_1359;
  _1392 = f_1285 & _1391;
  _1393 = _1390 | _1392;
  t2_1394 = _1389 + _1393;
  g_1395 = g_1248 + t1_1384;
  c_1396 = t1_1384 + t2_1394;
  _1397 = g_1395 r>> 6;
  _1398 = g_1395 r>> 11;
  _1399 = _1397 ^ _1398;
  _1400 = g_1395 r>> 25;
  _1401 = _1399 ^ _1400;
  _1403 = a_1321 ^ h_1358;
  _1404 = g_1395 & _1403;
  _1405 = a_1321 ^ _1404;
  _1407 = w4_1345 r>> 17;
  _1408 = w4_1345 r>> 19;
  _1409 = _1407 ^ _1408;
  _1410 = w4_1345 >> 10;
  _1411 = _1409 ^ _1410;
  _1413 = w7_864 r>> 7;
  _1414 = w7_864 r>> 18;
  _1415 = _1413 ^ _1414;
  _1416 = w7_864 >> 3;
  _1417 = _1415 ^ _1416;
  _2511 = w6_827 + _1417;
  _2512 = w15_1160 + _2511;
  w6_1419 = _1411 + _2512;
  _2508 = w6_1419 + 2177026350;
  _2509 = b_1284 + _2508;
  _2510 = _1405 + _2509;
  t1_1421 = _1401 + _2510;
  _1422 = c_1396 r>> 2;
  _1423 = c_1396 r>> 13;
  _1424 = _1422 ^ _1423;
  _1425 = c_1396 r>> 22;
  _1426 = _1424 ^ _1425;
  _1427 = d_1359 & c_1396;
  _1428 = d_1359 | c_1396;
  _1429 = e_1322 & _1428;
  _1430 = _1427 | _1429;
  t2_1431 = _1426 + _1430;
  f_1432 = f_1285 + t1_1421;
  b_1433 = t1_1421 + t2_1431;
  _1434 = f_1432 r>> 6;
  _1435 = f_1432 r>> 11;
  _1436 = _1434 ^ _1435;
  _1437 = f_1432 r>> 25;
  _1438 = _1436 ^ _1437;
  _1440 = h_1358 ^ g_1395;
  _1441 = f_1432 & _1440;
  _1442 = h_1358 ^ _1441;
  _1444 = w5_1382 r>> 17;
  _1445 = w5_1382 r>> 19;
  _1446 = _1444 ^ _1445;
  _1447 = w5_1382 >> 10;
  _1448 = _1446 ^ _1447;
  _1450 = w8_901 r>> 7;
  _1451 = w8_901 r>> 18;
  _1452 = _1450 ^ _1451;
  _1453 = w8_901 >> 3;
  _1454 = _1452 ^ _1453;
  _2506 = w7_864 + _1454;
  _2507 = w0_1197 + _2506;
  w7_1456 = _1448 + _2507;
  _2503 = w7_1456 + 2456956037;
  _2504 = a_1321 + _2503;
  _2505 = _1442 + _2504;
  t1_1458 = _1438 + _2505;
  _1459 = b_1433 r>> 2;
  _1460 = b_1433 r>> 13;
  _1461 = _1459 ^ _1460;
  _1462 = b_1433 r>> 22;
  _1463 = _1461 ^ _1462;
  _1464 = c_1396 & b_1433;
  _1465 = c_1396 | b_1433;
  _1466 = d_1359 & _1465;
  _1467 = _1464 | _1466;
  t2_1468 = _1463 + _1467;
  e_1469 = e_1322 + t1_1458;
  a_1470 = t1_1458 + t2_1468;
  _1471 = e_1469 r>> 6;
  _1472 = e_1469 r>> 11;
  _1473 = _1471 ^ _1472;
  _1474 = e_1469 r>> 25;
  _1475 = _1473 ^ _1474;
  _1477 = g_1395 ^ f_1432;
  _1478 = e_1469 & _1477;
  _1479 = g_1395 ^ _1478;
  _1481 = w6_1419 r>> 17;
  _1482 = w6_1419 r>> 19;
  _1483 = _1481 ^ _1482;
  _1484 = w6_1419 >> 10;
  _1485 = _1483 ^ _1484;
  _1487 = w9_938 r>> 7;
  _1488 = w9_938 r>> 18;
  _1489 = _1487 ^ _1488;
  _1490 = w9_938 >> 3;
  _1491 = _1489 ^ _1490;
  _2501 = w8_901 + _1491;
  _2502 = w1_1234 + _2501;
  w8_1493 = _1485 + _2502;
  _2498 = w8_1493 + 2730485921;
  _2499 = h_1358 + _2498;
  _2500 = _1479 + _2499;
  t1_1495 = _1475 + _2500;
  _1496 = a_1470 r>> 2;
  _1497 = a_1470 r>> 13;
  _1498 = _1496 ^ _1497;
  _1499 = a_1470 r>> 22;
  _1500 = _1498 ^ _1499;
  _1501 = b_1433 & a_1470;
  _1502 = b_1433 | a_1470;
  _1503 = c_1396 & _1502;
  _1504 = _1501 | _1503;
  t2_1505 = _1500 + _1504;
  d_1506 = d_1359 + t1_1495;
  h_1507 = t1_1495 + t2_1505;
  _1508 = d_1506 r>> 6;
  _1509 = d_1506 r>> 11;
  _1510 = _1508 ^ _1509;
  _1511 = d_1506 r>> 25;
  _1512 = _1510 ^ _1511;
  _1514 = f_1432 ^ e_1469;
  _1515 = d_1506 & _1514;
  _1516 = f_1432 ^ _1515;
  _1518 = w7_1456 r>> 17;
  _1519 = w7_1456 r>> 19;
  _1520 = _1518 ^ _1519;
  _1521 = w7_1456 >> 10;
  _1522 = _1520 ^ _1521;
  _1524 = w10_975 r>> 7;
  _1525 = w10_975 r>> 18;
  _1526 = _1524 ^ _1525;
  _1527 = w10_975 >> 3;
  _1528 = _1526 ^ _1527;
  _2496 = w9_938 + _1528;
  _2497 = w2_1271 + _2496;
  w9_1530 = _1522 + _2497;
  _2493 = w9_1530 + 2820302411;
  _2494 = g_1395 + _2493;
  _2495 = _1516 + _2494;
  t1_1532 = _1512 + _2495;
  _1533 = h_1507 r>> 2;
  _1534 = h_1507 r>> 13;
  _1535 = _1533 ^ _1534;
  _1536 = h_1507 r>> 22;
  _1537 = _1535 ^ _1536;
  _1538 = a_1470 & h_1507;
  _1539 = a_1470 | h_1507;
  _1540 = b_1433 & _1539;
  _1541 = _1538 | _1540;
  t2_1542 = _1537 + _1541;
  c_1543 = c_1396 + t1_1532;
  g_1544 = t1_1532 + t2_1542;
  _1545 = c_1543 r>> 6;
  _1546 = c_1543 r>> 11;
  _1547 = _1545 ^ _1546;
  _1548 = c_1543 r>> 25;
  _1549 = _1547 ^ _1548;
  _1551 = e_1469 ^ d_1506;
  _1552 = c_1543 & _1551;
  _1553 = e_1469 ^ _1552;
  _1555 = w8_1493 r>> 17;
  _1556 = w8_1493 r>> 19;
  _1557 = _1555 ^ _1556;
  _1558 = w8_1493 >> 10;
  _1559 = _1557 ^ _1558;
  _1561 = w11_1012 r>> 7;
  _1562 = w11_1012 r>> 18;
  _1563 = _1561 ^ _1562;
  _1564 = w11_1012 >> 3;
  _1565 = _1563 ^ _1564;
  _2491 = w10_975 + _1565;
  _2492 = w3_1308 + _2491;
  w10_1567 = _1559 + _2492;
  _2488 = w10_1567 + 3259730800;
  _2489 = f_1432 + _2488;
  _2490 = _1553 + _2489;
  t1_1569 = _1549 + _2490;
  _1570 = g_1544 r>> 2;
  _1571 = g_1544 r>> 13;
  _1572 = _1570 ^ _1571;
  _1573 = g_1544 r>> 22;
  _1574 = _1572 ^ _1573;
  _1575 = h_1507 & g_1544;
  _1576 = h_1507 | g_1544;
  _1577 = a_1470 & _1576;
  _1578 = _1575 | _1577;
  t2_1579 = _1574 + _1578;
  b_1580 = b_1433 + t1_1569;
  f_1581 = t1_1569 + t2_1579;
  _1582 = b_1580 r>> 6;
  _1583 = b_1580 r>> 11;
  _1584 = _1582 ^ _1583;
  _1585 = b_1580 r>> 25;
  _1586 = _1584 ^ _1585;
  _1588 = d_1506 ^ c_1543;
  _1589 = b_1580 & _1588;
  _1590 = d_1506 ^ _1589;
  _1592 = w9_1530 r>> 17;
  _1593 = w9_1530 r>> 19;
  _1594 = _1592 ^ _1593;
  _1595 = w9_1530 >> 10;
  _1596 = _1594 ^ _1595;
  _1598 = w12_1049 r>> 7;
  _1599 = w12_1049 r>> 18;
  _1600 = _1598 ^ _1599;
  _1601 = w12_1049 >> 3;
  _1602 = _1600 ^ _1601;
  _2486 = w11_1012 + _1602;
  _2487 = w4_1345 + _2486;
  w11_1604 = _1596 + _2487;
  _2483 = w11_1604 + 3345764771;
  _2484 = e_1469 + _2483;
  _2485 = _1590 + _2484;
  t1_1606 = _1586 + _2485;
  _1607 = f_1581 r>> 2;
  _1608 = f_1581 r>> 13;
  _1609 = _1607 ^ _1608;
  _1610 = f_1581 r>> 22;
  _1611 = _1609 ^ _1610;
  _1612 = g_1544 & f_1581;
  _1613 = g_1544 | f_1581;
  _1614 = h_1507 & _1613;
  _1615 = _1612 | _1614;
  t2_1616 = _1611 + _1615;
  a_1617 = a_1470 + t1_1606;
  e_1618 = t1_1606 + t2_1616;
  _1619 = a_1617 r>> 6;
  _1620 = a_1617 r>> 11;
  _1621 = _1619 ^ _1620;
  _1622 = a_1617 r>> 25;
  _1623 = _1621 ^ _1622;
  _1625 = c_1543 ^ b_1580;
  _1626 = a_1617 & _1625;
  _1627 = c_1543 ^ _1626;
  _1629 = w10_1567 r>> 17;
  _1630 = w10_1567 r>> 19;
  _1631 = _1629 ^ _1630;
  _1632 = w10_1567 >> 10;
  _1633 = _1631 ^ _1632;
  _1635 = w13_1086 r>> 7;
  _1636 = w13_1086 r>> 18;
  _1637 = _1635 ^ _1636;
  _1638 = w13_1086 >> 3;
  _1639 = _1637 ^ _1638;
  _2481 = w12_1049 + _1639;
  _2482 = w5_1382 + _2481;
  w12_1641 = _1633 + _2482;
  _2478 = w12_1641 + 3516065817;
  _2479 = d_1506 + _2478;
  _2480 = _1627 + _2479;
  t1_1643 = _1623 + _2480;
  _1644 = e_1618 r>> 2;
  _1645 = e_1618 r>> 13;
  _1646 = _1644 ^ _1645;
  _1647 = e_1618 r>> 22;
  _1648 = _1646 ^ _1647;
  _1649 = f_1581 & e_1618;
  _1650 = f_1581 | e_1618;
  _1651 = g_1544 & _1650;
  _1652 = _1649 | _1651;
  t2_1653 = _1648 + _1652;
  h_1654 = h_1507 + t1_1643;
  d_1655 = t1_1643 + t2_1653;
  _1656 = h_1654 r>> 6;
  _1657 = h_1654 r>> 11;
  _1658 = _1656 ^ _1657;
  _1659 = h_1654 r>> 25;
  _1660 = _1658 ^ _1659;
  _1662 = b_1580 ^ a_1617;
  _1663 = h_1654 & _1662;
  _1664 = b_1580 ^ _1663;
  _1666 = w11_1604 r>> 17;
  _1667 = w11_1604 r>> 19;
  _1668 = _1666 ^ _1667;
  _1669 = w11_1604 >> 10;
  _1670 = _1668 ^ _1669;
  _1672 = w14_1123 r>> 7;
  _1673 = w14_1123 r>> 18;
  _1674 = _1672 ^ _1673;
  _1675 = w14_1123 >> 3;
  _1676 = _1674 ^ _1675;
  _2476 = w13_1086 + _1676;
  _2477 = w6_1419 + _2476;
  w13_1678 = _1670 + _2477;
  _2473 = w13_1678 + 3600352804;
  _2474 = c_1543 + _2473;
  _2475 = _1664 + _2474;
  t1_1680 = _1660 + _2475;
  _1681 = d_1655 r>> 2;
  _1682 = d_1655 r>> 13;
  _1683 = _1681 ^ _1682;
  _1684 = d_1655 r>> 22;
  _1685 = _1683 ^ _1684;
  _1686 = e_1618 & d_1655;
  _1687 = e_1618 | d_1655;
  _1688 = f_1581 & _1687;
  _1689 = _1686 | _1688;
  t2_1690 = _1685 + _1689;
  g_1691 = g_1544 + t1_1680;
  c_1692 = t1_1680 + t2_1690;
  _1693 = g_1691 r>> 6;
  _1694 = g_1691 r>> 11;
  _1695 = _1693 ^ _1694;
  _1696 = g_1691 r>> 25;
  _1697 = _1695 ^ _1696;
  _1699 = a_1617 ^ h_1654;
  _1700 = g_1691 & _1699;
  _1701 = a_1617 ^ _1700;
  _1703 = w12_1641 r>> 17;
  _1704 = w12_1641 r>> 19;
  _1705 = _1703 ^ _1704;
  _1706 = w12_1641 >> 10;
  _1707 = _1705 ^ _1706;
  _1709 = w15_1160 r>> 7;
  _1710 = w15_1160 r>> 18;
  _1711 = _1709 ^ _1710;
  _1712 = w15_1160 >> 3;
  _1713 = _1711 ^ _1712;
  _2471 = w14_1123 + _1713;
  _2472 = w7_1456 + _2471;
  w14_1715 = _1707 + _2472;
  _2468 = w14_1715 + 4094571909;
  _2469 = b_1580 + _2468;
  _2470 = _1701 + _2469;
  t1_1717 = _1697 + _2470;
  _1718 = c_1692 r>> 2;
  _1719 = c_1692 r>> 13;
  _1720 = _1718 ^ _1719;
  _1721 = c_1692 r>> 22;
  _1722 = _1720 ^ _1721;
  _1723 = d_1655 & c_1692;
  _1724 = d_1655 | c_1692;
  _1725 = e_1618 & _1724;
  _1726 = _1723 | _1725;
  t2_1727 = _1722 + _1726;
  f_1728 = f_1581 + t1_1717;
  b_1729 = t1_1717 + t2_1727;
  _1730 = f_1728 r>> 6;
  _1731 = f_1728 r>> 11;
  _1732 = _1730 ^ _1731;
  _1733 = f_1728 r>> 25;
  _1734 = _1732 ^ _1733;
  _1736 = h_1654 ^ g_1691;
  _1737 = f_1728 & _1736;
  _1738 = h_1654 ^ _1737;
  _1740 = w13_1678 r>> 17;
  _1741 = w13_1678 r>> 19;
  _1742 = _1740 ^ _1741;
  _1743 = w13_1678 >> 10;
  _1744 = _1742 ^ _1743;
  _1746 = w0_1197 r>> 7;
  _1747 = w0_1197 r>> 18;
  _1748 = _1746 ^ _1747;
  _1749 = w0_1197 >> 3;
  _1750 = _1748 ^ _1749;
  _2466 = w15_1160 + _1750;
  _2467 = w8_1493 + _2466;
  w15_1752 = _1744 + _2467;
  _2463 = w15_1752 + 275423344;
  _2464 = a_1617 + _2463;
  _2465 = _1738 + _2464;
  t1_1754 = _1734 + _2465;
  _1755 = b_1729 r>> 2;
  _1756 = b_1729 r>> 13;
  _1757 = _1755 ^ _1756;
  _1758 = b_1729 r>> 22;
  _1759 = _1757 ^ _1758;
  _1760 = c_1692 & b_1729;
  _1761 = c_1692 | b_1729;
  _1762 = d_1655 & _1761;
  _1763 = _1760 | _1762;
  t2_1764 = _1759 + _1763;
  e_1765 = e_1618 + t1_1754;
  a_1766 = t1_1754 + t2_1764;
  _1767 = e_1765 r>> 6;
  _1768 = e_1765 r>> 11;
  _1769 = _1767 ^ _1768;
  _1770 = e_1765 r>> 25;
  _1771 = _1769 ^ _1770;
  _1773 = g_1691 ^ f_1728;
  _1774 = e_1765 & _1773;
  _1775 = g_1691 ^ _1774;
  _1777 = w14_1715 r>> 17;
  _1778 = w14_1715 r>> 19;
  _1779 = _1777 ^ _1778;
  _1780 = w14_1715 >> 10;
  _1781 = _1779 ^ _1780;
  _1783 = w1_1234 r>> 7;
  _1784 = w1_1234 r>> 18;
  _1785 = _1783 ^ _1784;
  _1786 = w1_1234 >> 3;
  _1787 = _1785 ^ _1786;
  _2461 = w0_1197 + _1787;
  _2462 = w9_1530 + _2461;
  w0_1789 = _1781 + _2462;
  _2458 = w0_1789 + 430227734;
  _2459 = h_1654 + _2458;
  _2460 = _1775 + _2459;
  t1_1791 = _1771 + _2460;
  _1792 = a_1766 r>> 2;
  _1793 = a_1766 r>> 13;
  _1794 = _1792 ^ _1793;
  _1795 = a_1766 r>> 22;
  _1796 = _1794 ^ _1795;
  _1797 = b_1729 & a_1766;
  _1798 = b_1729 | a_1766;
  _1799 = c_1692 & _1798;
  _1800 = _1797 | _1799;
  t2_1801 = _1796 + _1800;
  d_1802 = d_1655 + t1_1791;
  h_1803 = t1_1791 + t2_1801;
  _1804 = d_1802 r>> 6;
  _1805 = d_1802 r>> 11;
  _1806 = _1804 ^ _1805;
  _1807 = d_1802 r>> 25;
  _1808 = _1806 ^ _1807;
  _1810 = f_1728 ^ e_1765;
  _1811 = d_1802 & _1810;
  _1812 = f_1728 ^ _1811;
  _1814 = w15_1752 r>> 17;
  _1815 = w15_1752 r>> 19;
  _1816 = _1814 ^ _1815;
  _1817 = w15_1752 >> 10;
  _1818 = _1816 ^ _1817;
  _1820 = w2_1271 r>> 7;
  _1821 = w2_1271 r>> 18;
  _1822 = _1820 ^ _1821;
  _1823 = w2_1271 >> 3;
  _1824 = _1822 ^ _1823;
  _2456 = w1_1234 + _1824;
  _2457 = w10_1567 + _2456;
  w1_1826 = _1818 + _2457;
  _2453 = w1_1826 + 506948616;
  _2454 = g_1691 + _2453;
  _2455 = _1812 + _2454;
  t1_1828 = _1808 + _2455;
  _1829 = h_1803 r>> 2;
  _1830 = h_1803 r>> 13;
  _1831 = _1829 ^ _1830;
  _1832 = h_1803 r>> 22;
  _1833 = _1831 ^ _1832;
  _1834 = a_1766 & h_1803;
  _1835 = a_1766 | h_1803;
  _1836 = b_1729 & _1835;
  _1837 = _1834 | _1836;
  t2_1838 = _1833 + _1837;
  c_1839 = c_1692 + t1_1828;
  g_1840 = t1_1828 + t2_1838;
  _1841 = c_1839 r>> 6;
  _1842 = c_1839 r>> 11;
  _1843 = _1841 ^ _1842;
  _1844 = c_1839 r>> 25;
  _1845 = _1843 ^ _1844;
  _1847 = e_1765 ^ d_1802;
  _1848 = c_1839 & _1847;
  _1849 = e_1765 ^ _1848;
  _1851 = w0_1789 r>> 17;
  _1852 = w0_1789 r>> 19;
  _1853 = _1851 ^ _1852;
  _1854 = w0_1789 >> 10;
  _1855 = _1853 ^ _1854;
  _1857 = w3_1308 r>> 7;
  _1858 = w3_1308 r>> 18;
  _1859 = _1857 ^ _1858;
  _1860 = w3_1308 >> 3;
  _1861 = _1859 ^ _1860;
  _2451 = w2_1271 + _1861;
  _2452 = w11_1604 + _2451;
  w2_1863 = _1855 + _2452;
  _2448 = w2_1863 + 659060556;
  _2449 = f_1728 + _2448;
  _2450 = _1849 + _2449;
  t1_1865 = _1845 + _2450;
  _1866 = g_1840 r>> 2;
  _1867 = g_1840 r>> 13;
  _1868 = _1866 ^ _1867;
  _1869 = g_1840 r>> 22;
  _1870 = _1868 ^ _1869;
  _1871 = h_1803 & g_1840;
  _1872 = h_1803 | g_1840;
  _1873 = a_1766 & _1872;
  _1874 = _1871 | _1873;
  t2_1875 = _1870 + _1874;
  b_1876 = b_1729 + t1_1865;
  f_1877 = t1_1865 + t2_1875;
  _1878 = b_1876 r>> 6;
  _1879 = b_1876 r>> 11;
  _1880 = _1878 ^ _1879;
  _1881 = b_1876 r>> 25;
  _1882 = _1880 ^ _1881;
  _1884 = d_1802 ^ c_1839;
  _1885 = b_1876 & _1884;
  _1886 = d_1802 ^ _1885;
  _1888 = w1_1826 r>> 17;
  _1889 = w1_1826 r>> 19;
  _1890 = _1888 ^ _1889;
  _1891 = w1_1826 >> 10;
  _1892 = _1890 ^ _1891;
  _1894 = w4_1345 r>> 7;
  _1895 = w4_1345 r>> 18;
  _1896 = _1894 ^ _1895;
  _1897 = w4_1345 >> 3;
  _1898 = _1896 ^ _1897;
  _2446 = w3_1308 + _1898;
  _2447 = w12_1641 + _2446;
  w3_1900 = _1892 + _2447;
  _2443 = w3_1900 + 883997877;
  _2444 = e_1765 + _2443;
  _2445 = _1886 + _2444;
  t1_1902 = _1882 + _2445;
  _1903 = f_1877 r>> 2;
  _1904 = f_1877 r>> 13;
  _1905 = _1903 ^ _1904;
  _1906 = f_1877 r>> 22;
  _1907 = _1905 ^ _1906;
  _1908 = g_1840 & f_1877;
  _1909 = g_1840 | f_1877;
  _1910 = h_1803 & _1909;
  _1911 = _1908 | _1910;
  t2_1912 = _1907 + _1911;
  a_1913 = a_1766 + t1_1902;
  e_1914 = t1_1902 + t2_1912;
  _1915 = a_1913 r>> 6;
  _1916 = a_1913 r>> 11;
  _1917 = _1915 ^ _1916;
  _1918 = a_1913 r>> 25;
  _1919 = _1917 ^ _1918;
  _1921 = c_1839 ^ b_1876;
  _1922 = a_1913 & _1921;
  _1923 = c_1839 ^ _1922;
  _1925 = w2_1863 r>> 17;
  _1926 = w2_1863 r>> 19;
  _1927 = _1925 ^ _1926;
  _1928 = w2_1863 >> 10;
  _1929 = _1927 ^ _1928;
  _1931 = w5_1382 r>> 7;
  _1932 = w5_1382 r>> 18;
  _1933 = _1931 ^ _1932;
  _1934 = w5_1382 >> 3;
  _1935 = _1933 ^ _1934;
  _2441 = w4_1345 + _1935;
  _2442 = w13_1678 + _2441;
  w4_1937 = _1929 + _2442;
  _2438 = w4_1937 + 958139571;
  _2439 = d_1802 + _2438;
  _2440 = _1923 + _2439;
  t1_1939 = _1919 + _2440;
  _1940 = e_1914 r>> 2;
  _1941 = e_1914 r>> 13;
  _1942 = _1940 ^ _1941;
  _1943 = e_1914 r>> 22;
  _1944 = _1942 ^ _1943;
  _1945 = f_1877 & e_1914;
  _1946 = f_1877 | e_1914;
  _1947 = g_1840 & _1946;
  _1948 = _1945 | _1947;
  t2_1949 = _1944 + _1948;
  h_1950 = h_1803 + t1_1939;
  d_1951 = t1_1939 + t2_1949;
  _1952 = h_1950 r>> 6;
  _1953 = h_1950 r>> 11;
  _1954 = _1952 ^ _1953;
  _1955 = h_1950 r>> 25;
  _1956 = _1954 ^ _1955;
  _1958 = b_1876 ^ a_1913;
  _1959 = h_1950 & _1958;
  _1960 = b_1876 ^ _1959;
  _1962 = w3_1900 r>> 17;
  _1963 = w3_1900 r>> 19;
  _1964 = _1962 ^ _1963;
  _1965 = w3_1900 >> 10;
  _1966 = _1964 ^ _1965;
  _1968 = w6_1419 r>> 7;
  _1969 = w6_1419 r>> 18;
  _1970 = _1968 ^ _1969;
  _1971 = w6_1419 >> 3;
  _1972 = _1970 ^ _1971;
  _2436 = w5_1382 + _1972;
  _2437 = w14_1715 + _2436;
  w5_1974 = _1966 + _2437;
  _2433 = w5_1974 + 1322822218;
  _2434 = c_1839 + _2433;
  _2435 = _1960 + _2434;
  t1_1976 = _1956 + _2435;
  _1977 = d_1951 r>> 2;
  _1978 = d_1951 r>> 13;
  _1979 = _1977 ^ _1978;
  _1980 = d_1951 r>> 22;
  _1981 = _1979 ^ _1980;
  _1982 = e_1914 & d_1951;
  _1983 = e_1914 | d_1951;
  _1984 = f_1877 & _1983;
  _1985 = _1982 | _1984;
  t2_1986 = _1981 + _1985;
  g_1987 = g_1840 + t1_1976;
  c_1988 = t1_1976 + t2_1986;
  _1989 = g_1987 r>> 6;
  _1990 = g_1987 r>> 11;
  _1991 = _1989 ^ _1990;
  _1992 = g_1987 r>> 25;
  _1993 = _1991 ^ _1992;
  _1995 = a_1913 ^ h_1950;
  _1996 = g_1987 & _1995;
  _1997 = a_1913 ^ _1996;
  _1999 = w4_1937 r>> 17;
  _2000 = w4_1937 r>> 19;
  _2001 = _1999 ^ _2000;
  _2002 = w4_1937 >> 10;
  _2003 = _2001 ^ _2002;
  _2005 = w7_1456 r>> 7;
  _2006 = w7_1456 r>> 18;
  _2007 = _2005 ^ _2006;
  _2008 = w7_1456 >> 3;
  _2009 = _2007 ^ _2008;
  _2431 = w6_1419 + _2009;
  _2432 = w15_1752 + _2431;
  w6_2011 = _2003 + _2432;
  _2428 = w6_2011 + 1537002063;
  _2429 = b_1876 + _2428;
  _2430 = _1997 + _2429;
  t1_2013 = _1993 + _2430;
  _2014 = c_1988 r>> 2;
  _2015 = c_1988 r>> 13;
  _2016 = _2014 ^ _2015;
  _2017 = c_1988 r>> 22;
  _2018 = _2016 ^ _2017;
  _2019 = d_1951 & c_1988;
  _2020 = d_1951 | c_1988;
  _2021 = e_1914 & _2020;
  _2022 = _2019 | _2021;
  t2_2023 = _2018 + _2022;
  f_2024 = f_1877 + t1_2013;
  b_2025 = t1_2013 + t2_2023;
  _2026 = f_2024 r>> 6;
  _2027 = f_2024 r>> 11;
  _2028 = _2026 ^ _2027;
  _2029 = f_2024 r>> 25;
  _2030 = _2028 ^ _2029;
  _2032 = h_1950 ^ g_1987;
  _2033 = f_2024 & _2032;
  _2034 = h_1950 ^ _2033;
  _2036 = w5_1974 r>> 17;
  _2037 = w5_1974 r>> 19;
  _2038 = _2036 ^ _2037;
  _2039 = w5_1974 >> 10;
  _2040 = _2038 ^ _2039;
  _2042 = w8_1493 r>> 7;
  _2043 = w8_1493 r>> 18;
  _2044 = _2042 ^ _2043;
  _2045 = w8_1493 >> 3;
  _2046 = _2044 ^ _2045;
  _2426 = w7_1456 + _2046;
  _2427 = w0_1789 + _2426;
  w7_2048 = _2040 + _2427;
  _2423 = w7_2048 + 1747873779;
  _2424 = a_1913 + _2423;
  _2425 = _2034 + _2424;
  t1_2050 = _2030 + _2425;
  _2051 = b_2025 r>> 2;
  _2052 = b_2025 r>> 13;
  _2053 = _2051 ^ _2052;
  _2054 = b_2025 r>> 22;
  _2055 = _2053 ^ _2054;
  _2056 = c_1988 & b_2025;
  _2057 = c_1988 | b_2025;
  _2058 = d_1951 & _2057;
  _2059 = _2056 | _2058;
  t2_2060 = _2055 + _2059;
  e_2061 = e_1914 + t1_2050;
  a_2062 = t1_2050 + t2_2060;
  _2063 = e_2061 r>> 6;
  _2064 = e_2061 r>> 11;
  _2065 = _2063 ^ _2064;
  _2066 = e_2061 r>> 25;
  _2067 = _2065 ^ _2066;
  _2069 = g_1987 ^ f_2024;
  _2070 = e_2061 & _2069;
  _2071 = g_1987 ^ _2070;
  _2073 = w6_2011 r>> 17;
  _2074 = w6_2011 r>> 19;
  _2075 = _2073 ^ _2074;
  _2076 = w6_2011 >> 10;
  _2077 = _2075 ^ _2076;
  _2079 = w9_1530 r>> 7;
  _2080 = w9_1530 r>> 18;
  _2081 = _2079 ^ _2080;
  _2082 = w9_1530 >> 3;
  _2083 = _2081 ^ _2082;
  _2421 = w8_1493 + _2083;
  _2422 = w1_1826 + _2421;
  w8_2085 = _2077 + _2422;
  _2418 = w8_2085 + 1955562222;
  _2419 = h_1950 + _2418;
  _2420 = _2071 + _2419;
  t1_2087 = _2067 + _2420;
  _2088 = a_2062 r>> 2;
  _2089 = a_2062 r>> 13;
  _2090 = _2088 ^ _2089;
  _2091 = a_2062 r>> 22;
  _2092 = _2090 ^ _2091;
  _2093 = b_2025 & a_2062;
  _2094 = b_2025 | a_2062;
  _2095 = c_1988 & _2094;
  _2096 = _2093 | _2095;
  t2_2097 = _2092 + _2096;
  d_2098 = d_1951 + t1_2087;
  h_2099 = t1_2087 + t2_2097;
  _2100 = d_2098 r>> 6;
  _2101 = d_2098 r>> 11;
  _2102 = _2100 ^ _2101;
  _2103 = d_2098 r>> 25;
  _2104 = _2102 ^ _2103;
  _2106 = f_2024 ^ e_2061;
  _2107 = d_2098 & _2106;
  _2108 = f_2024 ^ _2107;
  _2110 = w7_2048 r>> 17;
  _2111 = w7_2048 r>> 19;
  _2112 = _2110 ^ _2111;
  _2113 = w7_2048 >> 10;
  _2114 = _2112 ^ _2113;
  _2116 = w10_1567 r>> 7;
  _2117 = w10_1567 r>> 18;
  _2118 = _2116 ^ _2117;
  _2119 = w10_1567 >> 3;
  _2120 = _2118 ^ _2119;
  _2416 = w9_1530 + _2120;
  _2417 = w2_1863 + _2416;
  w9_2122 = _2114 + _2417;
  _2413 = w9_2122 + 2024104815;
  _2414 = g_1987 + _2413;
  _2415 = _2108 + _2414;
  t1_2124 = _2104 + _2415;
  _2125 = h_2099 r>> 2;
  _2126 = h_2099 r>> 13;
  _2127 = _2125 ^ _2126;
  _2128 = h_2099 r>> 22;
  _2129 = _2127 ^ _2128;
  _2130 = a_2062 & h_2099;
  _2131 = a_2062 | h_2099;
  _2132 = b_2025 & _2131;
  _2133 = _2130 | _2132;
  t2_2134 = _2129 + _2133;
  c_2135 = c_1988 + t1_2124;
  g_2136 = t1_2124 + t2_2134;
  _2137 = c_2135 r>> 6;
  _2138 = c_2135 r>> 11;
  _2139 = _2137 ^ _2138;
  _2140 = c_2135 r>> 25;
  _2141 = _2139 ^ _2140;
  _2143 = e_2061 ^ d_2098;
  _2144 = c_2135 & _2143;
  _2145 = e_2061 ^ _2144;
  _2147 = w8_2085 r>> 17;
  _2148 = w8_2085 r>> 19;
  _2149 = _2147 ^ _2148;
  _2150 = w8_2085 >> 10;
  _2151 = _2149 ^ _2150;
  _2153 = w11_1604 r>> 7;
  _2154 = w11_1604 r>> 18;
  _2155 = _2153 ^ _2154;
  _2156 = w11_1604 >> 3;
  _2157 = _2155 ^ _2156;
  _2411 = w10_1567 + _2157;
  _2412 = w3_1900 + _2411;
  w10_2159 = _2151 + _2412;
  _2408 = w10_2159 + 2227730452;
  _2409 = f_2024 + _2408;
  _2410 = _2145 + _2409;
  t1_2161 = _2141 + _2410;
  _2162 = g_2136 r>> 2;
  _2163 = g_2136 r>> 13;
  _2164 = _2162 ^ _2163;
  _2165 = g_2136 r>> 22;
  _2166 = _2164 ^ _2165;
  _2167 = h_2099 & g_2136;
  _2168 = h_2099 | g_2136;
  _2169 = a_2062 & _2168;
  _2170 = _2167 | _2169;
  t2_2171 = _2166 + _2170;
  b_2172 = b_2025 + t1_2161;
  f_2173 = t1_2161 + t2_2171;
  _2174 = b_2172 r>> 6;
  _2175 = b_2172 r>> 11;
  _2176 = _2174 ^ _2175;
  _2177 = b_2172 r>> 25;
  _2178 = _2176 ^ _2177;
  _2180 = d_2098 ^ c_2135;
  _2181 = b_2172 & _2180;
  _2182 = d_2098 ^ _2181;
  _2184 = w9_2122 r>> 17;
  _2185 = w9_2122 r>> 19;
  _2186 = _2184 ^ _2185;
  _2187 = w9_2122 >> 10;
  _2188 = _2186 ^ _2187;
  _2190 = w12_1641 r>> 7;
  _2191 = w12_1641 r>> 18;
  _2192 = _2190 ^ _2191;
  _2193 = w12_1641 >> 3;
  _2194 = _2192 ^ _2193;
  _2406 = w11_1604 + _2194;
  _2407 = w4_1937 + _2406;
  w11_2196 = _2188 + _2407;
  _2403 = w11_2196 + 2361852424;
  _2404 = e_2061 + _2403;
  _2405 = _2182 + _2404;
  t1_2198 = _2178 + _2405;
  _2199 = f_2173 r>> 2;
  _2200 = f_2173 r>> 13;
  _2201 = _2199 ^ _2200;
  _2202 = f_2173 r>> 22;
  _2203 = _2201 ^ _2202;
  _2204 = g_2136 & f_2173;
  _2205 = g_2136 | f_2173;
  _2206 = h_2099 & _2205;
  _2207 = _2204 | _2206;
  t2_2208 = _2203 + _2207;
  a_2209 = a_2062 + t1_2198;
  e_2210 = t1_2198 + t2_2208;
  _2211 = a_2209 r>> 6;
  _2212 = a_2209 r>> 11;
  _2213 = _2211 ^ _2212;
  _2214 = a_2209 r>> 25;
  _2215 = _2213 ^ _2214;
  _2217 = c_2135 ^ b_2172;
  _2218 = a_2209 & _2217;
  _2219 = c_2135 ^ _2218;
  _2221 = w10_2159 r>> 17;
  _2222 = w10_2159 r>> 19;
  _2223 = _2221 ^ _2222;
  _2224 = w10_2159 >> 10;
  _2225 = _2223 ^ _2224;
  _2227 = w13_1678 r>> 7;
  _2228 = w13_1678 r>> 18;
  _2229 = _2227 ^ _2228;
  _2230 = w13_1678 >> 3;
  _2231 = _2229 ^ _2230;
  _2401 = w12_1641 + _2231;
  _2402 = w5_1974 + _2401;
  w12_2233 = _2225 + _2402;
  _2398 = w12_2233 + 2428436474;
  _2399 = d_2098 + _2398;
  _2400 = _2219 + _2399;
  t1_2235 = _2215 + _2400;
  _2236 = e_2210 r>> 2;
  _2237 = e_2210 r>> 13;
  _2238 = _2236 ^ _2237;
  _2239 = e_2210 r>> 22;
  _2240 = _2238 ^ _2239;
  _2241 = f_2173 & e_2210;
  _2242 = f_2173 | e_2210;
  _2243 = g_2136 & _2242;
  _2244 = _2241 | _2243;
  t2_2245 = _2240 + _2244;
  h_2246 = h_2099 + t1_2235;
  d_2247 = t1_2235 + t2_2245;
  _2248 = h_2246 r>> 6;
  _2249 = h_2246 r>> 11;
  _2250 = _2248 ^ _2249;
  _2251 = h_2246 r>> 25;
  _2252 = _2250 ^ _2251;
  _2254 = b_2172 ^ a_2209;
  _2255 = h_2246 & _2254;
  _2256 = b_2172 ^ _2255;
  _2258 = w11_2196 r>> 17;
  _2259 = w11_2196 r>> 19;
  _2260 = _2258 ^ _2259;
  _2261 = w11_2196 >> 10;
  _2262 = _2260 ^ _2261;
  _2264 = w14_1715 r>> 7;
  _2265 = w14_1715 r>> 18;
  _2266 = _2264 ^ _2265;
  _2267 = w14_1715 >> 3;
  _2268 = _2266 ^ _2267;
  _2396 = w13_1678 + _2268;
  _2397 = w6_2011 + _2396;
  w13_2270 = _2262 + _2397;
  _2393 = w13_2270 + 2756734187;
  _2394 = c_2135 + _2393;
  _2395 = _2256 + _2394;
  t1_2272 = _2252 + _2395;
  _2273 = d_2247 r>> 2;
  _2274 = d_2247 r>> 13;
  _2275 = _2273 ^ _2274;
  _2276 = d_2247 r>> 22;
  _2277 = _2275 ^ _2276;
  _2278 = e_2210 & d_2247;
  _2279 = e_2210 | d_2247;
  _2280 = f_2173 & _2279;
  _2281 = _2278 | _2280;
  t2_2282 = _2277 + _2281;
  g_2283 = g_2136 + t1_2272;
  c_2284 = t1_2272 + t2_2282;
  _2285 = g_2283 r>> 6;
  _2286 = g_2283 r>> 11;
  _2287 = _2285 ^ _2286;
  _2288 = g_2283 r>> 25;
  _2289 = _2287 ^ _2288;
  _2387 = w14_1715 + 3204031479;
  _2291 = a_2209 ^ h_2246;
  _2292 = g_2283 & _2291;
  _2293 = a_2209 ^ _2292;
  _2295 = w12_2233 r>> 17;
  _2296 = w12_2233 r>> 19;
  _2297 = _2295 ^ _2296;
  _2298 = w12_2233 >> 10;
  _2299 = _2297 ^ _2298;
  _2302 = w15_1752 r>> 7;
  _2303 = w15_1752 r>> 18;
  _2304 = _2302 ^ _2303;
  _2305 = w15_1752 >> 3;
  _2306 = _2304 ^ _2305;
  _2388 = _2306 + _2387;
  _2389 = w7_2048 + _2388;
  _2390 = _2299 + _2389;
  _2391 = b_2172 + _2390;
  _2392 = _2293 + _2391;
  t1_2309 = _2289 + _2392;
  _2310 = c_2284 r>> 2;
  _2311 = c_2284 r>> 13;
  _2312 = _2310 ^ _2311;
  _2313 = c_2284 r>> 22;
  _2314 = _2312 ^ _2313;
  _2315 = d_2247 & c_2284;
  _2316 = d_2247 | c_2284;
  _2317 = e_2210 & _2316;
  _2318 = _2315 | _2317;
  t2_2319 = _2314 + _2318;
  f_2320 = f_2173 + t1_2309;
  b_2321 = t1_2309 + t2_2319;
  _2322 = f_2320 r>> 6;
  _2323 = f_2320 r>> 11;
  _2324 = _2322 ^ _2323;
  _2325 = f_2320 r>> 25;
  _2326 = _2324 ^ _2325;
  _2378 = w15_1752 + 3329325298;
  _2328 = h_2246 ^ g_2283;
  _2329 = f_2320 & _2328;
  _2330 = h_2246 ^ _2329;
  _2332 = w13_2270 r>> 17;
  _2333 = w13_2270 r>> 19;
  _2334 = _2332 ^ _2333;
  _2335 = w13_2270 >> 10;
  _2336 = _2334 ^ _2335;
  _2339 = w0_1789 r>> 7;
  _2340 = w0_1789 r>> 18;
  _2341 = _2339 ^ _2340;
  _2342 = w0_1789 >> 3;
  _2343 = _2341 ^ _2342;
  _2375 = _2343 + _2378;
  _2376 = w8_2085 + _2375;
  _2381 = _2336 + _2376;
  _2382 = a_2209 + _2381;
  _2383 = _2330 + _2382;
  t1_2346 = _2326 + _2383;
  _2347 = b_2321 r>> 2;
  _2348 = b_2321 r>> 13;
  _2349 = _2347 ^ _2348;
  _2350 = b_2321 r>> 22;
  _2351 = _2349 ^ _2350;
  _2352 = c_2284 & b_2321;
  _2353 = c_2284 | b_2321;
  _2354 = d_2247 & _2353;
  _2355 = _2352 | _2354;
  t2_2356 = _2351 + _2355;
  _13 = e_35 + e_2210;
  _14 = a_31 + t2_2356;
  _2359 = _14 + t1_2346;
  MEM[(uint32_t *)hash_19(D)] = _2359;
  _2360 = b_32 + b_2321;
  MEM[(uint32_t *)hash_19(D) + 4B] = _2360;
  _2361 = c_33 + c_2284;
  MEM[(uint32_t *)hash_19(D) + 8B] = _2361;
  _2362 = d_34 + d_2247;
  MEM[(uint32_t *)hash_19(D) + 12B] = _2362;
  _2363 = _13 + t1_2346;
  MEM[(uint32_t *)hash_19(D) + 16B] = _2363;
  _2364 = f_36 + f_2320;
  MEM[(uint32_t *)hash_19(D) + 20B] = _2364;
  _2365 = g_37 + g_2283;
  MEM[(uint32_t *)hash_19(D) + 24B] = _2365;
  _2366 = h_38 + h_2246;
  MEM[(uint32_t *)hash_19(D) + 28B] = _2366;
  ivtmp.210_52 = ivtmp.210_51 + 18446744073709551552;
  if (ivtmp.210_52 > 63)
    goto <bb 4>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 105119325]:
  len_50 = _9 & 63;
  if (len_50 != 0)
    goto <bb 6>; [24.72%]
  else
    goto <bb 7>; [75.28%]

  <bb 6> [local count: 38976828]:
  # len_27 = PHI <len_21(D)(3), len_50(5)>
  # data_8 = PHI <data_23(D)(3), data_24(5)>
  # prephitmp_195 = PHI <_218(3), pretmp_214(5)>
  __builtin_memcpy (prephitmp_195, data_8, len_27); [tail call]

  <bb 7> [local count: 118111601]:
  return;

}



;; Function secp256k1_sha256_finalize (secp256k1_sha256_finalize, funcdef_no=185, decl_uid=5729, cgraph_uid=185, symbol_order=187)

secp256k1_sha256_finalize (struct secp256k1_sha256_t * hash, unsigned char * out32)
{
  uint32_t out[8];
  uint32_t sizedesc[2];
  static const unsigned char pad[64] = {128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  long unsigned int _1;
  long unsigned int _2;
  unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  long unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  long unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  unsigned int _17;
  unsigned int _18;
  unsigned int _19;
  unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  long unsigned int _26;
  unsigned int _27;
  unsigned int _28;
  unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  unsigned int load_dst_40;
  unsigned int _42;
  unsigned int _44;
  unsigned int load_dst_61;
  unsigned int _62;
  unsigned int _68;
  unsigned int load_dst_69;
  unsigned int _84;
  unsigned int load_dst_85;
  unsigned int _86;
  unsigned int load_dst_97;
  unsigned int _98;
  unsigned int load_dst_109;
  unsigned int _110;
  unsigned int load_dst_121;
  unsigned int _122;
  unsigned int load_dst_133;
  unsigned int _134;

  <bb 2> [local count: 119292720]:
  _1 = hash_46(D)->bytes;
  _2 = _1 >> 29;
  _3 = (unsigned int) _2;
  _4 = _3 << 24;
  _5 = _3 << 8;
  _6 = _5 & 16711680;
  _8 = _1 >> 37;
  _9 = (unsigned int) _8;
  _10 = _9 & 65280;
  _62 = _4 | _10;
  _12 = _1 >> 53;
  _13 = (unsigned int) _12;
  _14 = _13 & 255;
  _44 = _14 | _62;
  _15 = _6 | _44;
  sizedesc[0] = _15;
  _16 = (unsigned int) _1;
  _17 = _16 << 27;
  _18 = _16 << 11;
  _19 = _18 & 16711680;
  _20 = _17 | _19;
  _21 = _1 << 3;
  _22 = _21 >> 8;
  _23 = (unsigned int) _22;
  _24 = _23 & 65280;
  _25 = _20 | _24;
  _26 = _21 >> 24;
  _27 = (unsigned int) _26;
  _28 = _27 & 255;
  _29 = _25 | _28;
  sizedesc[1] = _29;
  _30 = 119 - _1;
  _31 = _30 & 63;
  _32 = _31 + 1;
  secp256k1_sha256_write (hash_46(D), &pad, _32);
  secp256k1_sha256_write (hash_46(D), &sizedesc, 8);
  load_dst_61 = MEM[(unsigned int *)hash_46(D)];
  _84 = __builtin_bswap32 (load_dst_61);
  out[0] = _84;
  load_dst_69 = MEM[(unsigned int *)hash_46(D) + 4B];
  _68 = __builtin_bswap32 (load_dst_69);
  out[1] = _68;
  load_dst_85 = MEM[(unsigned int *)hash_46(D) + 8B];
  _86 = __builtin_bswap32 (load_dst_85);
  out[2] = _86;
  load_dst_97 = MEM[(unsigned int *)hash_46(D) + 12B];
  _98 = __builtin_bswap32 (load_dst_97);
  out[3] = _98;
  load_dst_109 = MEM[(unsigned int *)hash_46(D) + 16B];
  _110 = __builtin_bswap32 (load_dst_109);
  out[4] = _110;
  load_dst_121 = MEM[(unsigned int *)hash_46(D) + 20B];
  _122 = __builtin_bswap32 (load_dst_121);
  out[5] = _122;
  load_dst_133 = MEM[(unsigned int *)hash_46(D) + 24B];
  _134 = __builtin_bswap32 (load_dst_133);
  out[6] = _134;
  load_dst_40 = MEM[(unsigned int *)hash_46(D) + 28B];
  _42 = __builtin_bswap32 (load_dst_40);
  out[7] = _42;
  MEM[(void *)hash_46(D)] = 0;
  MEM[(struct secp256k1_sha256_t *)hash_46(D) + 8B] = 0;
  MEM[(struct secp256k1_sha256_t *)hash_46(D) + 16B] = 0;
  MEM[(struct secp256k1_sha256_t *)hash_46(D) + 24B] = 0;
  MEM[(char * {ref-all})out32_54(D)] = MEM[(char * {ref-all})&out];
  sizedesc ={v} {CLOBBER};
  out ={v} {CLOBBER};
  return;

}



;; Function secp256k1_der_parse_integer (secp256k1_der_parse_integer, funcdef_no=200, decl_uid=6076, cgraph_uid=200, symbol_order=205)

secp256k1_der_parse_integer (struct secp256k1_scalar * r, const unsigned char * * sig, const unsigned char * sigend)
{
  int rlen;
  unsigned char ra[32];
  int overflow;
  const unsigned char * _1;
  unsigned char _3;
  _Bool _4;
  const unsigned char * _5;
  const unsigned char * _6;
  sizetype _7;
  const unsigned char * _8;
  unsigned char _9;
  unsigned char _10;
  signed char _11;
  unsigned char _12;
  signed char _13;
  signed char _14;
  const unsigned char * _15;
  int overflow.141_18;
  sizetype _21;
  void * _22;
  int overflow.142_23;
  const unsigned char * _26;
  int _28;
  _Bool _52;
  long unsigned int prephitmp_58;
  const unsigned char * prephitmp_59;
  sizetype prephitmp_60;
  const unsigned char * prephitmp_61;
  unsigned char pretmp_63;
  const unsigned char * prephitmp_66;
  unsigned char pretmp_67;
  const unsigned char * prephitmp_68;
  const unsigned char * _70;
  const unsigned char * pretmp_72;
  const unsigned char * _77;
  _Bool _80;
  long unsigned int _86;
  sizetype prephitmp_87;
  const unsigned char * pretmp_88;
  const unsigned char * prephitmp_89;
  sizetype prephitmp_90;

  <bb 2> [local count: 1055719145]:
  overflow = 0;
  ra = {};
  _1 = *sig_37(D);
  if (_1 == sigend_38(D))
    goto <bb 3>; [18.09%]
  else
    goto <bb 4>; [81.91%]

  <bb 3> [local count: 940855615]:
  goto <bb 24>; [100.00%]

  <bb 4> [local count: 864739552]:
  _3 = *_1;
  if (_3 != 2)
    goto <bb 3>; [67.00%]
  else
    goto <bb 5>; [33.00%]

  <bb 5> [local count: 285364052]:
  _5 = _1 + 1;
  *sig_37(D) = _5;
  rlen_41 = secp256k1_der_read_len (sig_37(D), sigend_38(D));
  if (rlen_41 <= 0)
    goto <bb 3>; [26.36%]
  else
    goto <bb 6>; [73.64%]

  <bb 6> [local count: 210142088]:
  _6 = *sig_37(D);
  _7 = (sizetype) rlen_41;
  _8 = _6 + _7;
  if (_8 > sigend_38(D))
    goto <bb 3>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 7> [local count: 138693778]:
  _9 = *_6;
  if (_9 == 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 8> [local count: 69346889]:
  if (rlen_41 != 1)
    goto <bb 9>; [59.00%]
  else
    goto <bb 16>; [41.00%]

  <bb 9> [local count: 40914665]:
  _10 = MEM[(const unsigned char *)_6 + 1B];
  _11 = (signed char) _10;
  if (_11 >= 0)
    goto <bb 3>; [42.57%]
  else
    goto <bb 16>; [57.43%]

  <bb 10> [local count: 69346889]:
  _4 = rlen_41 != 1;
  _52 = _9 == 255;
  _80 = _4 & _52;
  if (_80 != 0)
    goto <bb 11>; [35.08%]
  else
    goto <bb 12>; [64.92%]

  <bb 11> [local count: 24328047]:
  _12 = MEM[(const unsigned char *)_6 + 1B];
  _13 = (signed char) _12;
  if (_13 < 0)
    goto <bb 3>; [26.36%]
  else
    goto <bb 13>; [73.64%]

  <bb 12> [local count: 45018842]:
  _14 = (signed char) _9;
  if (_14 < 0)
    goto <bb 13>; [64.81%]
  else
    goto <bb 17>; [35.19%]

  <bb 13> [local count: 56616522]:
  overflow = 1;
  pretmp_67 = *_6;
  if (pretmp_67 == 0)
    goto <bb 16>; [100.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 14> [local count: 850332255]:
  rlen_43 = rlen_51 + -1;
  _15 = _70 + 1;
  *sig_37(D) = _15;
  if (rlen_43 != 0)
    goto <bb 15>; [93.84%]
  else
    goto <bb 18>; [6.16%]

  <bb 15> [local count: 899822493]:
  # _70 = PHI <_15(14), _77(16)>
  # rlen_51 = PHI <rlen_43(14), rlen_78(16)>
  pretmp_63 = MEM[base: _70, offset: 0B];
  if (pretmp_63 == 0)
    goto <bb 14>; [94.50%]
  else
    goto <bb 17>; [5.50%]

  <bb 16> [local count: 108546038]:
  rlen_78 = rlen_41 + -1;
  _77 = _6 + 1;
  *sig_37(D) = _77;
  if (rlen_78 != 0)
    goto <bb 15>; [93.84%]
  else
    goto <bb 18>; [6.16%]

  <bb 17> [local count: 57431766]:
  # prephitmp_66 = PHI <_6(13), _6(12), _70(15)>
  # rlen_69 = PHI <rlen_41(13), rlen_41(12), rlen_51(15)>
  _86 = (long unsigned int) rlen_69;
  if (rlen_69 > 32)
    goto <bb 25>; [100.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 18> [local count: 57431766]:
  # prephitmp_58 = PHI <0(14), 0(16), _86(17)>
  # prephitmp_68 = PHI <_15(14), _77(16), prephitmp_66(17)>
  overflow.141_18 = overflow;
  if (overflow.141_18 == 0)
    goto <bb 19>; [66.00%]
  else
    goto <bb 25>; [34.00%]

  <bb 19> [local count: 57431766]:
  _21 = 32 - prephitmp_58;
  _22 = &ra + _21;
  __builtin_memcpy (_22, prephitmp_68, prephitmp_58);
  secp256k1_scalar_set_b32 (r_46(D), &ra, &overflow);
  overflow.142_23 = overflow;
  if (overflow.142_23 != 0)
    goto <bb 21>; [0.00%]
  else
    goto <bb 20>; [100.00%]

  <bb 20> [local count: 57431766]:
  pretmp_88 = *sig_37(D);
  goto <bb 23>; [100.00%]

  <bb 21> [local count: 0]:
  pretmp_72 = *sig_37(D);

  <bb 22> [local count: 57431766]:
  # prephitmp_59 = PHI <prephitmp_61(25), pretmp_72(21)>
  # prephitmp_90 = PHI <prephitmp_87(25), prephitmp_58(21)>
  MEM[(long unsigned int *)r_46(D)] = { 0, 0 };
  MEM[(long unsigned int *)r_46(D) + 16B] = { 0, 0 };

  <bb 23> [local count: 114863532]:
  # prephitmp_60 = PHI <prephitmp_90(22), prephitmp_58(20)>
  # prephitmp_89 = PHI <prephitmp_59(22), pretmp_88(20)>
  _26 = prephitmp_89 + prephitmp_60;
  *sig_37(D) = _26;

  <bb 24> [local count: 1055719145]:
  # _28 = PHI <1(23), 0(3)>
  overflow ={v} {CLOBBER};
  ra ={v} {CLOBBER};
  return _28;

  <bb 25> [local count: 57431766]:
  # prephitmp_61 = PHI <prephitmp_66(17), prephitmp_68(18)>
  # prephitmp_87 = PHI <_86(17), prephitmp_58(18)>
  goto <bb 22>; [100.00%]

}



;; Function secp256k1_hmac_sha256_initialize.constprop (secp256k1_hmac_sha256_initialize.constprop.22, funcdef_no=267, decl_uid=9448, cgraph_uid=173, symbol_order=765)

secp256k1_hmac_sha256_initialize.constprop (struct secp256k1_hmac_sha256_t * hash, const unsigned char * key)
{
  vector(16) unsigned char vect__9.232;
  vector(16) unsigned char vect__8.231;
  vector(16) unsigned char vect__14.226;
  vector(16) unsigned char vect__13.225;
  unsigned char rkey[64];
  struct secp256k1_sha256_t * _6;
  struct secp256k1_sha256_t * _11;

  <bb 2> [local count: 16535625]:
  __builtin_memcpy (&rkey, key_1(D), 32);
  __builtin_memset (&MEM[(void *)&rkey + 32B], 0, 32);
  _6 = &hash_5(D)->outer;
  MEM[(unsigned int *)hash_5(D) + 104B] = { 1779033703, 3144134277, 1013904242, 2773480762 };
  MEM[(unsigned int *)hash_5(D) + 120B] = { 1359893119, 2600822924, 528734635, 1541459225 };
  MEM[(struct secp256k1_sha256_t *)hash_5(D) + 104B].bytes = 0;
  vect__8.231_85 = MEM[(unsigned char[64] *)&rkey];
  vect__9.232_86 = vect__8.231_85 ^ { 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92 };
  MEM[(unsigned char[64] *)&rkey] = vect__9.232_86;
  vect__8.231_95 = MEM[(unsigned char[64] *)&rkey + 16B];
  vect__9.232_96 = vect__8.231_95 ^ { 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92 };
  MEM[(unsigned char[64] *)&rkey + 16B] = vect__9.232_96;
  vect__8.231_105 = MEM[(unsigned char[64] *)&rkey + 32B];
  vect__9.232_106 = vect__8.231_105 ^ { 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92 };
  MEM[(unsigned char[64] *)&rkey + 32B] = vect__9.232_106;
  vect__8.231_31 = MEM[(unsigned char[64] *)&rkey + 48B];
  vect__9.232_59 = vect__8.231_31 ^ { 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92 };
  MEM[(unsigned char[64] *)&rkey + 48B] = vect__9.232_59;
  secp256k1_sha256_write (_6, &rkey, 64);
  _11 = &hash_5(D)->inner;
  MEM[(unsigned int *)hash_5(D)] = { 1779033703, 3144134277, 1013904242, 2773480762 };
  MEM[(unsigned int *)hash_5(D) + 16B] = { 1359893119, 2600822924, 528734635, 1541459225 };
  MEM[(struct secp256k1_sha256_t *)hash_5(D)].bytes = 0;
  vect__13.225_8 = MEM[(unsigned char[64] *)&rkey];
  vect__14.226_9 = vect__13.225_8 ^ { 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106 };
  MEM[(unsigned char[64] *)&rkey] = vect__14.226_9;
  vect__13.225_65 = MEM[(unsigned char[64] *)&rkey + 16B];
  vect__14.226_66 = vect__13.225_65 ^ { 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106 };
  MEM[(unsigned char[64] *)&rkey + 16B] = vect__14.226_66;
  vect__13.225_75 = MEM[(unsigned char[64] *)&rkey + 32B];
  vect__14.226_76 = vect__13.225_75 ^ { 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106 };
  MEM[(unsigned char[64] *)&rkey + 32B] = vect__14.226_76;
  vect__13.225_18 = MEM[(unsigned char[64] *)&rkey + 48B];
  vect__14.226_4 = vect__13.225_18 ^ { 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106 };
  MEM[(unsigned char[64] *)&rkey + 48B] = vect__14.226_4;
  secp256k1_sha256_write (_11, &rkey, 64);
  rkey ={v} {CLOBBER};
  return;

}



;; Function secp256k1_pubkey_load (secp256k1_pubkey_load, funcdef_no=218, decl_uid=6239, cgraph_uid=218, symbol_order=225)

secp256k1_pubkey_load (const struct secp256k1_context * ctx, struct secp256k1_ge * ge, const struct secp256k1_pubkey * pubkey)
{
  const long unsigned int s$32$n$3;
  const long unsigned int s$32$n$2;
  const long unsigned int s$32$n$1;
  const long unsigned int s$32$n$0;
  const long unsigned int s$n$3;
  const long unsigned int s$n$2;
  const long unsigned int s$n$1;
  const long unsigned int s$n$0;
  struct secp256k1_ge_storage s;
  int _1;
  long unsigned int _8;
  long unsigned int _18;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _32;
  long long unsigned int _33;
  long long unsigned int _34;
  long unsigned int _35;
  long unsigned int _37;
  long long unsigned int _38;
  long long unsigned int _39;
  long unsigned int _40;
  long unsigned int _42;
  long long unsigned int _43;
  long long unsigned int _44;
  long unsigned int _45;
  long unsigned int _47;
  long unsigned int _48;
  long unsigned int _50;
  long long unsigned int _51;
  long long unsigned int _52;
  long unsigned int _53;
  long unsigned int _55;
  long long unsigned int _56;
  long long unsigned int _57;
  long unsigned int _58;
  long unsigned int _60;
  long long unsigned int _61;
  long long unsigned int _62;
  long unsigned int _63;
  void (*<T319>) (const char *, void *) _64;
  const void * _65;
  long unsigned int _79;
  long unsigned int _80;

  <bb 2> [local count: 1073741825]:
  MEM[(char * {ref-all})&s] = MEM[(char * {ref-all})pubkey_2(D)];
  s$n$0_21 = MEM[(char * {ref-all})&s];
  s$n$1_22 = MEM[(char * {ref-all})&s + 8B];
  s$n$2_19 = MEM[(char * {ref-all})&s + 16B];
  s$n$3_4 = MEM[(char * {ref-all})&s + 24B];
  s$32$n$0_11 = MEM[(char * {ref-all})&s + 32B];
  s$32$n$1_10 = MEM[(char * {ref-all})&s + 40B];
  s$32$n$2_13 = MEM[(char * {ref-all})&s + 48B];
  s$32$n$3_15 = MEM[(char * {ref-all})&s + 56B];
  _47 = s$n$0_21 & 4503599627370495;
  MEM[(struct secp256k1_fe *)ge_7(D)].n[0] = _47;
  _48 = s$n$0_21 >> 52;
  _50 = s$n$1_22 << 12;
  _51 = _50 & 4503599627370495;
  _52 = _48 | _51;
  MEM[(struct secp256k1_fe *)ge_7(D)].n[1] = _52;
  _53 = s$n$1_22 >> 40;
  _55 = s$n$2_19 << 24;
  _56 = _55 & 4503599627370495;
  _57 = _53 | _56;
  MEM[(struct secp256k1_fe *)ge_7(D)].n[2] = _57;
  _58 = s$n$2_19 >> 28;
  _60 = s$n$3_4 << 36;
  _61 = _60 & 4503599627370495;
  _62 = _58 | _61;
  MEM[(struct secp256k1_fe *)ge_7(D)].n[3] = _62;
  _63 = s$n$3_4 >> 16;
  MEM[(struct secp256k1_fe *)ge_7(D)].n[4] = _63;
  _29 = s$32$n$0_11 & 4503599627370495;
  MEM[(struct secp256k1_fe *)ge_7(D) + 40B].n[0] = _29;
  _30 = s$32$n$0_11 >> 52;
  _32 = s$32$n$1_10 << 12;
  _33 = _32 & 4503599627370495;
  _34 = _30 | _33;
  MEM[(struct secp256k1_fe *)ge_7(D) + 40B].n[1] = _34;
  _35 = s$32$n$1_10 >> 40;
  _37 = s$32$n$2_13 << 24;
  _38 = _37 & 4503599627370495;
  _39 = _35 | _38;
  MEM[(struct secp256k1_fe *)ge_7(D) + 40B].n[2] = _39;
  _40 = s$32$n$2_13 >> 28;
  _42 = s$32$n$3_15 << 36;
  _43 = _42 & 4503599627370495;
  _44 = _40 | _43;
  MEM[(struct secp256k1_fe *)ge_7(D) + 40B].n[3] = _44;
  _45 = s$32$n$3_15 >> 16;
  MEM[(struct secp256k1_fe *)ge_7(D) + 40B].n[4] = _45;
  ge_7(D)->infinity = 0;
  _8 = _47 | _63;
  _79 = _8 | _52;
  _80 = _57 | _79;
  _18 = _62 | _80;
  if (_18 == 0)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _64 = MEM[(void (*<T319>) (const char *, void *) *)ctx_9(D) + 176B];
  _65 = MEM[(const void * *)ctx_9(D) + 184B];
  _64 ("!secp256k1_fe_is_zero(&ge->x)", _65);

  <bb 4> [local count: 1073741825]:
  # _1 = PHI <0(3), 1(2)>
  return _1;

}



;; Function secp256k1_rfc6979_hmac_sha256_initialize (secp256k1_rfc6979_hmac_sha256_initialize, funcdef_no=189, decl_uid=5753, cgraph_uid=189, symbol_order=191)

secp256k1_rfc6979_hmac_sha256_initialize (struct secp256k1_rfc6979_hmac_sha256_t * rng, const unsigned char * key, size_t keylen)
{
  unsigned char temp[32];
  unsigned char temp[32];
  unsigned char temp[32];
  unsigned char temp[32];
  static const unsigned char one[1] = {1};
  static const unsigned char zero[1] = {0};
  struct secp256k1_hmac_sha256_t hmac;
  unsigned char[32] * _1;
  unsigned char[32] * _2;

  <bb 2> [local count: 1073741825]:
  _1 = &rng_3(D)->v;
  __builtin_memset (_1, 1, 32);
  _2 = &rng_3(D)->k;
  __builtin_memset (_2, 0, 32);
  secp256k1_hmac_sha256_initialize.constprop (&hmac, _2);
  secp256k1_sha256_write (&hmac.inner, _1, 32);
  secp256k1_sha256_write (&hmac.inner, &zero, 1);
  secp256k1_sha256_write (&hmac.inner, key_6(D), keylen_7(D));
  secp256k1_sha256_finalize (&hmac.inner, &temp);
  secp256k1_sha256_write (&hmac.outer, &temp, 32);
  __builtin_memset (&temp, 0, 32);
  secp256k1_sha256_finalize (&hmac.outer, _2);
  temp ={v} {CLOBBER};
  secp256k1_hmac_sha256_initialize.constprop (&hmac, _2);
  secp256k1_sha256_write (&hmac.inner, _1, 32);
  secp256k1_sha256_finalize (&hmac.inner, &temp);
  secp256k1_sha256_write (&hmac.outer, &temp, 32);
  __builtin_memset (&temp, 0, 32);
  secp256k1_sha256_finalize (&hmac.outer, _1);
  temp ={v} {CLOBBER};
  secp256k1_hmac_sha256_initialize.constprop (&hmac, _2);
  secp256k1_sha256_write (&hmac.inner, _1, 32);
  secp256k1_sha256_write (&hmac.inner, &one, 1);
  secp256k1_sha256_write (&hmac.inner, key_6(D), keylen_7(D));
  secp256k1_sha256_finalize (&hmac.inner, &temp);
  secp256k1_sha256_write (&hmac.outer, &temp, 32);
  __builtin_memset (&temp, 0, 32);
  secp256k1_sha256_finalize (&hmac.outer, _2);
  temp ={v} {CLOBBER};
  secp256k1_hmac_sha256_initialize.constprop (&hmac, _2);
  secp256k1_sha256_write (&hmac.inner, _1, 32);
  secp256k1_sha256_finalize (&hmac.inner, &temp);
  secp256k1_sha256_write (&hmac.outer, &temp, 32);
  __builtin_memset (&temp, 0, 32);
  secp256k1_sha256_finalize (&hmac.outer, _1);
  temp ={v} {CLOBBER};
  rng_3(D)->retry = 0;
  hmac ={v} {CLOBBER};
  return;

}



;; Function secp256k1_ge_to_storage (secp256k1_ge_to_storage, funcdef_no=166, decl_uid=4785, cgraph_uid=166, symbol_order=168)

secp256k1_ge_to_storage (struct secp256k1_ge_storage * r, const struct secp256k1_ge * a)
{
  long unsigned int y$n$4;
  long unsigned int y$n$3;
  long unsigned int y$n$2;
  long unsigned int y$n$1;
  long unsigned int y$n$0;
  long unsigned int x$n$4;
  long unsigned int x$n$3;
  long unsigned int x$n$2;
  long unsigned int x$n$1;
  long unsigned int x$n$0;
  uint64_t t0;
  uint64_t t1;
  uint64_t t2;
  uint64_t t3;
  uint64_t t4;
  uint64_t m;
  uint64_t x;
  uint64_t t0;
  uint64_t t1;
  uint64_t t2;
  uint64_t t3;
  uint64_t t4;
  uint64_t m;
  uint64_t x;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _25;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _41;
  long long unsigned int _57;
  long unsigned int _59;
  long unsigned int _62;
  long unsigned int _65;
  long unsigned int _69;
  long unsigned int _73;
  _Bool _74;
  _Bool _75;
  _Bool _76;
  _Bool _77;
  _Bool _78;
  long unsigned int _79;
  long long unsigned int _81;
  long unsigned int _83;
  long unsigned int _86;
  long unsigned int _89;
  long unsigned int _92;
  long unsigned int _96;
  long unsigned int _97;
  long long unsigned int _103;
  long unsigned int _105;
  long unsigned int _108;
  long unsigned int _111;
  long unsigned int _115;
  long unsigned int _119;
  _Bool _120;
  _Bool _121;
  _Bool _122;
  _Bool _123;
  _Bool _124;
  long unsigned int _125;
  long long unsigned int _127;
  long unsigned int _129;
  long unsigned int _132;
  long unsigned int _135;
  long unsigned int _138;

  <bb 2> [local count: 1073741825]:
  x$n$0_142 = MEM[(const struct secp256k1_ge *)a_2(D)];
  x$n$1_143 = MEM[(const struct secp256k1_ge *)a_2(D) + 8B];
  x$n$2_144 = MEM[(const struct secp256k1_ge *)a_2(D) + 16B];
  x$n$3_145 = MEM[(const struct secp256k1_ge *)a_2(D) + 24B];
  x$n$4_146 = MEM[(const struct secp256k1_ge *)a_2(D) + 32B];
  x_101 = x$n$4_146 >> 48;
  t4_102 = x$n$4_146 & 281474976710655;
  _103 = x_101 * 4294968273;
  t0_104 = _103 + x$n$0_142;
  _105 = t0_104 >> 52;
  t1_106 = _105 + x$n$1_143;
  t0_107 = t0_104 & 4503599627370495;
  _108 = t1_106 >> 52;
  t2_109 = _108 + x$n$2_144;
  t1_110 = t1_106 & 4503599627370495;
  _111 = t2_109 >> 52;
  t3_112 = _111 + x$n$3_145;
  t2_113 = t2_109 & 4503599627370495;
  m_114 = t1_110 & t2_113;
  _115 = t3_112 >> 52;
  t4_116 = t4_102 + _115;
  t3_117 = t3_112 & 4503599627370495;
  m_118 = m_114 & t3_117;
  _119 = t4_116 >> 48;
  _120 = t4_116 == 281474976710655;
  _121 = m_118 == 4503599627370495;
  _122 = _120 & _121;
  _123 = t0_107 > 4503595332402222;
  _124 = _122 & _123;
  _125 = (long unsigned int) _124;
  x_126 = _119 | _125;
  _127 = x_126 * 4294968273;
  t0_128 = t0_107 + _127;
  _129 = t0_128 >> 52;
  t1_130 = t1_110 + _129;
  t0_131 = t0_128 & 4503599627370495;
  _132 = t1_130 >> 52;
  t2_133 = t2_113 + _132;
  t1_134 = t1_130 & 4503599627370495;
  _135 = t2_133 >> 52;
  t3_136 = t3_117 + _135;
  t2_137 = t2_133 & 4503599627370495;
  _138 = t3_136 >> 52;
  t4_139 = t4_116 + _138;
  t3_140 = t3_136 & 4503599627370495;
  y$n$0_147 = MEM[(const struct secp256k1_ge *)a_2(D) + 40B];
  y$n$1_148 = MEM[(const struct secp256k1_ge *)a_2(D) + 48B];
  y$n$2_149 = MEM[(const struct secp256k1_ge *)a_2(D) + 56B];
  y$n$3_150 = MEM[(const struct secp256k1_ge *)a_2(D) + 64B];
  y$n$4_151 = MEM[(const struct secp256k1_ge *)a_2(D) + 72B];
  x_55 = y$n$4_151 >> 48;
  t4_56 = y$n$4_151 & 281474976710655;
  _57 = x_55 * 4294968273;
  t0_58 = _57 + y$n$0_147;
  _59 = t0_58 >> 52;
  t1_60 = _59 + y$n$1_148;
  t0_61 = t0_58 & 4503599627370495;
  _62 = t1_60 >> 52;
  t2_63 = _62 + y$n$2_149;
  t1_64 = t1_60 & 4503599627370495;
  _65 = t2_63 >> 52;
  t3_66 = _65 + y$n$3_150;
  t2_67 = t2_63 & 4503599627370495;
  m_68 = t1_64 & t2_67;
  _69 = t3_66 >> 52;
  t4_70 = t4_56 + _69;
  t3_71 = t3_66 & 4503599627370495;
  m_72 = m_68 & t3_71;
  _73 = t4_70 >> 48;
  _74 = t4_70 == 281474976710655;
  _75 = m_72 == 4503599627370495;
  _76 = _74 & _75;
  _77 = t0_61 > 4503595332402222;
  _78 = _76 & _77;
  _79 = (long unsigned int) _78;
  x_80 = _73 | _79;
  _81 = x_80 * 4294968273;
  t0_82 = t0_61 + _81;
  _83 = t0_82 >> 52;
  t1_84 = t1_64 + _83;
  t0_85 = t0_82 & 4503599627370495;
  _86 = t1_84 >> 52;
  t2_87 = t2_67 + _86;
  t1_88 = t1_84 & 4503599627370495;
  _89 = t2_87 >> 52;
  t3_90 = t3_71 + _89;
  t2_91 = t2_87 & 4503599627370495;
  _92 = t3_90 >> 52;
  t4_93 = t4_70 + _92;
  t3_94 = t3_90 & 4503599627370495;
  _28 = t1_134 << 52;
  _29 = _28 | t0_131;
  MEM[(struct secp256k1_fe_storage *)r_7(D)].n[0] = _29;
  _30 = t1_134 >> 12;
  _32 = t2_137 << 40;
  _33 = _30 | _32;
  MEM[(struct secp256k1_fe_storage *)r_7(D)].n[1] = _33;
  _34 = t2_137 >> 24;
  _36 = t3_140 << 28;
  _37 = _34 | _36;
  MEM[(struct secp256k1_fe_storage *)r_7(D)].n[2] = _37;
  _38 = t3_140 >> 36;
  _96 = t4_139 << 16;
  _41 = _38 | _96;
  MEM[(struct secp256k1_fe_storage *)r_7(D)].n[3] = _41;
  _12 = t1_88 << 52;
  _13 = _12 | t0_85;
  MEM[(struct secp256k1_fe_storage *)r_7(D) + 32B].n[0] = _13;
  _14 = t1_88 >> 12;
  _16 = t2_91 << 40;
  _17 = _14 | _16;
  MEM[(struct secp256k1_fe_storage *)r_7(D) + 32B].n[1] = _17;
  _18 = t2_91 >> 24;
  _20 = t3_94 << 28;
  _21 = _18 | _20;
  MEM[(struct secp256k1_fe_storage *)r_7(D) + 32B].n[2] = _21;
  _22 = t3_94 >> 36;
  _97 = t4_93 << 16;
  _25 = _22 | _97;
  MEM[(struct secp256k1_fe_storage *)r_7(D) + 32B].n[3] = _25;
  return;

}



;; Function secp256k1_ecmult_wnaf.constprop (secp256k1_ecmult_wnaf.constprop.23, funcdef_no=266, decl_uid=9449, cgraph_uid=175, symbol_order=767)

secp256k1_ecmult_wnaf.constprop (int * wnaf, const struct secp256k1_scalar * a, int w)
{
  uint128_t t;
  struct secp256k1_scalar s;
  int last_set_bit;
  int bit;
  int sign;
  int carry;
  int now;
  int word;
  long unsigned int _6;
  long unsigned int _7;
  __int128 unsigned _9;
  unsigned int bit.115_10;
  unsigned int _11;
  unsigned int _13;
  long unsigned int _14;
  unsigned int _15;
  unsigned int _16;
  __int128 unsigned _17;
  unsigned int carry.116_18;
  int _20;
  unsigned int _22;
  unsigned int now.117_23;
  unsigned int _25;
  int _27;
  int _28;
  int _30;
  long unsigned int _32;
  long unsigned int _33;
  int * _34;
  int _36;
  int _39;
  __int128 unsigned _41;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _56;
  long unsigned int _63;
  __int128 unsigned _64;
  long unsigned int _66;
  long unsigned int _69;
  __int128 unsigned _70;
  long unsigned int _73;
  long unsigned int _76;
  __int128 unsigned _77;
  long unsigned int _80;
  long unsigned int _83;
  __int128 unsigned _84;
  long unsigned int _87;
  unsigned int _90;
  unsigned int _91;
  unsigned int _100;
  unsigned int _101;
  long unsigned int _106;
  unsigned int _107;
  long unsigned int _108;
  unsigned int _109;
  unsigned int _110;
  unsigned int _114;
  unsigned int _115;
  long unsigned int pretmp_126;
  long unsigned int prephitmp_127;
  unsigned int _128;
  unsigned int _129;
  long unsigned int pretmp_130;
  long unsigned int prephitmp_131;
  long unsigned int _167;
  unsigned int _168;
  unsigned int _169;

  <bb 2> [local count: 118111601]:
  s = *a_1(D);
  __builtin_memset (wnaf_4(D), 0, 1024);
  _6 = s.d[3];
  _7 = _6 >> 63;
  if (_7 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 11>; [67.00%]

  <bb 3> [local count: 38976829]:
  _53 = s.d[0];
  _54 = s.d[1];
  _56 = s.d[2];
  _63 = ~_53;
  _64 = (__int128 unsigned) _63;
  t_65 = _64 + 13822214165235122498;
  _66 = _63 + 13822214165235122498;
  s.d[0] = _66;
  t_68 = t_65 >> 64;
  _69 = ~_54;
  _70 = (__int128 unsigned) _69;
  _41 = _70 + 13451932020343611451;
  t_72 = _41 + t_68;
  _73 = (long unsigned int) t_72;
  s.d[1] = _73;
  t_75 = t_72 >> 64;
  _76 = ~_56;
  _77 = (__int128 unsigned) _76;
  _9 = _77 + 18446744073709551614;
  t_79 = _9 + t_75;
  _80 = (long unsigned int) t_79;
  s.d[2] = _80;
  t_82 = t_79 >> 64;
  _83 = ~_6;
  _84 = (__int128 unsigned) _83;
  _17 = _84 + 18446744073709551615;
  t_86 = _17 + t_82;
  _87 = (long unsigned int) t_86;
  s.d[3] = _87;
  goto <bb 12>; [100.00%]

  <bb 4> [local count: 837518614]:
  _128 = (unsigned int) bit_43;
  _129 = _128 >> 6;
  pretmp_130 = s.d[_129];

  <bb 5> [local count: 955630215]:
  # bit_120 = PHI <0(12), bit_43(4)>
  # carry_24 = PHI <0(12), carry_42(4)>
  # last_set_bit_50 = PHI <-1(12), last_set_bit_45(4)>
  # prephitmp_131 = PHI <prephitmp_127(12), pretmp_130(4)>
  bit.115_10 = (unsigned int) bit_120;
  _11 = bit.115_10 >> 6;
  _13 = bit.115_10 & 63;
  _14 = prephitmp_131 >> _13;
  _15 = (unsigned int) _14;
  _16 = _15 & 1;
  carry.116_18 = (unsigned int) carry_24;
  if (_16 == carry.116_18)
    goto <bb 6>; [20.24%]
  else
    goto <bb 7>; [79.76%]

  <bb 6> [local count: 193419555]:
  bit_19 = bit_120 + 1;
  goto <bb 13>; [100.00%]

  <bb 7> [local count: 762210659]:
  _20 = 256 - bit_120;
  now_58 = MIN_EXPR <_20, w_21(D)>;
  now.117_23 = (unsigned int) now_58;
  _22 = bit.115_10 + 4294967295;
  _90 = _22 + now.117_23;
  _91 = _90 >> 6;
  _167 = 18446744073709551615 << now.117_23;
  _168 = (unsigned int) _167;
  _169 = ~_168;
  if (_11 == _91)
    goto <bb 8>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 8> [local count: 259151624]:
  _100 = _15 & _169;
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 503059035]:
  _101 = _11 + 1;
  _106 = s.d[_101];
  _107 = 64 - _13;
  _108 = _106 << _107;
  _109 = (unsigned int) _108;
  _110 = _15 | _109;
  _114 = _110 & _169;

  <bb 10> [local count: 762210659]:
  # _115 = PHI <_100(8), _114(9)>
  _25 = carry.116_18 + _115;
  word_26 = (int) _25;
  _27 = w_21(D) + -1;
  _28 = word_26 >> _27;
  carry_29 = _28 & 1;
  _30 = carry_29 << w_21(D);
  word_31 = word_26 - _30;
  _32 = (long unsigned int) bit_120;
  _33 = _32 * 4;
  _34 = wnaf_4(D) + _33;
  _36 = word_31 * sign_35;
  *_34 = _36;
  bit_37 = now_58 + bit_120;
  goto <bb 13>; [100.00%]

  <bb 11> [local count: 79134773]:
  pretmp_126 = s.d[0];

  <bb 12> [local count: 118111601]:
  # sign_35 = PHI <-1(3), 1(11)>
  # prephitmp_127 = PHI <_66(3), pretmp_126(11)>
  goto <bb 5>; [100.00%]

  <bb 13> [local count: 955630214]:
  # last_set_bit_45 = PHI <last_set_bit_50(6), bit_120(10)>
  # bit_43 = PHI <bit_19(6), bit_37(10)>
  # carry_42 = PHI <carry_24(6), carry_29(10)>
  if (bit_43 <= 255)
    goto <bb 4>; [87.64%]
  else
    goto <bb 14>; [12.36%]

  <bb 14> [local count: 118111600]:
  _39 = last_set_bit_45 + 1;
  s ={v} {CLOBBER};
  return _39;

}



;; Function secp256k1_gej_eq_x_var (secp256k1_gej_eq_x_var, funcdef_no=154, decl_uid=4744, cgraph_uid=154, symbol_order=156)

secp256k1_gej_eq_x_var (const struct secp256k1_fe * x, const struct secp256k1_gej * a)
{
  long unsigned int r2$n$4;
  long unsigned int r2$n$3;
  long unsigned int r2$n$2;
  long unsigned int r2$n$1;
  long unsigned int r2$n$0;
  uint64_t t0;
  uint64_t t1;
  uint64_t t2;
  uint64_t t3;
  uint64_t t4;
  uint64_t z0;
  uint64_t z1;
  uint64_t x;
  int64_t u0;
  int64_t tx;
  int64_t t4;
  int64_t t3;
  uint64_t a4;
  uint64_t a3;
  uint64_t a2;
  uint64_t a1;
  uint64_t a0;
  uint128_t d;
  uint128_t c;
  uint64_t u0;
  uint64_t tx;
  uint64_t t4;
  uint64_t t3;
  uint128_t d;
  uint128_t c;
  uint64_t t0;
  uint64_t t1;
  uint64_t t2;
  uint64_t t3;
  uint64_t t4;
  uint64_t x;
  long unsigned int _4;
  __int128 unsigned _13;
  __int128 unsigned _17;
  __int128 unsigned _19;
  __int128 unsigned _21;
  __int128 unsigned _23;
  long unsigned int _24;
  __int128 unsigned _25;
  long unsigned int _26;
  __int128 unsigned _27;
  long unsigned int _28;
  __int128 unsigned _29;
  long unsigned int _30;
  __int128 unsigned _31;
  long unsigned int _32;
  long unsigned int _38;
  long long unsigned int _41;
  long unsigned int _43;
  long unsigned int _46;
  long unsigned int _49;
  long unsigned int _52;
  __int128 unsigned _55;
  __int128 unsigned _56;
  __int128 unsigned _57;
  __int128 unsigned _59;
  long unsigned int _61;
  __int128 unsigned _62;
  __int128 unsigned _63;
  long unsigned int _65;
  __int128 unsigned _66;
  __int128 unsigned _67;
  __int128 unsigned _68;
  long unsigned int _70;
  __int128 unsigned _71;
  __int128 unsigned _72;
  long unsigned int _74;
  __int128 unsigned _75;
  __int128 unsigned _76;
  long unsigned int _80;
  __int128 unsigned _81;
  __int128 unsigned _83;
  __int128 unsigned _84;
  long unsigned int _87;
  __int128 unsigned _90;
  __int128 unsigned _91;
  __int128 unsigned _93;
  __int128 unsigned _94;
  __int128 unsigned _97;
  __int128 unsigned _100;
  long unsigned int _102;
  long unsigned int _104;
  __int128 unsigned _108;
  __int128 unsigned _109;
  __int128 unsigned _111;
  __int128 unsigned _112;
  __int128 unsigned _114;
  long unsigned int _116;
  long unsigned int _118;
  long unsigned int _119;
  __int128 unsigned _122;
  long unsigned int _124;
  long unsigned int _125;
  __int128 unsigned _127;
  __int128 unsigned _128;
  __int128 unsigned _131;
  __int128 unsigned _132;
  __int128 unsigned _134;
  __int128 unsigned _135;
  __int128 unsigned _137;
  __int128 unsigned _138;
  long unsigned int _141;
  long unsigned int _142;
  __int128 unsigned _144;
  __int128 unsigned _145;
  __int128 unsigned _147;
  __int128 unsigned _150;
  __int128 unsigned _151;
  __int128 unsigned _152;
  __int128 unsigned _154;
  __int128 unsigned _155;
  long unsigned int _158;
  long unsigned int _159;
  __int128 unsigned _161;
  __int128 unsigned _162;
  __int128 unsigned _163;
  long unsigned int _165;
  long unsigned int _166;
  __int128 unsigned _168;
  long unsigned int _170;
  long unsigned int _176;
  __int128 unsigned _179;
  long unsigned int _180;
  __int128 unsigned _183;
  __int128 unsigned _187;
  __int128 unsigned _188;
  long int _191;
  __int128 unsigned _197;
  __int128 unsigned _198;
  __int128 unsigned _199;
  __int128 unsigned _200;
  __int128 unsigned _201;
  __int128 unsigned _203;
  long int _205;
  long int _207;
  __int128 unsigned _212;
  long unsigned int _213;
  __int128 unsigned _215;
  __int128 unsigned _216;
  long int _218;
  long int _220;
  long int _221;
  __int128 unsigned _224;
  long unsigned int _226;
  long unsigned int _227;
  __int128 unsigned _229;
  __int128 unsigned _231;
  __int128 unsigned _232;
  __int128 unsigned _233;
  __int128 unsigned _235;
  __int128 unsigned _236;
  long unsigned int _239;
  long unsigned int _240;
  __int128 unsigned _242;
  __int128 unsigned _243;
  __int128 unsigned _244;
  __int128 unsigned _246;
  __int128 unsigned _248;
  __int128 unsigned _249;
  long unsigned int _252;
  long unsigned int _253;
  __int128 unsigned _255;
  __int128 unsigned _256;
  __int128 unsigned _257;
  long unsigned int _259;
  long unsigned int _260;
  __int128 unsigned _262;
  __int128 unsigned _265;
  long long unsigned int _268;
  _Bool _272;
  _Bool _273;
  _Bool _274;
  long unsigned int _279;
  long unsigned int _281;
  long unsigned int _286;
  long long unsigned int _289;
  long unsigned int _291;
  long unsigned int _294;
  __int128 unsigned _295;
  __int128 unsigned _297;
  long long unsigned int _298;
  __int128 unsigned _300;
  _Bool _301;
  int _303;
  int _304;
  long unsigned int _317;
  long unsigned int _320;
  long long unsigned int _321;
  long long unsigned int _322;
  long long unsigned int _323;
  long long unsigned int _324;

  <bb 2> [local count: 1073741825]:
  a0_171 = MEM[(const uint64_t *)a_2(D) + 80B];
  a1_172 = MEM[(const uint64_t *)a_2(D) + 88B];
  a2_173 = MEM[(const uint64_t *)a_2(D) + 96B];
  a3_174 = MEM[(const uint64_t *)a_2(D) + 104B];
  a4_175 = MEM[(const uint64_t *)a_2(D) + 112B];
  _176 = a0_171 * 2;
  _179 = _176 w* a3_174;
  _180 = a1_172 * 2;
  _183 = _180 w* a2_173;
  d_184 = _179 + _183;
  c_186 = a4_175 w* a4_175;
  _187 = c_186 & 4503599627370495;
  _188 = _187 * 68719492368;
  d_189 = d_184 + _188;
  c_190 = c_186 >> 52;
  _191 = (long int) d_189;
  t3_192 = _191 & 4503599627370495;
  d_193 = d_189 >> 52;
  a4_194 = a4_175 * 2;
  _197 = a0_171 w* a4_194;
  _198 = a3_174 w* _180;
  _199 = _197 + _198;
  _200 = a2_173 w* a2_173;
  _201 = _199 + _200;
  _203 = c_190 * 68719492368;
  _265 = _201 + _203;
  d_204 = d_193 + _265;
  _205 = (long int) d_204;
  d_206 = d_204 >> 52;
  _207 = _205 >> 48;
  tx_208 = _207 & 15;
  t4_209 = _205 & 281474976710655;
  c_210 = a0_171 w* a0_171;
  _212 = a4_194 w* a1_172;
  _213 = a2_173 * 2;
  _215 = a3_174 w* _213;
  _216 = _212 + _215;
  d_217 = d_206 + _216;
  _218 = (long int) d_217;
  d_219 = d_217 >> 52;
  _220 = _218 << 4;
  _221 = _220 & 72057594037927920;
  u0_222 = tx_208 | _221;
  _224 = u0_222 w* 4294968273;
  c_225 = c_210 + _224;
  _226 = (long unsigned int) c_225;
  _227 = _226 & 4503599627370495;
  c_228 = c_225 >> 52;
  _229 = _176 w* a1_172;
  _231 = a2_173 w* a4_194;
  _232 = a3_174 w* a3_174;
  _233 = _231 + _232;
  d_234 = d_219 + _233;
  _235 = d_234 & 4503599627370495;
  _236 = _235 * 68719492368;
  _31 = _229 + _236;
  c_237 = _31 + c_228;
  d_238 = d_234 >> 52;
  _239 = (long unsigned int) c_237;
  _240 = _239 & 4503599627370495;
  c_241 = c_237 >> 52;
  _242 = _176 w* a2_173;
  _243 = a1_172 w* a1_172;
  _244 = _242 + _243;
  _246 = a3_174 w* a4_194;
  d_247 = d_238 + _246;
  _248 = d_247 & 4503599627370495;
  _249 = _248 * 68719492368;
  _29 = _244 + _249;
  c_250 = _29 + c_241;
  d_251 = d_247 >> 52;
  _252 = (long unsigned int) c_250;
  _253 = _252 & 4503599627370495;
  c_254 = c_250 >> 52;
  _255 = d_251 * 68719492368;
  _256 = (__int128 unsigned) t3_192;
  _257 = _255 + _256;
  c_258 = c_254 + _257;
  _259 = (long unsigned int) c_258;
  _260 = _259 & 4503599627370495;
  c_261 = c_258 >> 52;
  _262 = (__int128 unsigned) t4_209;
  c_263 = c_261 + _262;
  _61 = MEM[(const uint64_t *)x_3(D) + 24B];
  _62 = (__int128 unsigned) _61;
  _63 = _227 w* _61;
  _65 = MEM[(const uint64_t *)x_3(D) + 16B];
  _66 = (__int128 unsigned) _65;
  _67 = _240 w* _65;
  _68 = _63 + _67;
  _70 = MEM[(const uint64_t *)x_3(D)];
  _71 = (__int128 unsigned) _70;
  _72 = _260 w* _70;
  _74 = MEM[(const uint64_t *)x_3(D) + 8B];
  _75 = (__int128 unsigned) _74;
  _76 = _253 w* _74;
  _27 = _68 + _76;
  d_78 = _27 + _72;
  _80 = MEM[(const uint64_t *)x_3(D) + 32B];
  _81 = (__int128 unsigned) _80;
  c_82 = _81 * c_263;
  _83 = c_82 & 4503599627370495;
  _84 = _83 * 68719492368;
  d_85 = d_78 + _84;
  c_86 = c_82 >> 52;
  _87 = (long unsigned int) d_85;
  t3_88 = _87 & 4503599627370495;
  d_89 = d_85 >> 52;
  _90 = _227 w* _80;
  _91 = _61 w* _240;
  _17 = _90 + _91;
  _93 = _260 w* _74;
  _94 = _65 w* _253;
  _19 = _17 + _94;
  _97 = _71 * c_263;
  _21 = _19 + _97;
  _23 = _21 + _93;
  _100 = c_86 * 68719492368;
  _25 = _23 + _100;
  d_101 = _25 + d_89;
  _102 = (long unsigned int) d_101;
  d_103 = d_101 >> 52;
  _104 = _102 >> 48;
  tx_105 = _104 & 15;
  t4_106 = _102 & 281474976710655;
  c_107 = _227 w* _70;
  _108 = _240 w* _80;
  _109 = _61 w* _253;
  _59 = _108 + _109;
  _111 = _75 * c_263;
  _112 = _65 w* _260;
  _13 = _59 + _111;
  _114 = _13 + _112;
  d_115 = d_103 + _114;
  _116 = (long unsigned int) d_115;
  d_117 = d_115 >> 52;
  _118 = _116 << 4;
  _119 = _118 & 72057594037927920;
  u0_120 = tx_105 | _119;
  _122 = u0_120 w* 4294968273;
  c_123 = c_107 + _122;
  _124 = (long unsigned int) c_123;
  _125 = _124 & 4503599627370495;
  c_126 = c_123 >> 52;
  _127 = _227 w* _74;
  _128 = _240 w* _70;
  _55 = _127 + _128;
  _131 = _253 w* _80;
  _132 = _61 w* _260;
  _134 = _66 * c_263;
  _57 = _131 + _134;
  _135 = _57 + _132;
  d_136 = d_117 + _135;
  _137 = d_136 & 4503599627370495;
  _138 = _137 * 68719492368;
  _300 = _55 + _138;
  c_139 = c_126 + _300;
  d_140 = d_136 >> 52;
  c_143 = c_139 >> 52;
  _144 = _227 w* _65;
  _145 = _240 w* _74;
  _295 = _144 + _145;
  _147 = _70 w* _253;
  _297 = _147 + _295;
  _150 = _260 w* _80;
  _151 = _62 * c_263;
  _152 = _150 + _151;
  d_153 = d_140 + _152;
  _154 = d_153 & 4503599627370495;
  _155 = _154 * 68719492368;
  _56 = _155 + _297;
  c_156 = _56 + c_143;
  d_157 = d_153 >> 52;
  c_160 = c_156 >> 52;
  _161 = d_157 * 68719492368;
  _162 = (__int128 unsigned) t3_88;
  _163 = _161 + _162;
  c_164 = c_160 + _163;
  c_167 = c_164 >> 52;
  _168 = (__int128 unsigned) t4_106;
  c_169 = c_167 + _168;
  _170 = (long unsigned int) c_169;
  r2$n$0_79 = MEM[(const struct secp256k1_gej *)a_2(D)];
  r2$n$1_302 = MEM[(const struct secp256k1_gej *)a_2(D) + 8B];
  r2$n$2_305 = MEM[(const struct secp256k1_gej *)a_2(D) + 16B];
  r2$n$3_306 = MEM[(const struct secp256k1_gej *)a_2(D) + 24B];
  r2$n$4_307 = MEM[(const struct secp256k1_gej *)a_2(D) + 32B];
  x_39 = r2$n$4_307 >> 48;
  t4_40 = r2$n$4_307 & 281474976710655;
  _41 = x_39 * 4294968273;
  t0_42 = _41 + r2$n$0_79;
  _43 = t0_42 >> 52;
  t1_44 = _43 + r2$n$1_302;
  t0_45 = t0_42 & 4503599627370495;
  _46 = t1_44 >> 52;
  t2_47 = _46 + r2$n$2_305;
  _49 = t2_47 >> 52;
  t3_50 = _49 + r2$n$3_306;
  _52 = t3_50 >> 52;
  _324 = t0_45 + 18014381329608892;
  _289 = t4_40 + 1125899906842620;
  _24 = _324 - _125;
  _294 = _52 + _289;
  _32 = _294 - _170;
  x_267 = _32 >> 48;
  _268 = x_267 * 4294968273;
  t0_269 = _24 + _268;
  z0_270 = t0_269 & 4503599627370495;
  _272 = z0_270 != 0;
  _273 = z0_270 != 4503595332402223;
  _274 = _272 & _273;
  if (_274 != 0)
    goto <bb 4>; [34.00%]
  else
    goto <bb 3>; [66.00%]

  <bb 3> [local count: 708669604]:
  t4_278 = _32 & 281474976710655;
  _279 = t0_269 >> 52;
  t1_48 = t1_44 & 4503599627370495;
  _323 = t1_48 + 18014398509481980;
  _141 = (long unsigned int) c_139;
  _142 = _141 & 4503599627370495;
  _26 = _323 - _142;
  t1_280 = _26 + _279;
  _281 = t1_280 >> 52;
  t2_51 = t2_47 & 4503599627370495;
  _322 = t2_51 + 18014398509481980;
  _158 = (long unsigned int) c_156;
  _159 = _158 & 4503599627370495;
  _28 = _322 - _159;
  t2_282 = _28 + _281;
  _286 = t2_282 >> 52;
  t3_54 = t3_50 & 4503599627370495;
  _321 = t3_54 + 18014398509481980;
  _165 = (long unsigned int) c_164;
  _166 = _165 & 4503599627370495;
  _30 = _321 - _166;
  t3_287 = _30 + _286;
  z1_271 = z0_270 ^ 4294968272;
  _317 = z1_271 & t1_280;
  _291 = t3_287 >> 52;
  t4_292 = t4_278 + _291;
  _298 = t4_292 ^ 4222124650659840;
  _38 = t2_282 & _317;
  _4 = _38 & t3_287;
  _320 = _4 & _298;
  _301 = _320 == 4503599627370495;
  _303 = (int) _301;

  <bb 4> [local count: 1073741825]:
  # _304 = PHI <_303(3), 0(2)>
  return _304;

}



;; Function secp256k1_fe_inv (secp256k1_fe_inv, funcdef_no=107, decl_uid=4350, cgraph_uid=107, symbol_order=107)

secp256k1_fe_inv (struct secp256k1_fe * r, const struct secp256k1_fe * a)
{
  const uint64_t x88__lsm.276;
  const uint64_t x88__lsm.275;
  const uint64_t x88__lsm.274;
  const uint64_t x88__lsm.273;
  const uint64_t x88__lsm.272;
  const uint64_t x176__lsm.271;
  const uint64_t x176__lsm.270;
  const uint64_t x176__lsm.269;
  const uint64_t x176__lsm.268;
  const uint64_t x176__lsm.267;
  const uint64_t x220__lsm.266;
  const uint64_t x220__lsm.265;
  const uint64_t x220__lsm.264;
  const uint64_t x220__lsm.263;
  const uint64_t x220__lsm.262;
  int64_t u0;
  int64_t tx;
  int64_t t4;
  int64_t t3;
  uint64_t a4;
  uint128_t d;
  uint128_t c;
  int64_t u0;
  int64_t tx;
  int64_t t4;
  int64_t t3;
  uint64_t a4;
  uint128_t d;
  uint128_t c;
  int64_t u0;
  int64_t tx;
  int64_t t4;
  int64_t t3;
  uint64_t a4;
  uint128_t d;
  uint128_t c;
  struct secp256k1_fe t1;
  struct secp256k1_fe x223;
  struct secp256k1_fe x220;
  struct secp256k1_fe x176;
  struct secp256k1_fe x88;
  struct secp256k1_fe x44;
  struct secp256k1_fe x22;
  struct secp256k1_fe x11;
  struct secp256k1_fe x9;
  struct secp256k1_fe x6;
  struct secp256k1_fe x3;
  struct secp256k1_fe x2;
  __int128 unsigned _6;
  __int128 unsigned _7;
  __int128 unsigned _8;
  __int128 unsigned _10;
  __int128 unsigned _11;
  vector(2) long unsigned int _36;
  vector(2) long unsigned int _40;
  const uint64_t[5] * _65;
  uint64_t[5] * _66;
  long unsigned int _102;
  __int128 unsigned _105;
  long unsigned int _106;
  __int128 unsigned _109;
  __int128 unsigned _113;
  __int128 unsigned _114;
  long int _117;
  __int128 unsigned _123;
  __int128 unsigned _124;
  __int128 unsigned _125;
  __int128 unsigned _126;
  __int128 unsigned _127;
  __int128 unsigned _129;
  long int _131;
  long int _133;
  __int128 unsigned _138;
  long unsigned int _139;
  __int128 unsigned _141;
  __int128 unsigned _142;
  long int _144;
  long int _146;
  long int _147;
  __int128 unsigned _150;
  long unsigned int _152;
  long unsigned int _153;
  __int128 unsigned _155;
  __int128 unsigned _157;
  __int128 unsigned _158;
  __int128 unsigned _159;
  __int128 unsigned _161;
  __int128 unsigned _162;
  long unsigned int _165;
  long unsigned int _166;
  __int128 unsigned _168;
  __int128 unsigned _169;
  __int128 unsigned _170;
  __int128 unsigned _172;
  __int128 unsigned _174;
  __int128 unsigned _175;
  long unsigned int _178;
  long unsigned int _179;
  __int128 unsigned _181;
  __int128 unsigned _182;
  __int128 unsigned _183;
  long unsigned int _185;
  long unsigned int _186;
  __int128 unsigned _188;
  long unsigned int _190;
  long unsigned int _196;
  __int128 unsigned _199;
  long unsigned int _200;
  __int128 unsigned _203;
  __int128 unsigned _207;
  __int128 unsigned _208;
  long int _211;
  __int128 unsigned _217;
  __int128 unsigned _218;
  __int128 unsigned _219;
  __int128 unsigned _220;
  __int128 unsigned _221;
  __int128 unsigned _223;
  long int _225;
  long int _227;
  __int128 unsigned _232;
  long unsigned int _233;
  __int128 unsigned _235;
  __int128 unsigned _236;
  long int _238;
  long int _240;
  long int _241;
  __int128 unsigned _244;
  long unsigned int _246;
  long unsigned int _247;
  __int128 unsigned _249;
  __int128 unsigned _251;
  __int128 unsigned _252;
  __int128 unsigned _253;
  __int128 unsigned _255;
  __int128 unsigned _256;
  long unsigned int _259;
  long unsigned int _260;
  __int128 unsigned _262;
  __int128 unsigned _263;
  __int128 unsigned _264;
  __int128 unsigned _266;
  __int128 unsigned _268;
  __int128 unsigned _269;
  long unsigned int _272;
  long unsigned int _273;
  __int128 unsigned _275;
  __int128 unsigned _276;
  __int128 unsigned _277;
  long unsigned int _279;
  long unsigned int _280;
  __int128 unsigned _282;
  long unsigned int _284;
  long unsigned int _290;
  __int128 unsigned _293;
  long unsigned int _294;
  __int128 unsigned _297;
  __int128 unsigned _301;
  __int128 unsigned _302;
  long int _305;
  __int128 unsigned _311;
  __int128 unsigned _312;
  __int128 unsigned _313;
  __int128 unsigned _314;
  __int128 unsigned _315;
  __int128 unsigned _317;
  long int _319;
  long int _321;
  __int128 unsigned _326;
  long unsigned int _327;
  __int128 unsigned _329;
  __int128 unsigned _330;
  long int _332;
  long int _334;
  long int _335;
  __int128 unsigned _338;
  long unsigned int _340;
  long unsigned int _341;
  __int128 unsigned _343;
  __int128 unsigned _345;
  __int128 unsigned _346;
  __int128 unsigned _347;
  __int128 unsigned _349;
  __int128 unsigned _350;
  long unsigned int _353;
  long unsigned int _354;
  __int128 unsigned _356;
  __int128 unsigned _357;
  __int128 unsigned _358;
  __int128 unsigned _360;
  __int128 unsigned _362;
  __int128 unsigned _363;
  long unsigned int _366;
  long unsigned int _367;
  __int128 unsigned _369;
  __int128 unsigned _370;
  __int128 unsigned _371;
  long unsigned int _373;
  long unsigned int _374;
  __int128 unsigned _376;
  long unsigned int _378;
  __int128 unsigned _402;
  vector(2) long unsigned int _403;
  vector(2) long unsigned int _407;
  __int128 unsigned _410;
  __int128 unsigned _418;
  __int128 unsigned _430;
  vector(2) long unsigned int _1187;
  vector(2) long unsigned int _1189;
  unsigned int ivtmp_1190;
  unsigned int ivtmp_1191;
  unsigned int ivtmp_1192;
  unsigned int ivtmp_1193;
  unsigned int ivtmp_1194;
  unsigned int ivtmp_1195;
  unsigned int ivtmp_1196;
  unsigned int ivtmp_1197;
  unsigned int ivtmp_1198;
  unsigned int ivtmp_1199;
  unsigned int ivtmp_1200;
  unsigned int ivtmp_1201;
  unsigned int ivtmp_1202;
  unsigned int ivtmp_1203;

  <bb 2> [local count: 12025908]:
  _65 = &a_28(D)->n;
  secp256k1_fe_sqr_inner (&x2.n, _65);
  secp256k1_fe_mul_inner (&x2.n, &x2.n, _65);
  secp256k1_fe_sqr_inner (&x3.n, &x2.n);
  secp256k1_fe_mul_inner (&x3.n, &x3.n, _65);
  x6 = x3;
  secp256k1_fe_sqr_inner (&x6.n, &x6.n);
  secp256k1_fe_sqr_inner (&x6.n, &x6.n);
  secp256k1_fe_sqr_inner (&x6.n, &x6.n);
  secp256k1_fe_mul_inner (&x6.n, &x6.n, &x3.n);
  x9 = x6;
  secp256k1_fe_sqr_inner (&x9.n, &x9.n);
  secp256k1_fe_sqr_inner (&x9.n, &x9.n);
  secp256k1_fe_sqr_inner (&x9.n, &x9.n);
  secp256k1_fe_mul_inner (&x9.n, &x9.n, &x3.n);
  x11 = x9;
  secp256k1_fe_sqr_inner (&x11.n, &x11.n);
  secp256k1_fe_sqr_inner (&x11.n, &x11.n);
  secp256k1_fe_mul_inner (&x11.n, &x11.n, &x2.n);
  x22 = x11;

  <bb 3> [local count: 132342738]:
  # ivtmp_1191 = PHI <11(2), ivtmp_1190(3)>
  secp256k1_fe_sqr_inner (&x22.n, &x22.n);
  ivtmp_1190 = ivtmp_1191 + 4294967295;
  if (ivtmp_1190 != 0)
    goto <bb 3>; [90.91%]
  else
    goto <bb 4>; [9.09%]

  <bb 4> [local count: 12025908]:
  secp256k1_fe_mul_inner (&x22.n, &x22.n, &x11.n);
  x44 = x22;

  <bb 5> [local count: 264431754]:
  # ivtmp_1193 = PHI <22(4), ivtmp_1192(5)>
  secp256k1_fe_sqr_inner (&x44.n, &x44.n);
  ivtmp_1192 = ivtmp_1193 + 4294967295;
  if (ivtmp_1192 != 0)
    goto <bb 5>; [95.45%]
  else
    goto <bb 6>; [4.55%]

  <bb 6> [local count: 12025908]:
  secp256k1_fe_mul_inner (&x44.n, &x44.n, &x22.n);
  x88 = x44;
  x88__lsm.272_396 = MEM[(const uint64_t *)&x88];
  x88__lsm.273_26 = MEM[(const uint64_t *)&x88 + 8B];
  x88__lsm.274_394 = MEM[(const uint64_t *)&x88 + 16B];
  x88__lsm.275_406 = MEM[(const uint64_t *)&x88 + 24B];
  x88__lsm.276_422 = MEM[(const uint64_t *)&x88 + 32B];

  <bb 7> [local count: 529681660]:
  # x88__lsm.272_5 = PHI <x88__lsm.272_396(6), _153(7)>
  # x88__lsm.273_13 = PHI <x88__lsm.273_26(6), _166(7)>
  # x88__lsm.274_4 = PHI <x88__lsm.274_394(6), _179(7)>
  # x88__lsm.275_395 = PHI <x88__lsm.275_406(6), _186(7)>
  # x88__lsm.276_83 = PHI <x88__lsm.276_422(6), _190(7)>
  # ivtmp_1195 = PHI <44(6), ivtmp_1194(7)>
  _102 = x88__lsm.272_5 * 2;
  _105 = _102 w* x88__lsm.275_395;
  _106 = x88__lsm.273_13 * 2;
  _109 = _106 w* x88__lsm.274_4;
  d_110 = _105 + _109;
  c_112 = x88__lsm.276_83 w* x88__lsm.276_83;
  _113 = c_112 & 4503599627370495;
  _114 = _113 * 68719492368;
  d_115 = d_110 + _114;
  c_116 = c_112 >> 52;
  _117 = (long int) d_115;
  t3_118 = _117 & 4503599627370495;
  d_119 = d_115 >> 52;
  a4_120 = x88__lsm.276_83 * 2;
  _123 = x88__lsm.272_5 w* a4_120;
  _124 = x88__lsm.275_395 w* _106;
  _125 = _123 + _124;
  _126 = x88__lsm.274_4 w* x88__lsm.274_4;
  _127 = _125 + _126;
  _129 = c_116 * 68719492368;
  _6 = _127 + _129;
  d_130 = _6 + d_119;
  _131 = (long int) d_130;
  d_132 = d_130 >> 52;
  _133 = _131 >> 48;
  tx_134 = _133 & 15;
  t4_135 = _131 & 281474976710655;
  c_136 = x88__lsm.272_5 w* x88__lsm.272_5;
  _138 = a4_120 w* x88__lsm.273_13;
  _139 = x88__lsm.274_4 * 2;
  _141 = x88__lsm.275_395 w* _139;
  _142 = _138 + _141;
  d_143 = d_132 + _142;
  _144 = (long int) d_143;
  d_145 = d_143 >> 52;
  _146 = _144 << 4;
  _147 = _146 & 72057594037927920;
  u0_148 = tx_134 | _147;
  _150 = u0_148 w* 4294968273;
  c_151 = c_136 + _150;
  _152 = (long unsigned int) c_151;
  _153 = _152 & 4503599627370495;
  c_154 = c_151 >> 52;
  _155 = _102 w* x88__lsm.273_13;
  _157 = x88__lsm.274_4 w* a4_120;
  _158 = x88__lsm.275_395 w* x88__lsm.275_395;
  _159 = _157 + _158;
  d_160 = d_145 + _159;
  _161 = d_160 & 4503599627370495;
  _162 = _161 * 68719492368;
  _410 = _155 + _162;
  c_163 = c_154 + _410;
  d_164 = d_160 >> 52;
  _165 = (long unsigned int) c_163;
  _166 = _165 & 4503599627370495;
  c_167 = c_163 >> 52;
  _168 = _102 w* x88__lsm.274_4;
  _169 = x88__lsm.273_13 w* x88__lsm.273_13;
  _170 = _168 + _169;
  _172 = x88__lsm.275_395 w* a4_120;
  d_173 = d_164 + _172;
  _174 = d_173 & 4503599627370495;
  _175 = _174 * 68719492368;
  _7 = _170 + _175;
  c_176 = _7 + c_167;
  d_177 = d_173 >> 52;
  _178 = (long unsigned int) c_176;
  _179 = _178 & 4503599627370495;
  c_180 = c_176 >> 52;
  _181 = d_177 * 68719492368;
  _182 = (__int128 unsigned) t3_118;
  _183 = _181 + _182;
  c_184 = c_180 + _183;
  _185 = (long unsigned int) c_184;
  _186 = _185 & 4503599627370495;
  c_187 = c_184 >> 52;
  _188 = (__int128 unsigned) t4_135;
  c_189 = c_187 + _188;
  _190 = (long unsigned int) c_189;
  ivtmp_1194 = ivtmp_1195 + 4294967295;
  if (ivtmp_1194 != 0)
    goto <bb 7>; [97.73%]
  else
    goto <bb 8>; [2.27%]

  <bb 8> [local count: 12025908]:
  _403 = {_179, _186};
  _407 = {_153, _166};
  MEM[(const uint64_t *)&x88] = _407;
  MEM[(const uint64_t *)&x88 + 16B] = _403;
  MEM[(const uint64_t *)&x88 + 32B] = _190;
  secp256k1_fe_mul_inner (&x88.n, &x88.n, &x44.n);
  x176 = x88;
  x176__lsm.267_438 = MEM[(const uint64_t *)&x176];
  x176__lsm.268_434 = MEM[(const uint64_t *)&x176 + 8B];
  x176__lsm.269_454 = MEM[(const uint64_t *)&x176 + 16B];
  x176__lsm.270_450 = MEM[(const uint64_t *)&x176 + 24B];
  x176__lsm.271_446 = MEM[(const uint64_t *)&x176 + 32B];

  <bb 9> [local count: 1061715916]:
  # x176__lsm.267_265 = PHI <x176__lsm.267_438(8), _247(9)>
  # x176__lsm.268_316 = PHI <x176__lsm.268_434(8), _260(9)>
  # x176__lsm.269_344 = PHI <x176__lsm.269_454(8), _273(9)>
  # x176__lsm.270_359 = PHI <x176__lsm.270_450(8), _280(9)>
  # x176__lsm.271_398 = PHI <x176__lsm.271_446(8), _284(9)>
  # ivtmp_1197 = PHI <88(8), ivtmp_1196(9)>
  _196 = x176__lsm.267_265 * 2;
  _199 = _196 w* x176__lsm.270_359;
  _200 = x176__lsm.268_316 * 2;
  _203 = _200 w* x176__lsm.269_344;
  d_204 = _199 + _203;
  c_206 = x176__lsm.271_398 w* x176__lsm.271_398;
  _207 = c_206 & 4503599627370495;
  _208 = _207 * 68719492368;
  d_209 = d_204 + _208;
  c_210 = c_206 >> 52;
  _211 = (long int) d_209;
  t3_212 = _211 & 4503599627370495;
  d_213 = d_209 >> 52;
  a4_214 = x176__lsm.271_398 * 2;
  _217 = x176__lsm.267_265 w* a4_214;
  _218 = x176__lsm.270_359 w* _200;
  _219 = _217 + _218;
  _220 = x176__lsm.269_344 w* x176__lsm.269_344;
  _221 = _219 + _220;
  _223 = c_210 * 68719492368;
  _402 = _221 + _223;
  d_224 = d_213 + _402;
  _225 = (long int) d_224;
  d_226 = d_224 >> 52;
  _227 = _225 >> 48;
  tx_228 = _227 & 15;
  t4_229 = _225 & 281474976710655;
  c_230 = x176__lsm.267_265 w* x176__lsm.267_265;
  _232 = a4_214 w* x176__lsm.268_316;
  _233 = x176__lsm.269_344 * 2;
  _235 = x176__lsm.270_359 w* _233;
  _236 = _232 + _235;
  d_237 = d_226 + _236;
  _238 = (long int) d_237;
  d_239 = d_237 >> 52;
  _240 = _238 << 4;
  _241 = _240 & 72057594037927920;
  u0_242 = tx_228 | _241;
  _244 = u0_242 w* 4294968273;
  c_245 = c_230 + _244;
  _246 = (long unsigned int) c_245;
  _247 = _246 & 4503599627370495;
  c_248 = c_245 >> 52;
  _249 = _196 w* x176__lsm.268_316;
  _251 = x176__lsm.269_344 w* a4_214;
  _252 = x176__lsm.270_359 w* x176__lsm.270_359;
  _253 = _251 + _252;
  d_254 = d_239 + _253;
  _255 = d_254 & 4503599627370495;
  _256 = _255 * 68719492368;
  _8 = _249 + _256;
  c_257 = _8 + c_248;
  d_258 = d_254 >> 52;
  _259 = (long unsigned int) c_257;
  _260 = _259 & 4503599627370495;
  c_261 = c_257 >> 52;
  _262 = _196 w* x176__lsm.269_344;
  _263 = x176__lsm.268_316 w* x176__lsm.268_316;
  _264 = _262 + _263;
  _266 = x176__lsm.270_359 w* a4_214;
  d_267 = d_258 + _266;
  _268 = d_267 & 4503599627370495;
  _269 = _268 * 68719492368;
  _418 = _264 + _269;
  c_270 = c_261 + _418;
  d_271 = d_267 >> 52;
  _272 = (long unsigned int) c_270;
  _273 = _272 & 4503599627370495;
  c_274 = c_270 >> 52;
  _275 = d_271 * 68719492368;
  _276 = (__int128 unsigned) t3_212;
  _277 = _275 + _276;
  c_278 = c_274 + _277;
  _279 = (long unsigned int) c_278;
  _280 = _279 & 4503599627370495;
  c_281 = c_278 >> 52;
  _282 = (__int128 unsigned) t4_229;
  c_283 = c_281 + _282;
  _284 = (long unsigned int) c_283;
  ivtmp_1196 = ivtmp_1197 + 4294967295;
  if (ivtmp_1196 != 0)
    goto <bb 9>; [98.87%]
  else
    goto <bb 10>; [1.13%]

  <bb 10> [local count: 12025908]:
  _36 = {_273, _280};
  _40 = {_247, _260};
  MEM[(const uint64_t *)&x176] = _40;
  MEM[(const uint64_t *)&x176 + 16B] = _36;
  MEM[(const uint64_t *)&x176 + 32B] = _284;
  secp256k1_fe_mul_inner (&x176.n, &x176.n, &x88.n);
  x220 = x176;
  x220__lsm.262_435 = MEM[(const uint64_t *)&x220];
  x220__lsm.263_432 = MEM[(const uint64_t *)&x220 + 8B];
  x220__lsm.264_431 = MEM[(const uint64_t *)&x220 + 16B];
  x220__lsm.265_14 = MEM[(const uint64_t *)&x220 + 24B];
  x220__lsm.266_1 = MEM[(const uint64_t *)&x220 + 32B];

  <bb 11> [local count: 529681667]:
  # x220__lsm.262_128 = PHI <x220__lsm.262_435(10), _341(11)>
  # x220__lsm.263_156 = PHI <x220__lsm.263_432(10), _354(11)>
  # x220__lsm.264_171 = PHI <x220__lsm.264_431(10), _367(11)>
  # x220__lsm.265_222 = PHI <x220__lsm.265_14(10), _374(11)>
  # x220__lsm.266_250 = PHI <x220__lsm.266_1(10), _378(11)>
  # ivtmp_1199 = PHI <44(10), ivtmp_1198(11)>
  _290 = x220__lsm.262_128 * 2;
  _293 = _290 w* x220__lsm.265_222;
  _294 = x220__lsm.263_156 * 2;
  _297 = _294 w* x220__lsm.264_171;
  d_298 = _293 + _297;
  c_300 = x220__lsm.266_250 w* x220__lsm.266_250;
  _301 = c_300 & 4503599627370495;
  _302 = _301 * 68719492368;
  d_303 = d_298 + _302;
  c_304 = c_300 >> 52;
  _305 = (long int) d_303;
  t3_306 = _305 & 4503599627370495;
  d_307 = d_303 >> 52;
  a4_308 = x220__lsm.266_250 * 2;
  _311 = x220__lsm.262_128 w* a4_308;
  _312 = x220__lsm.265_222 w* _294;
  _313 = _311 + _312;
  _314 = x220__lsm.264_171 w* x220__lsm.264_171;
  _315 = _313 + _314;
  _317 = c_304 * 68719492368;
  _10 = _315 + _317;
  d_318 = _10 + d_307;
  _319 = (long int) d_318;
  d_320 = d_318 >> 52;
  _321 = _319 >> 48;
  tx_322 = _321 & 15;
  t4_323 = _319 & 281474976710655;
  c_324 = x220__lsm.262_128 w* x220__lsm.262_128;
  _326 = a4_308 w* x220__lsm.263_156;
  _327 = x220__lsm.264_171 * 2;
  _329 = x220__lsm.265_222 w* _327;
  _330 = _326 + _329;
  d_331 = d_320 + _330;
  _332 = (long int) d_331;
  d_333 = d_331 >> 52;
  _334 = _332 << 4;
  _335 = _334 & 72057594037927920;
  u0_336 = tx_322 | _335;
  _338 = u0_336 w* 4294968273;
  c_339 = c_324 + _338;
  _340 = (long unsigned int) c_339;
  _341 = _340 & 4503599627370495;
  c_342 = c_339 >> 52;
  _343 = _290 w* x220__lsm.263_156;
  _345 = x220__lsm.264_171 w* a4_308;
  _346 = x220__lsm.265_222 w* x220__lsm.265_222;
  _347 = _345 + _346;
  d_348 = d_333 + _347;
  _349 = d_348 & 4503599627370495;
  _350 = _349 * 68719492368;
  _430 = _343 + _350;
  c_351 = c_342 + _430;
  d_352 = d_348 >> 52;
  _353 = (long unsigned int) c_351;
  _354 = _353 & 4503599627370495;
  c_355 = c_351 >> 52;
  _356 = _290 w* x220__lsm.264_171;
  _357 = x220__lsm.263_156 w* x220__lsm.263_156;
  _358 = _356 + _357;
  _360 = x220__lsm.265_222 w* a4_308;
  d_361 = d_352 + _360;
  _362 = d_361 & 4503599627370495;
  _363 = _362 * 68719492368;
  _11 = _358 + _363;
  c_364 = _11 + c_355;
  d_365 = d_361 >> 52;
  _366 = (long unsigned int) c_364;
  _367 = _366 & 4503599627370495;
  c_368 = c_364 >> 52;
  _369 = d_365 * 68719492368;
  _370 = (__int128 unsigned) t3_306;
  _371 = _369 + _370;
  c_372 = c_368 + _371;
  _373 = (long unsigned int) c_372;
  _374 = _373 & 4503599627370495;
  c_375 = c_372 >> 52;
  _376 = (__int128 unsigned) t4_323;
  c_377 = c_375 + _376;
  _378 = (long unsigned int) c_377;
  ivtmp_1198 = ivtmp_1199 + 4294967295;
  if (ivtmp_1198 != 0)
    goto <bb 11>; [97.73%]
  else
    goto <bb 12>; [2.27%]

  <bb 12> [local count: 12025908]:
  _1189 = {_367, _374};
  _1187 = {_341, _354};
  MEM[(const uint64_t *)&x220] = _1187;
  MEM[(const uint64_t *)&x220 + 16B] = _1189;
  MEM[(const uint64_t *)&x220 + 32B] = _378;
  secp256k1_fe_mul_inner (&x220.n, &x220.n, &x44.n);
  x223 = x220;
  secp256k1_fe_sqr_inner (&x223.n, &x223.n);
  secp256k1_fe_sqr_inner (&x223.n, &x223.n);
  secp256k1_fe_sqr_inner (&x223.n, &x223.n);
  secp256k1_fe_mul_inner (&x223.n, &x223.n, &x3.n);
  t1 = x223;

  <bb 13> [local count: 276365169]:
  # ivtmp_1201 = PHI <23(12), ivtmp_1200(13)>
  secp256k1_fe_sqr_inner (&t1.n, &t1.n);
  ivtmp_1200 = ivtmp_1201 + 4294967295;
  if (ivtmp_1200 != 0)
    goto <bb 13>; [95.65%]
  else
    goto <bb 14>; [4.35%]

  <bb 14> [local count: 12025908]:
  secp256k1_fe_mul_inner (&t1.n, &t1.n, &x22.n);

  <bb 15> [local count: 60115111]:
  # ivtmp_1203 = PHI <5(14), ivtmp_1202(15)>
  secp256k1_fe_sqr_inner (&t1.n, &t1.n);
  ivtmp_1202 = ivtmp_1203 + 4294967295;
  if (ivtmp_1202 != 0)
    goto <bb 15>; [80.00%]
  else
    goto <bb 16>; [20.00%]

  <bb 16> [local count: 12025908]:
  secp256k1_fe_mul_inner (&t1.n, &t1.n, _65);
  secp256k1_fe_sqr_inner (&t1.n, &t1.n);
  secp256k1_fe_sqr_inner (&t1.n, &t1.n);
  secp256k1_fe_sqr_inner (&t1.n, &t1.n);
  secp256k1_fe_mul_inner (&t1.n, &t1.n, &x2.n);
  secp256k1_fe_sqr_inner (&t1.n, &t1.n);
  secp256k1_fe_sqr_inner (&t1.n, &t1.n);
  _66 = &r_52(D)->n;
  secp256k1_fe_mul_inner (_66, _65, &t1.n);
  x2 ={v} {CLOBBER};
  x3 ={v} {CLOBBER};
  x6 ={v} {CLOBBER};
  x9 ={v} {CLOBBER};
  x11 ={v} {CLOBBER};
  x22 ={v} {CLOBBER};
  x44 ={v} {CLOBBER};
  x88 ={v} {CLOBBER};
  x176 ={v} {CLOBBER};
  x220 ={v} {CLOBBER};
  x223 ={v} {CLOBBER};
  t1 ={v} {CLOBBER};
  return;

}



;; Function secp256k1_ge_set_gej (secp256k1_ge_set_gej, funcdef_no=143, decl_uid=4720, cgraph_uid=143, symbol_order=145)

secp256k1_ge_set_gej (struct secp256k1_ge * r, struct secp256k1_gej * a)
{
  int64_t u0;
  int64_t tx;
  int64_t t4;
  int64_t t3;
  uint64_t a4;
  uint64_t a3;
  uint64_t a2;
  uint64_t a1;
  uint64_t a0;
  uint128_t d;
  uint128_t c;
  uint64_t a4;
  uint64_t a3;
  uint64_t a2;
  uint64_t a1;
  uint64_t a0;
  uint64_t u0;
  uint64_t tx;
  uint64_t t4;
  uint64_t t3;
  uint128_t d;
  uint128_t c;
  struct secp256k1_fe z3;
  struct secp256k1_fe z2;
  int _1;
  struct secp256k1_fe * _2;
  const uint64_t[5] * _12;
  __int128 unsigned _13;
  __int128 unsigned _14;
  __int128 unsigned _15;
  __int128 unsigned _17;
  long unsigned int _30;
  __int128 unsigned _32;
  long unsigned int _34;
  __int128 unsigned _36;
  long unsigned int _39;
  __int128 unsigned _41;
  long unsigned int _43;
  __int128 unsigned _45;
  long unsigned int _49;
  __int128 unsigned _52;
  __int128 unsigned _53;
  long unsigned int _56;
  __int128 unsigned _59;
  __int128 unsigned _60;
  __int128 unsigned _62;
  __int128 unsigned _63;
  __int128 unsigned _66;
  __int128 unsigned _69;
  long unsigned int _71;
  long unsigned int _73;
  __int128 unsigned _77;
  __int128 unsigned _78;
  __int128 unsigned _80;
  __int128 unsigned _81;
  __int128 unsigned _83;
  long unsigned int _85;
  long unsigned int _87;
  long unsigned int _88;
  __int128 unsigned _91;
  long unsigned int _93;
  long unsigned int _94;
  __int128 unsigned _96;
  __int128 unsigned _97;
  __int128 unsigned _100;
  __int128 unsigned _101;
  __int128 unsigned _102;
  __int128 unsigned _103;
  __int128 unsigned _104;
  __int128 unsigned _106;
  __int128 unsigned _107;
  long unsigned int _110;
  long unsigned int _111;
  __int128 unsigned _113;
  __int128 unsigned _114;
  __int128 unsigned _116;
  __int128 unsigned _119;
  __int128 unsigned _120;
  __int128 unsigned _121;
  __int128 unsigned _123;
  __int128 unsigned _124;
  long unsigned int _127;
  long unsigned int _128;
  __int128 unsigned _130;
  __int128 unsigned _131;
  __int128 unsigned _132;
  long unsigned int _134;
  long unsigned int _135;
  __int128 unsigned _137;
  long unsigned int _139;
  long unsigned int _145;
  __int128 unsigned _148;
  long unsigned int _149;
  __int128 unsigned _152;
  __int128 unsigned _156;
  __int128 unsigned _157;
  long int _160;
  __int128 unsigned _166;
  __int128 unsigned _167;
  __int128 unsigned _168;
  __int128 unsigned _169;
  __int128 unsigned _170;
  __int128 unsigned _172;
  long int _174;
  long int _176;
  __int128 unsigned _181;
  long unsigned int _182;
  __int128 unsigned _184;
  __int128 unsigned _185;
  long int _187;
  long int _189;
  long int _190;
  __int128 unsigned _193;
  long unsigned int _195;
  long unsigned int _196;
  __int128 unsigned _198;
  __int128 unsigned _200;
  __int128 unsigned _201;
  __int128 unsigned _202;
  __int128 unsigned _204;
  __int128 unsigned _205;
  long unsigned int _208;
  long unsigned int _209;
  __int128 unsigned _211;
  __int128 unsigned _212;
  __int128 unsigned _213;
  __int128 unsigned _215;
  __int128 unsigned _217;
  __int128 unsigned _218;
  long unsigned int _221;
  long unsigned int _222;
  __int128 unsigned _224;
  __int128 unsigned _225;
  __int128 unsigned _226;
  long unsigned int _228;
  long unsigned int _229;
  __int128 unsigned _231;
  long unsigned int _233;
  __int128 unsigned _244;
  __int128 unsigned _246;
  __int128 unsigned _247;
  __int128 unsigned _249;
  __int128 unsigned _250;
  __int128 unsigned _251;
  __int128 unsigned _252;
  __int128 unsigned _253;
  __int128 unsigned _255;
  __int128 unsigned _256;
  __int128 unsigned _257;
  __int128 unsigned _258;
  __int128 unsigned _259;

  <bb 2> [local count: 1073741825]:
  _1 = a_4(D)->infinity;
  r_5(D)->infinity = _1;
  _2 = &a_4(D)->z;
  secp256k1_fe_inv (_2, _2);
  a0_140 = MEM[(const uint64_t *)a_4(D) + 80B];
  a1_141 = MEM[(const uint64_t *)a_4(D) + 88B];
  a2_142 = MEM[(const uint64_t *)a_4(D) + 96B];
  a3_143 = MEM[(const uint64_t *)a_4(D) + 104B];
  a4_144 = MEM[(const uint64_t *)a_4(D) + 112B];
  _145 = a0_140 * 2;
  _148 = _145 w* a3_143;
  _149 = a1_141 * 2;
  _152 = _149 w* a2_142;
  d_153 = _148 + _152;
  c_155 = a4_144 w* a4_144;
  _156 = c_155 & 4503599627370495;
  _157 = _156 * 68719492368;
  d_158 = d_153 + _157;
  c_159 = c_155 >> 52;
  _160 = (long int) d_158;
  t3_161 = _160 & 4503599627370495;
  d_162 = d_158 >> 52;
  a4_163 = a4_144 * 2;
  _166 = a0_140 w* a4_163;
  _167 = a3_143 w* _149;
  _168 = _166 + _167;
  _169 = a2_142 w* a2_142;
  _170 = _168 + _169;
  _172 = c_159 * 68719492368;
  _259 = _170 + _172;
  d_173 = d_162 + _259;
  _174 = (long int) d_173;
  d_175 = d_173 >> 52;
  _176 = _174 >> 48;
  tx_177 = _176 & 15;
  t4_178 = _174 & 281474976710655;
  c_179 = a0_140 w* a0_140;
  _181 = a4_163 w* a1_141;
  _182 = a2_142 * 2;
  _184 = a3_143 w* _182;
  _185 = _181 + _184;
  d_186 = d_175 + _185;
  _187 = (long int) d_186;
  d_188 = d_186 >> 52;
  _189 = _187 << 4;
  _190 = _189 & 72057594037927920;
  u0_191 = tx_177 | _190;
  _193 = u0_191 w* 4294968273;
  c_194 = c_179 + _193;
  _195 = (long unsigned int) c_194;
  _196 = _195 & 4503599627370495;
  MEM[(uint64_t *)&z2] = _196;
  c_197 = c_194 >> 52;
  _198 = _145 w* a1_141;
  _200 = a2_142 w* a4_163;
  _201 = a3_143 w* a3_143;
  _202 = _200 + _201;
  d_203 = d_188 + _202;
  _204 = d_203 & 4503599627370495;
  _205 = _204 * 68719492368;
  _258 = _198 + _205;
  c_206 = c_197 + _258;
  d_207 = d_203 >> 52;
  _208 = (long unsigned int) c_206;
  _209 = _208 & 4503599627370495;
  MEM[(uint64_t *)&z2 + 8B] = _209;
  c_210 = c_206 >> 52;
  _211 = _145 w* a2_142;
  _212 = a1_141 w* a1_141;
  _213 = _211 + _212;
  _215 = a3_143 w* a4_163;
  d_216 = d_207 + _215;
  _217 = d_216 & 4503599627370495;
  _218 = _217 * 68719492368;
  _257 = _213 + _218;
  c_219 = c_210 + _257;
  d_220 = d_216 >> 52;
  _221 = (long unsigned int) c_219;
  _222 = _221 & 4503599627370495;
  MEM[(uint64_t *)&z2 + 16B] = _222;
  c_223 = c_219 >> 52;
  _224 = d_220 * 68719492368;
  _225 = (__int128 unsigned) t3_161;
  _226 = _224 + _225;
  c_227 = c_223 + _226;
  _228 = (long unsigned int) c_227;
  _229 = _228 & 4503599627370495;
  MEM[(uint64_t *)&z2 + 24B] = _229;
  c_230 = c_227 >> 52;
  _231 = (__int128 unsigned) t4_178;
  c_232 = c_230 + _231;
  _233 = (long unsigned int) c_232;
  MEM[(uint64_t *)&z2 + 32B] = _233;
  secp256k1_fe_mul_inner (&z3.n, _2, &z2.n);
  a0_24 = MEM[(const uint64_t *)a_4(D)];
  a1_25 = MEM[(const uint64_t *)a_4(D) + 8B];
  a2_26 = MEM[(const uint64_t *)a_4(D) + 16B];
  a3_27 = MEM[(const uint64_t *)a_4(D) + 24B];
  a4_28 = MEM[(const uint64_t *)a_4(D) + 32B];
  _30 = MEM[(const uint64_t *)&z2 + 24B];
  _32 = a0_24 w* _30;
  _34 = MEM[(const uint64_t *)&z2 + 16B];
  _36 = a1_25 w* _34;
  _255 = _32 + _36;
  _39 = MEM[(const uint64_t *)&z2];
  _41 = a3_27 w* _39;
  _43 = MEM[(const uint64_t *)&z2 + 8B];
  _45 = a2_26 w* _43;
  _256 = _41 + _255;
  d_47 = _45 + _256;
  _49 = MEM[(const uint64_t *)&z2 + 32B];
  c_51 = a4_28 w* _49;
  _52 = c_51 & 4503599627370495;
  _53 = _52 * 68719492368;
  d_54 = d_47 + _53;
  c_55 = c_51 >> 52;
  _56 = (long unsigned int) d_54;
  t3_57 = _56 & 4503599627370495;
  d_58 = d_54 >> 52;
  _59 = a0_24 w* _49;
  _60 = _30 w* a1_25;
  _249 = _59 + _60;
  _62 = a3_27 w* _43;
  _63 = _34 w* a2_26;
  _250 = _62 + _249;
  _251 = _63 + _250;
  _66 = _39 w* a4_28;
  _252 = _66 + _251;
  _69 = c_55 * 68719492368;
  _253 = _69 + _252;
  d_70 = d_58 + _253;
  _71 = (long unsigned int) d_70;
  d_72 = d_70 >> 52;
  _73 = _71 >> 48;
  tx_74 = _73 & 15;
  t4_75 = _71 & 281474976710655;
  c_76 = a0_24 w* _39;
  _77 = a1_25 w* _49;
  _78 = _30 w* a2_26;
  _246 = _77 + _78;
  _80 = _43 w* a4_28;
  _81 = _34 w* a3_27;
  _247 = _80 + _246;
  _83 = _81 + _247;
  d_84 = d_72 + _83;
  _85 = (long unsigned int) d_84;
  d_86 = d_84 >> 52;
  _87 = _85 << 4;
  _88 = _87 & 72057594037927920;
  u0_89 = tx_74 | _88;
  _91 = u0_89 w* 4294968273;
  c_92 = c_76 + _91;
  _93 = (long unsigned int) c_92;
  _94 = _93 & 4503599627370495;
  MEM[(uint64_t *)a_4(D)] = _94;
  c_95 = c_92 >> 52;
  _96 = a0_24 w* _43;
  _97 = a1_25 w* _39;
  _17 = _96 + _97;
  _100 = a2_26 w* _49;
  _101 = _30 w* a3_27;
  _102 = _100 + _101;
  _103 = _34 w* a4_28;
  _104 = _102 + _103;
  d_105 = d_86 + _104;
  _106 = d_105 & 4503599627370495;
  _107 = _106 * 68719492368;
  _244 = _17 + _107;
  c_108 = c_95 + _244;
  d_109 = d_105 >> 52;
  _110 = (long unsigned int) c_108;
  _111 = _110 & 4503599627370495;
  MEM[(uint64_t *)a_4(D) + 8B] = _111;
  c_112 = c_108 >> 52;
  _113 = a0_24 w* _34;
  _114 = a1_25 w* _43;
  _13 = _113 + _114;
  _116 = _39 w* a2_26;
  _15 = _13 + _116;
  _119 = a3_27 w* _49;
  _120 = _30 w* a4_28;
  _121 = _119 + _120;
  d_122 = d_109 + _121;
  _123 = d_122 & 4503599627370495;
  _124 = _123 * 68719492368;
  _14 = _15 + _124;
  c_125 = _14 + c_112;
  d_126 = d_122 >> 52;
  _127 = (long unsigned int) c_125;
  _128 = _127 & 4503599627370495;
  MEM[(uint64_t *)a_4(D) + 16B] = _128;
  c_129 = c_125 >> 52;
  _130 = d_126 * 68719492368;
  _131 = (__int128 unsigned) t3_57;
  _132 = _130 + _131;
  c_133 = c_129 + _132;
  _134 = (long unsigned int) c_133;
  _135 = _134 & 4503599627370495;
  MEM[(uint64_t *)a_4(D) + 24B] = _135;
  c_136 = c_133 >> 52;
  _137 = (__int128 unsigned) t4_75;
  c_138 = c_136 + _137;
  _139 = (long unsigned int) c_138;
  MEM[(uint64_t *)a_4(D) + 32B] = _139;
  _12 = &MEM[(const struct secp256k1_fe *)a_4(D) + 40B].n;
  secp256k1_fe_mul_inner (_12, _12, &z3.n);
  MEM[(struct secp256k1_fe *)a_4(D) + 80B].n[4] = 0;
  MEM[(long unsigned int *)a_4(D) + 80B] = { 1, 0 };
  MEM[(long unsigned int *)a_4(D) + 96B] = { 0, 0 };
  r_5(D)->x = a_4(D)->x;
  r_5(D)->y = a_4(D)->y;
  z2 ={v} {CLOBBER};
  z3 ={v} {CLOBBER};
  return;

}



;; Function secp256k1_rfc6979_hmac_sha256_generate.constprop (secp256k1_rfc6979_hmac_sha256_generate.constprop.21, funcdef_no=268, decl_uid=9447, cgraph_uid=156, symbol_order=764)

secp256k1_rfc6979_hmac_sha256_generate.constprop (struct secp256k1_rfc6979_hmac_sha256_t * rng, unsigned char * out)
{
  uint32_t out[8];
  uint32_t sizedesc[2];
  uint32_t out[8];
  uint32_t sizedesc[2];
  unsigned char temp[32];
  unsigned char temp[32];
  unsigned char temp[32];
  struct secp256k1_hmac_sha256_t hmac;
  struct secp256k1_hmac_sha256_t hmac;
  static const unsigned char zero[1] = {0};
  int _2;
  unsigned int load_dst_6;
  unsigned int load_dst_9;
  unsigned int load_dst_10;
  unsigned int load_dst_12;
  unsigned int load_dst_14;
  unsigned int load_dst_19;
  unsigned int _27;
  unsigned int load_dst_38;
  long unsigned int _41;
  long unsigned int _42;
  unsigned int _43;
  unsigned int _44;
  unsigned int _45;
  unsigned int _46;
  long unsigned int _48;
  unsigned int _49;
  unsigned int _50;
  long unsigned int _52;
  unsigned int _53;
  unsigned int _54;
  unsigned int _55;
  unsigned int _56;
  unsigned int _57;
  unsigned int _58;
  unsigned int _59;
  unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  unsigned int _63;
  unsigned int _64;
  unsigned int _65;
  long unsigned int _66;
  unsigned int _67;
  unsigned int _68;
  unsigned int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int _72;
  unsigned int load_dst_80;
  unsigned char[32] * pretmp_81;
  unsigned char[32] * pretmp_82;
  unsigned int load_dst_85;
  long unsigned int _86;
  long unsigned int _87;
  unsigned int _88;
  unsigned int _89;
  unsigned int _90;
  unsigned int _91;
  long unsigned int _93;
  unsigned int _94;
  unsigned int _95;
  long unsigned int _97;
  unsigned int _98;
  unsigned int _99;
  unsigned int _100;
  unsigned int _101;
  unsigned int _102;
  unsigned int _103;
  unsigned int _104;
  unsigned int _105;
  long unsigned int _106;
  long unsigned int _107;
  unsigned int _108;
  unsigned int _109;
  unsigned int _110;
  long unsigned int _111;
  unsigned int _112;
  unsigned int _113;
  unsigned int _114;
  long unsigned int _115;
  long unsigned int _116;
  long unsigned int _117;
  unsigned int load_dst_131;
  unsigned int load_dst_168;
  unsigned int _178;
  unsigned int _179;
  unsigned int _193;
  unsigned int _194;
  unsigned int _196;
  unsigned int _197;
  unsigned int _208;
  unsigned int _223;
  unsigned int _238;
  unsigned int _253;
  unsigned int load_dst_258;
  unsigned int _268;
  unsigned int _283;
  unsigned int _298;
  unsigned int _313;
  unsigned int _328;
  unsigned int load_dst_333;
  unsigned int _343;
  unsigned int load_dst_348;
  unsigned int _358;
  unsigned int load_dst_363;
  unsigned int _373;
  unsigned int load_dst_378;
  unsigned int _388;

  <bb 2> [local count: 118111601]:
  _2 = rng_1(D)->retry;
  pretmp_81 = &rng_1(D)->k;
  pretmp_82 = &rng_1(D)->v;
  if (_2 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 38976832]:
  secp256k1_hmac_sha256_initialize.constprop (&hmac, pretmp_81);
  secp256k1_sha256_write (&hmac.inner, pretmp_82, 32);
  secp256k1_sha256_write (&hmac.inner, &zero, 1);
  secp256k1_sha256_finalize (&hmac.inner, &temp);
  secp256k1_sha256_write (&hmac.outer, &temp, 32);
  __builtin_memset (&temp, 0, 32);
  secp256k1_sha256_finalize (&hmac.outer, pretmp_81);
  temp ={v} {CLOBBER};
  secp256k1_hmac_sha256_initialize.constprop (&hmac, pretmp_81);
  secp256k1_sha256_write (&hmac.inner, pretmp_82, 32);
  secp256k1_sha256_finalize (&hmac.inner, &temp);
  secp256k1_sha256_write (&hmac.outer, &temp, 32);
  __builtin_memset (&temp, 0, 32);
  secp256k1_sha256_finalize (&hmac.outer, pretmp_82);
  temp ={v} {CLOBBER};
  hmac ={v} {CLOBBER};

  <bb 4> [local count: 118111605]:
  secp256k1_hmac_sha256_initialize.constprop (&hmac, pretmp_81);
  secp256k1_sha256_write (&hmac.inner, pretmp_82, 32);
  _86 = MEM[(struct secp256k1_sha256_t *)&hmac].bytes;
  _87 = _86 >> 29;
  _88 = (unsigned int) _87;
  _89 = _88 << 24;
  _90 = _88 << 8;
  _91 = _90 & 16711680;
  _93 = _86 >> 37;
  _94 = (unsigned int) _93;
  _95 = _94 & 65280;
  _197 = _89 | _95;
  _97 = _86 >> 53;
  _98 = (unsigned int) _97;
  _99 = _98 & 255;
  _196 = _99 | _197;
  _100 = _91 | _196;
  sizedesc[0] = _100;
  _101 = (unsigned int) _86;
  _102 = _101 << 27;
  _103 = _101 << 11;
  _104 = _103 & 16711680;
  _105 = _102 | _104;
  _106 = _86 << 3;
  _107 = _106 >> 8;
  _108 = (unsigned int) _107;
  _109 = _108 & 65280;
  _110 = _105 | _109;
  _111 = _106 >> 24;
  _112 = (unsigned int) _111;
  _113 = _112 & 255;
  _114 = _110 | _113;
  sizedesc[1] = _114;
  _115 = 119 - _86;
  _116 = _115 & 63;
  _117 = _116 + 1;
  secp256k1_sha256_write (&hmac.inner, &pad, _117);
  secp256k1_sha256_write (&hmac.inner, &sizedesc, 8);
  load_dst_80 = MEM[(unsigned int *)&hmac];
  _283 = __builtin_bswap32 (load_dst_80);
  load_dst_168 = MEM[(unsigned int *)&hmac + 4B];
  _298 = __builtin_bswap32 (load_dst_168);
  load_dst_12 = MEM[(unsigned int *)&hmac + 8B];
  _313 = __builtin_bswap32 (load_dst_12);
  load_dst_85 = MEM[(unsigned int *)&hmac + 12B];
  _328 = __builtin_bswap32 (load_dst_85);
  load_dst_19 = MEM[(unsigned int *)&hmac + 16B];
  _343 = __builtin_bswap32 (load_dst_19);
  load_dst_378 = MEM[(unsigned int *)&hmac + 20B];
  _358 = __builtin_bswap32 (load_dst_378);
  load_dst_38 = MEM[(unsigned int *)&hmac + 24B];
  _373 = __builtin_bswap32 (load_dst_38);
  load_dst_131 = MEM[(unsigned int *)&hmac + 28B];
  _388 = __builtin_bswap32 (load_dst_131);
  MEM[(unsigned int *)&hmac] = { 0, 0, 0, 0 };
  MEM[(unsigned int *)&hmac + 16B] = { 0, 0, 0, 0 };
  MEM[(char * {ref-all})&out] = _283;
  MEM[(char * {ref-all})&out + 4B] = _298;
  MEM[(char * {ref-all})&out + 8B] = _313;
  MEM[(char * {ref-all})&out + 12B] = _328;
  MEM[(char * {ref-all})&out + 16B] = _343;
  MEM[(char * {ref-all})&out + 20B] = _358;
  MEM[(char * {ref-all})&out + 24B] = _373;
  MEM[(char * {ref-all})&out + 28B] = _388;
  MEM[(char * {ref-all})&temp] = MEM[(char * {ref-all})&out];
  sizedesc ={v} {CLOBBER};
  secp256k1_sha256_write (&hmac.outer, &temp, 32);
  __builtin_memset (&temp, 0, 32);
  _41 = MEM[(struct secp256k1_sha256_t *)&hmac + 104B].bytes;
  _42 = _41 >> 29;
  _43 = (unsigned int) _42;
  _44 = _43 << 24;
  _45 = _43 << 8;
  _46 = _45 & 16711680;
  _48 = _41 >> 37;
  _49 = (unsigned int) _48;
  _50 = _49 & 65280;
  _194 = _44 | _50;
  _52 = _41 >> 53;
  _53 = (unsigned int) _52;
  _54 = _53 & 255;
  _179 = _54 | _194;
  _55 = _46 | _179;
  sizedesc[0] = _55;
  _56 = (unsigned int) _41;
  _57 = _56 << 27;
  _58 = _56 << 11;
  _59 = _58 & 16711680;
  _60 = _57 | _59;
  _61 = _41 << 3;
  _62 = _61 >> 8;
  _63 = (unsigned int) _62;
  _64 = _63 & 65280;
  _65 = _60 | _64;
  _66 = _61 >> 24;
  _67 = (unsigned int) _66;
  _68 = _67 & 255;
  _69 = _65 | _68;
  sizedesc[1] = _69;
  _70 = 119 - _41;
  _71 = _70 & 63;
  _72 = _71 + 1;
  secp256k1_sha256_write (&hmac.outer, &pad, _72);
  secp256k1_sha256_write (&hmac.outer, &sizedesc, 8);
  load_dst_9 = MEM[(unsigned int *)&hmac + 104B];
  _27 = __builtin_bswap32 (load_dst_9);
  load_dst_14 = MEM[(unsigned int *)&hmac + 108B];
  _178 = __builtin_bswap32 (load_dst_14);
  load_dst_10 = MEM[(unsigned int *)&hmac + 112B];
  _193 = __builtin_bswap32 (load_dst_10);
  load_dst_258 = MEM[(unsigned int *)&hmac + 116B];
  _208 = __builtin_bswap32 (load_dst_258);
  load_dst_6 = MEM[(unsigned int *)&hmac + 120B];
  _223 = __builtin_bswap32 (load_dst_6);
  load_dst_348 = MEM[(unsigned int *)&hmac + 124B];
  _238 = __builtin_bswap32 (load_dst_348);
  load_dst_363 = MEM[(unsigned int *)&hmac + 128B];
  _253 = __builtin_bswap32 (load_dst_363);
  load_dst_333 = MEM[(unsigned int *)&hmac + 132B];
  _268 = __builtin_bswap32 (load_dst_333);
  MEM[(char * {ref-all})&out] = _27;
  MEM[(char * {ref-all})&out + 4B] = _178;
  MEM[(char * {ref-all})&out + 8B] = _193;
  MEM[(char * {ref-all})&out + 12B] = _208;
  MEM[(char * {ref-all})&out + 16B] = _223;
  MEM[(char * {ref-all})&out + 20B] = _238;
  MEM[(char * {ref-all})&out + 24B] = _253;
  MEM[(char * {ref-all})&out + 28B] = _268;
  MEM[(char * {ref-all})rng_1(D)] = MEM[(char * {ref-all})&out];
  sizedesc ={v} {CLOBBER};
  temp ={v} {CLOBBER};
  __builtin_memcpy (out_16(D), pretmp_82, 32);
  hmac ={v} {CLOBBER};
  rng_1(D)->retry = 1;
  return;

}



;; Function nonce_function_rfc6979 (nonce_function_rfc6979, funcdef_no=230, decl_uid=6333, cgraph_uid=230, symbol_order=237)

nonce_function_rfc6979 (unsigned char * nonce32, const unsigned char * msg32, const unsigned char * key32, const unsigned char * algo16, void * data, unsigned int counter)
{
  unsigned int i;
  struct secp256k1_rfc6979_hmac_sha256_t rng;
  unsigned char keydata[112];
  void * _2;
  long unsigned int prephitmp_6;
  __int128 unsigned _30;
  sizetype prephitmp_34;
  long unsigned int prephitmp_37;

  <bb 2> [local count: 118111601]:
  __builtin_memcpy (&keydata, key32_11(D), 32);
  __builtin_memcpy (&MEM[(void *)&keydata + 32B], msg32_12(D), 32);
  if (data_13(D) != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> [local count: 63154273]:
  __builtin_memcpy (&MEM[(void *)&keydata + 64B], data_13(D), 32);

  <bb 4> [local count: 118111601]:
  # prephitmp_34 = PHI <96(3), 64(2)>
  # prephitmp_6 = PHI <112(3), 80(2)>
  if (algo16_14(D) != 0B)
    goto <bb 5>; [53.47%]
  else
    goto <bb 6>; [46.53%]

  <bb 5> [local count: 63154273]:
  _2 = &keydata + prephitmp_34;
  _30 = MEM[(char * {ref-all})algo16_14(D)];
  MEM[(char * {ref-all})_2] = _30;

  <bb 6> [local count: 118111601]:
  # prephitmp_37 = PHI <prephitmp_6(5), prephitmp_34(4)>
  secp256k1_rfc6979_hmac_sha256_initialize (&rng, &keydata, prephitmp_37);
  __builtin_memset (&keydata, 0, 112);

  <bb 7> [local count: 955630224]:
  # i_38 = PHI <0(6), i_20(7)>
  secp256k1_rfc6979_hmac_sha256_generate.constprop (&rng, nonce32_18(D));
  i_20 = i_38 + 1;
  if (counter_17(D) >= i_20)
    goto <bb 7>; [87.64%]
  else
    goto <bb 8>; [12.36%]

  <bb 8> [local count: 118111601]:
  keydata ={v} {CLOBBER};
  rng ={v} {CLOBBER};
  return 1;

}



;; Function secp256k1_fe_normalize (secp256k1_fe_normalize, funcdef_no=83, decl_uid=4293, cgraph_uid=83, symbol_order=83)

__attribute__((used))
secp256k1_fe_normalize (struct secp256k1_fe * r)
{
  uint64_t x;
  uint64_t m;
  uint64_t t4;
  uint64_t t3;
  uint64_t t2;
  uint64_t t1;
  uint64_t t0;
  long long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  _Bool _6;
  long unsigned int _7;
  _Bool _8;
  _Bool _9;
  _Bool _10;
  _Bool _11;
  long unsigned int _12;
  long long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;

  <bb 2> [local count: 1073741825]:
  t0_20 = r_19(D)->n[0];
  t1_21 = r_19(D)->n[1];
  t2_22 = r_19(D)->n[2];
  t3_23 = r_19(D)->n[3];
  t4_24 = r_19(D)->n[4];
  x_25 = t4_24 >> 48;
  t4_26 = t4_24 & 281474976710655;
  _1 = x_25 * 4294968273;
  t0_27 = _1 + t0_20;
  _2 = t0_27 >> 52;
  t1_28 = _2 + t1_21;
  t0_29 = t0_27 & 4503599627370495;
  _3 = t1_28 >> 52;
  t2_30 = _3 + t2_22;
  t1_31 = t1_28 & 4503599627370495;
  _4 = t2_30 >> 52;
  t3_32 = _4 + t3_23;
  t2_33 = t2_30 & 4503599627370495;
  m_34 = t1_31 & t2_33;
  _5 = t3_32 >> 52;
  t4_35 = _5 + t4_26;
  t3_36 = t3_32 & 4503599627370495;
  m_37 = m_34 & t3_36;
  _7 = t4_35 >> 48;
  _8 = t4_35 == 281474976710655;
  _9 = m_37 == 4503599627370495;
  _10 = _8 & _9;
  _11 = t0_29 > 4503595332402222;
  _6 = _10 & _11;
  _12 = (long unsigned int) _6;
  x_38 = _7 | _12;
  _13 = x_38 * 4294968273;
  t0_39 = _13 + t0_29;
  _14 = t0_39 >> 52;
  t1_40 = _14 + t1_31;
  t0_41 = t0_39 & 4503599627370495;
  _15 = t1_40 >> 52;
  t2_42 = _15 + t2_33;
  t1_43 = t1_40 & 4503599627370495;
  _16 = t2_42 >> 52;
  t3_44 = _16 + t3_36;
  t2_45 = t2_42 & 4503599627370495;
  _17 = t3_44 >> 52;
  t4_46 = _17 + t4_35;
  t3_47 = t3_44 & 4503599627370495;
  t4_48 = t4_46 & 281474976710655;
  r_19(D)->n[0] = t0_41;
  r_19(D)->n[1] = t1_43;
  r_19(D)->n[2] = t2_45;
  r_19(D)->n[3] = t3_47;
  r_19(D)->n[4] = t4_48;
  return;

}



;; Function secp256k1_fe_normalize_weak (secp256k1_fe_normalize_weak, funcdef_no=84, decl_uid=4295, cgraph_uid=84, symbol_order=84)

__attribute__((used))
secp256k1_fe_normalize_weak (struct secp256k1_fe * r)
{
  uint64_t x;
  uint64_t t4;
  uint64_t t3;
  uint64_t t2;
  uint64_t t1;
  uint64_t t0;
  long long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;

  <bb 2> [local count: 1073741825]:
  t0_8 = r_7(D)->n[0];
  t1_9 = r_7(D)->n[1];
  t2_10 = r_7(D)->n[2];
  t3_11 = r_7(D)->n[3];
  t4_12 = r_7(D)->n[4];
  x_13 = t4_12 >> 48;
  t4_14 = t4_12 & 281474976710655;
  _1 = x_13 * 4294968273;
  t0_15 = _1 + t0_8;
  _2 = t0_15 >> 52;
  t1_16 = _2 + t1_9;
  t0_17 = t0_15 & 4503599627370495;
  _3 = t1_16 >> 52;
  t2_18 = _3 + t2_10;
  t1_19 = t1_16 & 4503599627370495;
  _4 = t2_18 >> 52;
  t3_20 = _4 + t3_11;
  t2_21 = t2_18 & 4503599627370495;
  _5 = t3_20 >> 52;
  t4_22 = _5 + t4_14;
  t3_23 = t3_20 & 4503599627370495;
  r_7(D)->n[0] = t0_17;
  r_7(D)->n[1] = t1_19;
  r_7(D)->n[2] = t2_21;
  r_7(D)->n[3] = t3_23;
  r_7(D)->n[4] = t4_22;
  return;

}



;; Function secp256k1_gej_double_var.part.14 (secp256k1_gej_double_var.part.14, funcdef_no=256, decl_uid=8837, cgraph_uid=25, symbol_order=586)

__attribute__((used))
secp256k1_gej_double_var.part.14 (struct secp256k1_gej * r, const struct secp256k1_gej * a, struct secp256k1_fe * rzr)
{
  vector(2) long long unsigned int vect__115.350;
  vector(2) long unsigned int vect__114.349;
  vector(2) long unsigned int vect__114.348;
  vector(2) long long unsigned int vect__105.345;
  const vector(2) long unsigned int vect__104.344;
  const vector(2) long unsigned int vect__104.343;
  int64_t u0;
  int64_t tx;
  int64_t t4;
  int64_t t3;
  uint64_t a4;
  uint128_t d;
  uint128_t c;
  struct secp256k1_fe t1;
  struct secp256k1_fe t3;
  struct secp256k1_fe t4;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  const uint64_t[5] * _13;
  const uint64_t[5] * _14;
  uint64_t[5] * _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  const uint64_t[5] * _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  long unsigned int _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  long long unsigned int _68;
  long long unsigned int _69;
  long long unsigned int _70;
  long long unsigned int _71;
  long long unsigned int _72;
  long long unsigned int _73;
  long unsigned int _74;
  long long unsigned int _75;
  long unsigned int _76;
  long long unsigned int _77;
  long unsigned int _78;
  long long unsigned int _79;
  long unsigned int _80;
  long long unsigned int _81;
  long unsigned int _82;
  long unsigned int _88;
  long unsigned int _89;
  long unsigned int _90;
  long unsigned int _91;
  long unsigned int _92;
  long unsigned int _93;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int _96;
  long unsigned int _97;
  long unsigned int _98;
  long unsigned int _99;
  long unsigned int _100;
  long unsigned int _101;
  long unsigned int _102;
  uint64_t[5] * _103;
  long unsigned int _112;
  long long unsigned int _113;
  long unsigned int _122;
  long unsigned int _123;
  __int128 unsigned _145;
  long unsigned int _190;
  __int128 unsigned _193;
  long unsigned int _194;
  __int128 unsigned _197;
  __int128 unsigned _201;
  __int128 unsigned _202;
  long int _205;
  __int128 unsigned _211;
  __int128 unsigned _212;
  __int128 unsigned _213;
  __int128 unsigned _214;
  __int128 unsigned _215;
  __int128 unsigned _217;
  long int _219;
  long int _221;
  __int128 unsigned _226;
  long unsigned int _227;
  __int128 unsigned _229;
  __int128 unsigned _230;
  long int _232;
  long int _234;
  long int _235;
  __int128 unsigned _238;
  long unsigned int _240;
  long unsigned int _241;
  __int128 unsigned _243;
  __int128 unsigned _245;
  __int128 unsigned _246;
  __int128 unsigned _247;
  __int128 unsigned _249;
  __int128 unsigned _250;
  long unsigned int _253;
  long unsigned int _254;
  __int128 unsigned _256;
  __int128 unsigned _257;
  __int128 unsigned _258;
  __int128 unsigned _260;
  __int128 unsigned _262;
  __int128 unsigned _263;
  long unsigned int _266;
  long unsigned int _267;
  __int128 unsigned _269;
  __int128 unsigned _270;
  __int128 unsigned _271;
  long unsigned int _273;
  long unsigned int _274;
  __int128 unsigned _276;
  long unsigned int _278;
  __int128 unsigned _284;
  __int128 unsigned _285;

  <bb 2> [local count: 1073741825]:
  if (rzr_1(D) != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> [local count: 574129753]:
  *rzr_1(D) = a_2(D)->y;
  secp256k1_fe_normalize_weak (rzr_1(D));
  _3 = rzr_1(D)->n[0];
  _4 = _3 * 2;
  rzr_1(D)->n[0] = _4;
  _5 = rzr_1(D)->n[1];
  _6 = _5 * 2;
  rzr_1(D)->n[1] = _6;
  _7 = rzr_1(D)->n[2];
  _8 = _7 * 2;
  rzr_1(D)->n[2] = _8;
  _9 = rzr_1(D)->n[3];
  _10 = _9 * 2;
  rzr_1(D)->n[3] = _10;
  _11 = rzr_1(D)->n[4];
  _12 = _11 * 2;
  rzr_1(D)->n[4] = _12;

  <bb 4> [local count: 1073741825]:
  _13 = &MEM[(const struct secp256k1_fe *)a_2(D) + 40B].n;
  _14 = &MEM[(const struct secp256k1_fe *)a_2(D) + 80B].n;
  _16 = &MEM[(struct secp256k1_fe *)r_15(D) + 80B].n;
  secp256k1_fe_mul_inner (_16, _14, _13);
  _17 = MEM[(struct secp256k1_fe *)r_15(D) + 80B].n[0];
  _18 = _17 * 2;
  MEM[(struct secp256k1_fe *)r_15(D) + 80B].n[0] = _18;
  _19 = MEM[(struct secp256k1_fe *)r_15(D) + 80B].n[1];
  _20 = _19 * 2;
  MEM[(struct secp256k1_fe *)r_15(D) + 80B].n[1] = _20;
  _21 = MEM[(struct secp256k1_fe *)r_15(D) + 80B].n[2];
  _22 = _21 * 2;
  MEM[(struct secp256k1_fe *)r_15(D) + 80B].n[2] = _22;
  _23 = MEM[(struct secp256k1_fe *)r_15(D) + 80B].n[3];
  _24 = _23 * 2;
  MEM[(struct secp256k1_fe *)r_15(D) + 80B].n[3] = _24;
  _25 = MEM[(struct secp256k1_fe *)r_15(D) + 80B].n[4];
  _26 = _25 * 2;
  MEM[(struct secp256k1_fe *)r_15(D) + 80B].n[4] = _26;
  _27 = &MEM[(const struct secp256k1_fe *)a_2(D)].n;
  secp256k1_fe_sqr_inner (&t1.n, _27);
  _28 = t1.n[0];
  _29 = _28 * 3;
  t1.n[0] = _29;
  _30 = t1.n[1];
  _31 = _30 * 3;
  t1.n[1] = _31;
  _32 = t1.n[2];
  _33 = _32 * 3;
  t1.n[2] = _33;
  _34 = t1.n[3];
  _35 = _34 * 3;
  t1.n[3] = _35;
  _36 = t1.n[4];
  _37 = _36 * 3;
  t1.n[4] = _37;
  _190 = _28 * 6;
  _193 = _190 w* _35;
  _194 = _30 * 6;
  _197 = _194 w* _33;
  d_198 = _193 + _197;
  c_200 = _37 w* _37;
  _201 = c_200 & 4503599627370495;
  _202 = _201 * 68719492368;
  d_203 = d_198 + _202;
  c_204 = c_200 >> 52;
  _205 = (long int) d_203;
  t3_206 = _205 & 4503599627370495;
  d_207 = d_203 >> 52;
  a4_208 = _36 * 6;
  _211 = _29 w* a4_208;
  _212 = _35 w* _194;
  _213 = _211 + _212;
  _214 = _33 w* _33;
  _215 = _213 + _214;
  _217 = c_204 * 68719492368;
  _285 = _215 + _217;
  d_218 = d_207 + _285;
  _219 = (long int) d_218;
  d_220 = d_218 >> 52;
  _221 = _219 >> 48;
  tx_222 = _221 & 15;
  t4_223 = _219 & 281474976710655;
  c_224 = _29 w* _29;
  _226 = a4_208 w* _31;
  _227 = _32 * 6;
  _229 = _35 w* _227;
  _230 = _226 + _229;
  d_231 = d_220 + _230;
  _232 = (long int) d_231;
  d_233 = d_231 >> 52;
  _234 = _232 << 4;
  _235 = _234 & 72057594037927920;
  u0_236 = tx_222 | _235;
  _238 = u0_236 w* 4294968273;
  c_239 = c_224 + _238;
  _240 = (long unsigned int) c_239;
  _241 = _240 & 4503599627370495;
  c_242 = c_239 >> 52;
  _243 = _190 w* _31;
  _245 = _33 w* a4_208;
  _246 = _35 w* _35;
  _247 = _245 + _246;
  d_248 = d_233 + _247;
  _249 = d_248 & 4503599627370495;
  _250 = _249 * 68719492368;
  _284 = _243 + _250;
  c_251 = c_242 + _284;
  d_252 = d_248 >> 52;
  _253 = (long unsigned int) c_251;
  _254 = _253 & 4503599627370495;
  c_255 = c_251 >> 52;
  _256 = _190 w* _33;
  _257 = _31 w* _31;
  _258 = _256 + _257;
  _260 = _35 w* a4_208;
  d_261 = d_252 + _260;
  _262 = d_261 & 4503599627370495;
  _263 = _262 * 68719492368;
  _145 = _258 + _263;
  c_264 = _145 + c_255;
  d_265 = d_261 >> 52;
  _266 = (long unsigned int) c_264;
  _267 = _266 & 4503599627370495;
  c_268 = c_264 >> 52;
  _269 = d_265 * 68719492368;
  _270 = (__int128 unsigned) t3_206;
  _271 = _269 + _270;
  c_272 = c_268 + _271;
  _273 = (long unsigned int) c_272;
  _274 = _273 & 4503599627370495;
  c_275 = c_272 >> 52;
  _276 = (__int128 unsigned) t4_223;
  c_277 = c_275 + _276;
  _278 = (long unsigned int) c_277;
  secp256k1_fe_sqr_inner (&t3.n, _13);
  _38 = t3.n[0];
  _39 = _38 * 2;
  t3.n[0] = _39;
  _40 = t3.n[1];
  _41 = _40 * 2;
  t3.n[1] = _41;
  _42 = t3.n[2];
  _43 = _42 * 2;
  t3.n[2] = _43;
  _44 = t3.n[3];
  _45 = _44 * 2;
  t3.n[3] = _45;
  _46 = t3.n[4];
  _47 = _46 * 2;
  t3.n[4] = _47;
  secp256k1_fe_sqr_inner (&t4.n, &t3.n);
  _48 = t4.n[0];
  _49 = _48 * 2;
  t4.n[0] = _49;
  _50 = t4.n[1];
  _51 = _50 * 2;
  t4.n[1] = _51;
  _52 = t4.n[2];
  _53 = _52 * 2;
  t4.n[2] = _53;
  _54 = t4.n[3];
  _55 = _54 * 2;
  t4.n[3] = _55;
  _56 = t4.n[4];
  _57 = _56 * 2;
  t4.n[4] = _57;
  secp256k1_fe_mul_inner (&t3.n, &t3.n, _27);
  r_15(D)->x = t3;
  _58 = MEM[(struct secp256k1_fe *)r_15(D)].n[0];
  _59 = _58 * 4;
  _60 = MEM[(struct secp256k1_fe *)r_15(D)].n[1];
  _61 = _60 * 4;
  _62 = MEM[(struct secp256k1_fe *)r_15(D)].n[2];
  _63 = _62 * 4;
  _64 = MEM[(struct secp256k1_fe *)r_15(D)].n[3];
  _65 = _64 * 4;
  _66 = MEM[(struct secp256k1_fe *)r_15(D)].n[4];
  _67 = _66 * 4;
  _68 = 45035953324022230 - _59;
  _69 = 45035996273704950 - _61;
  _70 = 45035996273704950 - _63;
  _71 = 45035996273704950 - _65;
  _72 = 2814749767106550 - _67;
  _74 = _68 + _241;
  MEM[(struct secp256k1_fe *)r_15(D)].n[0] = _74;
  _76 = _69 + _254;
  MEM[(struct secp256k1_fe *)r_15(D)].n[1] = _76;
  _78 = _70 + _267;
  MEM[(struct secp256k1_fe *)r_15(D)].n[2] = _78;
  _80 = _71 + _274;
  MEM[(struct secp256k1_fe *)r_15(D)].n[3] = _80;
  _82 = _72 + _278;
  MEM[(struct secp256k1_fe *)r_15(D)].n[4] = _82;
  _88 = t3.n[0];
  _89 = _88 * 6;
  _81 = _89 + 18014381329608892;
  _90 = t3.n[1];
  _91 = _90 * 6;
  _79 = _91 + 18014398509481980;
  _92 = t3.n[2];
  _93 = _92 * 6;
  _77 = _93 + 18014398509481980;
  _94 = t3.n[3];
  _95 = _94 * 6;
  _75 = _95 + 18014398509481980;
  _96 = t3.n[4];
  _97 = _96 * 6;
  _73 = _97 + 1125899906842620;
  _98 = _81 - _241;
  t3.n[0] = _98;
  _99 = _79 - _254;
  t3.n[1] = _99;
  _100 = _77 - _267;
  t3.n[2] = _100;
  _101 = _75 - _274;
  t3.n[3] = _101;
  _102 = _73 - _278;
  t3.n[4] = _102;
  _103 = &MEM[(struct secp256k1_fe *)r_15(D) + 40B].n;
  secp256k1_fe_mul_inner (_103, &t1.n, &t3.n);
  vect__104.343_279 = MEM[(long unsigned int *)&t4];
  vect__104.344_281 = MEM[(long unsigned int *)&t4 + 16B];
  vect__105.345_166 = { 27021571994413338, 27021597764222970 } - vect__104.343_279;
  vect__105.345_167 = { 27021597764222970, 27021597764222970 } - vect__104.344_281;
  _112 = t4.n[4];
  _113 = 1688849860263930 - _112;
  vect__114.348_169 = MEM[(long unsigned int *)r_15(D) + 40B];
  vect__114.349_186 = MEM[(long unsigned int *)r_15(D) + 56B];
  vect__115.350_188 = vect__105.345_166 + vect__114.348_169;
  vect__115.350_189 = vect__105.345_167 + vect__114.349_186;
  MEM[(long unsigned int *)r_15(D) + 40B] = vect__115.350_188;
  MEM[(long unsigned int *)r_15(D) + 56B] = vect__115.350_189;
  _122 = MEM[(struct secp256k1_fe *)r_15(D) + 40B].n[4];
  _123 = _113 + _122;
  MEM[(struct secp256k1_fe *)r_15(D) + 40B].n[4] = _123;
  t1 ={v} {CLOBBER};
  t3 ={v} {CLOBBER};
  t4 ={v} {CLOBBER};
  return;

}



;; Function secp256k1_fe_normalizes_to_zero (secp256k1_fe_normalizes_to_zero, funcdef_no=86, decl_uid=4299, cgraph_uid=86, symbol_order=86)

__attribute__((used))
secp256k1_fe_normalizes_to_zero (struct secp256k1_fe * r)
{
  uint64_t x;
  uint64_t z1;
  uint64_t z0;
  uint64_t t4;
  uint64_t t3;
  uint64_t t2;
  uint64_t t1;
  uint64_t t0;
  long long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long long unsigned int _6;
  long unsigned int _7;
  _Bool _8;
  _Bool _9;
  _Bool _10;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _35;
  int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _44;

  <bb 2> [local count: 1073741825]:
  t0_13 = r_12(D)->n[0];
  t1_14 = r_12(D)->n[1];
  t2_15 = r_12(D)->n[2];
  t3_16 = r_12(D)->n[3];
  t4_17 = r_12(D)->n[4];
  x_18 = t4_17 >> 48;
  t4_19 = t4_17 & 281474976710655;
  _1 = x_18 * 4294968273;
  t0_20 = _1 + t0_13;
  _2 = t0_20 >> 52;
  t1_21 = _2 + t1_14;
  t0_22 = t0_20 & 4503599627370495;
  z1_23 = t0_22 ^ 4294968272;
  _3 = t1_21 >> 52;
  t2_24 = _3 + t2_15;
  _7 = t0_20 | t1_21;
  _4 = t2_24 >> 52;
  t3_27 = _4 + t3_16;
  _37 = _7 | t2_24;
  _35 = t1_21 & z1_23;
  _5 = t3_27 >> 52;
  t4_30 = _5 + t4_19;
  _38 = t3_27 | _37;
  z0_32 = _38 & 4503599627370495;
  z0_34 = t4_30 | z0_32;
  _6 = t4_30 ^ 4222124650659840;
  _25 = t2_24 & _35;
  _26 = _25 & t3_27;
  _44 = _6 & _26;
  _8 = z0_34 == 0;
  _9 = _44 == 4503599627370495;
  _10 = _8 | _9;
  _36 = (int) _10;
  return _36;

}



;; Function secp256k1_gej_add_ge (secp256k1_gej_add_ge, funcdef_no=164, decl_uid=4768, cgraph_uid=164, symbol_order=166)

secp256k1_gej_add_ge (struct secp256k1_gej * r, const struct secp256k1_gej * a, const struct secp256k1_ge * b)
{
  vector(2) long unsigned int vect__399.373;
  vector(2) long unsigned int vect__398.372;
  const vector(2) long unsigned int vect__397.371;
  const vector(2) long unsigned int vect__397.370;
  vector(2) long unsigned int vect__394.367;
  vector(2) long unsigned int vect__396.366;
  vector(2) long unsigned int vect__395.365;
  vector(2) long unsigned int vect__395.364;
  vector(2) long unsigned int vect_mask0_393.361;
  vector(2) long unsigned int vect__392.360;
  vector(2) long long unsigned int vect__184.357;
  const vector(2) long unsigned int vect__183.356;
  const vector(2) long unsigned int vect__183.355;
  uint64_t mask0;
  uint64_t mask0;
  uint64_t mask0;
  int degenerate;
  int infinity;
  struct secp256k1_fe rr_alt;
  struct secp256k1_fe m_alt;
  struct secp256k1_fe rr;
  struct secp256k1_fe q;
  struct secp256k1_fe n;
  struct secp256k1_fe m;
  struct secp256k1_fe tt;
  struct secp256k1_fe t;
  struct secp256k1_fe s2;
  struct secp256k1_fe s1;
  struct secp256k1_fe u2;
  struct secp256k1_fe u1;
  struct secp256k1_fe zz;
  int _1;
  int _2;
  _Bool _3;
  int _6;
  int _7;
  int _8;
  struct secp256k1_fe * _9;
  vector(4) int _10;
  int _11;
  long unsigned int _25;
  long unsigned int _32;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _69;
  long unsigned int _70;
  long unsigned int _71;
  long long unsigned int _72;
  long long unsigned int _73;
  long long unsigned int _74;
  long long unsigned int _75;
  long long unsigned int _76;
  long unsigned int _77;
  long unsigned int _78;
  long unsigned int _79;
  long unsigned int _80;
  long unsigned int _81;
  long unsigned int _82;
  long unsigned int _83;
  long unsigned int _84;
  long unsigned int _85;
  long unsigned int _86;
  long unsigned int _87;
  long unsigned int _88;
  long unsigned int _89;
  long unsigned int _90;
  long unsigned int _91;
  long unsigned int _92;
  long unsigned int _93;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int _96;
  long unsigned int _97;
  long unsigned int _98;
  long unsigned int _99;
  long unsigned int _100;
  long unsigned int _101;
  long unsigned int _102;
  long unsigned int _103;
  long unsigned int _104;
  long unsigned int _105;
  long unsigned int _106;
  long unsigned int _107;
  long unsigned int _108;
  long unsigned int _109;
  long unsigned int _110;
  long unsigned int _111;
  long unsigned int _112;
  long unsigned int _113;
  long unsigned int _114;
  long unsigned int _115;
  long unsigned int _116;
  long unsigned int _117;
  long unsigned int _118;
  long unsigned int _119;
  long unsigned int _120;
  long unsigned int _121;
  long unsigned int _122;
  long long unsigned int _123;
  long unsigned int _124;
  long long unsigned int _125;
  long unsigned int _126;
  long long unsigned int _127;
  long unsigned int _128;
  long long unsigned int _129;
  long unsigned int _130;
  long long unsigned int _131;
  long unsigned int _132;
  long unsigned int _133;
  long unsigned int _134;
  long unsigned int _135;
  long unsigned int _136;
  long unsigned int _137;
  long unsigned int _138;
  long unsigned int _139;
  long unsigned int _140;
  long unsigned int _141;
  uint64_t[5] * _142;
  long unsigned int _143;
  long unsigned int _144;
  long unsigned int _145;
  long unsigned int _146;
  long unsigned int _147;
  long unsigned int _148;
  long unsigned int _149;
  long unsigned int _150;
  long unsigned int _151;
  long unsigned int _152;
  long unsigned int _153;
  long unsigned int _154;
  long unsigned int _155;
  long unsigned int _156;
  long unsigned int _157;
  long unsigned int _158;
  long unsigned int _159;
  long unsigned int _160;
  long unsigned int _161;
  long unsigned int _162;
  long unsigned int _163;
  long unsigned int _164;
  long unsigned int _165;
  long unsigned int _166;
  long unsigned int _167;
  long unsigned int _168;
  long unsigned int _169;
  long unsigned int _170;
  long unsigned int _171;
  long unsigned int _172;
  long unsigned int _173;
  long unsigned int _174;
  long unsigned int _175;
  long unsigned int _176;
  long unsigned int _177;
  long unsigned int _178;
  long unsigned int _179;
  long unsigned int _180;
  long unsigned int _181;
  long unsigned int _182;
  long unsigned int _191;
  long long unsigned int _192;
  long unsigned int _193;
  long unsigned int _194;
  long unsigned int _195;
  long unsigned int _196;
  long unsigned int _197;
  long unsigned int _198;
  long unsigned int _199;
  long unsigned int _200;
  long unsigned int _201;
  long unsigned int _202;
  long unsigned int _203;
  long unsigned int _204;
  long unsigned int _205;
  long unsigned int _206;
  long unsigned int _207;
  long unsigned int _208;
  long unsigned int _209;
  long unsigned int _210;
  long unsigned int _211;
  long unsigned int _212;
  long unsigned int _213;
  long unsigned int _214;
  long unsigned int _215;
  long unsigned int _216;
  long unsigned int _217;
  long unsigned int _218;
  long unsigned int _219;
  long unsigned int _220;
  long unsigned int _221;
  long unsigned int _222;
  const uint64_t[5] * _223;
  const uint64_t[5] * _224;
  const uint64_t[5] * _225;
  long unsigned int _311;
  long unsigned int _312;
  long unsigned int _314;
  long unsigned int _315;
  long unsigned int _316;
  long unsigned int _317;
  long unsigned int _321;
  long unsigned int _322;
  long unsigned int _326;
  long unsigned int _327;
  long unsigned int _331;
  long unsigned int _332;
  long unsigned int _340;
  long unsigned int _341;
  long unsigned int _342;
  long unsigned int _343;
  long unsigned int _345;
  long unsigned int _346;
  long unsigned int _347;
  long unsigned int _348;
  long unsigned int _350;
  long unsigned int _351;
  long unsigned int _352;
  long unsigned int _353;
  long unsigned int _355;
  long unsigned int _356;
  long unsigned int _357;
  long unsigned int _358;
  long unsigned int _360;
  long unsigned int _361;
  long unsigned int _362;
  long unsigned int _363;
  long unsigned int _364;
  long unsigned int _366;
  long unsigned int _368;
  long unsigned int _369;
  long unsigned int _370;
  long unsigned int _371;
  long unsigned int _373;
  long unsigned int _374;
  long unsigned int _375;
  long unsigned int _376;
  long unsigned int _378;
  long unsigned int _379;
  long unsigned int _380;
  long unsigned int _381;
  long unsigned int _383;
  long unsigned int _384;
  long unsigned int _385;
  long unsigned int _386;
  long unsigned int _388;
  long unsigned int _389;
  long unsigned int _390;
  long unsigned int _391;
  long unsigned int _392;
  long unsigned int _394;
  long unsigned int _415;
  long unsigned int _416;
  long unsigned int _417;
  long unsigned int _418;
  long unsigned int _419;
  long unsigned int _424;
  long unsigned int _425;
  long unsigned int _426;
  long unsigned int _427;
  long unsigned int _429;
  long unsigned int _430;
  long unsigned int _431;
  long unsigned int _432;
  long unsigned int _434;
  long unsigned int _435;
  long unsigned int _436;
  long unsigned int _437;
  long unsigned int _439;
  long unsigned int _440;
  long unsigned int _441;
  long unsigned int _442;
  long unsigned int _444;
  long unsigned int _445;
  long unsigned int _446;
  long unsigned int _447;
  long unsigned int _448;
  long unsigned int _450;
  long unsigned int _452;
  long unsigned int _454;
  long unsigned int _455;
  long unsigned int _457;
  long unsigned int _459;
  long unsigned int _460;
  long unsigned int _462;
  long unsigned int _464;
  long unsigned int _465;
  long unsigned int _467;
  long unsigned int _469;
  long unsigned int _470;
  long unsigned int _472;
  long unsigned int _474;
  long unsigned int _475;

  <bb 2> [local count: 1073741825]:
  _225 = &MEM[(const struct secp256k1_fe *)a_18(D) + 80B].n;
  secp256k1_fe_sqr_inner (&zz.n, _225);
  u1 = a_18(D)->x;
  secp256k1_fe_normalize_weak (&u1);
  _224 = &MEM[(const struct secp256k1_fe *)b_17(D)].n;
  secp256k1_fe_mul_inner (&u2.n, _224, &zz.n);
  s1 = a_18(D)->y;
  secp256k1_fe_normalize_weak (&s1);
  _223 = &MEM[(const struct secp256k1_fe *)b_17(D) + 40B].n;
  secp256k1_fe_mul_inner (&s2.n, _223, &zz.n);
  secp256k1_fe_mul_inner (&s2.n, &s2.n, _225);
  t = u1;
  _208 = t.n[0];
  _209 = u2.n[0];
  _210 = _208 + _209;
  t.n[0] = _210;
  _211 = t.n[1];
  _212 = u2.n[1];
  _213 = _211 + _212;
  t.n[1] = _213;
  _214 = t.n[2];
  _215 = u2.n[2];
  _216 = _214 + _215;
  t.n[2] = _216;
  _217 = t.n[3];
  _218 = u2.n[3];
  _219 = _217 + _218;
  t.n[3] = _219;
  _220 = t.n[4];
  _221 = u2.n[4];
  _222 = _220 + _221;
  t.n[4] = _222;
  m = s1;
  _193 = m.n[0];
  _194 = s2.n[0];
  _195 = _193 + _194;
  m.n[0] = _195;
  _196 = m.n[1];
  _197 = s2.n[1];
  _198 = _196 + _197;
  m.n[1] = _198;
  _199 = m.n[2];
  _200 = s2.n[2];
  _201 = _199 + _200;
  m.n[2] = _201;
  _202 = m.n[3];
  _203 = s2.n[3];
  _204 = _202 + _203;
  m.n[3] = _204;
  _205 = m.n[4];
  _206 = s2.n[4];
  _207 = _205 + _206;
  m.n[4] = _207;
  secp256k1_fe_sqr_inner (&rr.n, &t.n);
  vect__183.355_252 = MEM[(long unsigned int *)&u2];
  vect__183.356_254 = MEM[(long unsigned int *)&u2 + 16B];
  vect__184.357_258 = { 18014381329608892, 18014398509481980 } - vect__183.355_252;
  vect__184.357_259 = { 18014398509481980, 18014398509481980 } - vect__183.356_254;
  MEM[(long unsigned int *)&m_alt] = vect__184.357_258;
  MEM[(long unsigned int *)&m_alt + 16B] = vect__184.357_259;
  _191 = u2.n[4];
  _192 = 1125899906842620 - _191;
  m_alt.n[4] = _192;
  secp256k1_fe_mul_inner (&tt.n, &u1.n, &m_alt.n);
  _168 = rr.n[0];
  _169 = tt.n[0];
  _170 = _168 + _169;
  rr.n[0] = _170;
  _171 = rr.n[1];
  _172 = tt.n[1];
  _173 = _171 + _172;
  rr.n[1] = _173;
  _174 = rr.n[2];
  _175 = tt.n[2];
  _176 = _174 + _175;
  rr.n[2] = _176;
  _177 = rr.n[3];
  _178 = tt.n[3];
  _179 = _177 + _178;
  rr.n[3] = _179;
  _180 = rr.n[4];
  _181 = tt.n[4];
  _182 = _180 + _181;
  rr.n[4] = _182;
  _1 = secp256k1_fe_normalizes_to_zero (&m);
  _2 = secp256k1_fe_normalizes_to_zero (&rr);
  degenerate_26 = _1 & _2;
  rr_alt = s1;
  _158 = rr_alt.n[0];
  _159 = _158 * 2;
  _160 = rr_alt.n[1];
  _161 = _160 * 2;
  _162 = rr_alt.n[2];
  _163 = _162 * 2;
  _164 = rr_alt.n[3];
  _165 = _164 * 2;
  _166 = rr_alt.n[4];
  _167 = _166 * 2;
  _143 = m_alt.n[0];
  _144 = u1.n[0];
  _145 = _143 + _144;
  _146 = m_alt.n[1];
  _147 = u1.n[1];
  _148 = _146 + _147;
  _149 = m_alt.n[2];
  _150 = u1.n[2];
  _151 = _149 + _150;
  _152 = m_alt.n[3];
  _153 = u1.n[3];
  _154 = _152 + _153;
  _155 = m_alt.n[4];
  _156 = u1.n[4];
  _157 = _155 + _156;
  _3 = degenerate_26 == 0;
  _448 = (long unsigned int) _3;
  mask0_449 = _448 + 18446744073709551615;
  _450 = -_448;
  _452 = _159 & mask0_449;
  _454 = _170 & _450;
  _455 = _452 | _454;
  rr_alt.n[0] = _455;
  _457 = _161 & mask0_449;
  _459 = _173 & _450;
  _460 = _457 | _459;
  rr_alt.n[1] = _460;
  _462 = _163 & mask0_449;
  _464 = _176 & _450;
  _465 = _462 | _464;
  rr_alt.n[2] = _465;
  _467 = _165 & mask0_449;
  _469 = _179 & _450;
  _470 = _467 | _469;
  rr_alt.n[3] = _470;
  _472 = _167 & mask0_449;
  _474 = _182 & _450;
  _475 = _472 | _474;
  rr_alt.n[4] = _475;
  _424 = _145 & mask0_449;
  _425 = m.n[0];
  _426 = _425 & _450;
  _427 = _424 | _426;
  m_alt.n[0] = _427;
  _429 = _148 & mask0_449;
  _430 = m.n[1];
  _431 = _430 & _450;
  _432 = _429 | _431;
  m_alt.n[1] = _432;
  _434 = _151 & mask0_449;
  _435 = m.n[2];
  _436 = _435 & _450;
  _437 = _434 | _436;
  m_alt.n[2] = _437;
  _439 = _154 & mask0_449;
  _440 = m.n[3];
  _441 = _440 & _450;
  _442 = _439 | _441;
  m_alt.n[3] = _442;
  _444 = _157 & mask0_449;
  _445 = m.n[4];
  _446 = _445 & _450;
  _447 = _444 | _446;
  m_alt.n[4] = _447;
  secp256k1_fe_sqr_inner (&n.n, &m_alt.n);
  secp256k1_fe_mul_inner (&q.n, &n.n, &t.n);
  secp256k1_fe_sqr_inner (&n.n, &n.n);
  _10 = {degenerate_26, degenerate_26, degenerate_26, degenerate_26};
  vect__392.360_456 = [vec_unpack_lo_expr] _10;
  vect__392.360_453 = [vec_unpack_hi_expr] _10;
  _392 = (long unsigned int) degenerate_26;
  vect_mask0_393.361_463 = vect__392.360_456 + { 18446744073709551615, 18446744073709551615 };
  vect_mask0_393.361_466 = vect__392.360_453 + { 18446744073709551615, 18446744073709551615 };
  mask0_393 = _392 + 18446744073709551615;
  vect__394.367_423 = -vect__392.360_456;
  vect__394.367_428 = -vect__392.360_453;
  _394 = -_392;
  vect__395.364_468 = MEM[(long unsigned int *)&n];
  vect__395.365_473 = MEM[(long unsigned int *)&n + 16B];
  vect__396.366_421 = vect_mask0_393.361_463 & vect__395.364_468;
  vect__396.366_422 = vect_mask0_393.361_466 & vect__395.365_473;
  vect__397.370_433 = MEM[(long unsigned int *)&m];
  vect__397.371_443 = MEM[(long unsigned int *)&m + 16B];
  vect__398.372_367 = vect__394.367_423 & vect__397.370_433;
  vect__398.372_372 = vect__394.367_428 & vect__397.371_443;
  vect__399.373_377 = vect__398.372_367 | vect__396.366_421;
  vect__399.373_382 = vect__398.372_372 | vect__396.366_422;
  MEM[(long unsigned int *)&n] = vect__399.373_377;
  MEM[(long unsigned int *)&n + 16B] = vect__399.373_382;
  _415 = n.n[4];
  _416 = mask0_393 & _415;
  _417 = m.n[4];
  _418 = _394 & _417;
  _419 = _416 | _418;
  n.n[4] = _419;
  secp256k1_fe_sqr_inner (&t.n, &rr_alt.n);
  _142 = &MEM[(struct secp256k1_fe *)r_31(D) + 80B].n;
  secp256k1_fe_mul_inner (_142, _225, &m_alt.n);
  _6 = secp256k1_fe_normalizes_to_zero (_142);
  _7 = a_18(D)->infinity;
  _8 = 1 - _7;
  infinity_33 = _6 * _8;
  _132 = MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[0];
  _133 = _132 * 2;
  MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[0] = _133;
  _134 = MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[1];
  _135 = _134 * 2;
  MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[1] = _135;
  _136 = MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[2];
  _137 = _136 * 2;
  MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[2] = _137;
  _138 = MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[3];
  _139 = _138 * 2;
  MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[3] = _139;
  _140 = MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[4];
  _141 = _140 * 2;
  MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[4] = _141;
  _122 = q.n[0];
  _123 = 18014381329608892 - _122;
  q.n[0] = _123;
  _124 = q.n[1];
  _125 = 18014398509481980 - _124;
  q.n[1] = _125;
  _126 = q.n[2];
  _127 = 18014398509481980 - _126;
  q.n[2] = _127;
  _128 = q.n[3];
  _129 = 18014398509481980 - _128;
  q.n[3] = _129;
  _130 = q.n[4];
  _131 = 1125899906842620 - _130;
  q.n[4] = _131;
  _112 = t.n[0];
  _113 = _112 + _123;
  t.n[0] = _113;
  _114 = t.n[1];
  _115 = _114 + _125;
  t.n[1] = _115;
  _116 = t.n[2];
  _117 = _116 + _127;
  t.n[2] = _117;
  _118 = t.n[3];
  _119 = _118 + _129;
  t.n[3] = _119;
  _120 = t.n[4];
  _121 = _120 + _131;
  t.n[4] = _121;
  secp256k1_fe_normalize_weak (&t);
  r_31(D)->x = t;
  _102 = t.n[0];
  _103 = _102 * 2;
  _104 = t.n[1];
  _105 = _104 * 2;
  _106 = t.n[2];
  _107 = _106 * 2;
  _108 = t.n[3];
  _109 = _108 * 2;
  _110 = t.n[4];
  _111 = _110 * 2;
  _92 = q.n[0];
  _93 = _92 + _103;
  t.n[0] = _93;
  _94 = q.n[1];
  _95 = _94 + _105;
  t.n[1] = _95;
  _96 = q.n[2];
  _97 = _96 + _107;
  t.n[2] = _97;
  _98 = q.n[3];
  _99 = _98 + _109;
  t.n[3] = _99;
  _100 = q.n[4];
  _101 = _100 + _111;
  t.n[4] = _101;
  secp256k1_fe_mul_inner (&t.n, &t.n, &rr_alt.n);
  _77 = t.n[0];
  _78 = n.n[0];
  _79 = _77 + _78;
  t.n[0] = _79;
  _80 = t.n[1];
  _81 = n.n[1];
  _82 = _80 + _81;
  t.n[1] = _82;
  _83 = t.n[2];
  _84 = n.n[2];
  _85 = _83 + _84;
  t.n[2] = _85;
  _86 = t.n[3];
  _87 = n.n[3];
  _88 = _86 + _87;
  t.n[3] = _88;
  _89 = t.n[4];
  _90 = n.n[4];
  _91 = _89 + _90;
  t.n[4] = _91;
  _9 = &r_31(D)->y;
  _72 = 36028762659217784 - _79;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[0] = _72;
  _73 = 36028797018963960 - _82;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[1] = _73;
  _74 = 36028797018963960 - _85;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[2] = _74;
  _75 = 36028797018963960 - _88;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[3] = _75;
  _76 = 2251799813685240 - _91;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[4] = _76;
  secp256k1_fe_normalize_weak (_9);
  _62 = MEM[(struct secp256k1_fe *)r_31(D)].n[0];
  _63 = _62 * 4;
  MEM[(struct secp256k1_fe *)r_31(D)].n[0] = _63;
  _64 = MEM[(struct secp256k1_fe *)r_31(D)].n[1];
  _65 = _64 * 4;
  MEM[(struct secp256k1_fe *)r_31(D)].n[1] = _65;
  _66 = MEM[(struct secp256k1_fe *)r_31(D)].n[2];
  _67 = _66 * 4;
  MEM[(struct secp256k1_fe *)r_31(D)].n[2] = _67;
  _68 = MEM[(struct secp256k1_fe *)r_31(D)].n[3];
  _69 = _68 * 4;
  MEM[(struct secp256k1_fe *)r_31(D)].n[3] = _69;
  _70 = MEM[(struct secp256k1_fe *)r_31(D)].n[4];
  _71 = _70 * 4;
  MEM[(struct secp256k1_fe *)r_31(D)].n[4] = _71;
  _32 = MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[0];
  _25 = _32 * 4;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[0] = _25;
  _54 = MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[1];
  _55 = _54 * 4;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[1] = _55;
  _56 = MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[2];
  _57 = _56 * 4;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[2] = _57;
  _58 = MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[3];
  _59 = _58 * 4;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[3] = _59;
  _60 = MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[4];
  _61 = _60 * 4;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[4] = _61;
  _11 = a_18(D)->infinity;
  _364 = (long unsigned int) _11;
  mask0_365 = _364 + 18446744073709551615;
  _366 = -_364;
  _368 = _63 & mask0_365;
  _369 = MEM[(const struct secp256k1_fe *)b_17(D)].n[0];
  _370 = _366 & _369;
  _371 = _368 | _370;
  MEM[(struct secp256k1_fe *)r_31(D)].n[0] = _371;
  _373 = _65 & mask0_365;
  _374 = MEM[(const struct secp256k1_fe *)b_17(D)].n[1];
  _375 = _366 & _374;
  _376 = _373 | _375;
  MEM[(struct secp256k1_fe *)r_31(D)].n[1] = _376;
  _378 = _67 & mask0_365;
  _379 = MEM[(const struct secp256k1_fe *)b_17(D)].n[2];
  _380 = _366 & _379;
  _381 = _378 | _380;
  MEM[(struct secp256k1_fe *)r_31(D)].n[2] = _381;
  _383 = _69 & mask0_365;
  _384 = MEM[(const struct secp256k1_fe *)b_17(D)].n[3];
  _385 = _366 & _384;
  _386 = _383 | _385;
  MEM[(struct secp256k1_fe *)r_31(D)].n[3] = _386;
  _388 = _71 & mask0_365;
  _389 = MEM[(const struct secp256k1_fe *)b_17(D)].n[4];
  _390 = _366 & _389;
  _391 = _388 | _390;
  MEM[(struct secp256k1_fe *)r_31(D)].n[4] = _391;
  _340 = _25 & mask0_365;
  _341 = MEM[(const struct secp256k1_fe *)b_17(D) + 40B].n[0];
  _342 = _341 & _366;
  _343 = _340 | _342;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[0] = _343;
  _345 = _55 & mask0_365;
  _346 = MEM[(const struct secp256k1_fe *)b_17(D) + 40B].n[1];
  _347 = _346 & _366;
  _348 = _345 | _347;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[1] = _348;
  _350 = _57 & mask0_365;
  _351 = MEM[(const struct secp256k1_fe *)b_17(D) + 40B].n[2];
  _352 = _351 & _366;
  _353 = _350 | _352;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[2] = _353;
  _355 = _59 & mask0_365;
  _356 = MEM[(const struct secp256k1_fe *)b_17(D) + 40B].n[3];
  _357 = _356 & _366;
  _358 = _355 | _357;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[3] = _358;
  _360 = _61 & mask0_365;
  _361 = MEM[(const struct secp256k1_fe *)b_17(D) + 40B].n[4];
  _362 = _361 & _366;
  _363 = _360 | _362;
  MEM[(struct secp256k1_fe *)r_31(D) + 40B].n[4] = _363;
  _311 = MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[0];
  _312 = _311 & mask0_365;
  _314 = _366 & 1;
  _315 = _312 | _314;
  MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[0] = _315;
  _316 = MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[1];
  _317 = _316 & mask0_365;
  MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[1] = _317;
  _321 = MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[2];
  _322 = _321 & mask0_365;
  MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[2] = _322;
  _326 = MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[3];
  _327 = _326 & mask0_365;
  MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[3] = _327;
  _331 = MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[4];
  _332 = _331 & mask0_365;
  MEM[(struct secp256k1_fe *)r_31(D) + 80B].n[4] = _332;
  r_31(D)->infinity = infinity_33;
  zz ={v} {CLOBBER};
  u1 ={v} {CLOBBER};
  u2 ={v} {CLOBBER};
  s1 ={v} {CLOBBER};
  s2 ={v} {CLOBBER};
  t ={v} {CLOBBER};
  tt ={v} {CLOBBER};
  m ={v} {CLOBBER};
  n ={v} {CLOBBER};
  q ={v} {CLOBBER};
  rr ={v} {CLOBBER};
  m_alt ={v} {CLOBBER};
  rr_alt ={v} {CLOBBER};
  return;

}



;; Function secp256k1_fe_normalizes_to_zero_var (secp256k1_fe_normalizes_to_zero_var, funcdef_no=87, decl_uid=4301, cgraph_uid=87, symbol_order=87)

__attribute__((used))
secp256k1_fe_normalizes_to_zero_var (struct secp256k1_fe * r)
{
  uint64_t x;
  uint64_t z1;
  uint64_t z0;
  uint64_t t4;
  uint64_t t3;
  uint64_t t2;
  uint64_t t1;
  uint64_t t0;
  long long unsigned int _1;
  _Bool _2;
  _Bool _3;
  _Bool _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long long unsigned int _9;
  long unsigned int _10;
  _Bool _11;
  _Bool _12;
  _Bool _13;
  int _14;
  long unsigned int _23;
  long unsigned int _30;
  long unsigned int _40;
  int _41;
  long unsigned int _42;
  long unsigned int _45;
  long unsigned int _48;

  <bb 2> [local count: 1073741825]:
  t0_17 = r_16(D)->n[0];
  t4_18 = r_16(D)->n[4];
  x_19 = t4_18 >> 48;
  _1 = x_19 * 4294968273;
  t0_20 = _1 + t0_17;
  z0_21 = t0_20 & 4503599627370495;
  _2 = z0_21 != 0;
  _3 = z0_21 != 4503595332402223;
  _4 = _2 & _3;
  if (_4 != 0)
    goto <bb 4>; [34.00%]
  else
    goto <bb 3>; [66.00%]

  <bb 3> [local count: 708669604]:
  t1_24 = r_16(D)->n[1];
  t2_25 = r_16(D)->n[2];
  t3_26 = r_16(D)->n[3];
  t4_27 = t4_18 & 281474976710655;
  _5 = t0_20 >> 52;
  t1_28 = _5 + t1_24;
  _6 = t1_28 >> 52;
  t2_29 = _6 + t2_25;
  _10 = t0_20 | t1_28;
  _7 = t2_29 >> 52;
  t3_32 = _7 + t3_26;
  _23 = _10 | t2_29;
  z1_22 = z0_21 ^ 4294968272;
  _45 = z1_22 & t1_28;
  _8 = t3_32 >> 52;
  t4_35 = _8 + t4_27;
  _42 = _23 | t3_32;
  z0_37 = _42 & 4503599627370495;
  z0_39 = t4_35 | z0_37;
  _9 = t4_35 ^ 4222124650659840;
  _40 = t2_29 & _45;
  _30 = t3_32 & _40;
  _48 = _9 & _30;
  _11 = z0_39 == 0;
  _12 = _48 == 4503599627370495;
  _13 = _11 | _12;
  _41 = (int) _13;

  <bb 4> [local count: 1073741825]:
  # _14 = PHI <_41(3), 0(2)>
  return _14;

}



;; Function secp256k1_gej_add_ge_var (secp256k1_gej_add_ge_var, funcdef_no=162, decl_uid=4773, cgraph_uid=162, symbol_order=164)

secp256k1_gej_add_ge_var (struct secp256k1_gej * r, const struct secp256k1_gej * a, const struct secp256k1_ge * b, struct secp256k1_fe * rzr)
{
  vector(2) long unsigned int vect__93.415;
  vector(2) long long unsigned int vect__103.414;
  const vector(2) long unsigned int vect__102.413;
  const vector(2) long unsigned int vect__102.412;
  vector(2) long unsigned int vect__92.409;
  vector(2) long unsigned int vect__92.408;
  vector(2) long long unsigned int vect__50.399;
  const vector(2) long unsigned int vect__59.398;
  const vector(2) long unsigned int vect__59.397;
  const vector(2) long unsigned int vect__278.394;
  const vector(2) long unsigned int vect__49.393;
  const vector(2) long unsigned int vect__49.392;
  vector(2) long long unsigned int vect__70.387;
  const vector(2) long unsigned int vect__79.386;
  const vector(2) long unsigned int vect__79.385;
  const vector(2) long unsigned int vect__283.382;
  const vector(2) long unsigned int vect__69.381;
  const vector(2) long unsigned int vect__69.380;
  struct secp256k1_fe t;
  struct secp256k1_fe h3;
  struct secp256k1_fe h2;
  struct secp256k1_fe i2;
  struct secp256k1_fe i;
  struct secp256k1_fe h;
  struct secp256k1_fe s2;
  struct secp256k1_fe s1;
  struct secp256k1_fe u2;
  struct secp256k1_fe u1;
  struct secp256k1_fe z12;
  int _1;
  int _3;
  int _4;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _67;
  long unsigned int _77;
  long unsigned int _78;
  long unsigned int _87;
  const uint64_t[5] * _89;
  const uint64_t[5] * _90;
  const uint64_t[5] * _91;
  long unsigned int _100;
  long unsigned int _101;
  long unsigned int _110;
  long long unsigned int _111;
  const uint64_t[5] * _112;
  long unsigned int _113;
  long unsigned int _114;
  long unsigned int _115;
  long unsigned int _116;
  long unsigned int _117;
  long unsigned int _118;
  long unsigned int _119;
  long unsigned int _120;
  long unsigned int _121;
  long unsigned int _122;
  long unsigned int _128;
  long unsigned int _129;
  long unsigned int _130;
  long unsigned int _131;
  long unsigned int _132;
  long unsigned int _133;
  long unsigned int _134;
  long unsigned int _135;
  long unsigned int _136;
  long unsigned int _137;
  long unsigned int _143;
  long unsigned int _145;
  long unsigned int _147;
  long unsigned int _149;
  long unsigned int _151;
  long unsigned int _153;
  long unsigned int _154;
  long unsigned int _155;
  long unsigned int _156;
  long unsigned int _157;
  long unsigned int _158;
  long unsigned int _159;
  long unsigned int _160;
  long unsigned int _161;
  long unsigned int _162;
  uint64_t[5] * _163;
  int _218;
  int pretmp_234;
  long unsigned int _264;
  long long unsigned int _265;
  long unsigned int _266;
  long long unsigned int _267;
  long unsigned int _268;
  long long unsigned int _269;
  long unsigned int _270;
  long long unsigned int _271;
  long unsigned int _272;
  long long unsigned int _273;
  long long unsigned int _274;
  long long unsigned int _279;
  long long unsigned int _317;
  long unsigned int _318;
  long unsigned int _319;
  long long unsigned int _321;
  long unsigned int _322;
  long unsigned int _323;
  long long unsigned int _325;
  long unsigned int _326;
  long unsigned int _327;
  long long unsigned int _329;
  long unsigned int _330;
  long unsigned int _331;
  long long unsigned int _333;
  long unsigned int _334;
  long unsigned int _335;

  <bb 2> [local count: 1073741825]:
  _1 = a_12(D)->infinity;
  pretmp_234 = b_14(D)->infinity;
  if (_1 != 0)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  r_13(D)->infinity = pretmp_234;
  r_13(D)->x = b_14(D)->x;
  r_13(D)->y = b_14(D)->y;
  MEM[(struct secp256k1_fe *)r_13(D) + 80B].n[0] = 1;
  MEM[(struct secp256k1_fe *)r_13(D) + 80B].n[4] = 0;
  MEM[(struct secp256k1_fe *)r_13(D) + 80B].n[3] = 0;
  MEM[(struct secp256k1_fe *)r_13(D) + 80B].n[2] = 0;
  MEM[(struct secp256k1_fe *)r_13(D) + 80B].n[1] = 0;
  goto <bb 20>; [100.00%]

  <bb 4> [local count: 708669604]:
  if (pretmp_234 != 0)
    goto <bb 5>; [51.12%]
  else
    goto <bb 8>; [48.88%]

  <bb 5> [local count: 362271902]:
  if (rzr_15(D) != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 7>; [30.00%]

  <bb 6> [local count: 253590331]:
  rzr_15(D)->n[4] = 0;
  MEM[(long unsigned int *)rzr_15(D)] = { 1, 0 };
  MEM[(long unsigned int *)rzr_15(D) + 16B] = { 0, 0 };

  <bb 7> [local count: 362271902]:
  *r_13(D) = *a_12(D);
  goto <bb 20>; [100.00%]

  <bb 8> [local count: 346397702]:
  r_13(D)->infinity = 0;
  _91 = &MEM[(const struct secp256k1_fe *)a_12(D) + 80B].n;
  secp256k1_fe_sqr_inner (&z12.n, _91);
  u1 = a_12(D)->x;
  secp256k1_fe_normalize_weak (&u1);
  _90 = &MEM[(const struct secp256k1_fe *)b_14(D)].n;
  secp256k1_fe_mul_inner (&u2.n, _90, &z12.n);
  s1 = a_12(D)->y;
  secp256k1_fe_normalize_weak (&s1);
  _89 = &MEM[(const struct secp256k1_fe *)b_14(D) + 40B].n;
  secp256k1_fe_mul_inner (&s2.n, _89, &z12.n);
  secp256k1_fe_mul_inner (&s2.n, &s2.n, _91);
  vect__79.385_252 = MEM[(long unsigned int *)&u1];
  vect__79.386_254 = MEM[(long unsigned int *)&u1 + 16B];
  _87 = u1.n[4];
  vect__69.380_241 = MEM[(long unsigned int *)&u2];
  vect__69.381_244 = MEM[(long unsigned int *)&u2 + 16B];
  vect__283.382_250 = vect__69.380_241 + { 18014381329608892, 18014398509481980 };
  vect__283.382_251 = vect__69.381_244 + { 18014398509481980, 18014398509481980 };
  vect__70.387_256 = vect__283.382_250 - vect__79.385_252;
  vect__70.387_257 = vect__283.382_251 - vect__79.386_254;
  MEM[(long unsigned int *)&h] = vect__70.387_256;
  MEM[(long unsigned int *)&h + 16B] = vect__70.387_257;
  _77 = u2.n[4];
  _279 = _77 + 1125899906842620;
  _78 = _279 - _87;
  h.n[4] = _78;
  vect__59.397_236 = MEM[(long unsigned int *)&s1];
  vect__59.398_239 = MEM[(long unsigned int *)&s1 + 16B];
  _67 = s1.n[4];
  vect__49.392_84 = MEM[(long unsigned int *)&s2];
  vect__49.393_88 = MEM[(long unsigned int *)&s2 + 16B];
  vect__278.394_66 = vect__49.392_84 + { 18014381329608892, 18014398509481980 };
  vect__278.394_68 = vect__49.393_88 + { 18014398509481980, 18014398509481980 };
  vect__50.399_242 = vect__278.394_66 - vect__59.397_236;
  vect__50.399_148 = vect__278.394_68 - vect__59.398_239;
  MEM[(long unsigned int *)&i] = vect__50.399_242;
  MEM[(long unsigned int *)&i + 16B] = vect__50.399_148;
  _57 = s2.n[4];
  _274 = _57 + 1125899906842620;
  _58 = _274 - _67;
  i.n[4] = _58;
  _3 = secp256k1_fe_normalizes_to_zero_var (&h);
  if (_3 != 0)
    goto <bb 9>; [51.12%]
  else
    goto <bb 17>; [48.88%]

  <bb 9> [local count: 177078505]:
  _4 = secp256k1_fe_normalizes_to_zero_var (&i);
  if (_4 != 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 10> [local count: 58435907]:
  _218 = a_12(D)->infinity;
  r_13(D)->infinity = _218;
  if (_218 != 0)
    goto <bb 11>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 11> [local count: 19868208]:
  if (rzr_15(D) != 0B)
    goto <bb 12>; [70.00%]
  else
    goto <bb 20>; [30.00%]

  <bb 12> [local count: 13907746]:
  rzr_15(D)->n[4] = 0;
  MEM[(long unsigned int *)rzr_15(D)] = { 1, 0 };
  MEM[(long unsigned int *)rzr_15(D) + 16B] = { 0, 0 };
  goto <bb 20>; [100.00%]

  <bb 13> [local count: 38567698]:
  secp256k1_gej_double_var.part.14 (r_13(D), a_12(D), rzr_15(D));
  goto <bb 20>; [100.00%]

  <bb 14> [local count: 118642599]:
  if (rzr_15(D) != 0B)
    goto <bb 15>; [70.00%]
  else
    goto <bb 16>; [30.00%]

  <bb 15> [local count: 83049819]:
  rzr_15(D)->n[4] = 0;
  MEM[(long unsigned int *)rzr_15(D)] = { 0, 0 };
  MEM[(long unsigned int *)rzr_15(D) + 16B] = { 0, 0 };

  <bb 16> [local count: 118642599]:
  r_13(D)->infinity = 1;
  goto <bb 20>; [100.00%]

  <bb 17> [local count: 169319197]:
  secp256k1_fe_sqr_inner (&i2.n, &i.n);
  secp256k1_fe_sqr_inner (&h2.n, &h.n);
  secp256k1_fe_mul_inner (&h3.n, &h.n, &h2.n);
  if (rzr_15(D) != 0B)
    goto <bb 18>; [70.00%]
  else
    goto <bb 19>; [30.00%]

  <bb 18> [local count: 118523438]:
  *rzr_15(D) = h;

  <bb 19> [local count: 169319197]:
  _163 = &MEM[(struct secp256k1_fe *)r_13(D) + 80B].n;
  secp256k1_fe_mul_inner (_163, _91, &h.n);
  secp256k1_fe_mul_inner (&t.n, &u1.n, &h2.n);
  r_13(D)->x = t;
  _153 = MEM[(struct secp256k1_fe *)r_13(D)].n[0];
  _154 = _153 * 2;
  _155 = MEM[(struct secp256k1_fe *)r_13(D)].n[1];
  _156 = _155 * 2;
  _157 = MEM[(struct secp256k1_fe *)r_13(D)].n[2];
  _158 = _157 * 2;
  _159 = MEM[(struct secp256k1_fe *)r_13(D)].n[3];
  _160 = _159 * 2;
  _161 = MEM[(struct secp256k1_fe *)r_13(D)].n[4];
  _162 = _161 * 2;
  _143 = h3.n[0];
  _145 = h3.n[1];
  _147 = h3.n[2];
  _149 = h3.n[3];
  _151 = h3.n[4];
  _128 = i2.n[0];
  _272 = _128 + 36028762659217784;
  _273 = _272 - _143;
  _129 = _273 - _154;
  MEM[(struct secp256k1_fe *)r_13(D)].n[0] = _129;
  _130 = i2.n[1];
  _270 = _130 + 36028797018963960;
  _271 = _270 - _145;
  _131 = _271 - _156;
  MEM[(struct secp256k1_fe *)r_13(D)].n[1] = _131;
  _132 = i2.n[2];
  _268 = _132 + 36028797018963960;
  _269 = _268 - _147;
  _133 = _269 - _158;
  MEM[(struct secp256k1_fe *)r_13(D)].n[2] = _133;
  _134 = i2.n[3];
  _266 = _134 + 36028797018963960;
  _267 = _266 - _149;
  _135 = _267 - _160;
  MEM[(struct secp256k1_fe *)r_13(D)].n[3] = _135;
  _136 = i2.n[4];
  _264 = _136 + 2251799813685240;
  _265 = _264 - _151;
  _137 = _265 - _162;
  MEM[(struct secp256k1_fe *)r_13(D)].n[4] = _137;
  _113 = t.n[0];
  _333 = _113 + _143;
  _334 = _333 + 54043143988826676;
  _335 = _334 - _272;
  _114 = _154 + _335;
  MEM[(struct secp256k1_fe *)r_13(D) + 40B].n[0] = _114;
  _115 = t.n[1];
  _329 = _115 + _145;
  _330 = _329 + 54043195528445940;
  _331 = _330 - _270;
  _116 = _156 + _331;
  MEM[(struct secp256k1_fe *)r_13(D) + 40B].n[1] = _116;
  _117 = t.n[2];
  _325 = _117 + _147;
  _326 = _325 + 54043195528445940;
  _327 = _326 - _268;
  _118 = _158 + _327;
  MEM[(struct secp256k1_fe *)r_13(D) + 40B].n[2] = _118;
  _119 = t.n[3];
  _321 = _119 + _149;
  _322 = _321 + 54043195528445940;
  _323 = _322 - _266;
  _120 = _160 + _323;
  MEM[(struct secp256k1_fe *)r_13(D) + 40B].n[3] = _120;
  _121 = t.n[4];
  _317 = _121 + _151;
  _318 = _317 + 3377699720527860;
  _319 = _318 - _264;
  _122 = _162 + _319;
  MEM[(struct secp256k1_fe *)r_13(D) + 40B].n[4] = _122;
  _112 = &MEM[(const struct secp256k1_fe *)r_13(D) + 40B].n;
  secp256k1_fe_mul_inner (_112, _112, &i.n);
  secp256k1_fe_mul_inner (&h3.n, &h3.n, &s1.n);
  vect__102.412_290 = MEM[(long unsigned int *)&h3];
  vect__102.413_292 = MEM[(long unsigned int *)&h3 + 16B];
  vect__103.414_296 = { 18014381329608892, 18014398509481980 } - vect__102.412_290;
  vect__103.414_297 = { 18014398509481980, 18014398509481980 } - vect__102.413_292;
  _110 = h3.n[4];
  _111 = 1125899906842620 - _110;
  vect__92.408_286 = MEM[(long unsigned int *)r_13(D) + 40B];
  vect__92.409_288 = MEM[(long unsigned int *)r_13(D) + 56B];
  vect__93.415_298 = vect__92.408_286 + vect__103.414_296;
  vect__93.415_299 = vect__92.409_288 + vect__103.414_297;
  MEM[(long unsigned int *)r_13(D) + 40B] = vect__93.415_298;
  MEM[(long unsigned int *)r_13(D) + 56B] = vect__93.415_299;
  _100 = MEM[(struct secp256k1_fe *)r_13(D) + 40B].n[4];
  _101 = _100 + _111;
  MEM[(struct secp256k1_fe *)r_13(D) + 40B].n[4] = _101;
  z12 ={v} {CLOBBER};
  u1 ={v} {CLOBBER};
  u2 ={v} {CLOBBER};
  s1 ={v} {CLOBBER};
  s2 ={v} {CLOBBER};
  h ={v} {CLOBBER};
  i ={v} {CLOBBER};
  i2 ={v} {CLOBBER};
  h2 ={v} {CLOBBER};
  h3 ={v} {CLOBBER};
  t ={v} {CLOBBER};
  goto <bb 21>; [100.00%]

  <bb 20> [local count: 904422628]:
  z12 ={v} {CLOBBER};
  u1 ={v} {CLOBBER};
  u2 ={v} {CLOBBER};
  s1 ={v} {CLOBBER};
  s2 ={v} {CLOBBER};
  h ={v} {CLOBBER};
  i ={v} {CLOBBER};
  i2 ={v} {CLOBBER};
  h2 ={v} {CLOBBER};
  h3 ={v} {CLOBBER};
  t ={v} {CLOBBER};

  <bb 21> [local count: 1073741825]:
  return;

}



;; Function secp256k1_fe_negate (secp256k1_fe_negate, funcdef_no=95, decl_uid=4329, cgraph_uid=95, symbol_order=95)

__attribute__((used))
secp256k1_fe_negate (struct secp256k1_fe * r, const struct secp256k1_fe * a, int m)
{
  int _1;
  long long unsigned int _2;
  long long unsigned int _3;
  long unsigned int _4;
  long long unsigned int _5;
  long long unsigned int _6;
  long unsigned int _7;
  long long unsigned int _8;
  long unsigned int _9;
  long long unsigned int _10;
  long unsigned int _11;
  long long unsigned int _12;
  long long unsigned int _13;
  long unsigned int _14;
  long long unsigned int _15;

  <bb 2> [local count: 1073741825]:
  _1 = m_16(D) + 1;
  _2 = (long long unsigned int) _1;
  _3 = _2 * 9007190664804446;
  _4 = a_18(D)->n[0];
  _5 = _3 - _4;
  r_19(D)->n[0] = _5;
  _6 = _2 * 9007199254740990;
  _7 = a_18(D)->n[1];
  _8 = _6 - _7;
  r_19(D)->n[1] = _8;
  _9 = a_18(D)->n[2];
  _10 = _6 - _9;
  r_19(D)->n[2] = _10;
  _11 = a_18(D)->n[3];
  _12 = _6 - _11;
  r_19(D)->n[3] = _12;
  _13 = _2 * 562949953421310;
  _14 = a_18(D)->n[4];
  _15 = _13 - _14;
  r_19(D)->n[4] = _15;
  return;

}



;; Function secp256k1_fe_mul_int (secp256k1_fe_mul_int, funcdef_no=96, decl_uid=4332, cgraph_uid=96, symbol_order=96)

__attribute__((used))
secp256k1_fe_mul_int (struct secp256k1_fe * r, int a)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;

  <bb 2> [local count: 1073741825]:
  _1 = r_13(D)->n[0];
  _2 = (long unsigned int) a_14(D);
  _3 = _1 * _2;
  r_13(D)->n[0] = _3;
  _4 = r_13(D)->n[1];
  _5 = _2 * _4;
  r_13(D)->n[1] = _5;
  _6 = r_13(D)->n[2];
  _7 = _2 * _6;
  r_13(D)->n[2] = _7;
  _8 = r_13(D)->n[3];
  _9 = _2 * _8;
  r_13(D)->n[3] = _9;
  _10 = r_13(D)->n[4];
  _11 = _2 * _10;
  r_13(D)->n[4] = _11;
  return;

}



;; Function secp256k1_fe_add (secp256k1_fe_add, funcdef_no=97, decl_uid=4335, cgraph_uid=97, symbol_order=97)

__attribute__((used))
secp256k1_fe_add (struct secp256k1_fe * r, const struct secp256k1_fe * a)
{
  vector(2) long unsigned int vect__3.426;
  const vector(2) long unsigned int vect__2.425;
  const vector(2) long unsigned int vect__2.424;
  vector(2) long unsigned int vect__1.421;
  vector(2) long unsigned int vect__1.420;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;

  <bb 2> [local count: 1073741825]:
  vect__1.420_24 = MEM[(long unsigned int *)r_17(D)];
  vect__1.421_27 = MEM[(long unsigned int *)r_17(D) + 16B];
  vect__2.424_30 = MEM[(long unsigned int *)a_18(D)];
  vect__2.425_32 = MEM[(long unsigned int *)a_18(D) + 16B];
  vect__3.426_34 = vect__1.420_24 + vect__2.424_30;
  vect__3.426_35 = vect__1.421_27 + vect__2.425_32;
  MEM[(long unsigned int *)r_17(D)] = vect__3.426_34;
  MEM[(long unsigned int *)r_17(D) + 16B] = vect__3.426_35;
  _13 = r_17(D)->n[4];
  _14 = a_18(D)->n[4];
  _15 = _13 + _14;
  r_17(D)->n[4] = _15;
  return;

}



;; Function secp256k1_fe_mul (secp256k1_fe_mul, funcdef_no=98, decl_uid=4339, cgraph_uid=98, symbol_order=98)

__attribute__((used))
secp256k1_fe_mul (struct secp256k1_fe * r, const struct secp256k1_fe * a, const struct secp256k1_fe * restrict b)
{
  uint64_t a4;
  uint64_t a3;
  uint64_t a2;
  uint64_t a1;
  uint64_t a0;
  uint64_t u0;
  uint64_t tx;
  uint64_t t4;
  uint64_t t3;
  uint128_t d;
  uint128_t c;
  __int128 unsigned _1;
  __int128 unsigned _2;
  __int128 unsigned _3;
  __int128 unsigned _8;
  long unsigned int _15;
  __int128 unsigned _17;
  long unsigned int _19;
  __int128 unsigned _21;
  long unsigned int _24;
  __int128 unsigned _26;
  long unsigned int _28;
  __int128 unsigned _30;
  long unsigned int _34;
  __int128 unsigned _37;
  __int128 unsigned _38;
  long unsigned int _41;
  __int128 unsigned _44;
  __int128 unsigned _45;
  __int128 unsigned _47;
  __int128 unsigned _48;
  __int128 unsigned _51;
  __int128 unsigned _54;
  long unsigned int _56;
  long unsigned int _58;
  __int128 unsigned _62;
  __int128 unsigned _63;
  __int128 unsigned _65;
  __int128 unsigned _66;
  __int128 unsigned _68;
  long unsigned int _70;
  long unsigned int _72;
  long unsigned int _73;
  __int128 unsigned _76;
  long unsigned int _78;
  long unsigned int _79;
  __int128 unsigned _81;
  __int128 unsigned _82;
  __int128 unsigned _85;
  __int128 unsigned _86;
  __int128 unsigned _87;
  __int128 unsigned _88;
  __int128 unsigned _89;
  __int128 unsigned _91;
  __int128 unsigned _92;
  long unsigned int _95;
  long unsigned int _96;
  __int128 unsigned _98;
  __int128 unsigned _99;
  __int128 unsigned _101;
  __int128 unsigned _104;
  __int128 unsigned _105;
  __int128 unsigned _106;
  __int128 unsigned _108;
  __int128 unsigned _109;
  long unsigned int _112;
  long unsigned int _113;
  __int128 unsigned _115;
  __int128 unsigned _116;
  __int128 unsigned _117;
  long unsigned int _119;
  long unsigned int _120;
  __int128 unsigned _122;
  long unsigned int _124;
  __int128 unsigned _130;
  __int128 unsigned _132;
  __int128 unsigned _133;
  __int128 unsigned _135;
  __int128 unsigned _136;
  __int128 unsigned _137;
  __int128 unsigned _138;
  __int128 unsigned _139;
  __int128 unsigned _141;
  __int128 unsigned _142;

  <bb 2> [local count: 1073741825]:
  a0_9 = MEM[(const uint64_t *)a_5(D)];
  a1_10 = MEM[(const uint64_t *)a_5(D) + 8B];
  a2_11 = MEM[(const uint64_t *)a_5(D) + 16B];
  a3_12 = MEM[(const uint64_t *)a_5(D) + 24B];
  a4_13 = MEM[(const uint64_t *)a_5(D) + 32B];
  _15 = MEM[(const uint64_t *)b_4(D) + 24B];
  _17 = a0_9 w* _15;
  _19 = MEM[(const uint64_t *)b_4(D) + 16B];
  _21 = a1_10 w* _19;
  _141 = _17 + _21;
  _24 = MEM[(const uint64_t *)b_4(D)];
  _26 = a3_12 w* _24;
  _28 = MEM[(const uint64_t *)b_4(D) + 8B];
  _30 = a2_11 w* _28;
  _142 = _26 + _141;
  d_32 = _30 + _142;
  _34 = MEM[(const uint64_t *)b_4(D) + 32B];
  c_36 = a4_13 w* _34;
  _37 = c_36 & 4503599627370495;
  _38 = _37 * 68719492368;
  d_39 = d_32 + _38;
  c_40 = c_36 >> 52;
  _41 = (long unsigned int) d_39;
  t3_42 = _41 & 4503599627370495;
  d_43 = d_39 >> 52;
  _44 = a0_9 w* _34;
  _45 = _15 w* a1_10;
  _135 = _44 + _45;
  _47 = a3_12 w* _28;
  _48 = _19 w* a2_11;
  _136 = _47 + _135;
  _137 = _48 + _136;
  _51 = _24 w* a4_13;
  _138 = _51 + _137;
  _54 = c_40 * 68719492368;
  _139 = _54 + _138;
  d_55 = d_43 + _139;
  _56 = (long unsigned int) d_55;
  d_57 = d_55 >> 52;
  _58 = _56 >> 48;
  tx_59 = _58 & 15;
  t4_60 = _56 & 281474976710655;
  c_61 = a0_9 w* _24;
  _62 = a1_10 w* _34;
  _63 = _15 w* a2_11;
  _132 = _62 + _63;
  _65 = _28 w* a4_13;
  _66 = _19 w* a3_12;
  _133 = _65 + _132;
  _68 = _66 + _133;
  d_69 = d_57 + _68;
  _70 = (long unsigned int) d_69;
  d_71 = d_69 >> 52;
  _72 = _70 << 4;
  _73 = _72 & 72057594037927920;
  u0_74 = tx_59 | _73;
  _76 = u0_74 w* 4294968273;
  c_77 = c_61 + _76;
  _78 = (long unsigned int) c_77;
  _79 = _78 & 4503599627370495;
  MEM[(uint64_t *)r_6(D)] = _79;
  c_80 = c_77 >> 52;
  _81 = a0_9 w* _28;
  _82 = a1_10 w* _24;
  _1 = _81 + _82;
  _85 = a2_11 w* _34;
  _86 = _15 w* a3_12;
  _87 = _85 + _86;
  _88 = _19 w* a4_13;
  _89 = _87 + _88;
  d_90 = d_71 + _89;
  _91 = d_90 & 4503599627370495;
  _92 = _91 * 68719492368;
  _130 = _1 + _92;
  c_93 = c_80 + _130;
  d_94 = d_90 >> 52;
  _95 = (long unsigned int) c_93;
  _96 = _95 & 4503599627370495;
  MEM[(uint64_t *)r_6(D) + 8B] = _96;
  c_97 = c_93 >> 52;
  _98 = a0_9 w* _19;
  _99 = a1_10 w* _28;
  _3 = _98 + _99;
  _101 = _24 w* a2_11;
  _8 = _3 + _101;
  _104 = a3_12 w* _34;
  _105 = _15 w* a4_13;
  _106 = _104 + _105;
  d_107 = d_94 + _106;
  _108 = d_107 & 4503599627370495;
  _109 = _108 * 68719492368;
  _2 = _8 + _109;
  c_110 = _2 + c_97;
  d_111 = d_107 >> 52;
  _112 = (long unsigned int) c_110;
  _113 = _112 & 4503599627370495;
  MEM[(uint64_t *)r_6(D) + 16B] = _113;
  c_114 = c_110 >> 52;
  _115 = d_111 * 68719492368;
  _116 = (__int128 unsigned) t3_42;
  _117 = _115 + _116;
  c_118 = c_114 + _117;
  _119 = (long unsigned int) c_118;
  _120 = _119 & 4503599627370495;
  MEM[(uint64_t *)r_6(D) + 24B] = _120;
  c_121 = c_118 >> 52;
  _122 = (__int128 unsigned) t4_60;
  c_123 = c_121 + _122;
  _124 = (long unsigned int) c_123;
  MEM[(uint64_t *)r_6(D) + 32B] = _124;
  return;

}



;; Function secp256k1_fe_sqr (secp256k1_fe_sqr, funcdef_no=99, decl_uid=4342, cgraph_uid=99, symbol_order=99)

__attribute__((used))
secp256k1_fe_sqr (struct secp256k1_fe * r, const struct secp256k1_fe * a)
{
  int64_t u0;
  int64_t tx;
  int64_t t4;
  int64_t t3;
  uint64_t a4;
  uint64_t a3;
  uint64_t a2;
  uint64_t a1;
  uint64_t a0;
  uint128_t d;
  uint128_t c;
  __int128 unsigned _1;
  __int128 unsigned _2;
  __int128 unsigned _6;
  long unsigned int _12;
  __int128 unsigned _15;
  long unsigned int _16;
  __int128 unsigned _19;
  __int128 unsigned _23;
  __int128 unsigned _24;
  long int _27;
  __int128 unsigned _33;
  __int128 unsigned _34;
  __int128 unsigned _35;
  __int128 unsigned _36;
  __int128 unsigned _37;
  __int128 unsigned _39;
  long int _41;
  long int _43;
  __int128 unsigned _48;
  long unsigned int _49;
  __int128 unsigned _51;
  __int128 unsigned _52;
  long int _54;
  long int _56;
  long int _57;
  __int128 unsigned _60;
  long unsigned int _62;
  long unsigned int _63;
  __int128 unsigned _65;
  __int128 unsigned _67;
  __int128 unsigned _68;
  __int128 unsigned _69;
  __int128 unsigned _71;
  __int128 unsigned _72;
  long unsigned int _75;
  long unsigned int _76;
  __int128 unsigned _78;
  __int128 unsigned _79;
  __int128 unsigned _80;
  __int128 unsigned _82;
  __int128 unsigned _84;
  __int128 unsigned _85;
  long unsigned int _88;
  long unsigned int _89;
  __int128 unsigned _91;
  __int128 unsigned _92;
  __int128 unsigned _93;
  long unsigned int _95;
  long unsigned int _96;
  __int128 unsigned _98;
  long unsigned int _100;

  <bb 2> [local count: 1073741825]:
  a0_7 = MEM[(const uint64_t *)a_3(D)];
  a1_8 = MEM[(const uint64_t *)a_3(D) + 8B];
  a2_9 = MEM[(const uint64_t *)a_3(D) + 16B];
  a3_10 = MEM[(const uint64_t *)a_3(D) + 24B];
  a4_11 = MEM[(const uint64_t *)a_3(D) + 32B];
  _12 = a0_7 * 2;
  _15 = _12 w* a3_10;
  _16 = a1_8 * 2;
  _19 = _16 w* a2_9;
  d_20 = _15 + _19;
  c_22 = a4_11 w* a4_11;
  _23 = c_22 & 4503599627370495;
  _24 = _23 * 68719492368;
  d_25 = d_20 + _24;
  c_26 = c_22 >> 52;
  _27 = (long int) d_25;
  t3_28 = _27 & 4503599627370495;
  d_29 = d_25 >> 52;
  a4_30 = a4_11 * 2;
  _33 = a0_7 w* a4_30;
  _34 = a3_10 w* _16;
  _35 = _33 + _34;
  _36 = a2_9 w* a2_9;
  _37 = _35 + _36;
  _39 = c_26 * 68719492368;
  _1 = _37 + _39;
  d_40 = _1 + d_29;
  _41 = (long int) d_40;
  d_42 = d_40 >> 52;
  _43 = _41 >> 48;
  tx_44 = _43 & 15;
  t4_45 = _41 & 281474976710655;
  c_46 = a0_7 w* a0_7;
  _48 = a4_30 w* a1_8;
  _49 = a2_9 * 2;
  _51 = a3_10 w* _49;
  _52 = _48 + _51;
  d_53 = d_42 + _52;
  _54 = (long int) d_53;
  d_55 = d_53 >> 52;
  _56 = _54 << 4;
  _57 = _56 & 72057594037927920;
  u0_58 = tx_44 | _57;
  _60 = u0_58 w* 4294968273;
  c_61 = c_46 + _60;
  _62 = (long unsigned int) c_61;
  _63 = _62 & 4503599627370495;
  MEM[(uint64_t *)r_4(D)] = _63;
  c_64 = c_61 >> 52;
  _65 = _12 w* a1_8;
  _67 = a2_9 w* a4_30;
  _68 = a3_10 w* a3_10;
  _69 = _67 + _68;
  d_70 = d_55 + _69;
  _71 = d_70 & 4503599627370495;
  _72 = _71 * 68719492368;
  _6 = _65 + _72;
  c_73 = _6 + c_64;
  d_74 = d_70 >> 52;
  _75 = (long unsigned int) c_73;
  _76 = _75 & 4503599627370495;
  MEM[(uint64_t *)r_4(D) + 8B] = _76;
  c_77 = c_73 >> 52;
  _78 = _12 w* a2_9;
  _79 = a1_8 w* a1_8;
  _80 = _78 + _79;
  _82 = a3_10 w* a4_30;
  d_83 = d_74 + _82;
  _84 = d_83 & 4503599627370495;
  _85 = _84 * 68719492368;
  _2 = _80 + _85;
  c_86 = _2 + c_77;
  d_87 = d_83 >> 52;
  _88 = (long unsigned int) c_86;
  _89 = _88 & 4503599627370495;
  MEM[(uint64_t *)r_4(D) + 16B] = _89;
  c_90 = c_86 >> 52;
  _91 = d_87 * 68719492368;
  _92 = (__int128 unsigned) t3_28;
  _93 = _91 + _92;
  c_94 = c_90 + _93;
  _95 = (long unsigned int) c_94;
  _96 = _95 & 4503599627370495;
  MEM[(uint64_t *)r_4(D) + 24B] = _96;
  c_97 = c_94 >> 52;
  _98 = (__int128 unsigned) t4_45;
  c_99 = c_97 + _98;
  _100 = (long unsigned int) c_99;
  MEM[(uint64_t *)r_4(D) + 32B] = _100;
  return;

}



;; Function secp256k1_fe_cmov (secp256k1_fe_cmov, funcdef_no=100, decl_uid=4371, cgraph_uid=100, symbol_order=100)

__attribute__((used))
secp256k1_fe_cmov (struct secp256k1_fe * r, const struct secp256k1_fe * a, int flag)
{
  vector(2) long unsigned int vect__6.442;
  const vector(2) long unsigned int vect__5.441;
  vector(2) long unsigned int vect__37.440;
  const vector(2) long unsigned int vect__4.439;
  const vector(2) long unsigned int vect__4.438;
  vector(2) long unsigned int vect__3.435;
  vector(2) long unsigned int vect_mask0_28.434;
  vector(2) long unsigned int vect__1.433;
  vector(2) long unsigned int vect__2.432;
  vector(2) long unsigned int vect__2.431;
  uint64_t mask0;
  long unsigned int _1;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _37;
  vector(4) int _43;

  <bb 2> [local count: 1073741825]:
  _43 = {flag_27(D), flag_27(D), flag_27(D), flag_27(D)};
  vect__1.433_45 = [vec_unpack_lo_expr] _43;
  vect__1.433_46 = [vec_unpack_hi_expr] _43;
  _1 = (long unsigned int) flag_27(D);
  vect_mask0_28.434_49 = vect__1.433_45 + { 18446744073709551615, 18446744073709551615 };
  vect_mask0_28.434_50 = vect__1.433_46 + { 18446744073709551615, 18446744073709551615 };
  mask0_28 = _1 + 18446744073709551615;
  vect__37.440_58 = -vect__1.433_45;
  vect__37.440_59 = -vect__1.433_46;
  _37 = -_1;
  vect__2.431_38 = MEM[(long unsigned int *)r_30(D)];
  vect__2.432_41 = MEM[(long unsigned int *)r_30(D) + 16B];
  vect__3.435_51 = vect__2.431_38 & vect_mask0_28.434_49;
  vect__3.435_52 = vect__2.432_41 & vect_mask0_28.434_50;
  vect__4.438_54 = MEM[(long unsigned int *)a_31(D)];
  vect__4.439_56 = MEM[(long unsigned int *)a_31(D) + 16B];
  vect__5.441_60 = vect__4.438_54 & vect__37.440_58;
  vect__5.441_61 = vect__4.439_56 & vect__37.440_59;
  vect__6.442_62 = vect__3.435_51 | vect__5.441_60;
  vect__6.442_63 = vect__3.435_52 | vect__5.441_61;
  MEM[(long unsigned int *)r_30(D)] = vect__6.442_62;
  MEM[(long unsigned int *)r_30(D) + 16B] = vect__6.442_63;
  _22 = r_30(D)->n[4];
  _23 = _22 & mask0_28;
  _24 = a_31(D)->n[4];
  _25 = _24 & _37;
  _26 = _23 | _25;
  r_30(D)->n[4] = _26;
  return;

}



;; Function secp256k1_fe_storage_cmov (secp256k1_fe_storage_cmov, funcdef_no=101, decl_uid=4367, cgraph_uid=101, symbol_order=101)

__attribute__((used))
secp256k1_fe_storage_cmov (struct secp256k1_fe_storage * r, const struct secp256k1_fe_storage * a, int flag)
{
  vector(2) long unsigned int vect__6.458;
  const vector(2) long unsigned int vect__5.457;
  vector(2) long unsigned int vect__31.456;
  const vector(2) long unsigned int vect__4.455;
  const vector(2) long unsigned int vect__4.454;
  vector(2) long unsigned int vect__3.451;
  vector(2) long unsigned int vect_mask0_23.450;
  vector(2) long unsigned int vect__1.449;
  vector(2) long unsigned int vect__2.448;
  vector(2) long unsigned int vect__2.447;
  vector(4) int _36;

  <bb 2> [local count: 1073741825]:
  _36 = {flag_22(D), flag_22(D), flag_22(D), flag_22(D)};
  vect__1.449_38 = [vec_unpack_lo_expr] _36;
  vect__1.449_39 = [vec_unpack_hi_expr] _36;
  vect_mask0_23.450_42 = vect__1.449_38 + { 18446744073709551615, 18446744073709551615 };
  vect_mask0_23.450_43 = vect__1.449_39 + { 18446744073709551615, 18446744073709551615 };
  vect__31.456_50 = -vect__1.449_38;
  vect__31.456_51 = -vect__1.449_39;
  vect__2.447_32 = MEM[(long unsigned int *)r_25(D)];
  vect__2.448_35 = MEM[(long unsigned int *)r_25(D) + 16B];
  vect__3.451_44 = vect__2.447_32 & vect_mask0_23.450_42;
  vect__3.451_45 = vect__2.448_35 & vect_mask0_23.450_43;
  vect__4.454_47 = MEM[(long unsigned int *)a_26(D)];
  vect__4.455_49 = MEM[(long unsigned int *)a_26(D) + 16B];
  vect__5.457_52 = vect__4.454_47 & vect__31.456_50;
  vect__5.457_53 = vect__4.455_49 & vect__31.456_51;
  vect__6.458_54 = vect__3.451_44 | vect__5.457_52;
  vect__6.458_55 = vect__3.451_45 | vect__5.457_53;
  MEM[(long unsigned int *)r_25(D)] = vect__6.458_54;
  MEM[(long unsigned int *)r_25(D) + 16B] = vect__6.458_55;
  return;

}



;; Function secp256k1_fe_to_storage (secp256k1_fe_to_storage, funcdef_no=102, decl_uid=4360, cgraph_uid=102, symbol_order=102)

__attribute__((used))
secp256k1_fe_to_storage (struct secp256k1_fe_storage * r, const struct secp256k1_fe * a)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;

  <bb 2> [local count: 1073741825]:
  _1 = a_18(D)->n[0];
  _2 = a_18(D)->n[1];
  _3 = _2 << 52;
  _4 = _1 | _3;
  r_19(D)->n[0] = _4;
  _5 = _2 >> 12;
  _6 = a_18(D)->n[2];
  _7 = _6 << 40;
  _8 = _5 | _7;
  r_19(D)->n[1] = _8;
  _9 = _6 >> 24;
  _10 = a_18(D)->n[3];
  _11 = _10 << 28;
  _12 = _9 | _11;
  r_19(D)->n[2] = _12;
  _13 = _10 >> 36;
  _14 = a_18(D)->n[4];
  _15 = _14 << 16;
  _16 = _13 | _15;
  r_19(D)->n[3] = _16;
  return;

}



;; Function secp256k1_fe_from_storage (secp256k1_fe_from_storage, funcdef_no=103, decl_uid=4363, cgraph_uid=103, symbol_order=103)

__attribute__((used))
secp256k1_fe_from_storage (struct secp256k1_fe * r, const struct secp256k1_fe_storage * a)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long long unsigned int _6;
  long long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long long unsigned int _11;
  long long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long long unsigned int _16;
  long long unsigned int _17;
  long unsigned int _18;

  <bb 2> [local count: 1073741825]:
  _1 = a_20(D)->n[0];
  _2 = _1 & 4503599627370495;
  r_21(D)->n[0] = _2;
  _3 = _1 >> 52;
  _4 = a_20(D)->n[1];
  _5 = _4 << 12;
  _6 = _5 & 4503599627370495;
  _7 = _3 | _6;
  r_21(D)->n[1] = _7;
  _8 = _4 >> 40;
  _9 = a_20(D)->n[2];
  _10 = _9 << 24;
  _11 = _10 & 4503599627370495;
  _12 = _8 | _11;
  r_21(D)->n[2] = _12;
  _13 = _9 >> 28;
  _14 = a_20(D)->n[3];
  _15 = _14 << 36;
  _16 = _15 & 4503599627370495;
  _17 = _13 | _16;
  r_21(D)->n[3] = _17;
  _18 = _14 >> 16;
  r_21(D)->n[4] = _18;
  return;

}



;; Function secp256k1_scalar_check_overflow (secp256k1_scalar_check_overflow, funcdef_no=115, decl_uid=4888, cgraph_uid=115, symbol_order=115)

__attribute__((used))
secp256k1_scalar_check_overflow (const struct secp256k1_scalar * a)
{
  int no;
  int yes;
  long unsigned int _1;
  _Bool _2;
  long unsigned int _3;
  _Bool _4;
  _Bool _5;
  int _6;
  int _7;
  int _8;
  long unsigned int _9;
  _Bool _10;
  _Bool _11;
  int _13;
  long unsigned int _15;
  _Bool _16;
  _Bool _19;
  _Bool _20;
  _Bool _25;
  int _27;
  int _28;

  <bb 2> [local count: 1073741825]:
  _1 = a_22(D)->d[3];
  _2 = _1 != 18446744073709551615;
  _3 = a_22(D)->d[2];
  _4 = _3 <= 18446744073709551613;
  _19 = _2 | _4;
  no_23 = (int) _19;
  _5 = _3 == 18446744073709551615;
  _6 = (int) _5;
  _7 = ~no_23;
  _8 = _6 & _7;
  _9 = a_22(D)->d[1];
  _10 = _9 <= 13451932020343611450;
  _20 = _10 | _19;
  no_24 = (int) _20;
  _11 = _9 > 13451932020343611451;
  _13 = ~no_24;
  _15 = a_22(D)->d[0];
  _16 = _15 > 13822214165235122496;
  _25 = _11 | _16;
  _28 = (int) _25;
  _27 = _13 & _28;
  yes_26 = _8 | _27;
  return yes_26;

}



;; Function secp256k1_scalar_reduce (secp256k1_scalar_reduce, funcdef_no=116, decl_uid=4894, cgraph_uid=116, symbol_order=116)

__attribute__((used))
secp256k1_scalar_reduce (struct secp256k1_scalar * r, unsigned int overflow)
{
  uint128_t t;
  long unsigned int _1;
  __int128 unsigned _2;
  long unsigned int _3;
  long unsigned int _4;
  __int128 unsigned _5;
  long unsigned int _6;
  long unsigned int _7;
  __int128 unsigned _8;
  long unsigned int _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  long unsigned int _12;
  long unsigned int _13;
  __int128 unsigned _14;
  __int128 unsigned _15;
  __int128 unsigned _16;
  long unsigned int _17;
  long unsigned int _18;
  __int128 unsigned _19;
  long unsigned int _20;
  int _35;

  <bb 2> [local count: 1073741825]:
  _1 = r_22(D)->d[0];
  _2 = (__int128 unsigned) _1;
  _3 = (long unsigned int) overflow_23(D);
  _4 = _3 * 4624529908474429119;
  _5 = (__int128 unsigned) _4;
  t_24 = _2 + _5;
  _6 = _1 + _4;
  r_22(D)->d[0] = _6;
  t_26 = t_24 >> 64;
  _7 = r_22(D)->d[1];
  _8 = (__int128 unsigned) _7;
  _9 = _3 * 4994812053365940164;
  _10 = (__int128 unsigned) _9;
  _11 = _8 + _10;
  t_27 = _11 + t_26;
  _12 = (long unsigned int) t_27;
  r_22(D)->d[1] = _12;
  t_29 = t_27 >> 64;
  _13 = r_22(D)->d[2];
  _14 = (__int128 unsigned) _13;
  _15 = (__int128 unsigned) overflow_23(D);
  _16 = _14 + _15;
  t_30 = _16 + t_29;
  _17 = (long unsigned int) t_30;
  r_22(D)->d[2] = _17;
  t_32 = t_30 >> 64;
  _18 = r_22(D)->d[3];
  _19 = (__int128 unsigned) _18;
  t_33 = _19 + t_32;
  _20 = (long unsigned int) t_33;
  r_22(D)->d[3] = _20;
  _35 = (int) overflow_23(D);
  return _35;

}



;; Function secp256k1_scalar_add (secp256k1_scalar_add, funcdef_no=117, decl_uid=4822, cgraph_uid=117, symbol_order=117)

__attribute__((used))
secp256k1_scalar_add (struct secp256k1_scalar * r, const struct secp256k1_scalar * a, const struct secp256k1_scalar * b)
{
  int yes;
  int no;
  uint128_t t;
  uint128_t t;
  int overflow;
  long unsigned int _1;
  __int128 unsigned _2;
  long unsigned int _3;
  __int128 unsigned _4;
  long unsigned int _5;
  long unsigned int _6;
  __int128 unsigned _7;
  long unsigned int _8;
  __int128 unsigned _9;
  __int128 unsigned _10;
  long unsigned int _11;
  long unsigned int _12;
  __int128 unsigned _13;
  long unsigned int _14;
  __int128 unsigned _15;
  __int128 unsigned _16;
  long unsigned int _17;
  long unsigned int _18;
  __int128 unsigned _19;
  long unsigned int _20;
  __int128 unsigned _21;
  __int128 unsigned _22;
  long unsigned int _23;
  unsigned int _24;
  unsigned int _25;
  unsigned int _26;
  int _40;
  long unsigned int _41;
  long unsigned int _42;
  __int128 unsigned _43;
  long unsigned int _45;
  int _47;
  long unsigned int _48;
  __int128 unsigned _49;
  __int128 unsigned _50;
  long unsigned int _52;
  __int128 unsigned _54;
  __int128 unsigned _55;
  __int128 unsigned _56;
  long unsigned int _58;
  long unsigned int _62;
  _Bool _63;
  _Bool _64;
  _Bool _65;
  _Bool _67;
  int _68;
  int _69;
  int _70;
  _Bool _71;
  _Bool _72;
  _Bool _74;
  int _76;
  _Bool _78;
  _Bool _79;
  __int128 unsigned _87;
  __int128 unsigned _88;
  __int128 unsigned _89;

  <bb 2> [local count: 1073741825]:
  _1 = a_28(D)->d[0];
  _2 = (__int128 unsigned) _1;
  _3 = b_29(D)->d[0];
  _4 = (__int128 unsigned) _3;
  t_30 = _2 + _4;
  _5 = _1 + _3;
  t_32 = t_30 >> 64;
  _6 = a_28(D)->d[1];
  _7 = (__int128 unsigned) _6;
  _8 = b_29(D)->d[1];
  _9 = (__int128 unsigned) _8;
  _10 = _7 + _9;
  t_33 = _10 + t_32;
  _11 = (long unsigned int) t_33;
  t_34 = t_33 >> 64;
  _12 = a_28(D)->d[2];
  _13 = (__int128 unsigned) _12;
  _14 = b_29(D)->d[2];
  _15 = (__int128 unsigned) _14;
  _16 = _13 + _15;
  t_35 = _16 + t_34;
  _17 = (long unsigned int) t_35;
  t_36 = t_35 >> 64;
  _18 = a_28(D)->d[3];
  _19 = (__int128 unsigned) _18;
  _20 = b_29(D)->d[3];
  _21 = (__int128 unsigned) _20;
  _22 = _19 + _21;
  t_37 = _22 + t_36;
  _23 = (long unsigned int) t_37;
  t_38 = t_37 >> 64;
  _63 = _23 != 18446744073709551615;
  _64 = _17 <= 18446744073709551613;
  _65 = _63 | _64;
  no_66 = (int) _65;
  _67 = _17 == 18446744073709551615;
  _68 = (int) _67;
  _69 = ~no_66;
  _70 = _68 & _69;
  _71 = _11 <= 13451932020343611450;
  _72 = _65 | _71;
  no_73 = (int) _72;
  _74 = _11 > 13451932020343611451;
  _76 = ~no_73;
  _79 = _5 > 13822214165235122496;
  _78 = _74 | _79;
  _40 = (int) _78;
  _47 = _40 & _76;
  yes_82 = _47 | _70;
  _24 = (unsigned int) yes_82;
  _25 = (unsigned int) t_38;
  _26 = _24 + _25;
  overflow_39 = (int) _26;
  _54 = (__int128 unsigned) _5;
  _41 = (long unsigned int) _26;
  _42 = _41 * 4624529908474429119;
  _43 = (__int128 unsigned) _42;
  t_44 = _43 + _54;
  _45 = _5 + _42;
  r_31(D)->d[0] = _45;
  t_46 = t_44 >> 64;
  _87 = t_33 & 18446744073709551615;
  _48 = _41 * 4994812053365940164;
  _49 = (__int128 unsigned) _48;
  _50 = _49 + _87;
  t_51 = t_46 + _50;
  _52 = (long unsigned int) t_51;
  r_31(D)->d[1] = _52;
  t_53 = t_51 >> 64;
  _88 = t_35 & 18446744073709551615;
  _55 = (__int128 unsigned) _26;
  _56 = _55 + _88;
  t_57 = t_53 + _56;
  _58 = (long unsigned int) t_57;
  r_31(D)->d[2] = _58;
  t_59 = t_57 >> 64;
  _89 = t_37 & 18446744073709551615;
  t_61 = t_59 + _89;
  _62 = (long unsigned int) t_61;
  r_31(D)->d[3] = _62;
  return overflow_39;

}



;; Function secp256k1_ecmult_gen (secp256k1_ecmult_gen, funcdef_no=197, decl_uid=5712, cgraph_uid=197, symbol_order=200)

secp256k1_ecmult_gen (const struct secp256k1_ecmult_gen_context * ctx, struct secp256k1_gej * r, const struct secp256k1_scalar * gn)
{
  unsigned long ivtmp.479;
  unsigned long ivtmp.477;
  uint64_t adds__n_I_lsm.468;
  uint64_t adds__n_I_lsm.467;
  uint64_t adds__n_I_lsm.466;
  uint64_t adds__n_I_lsm.465;
  uint64_t adds__n_I_lsm.464;
  uint64_t adds__n_I_lsm.463;
  uint64_t adds__n_I_lsm.462;
  uint64_t adds__n_I_lsm.461;
  uint64_t mask0;
  int i;
  int bits;
  struct secp256k1_scalar gnb;
  struct secp256k1_ge_storage adds;
  struct secp256k1_ge add;
  const struct secp256k1_scalar * _1;
  _Bool _4;
  struct secp256k1_ge_storage[64][16] * _6;
  unsigned int _25;
  long unsigned int _26;
  unsigned int _27;
  long unsigned int _28;
  unsigned int _29;
  unsigned int _30;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _70;
  long unsigned int _72;
  long unsigned int _73;
  long unsigned int _74;
  long unsigned int _75;
  long unsigned int _77;
  long unsigned int _78;
  long unsigned int _79;
  long unsigned int _80;
  long unsigned int _82;
  long unsigned int _83;
  long unsigned int _84;
  long unsigned int _85;
  long unsigned int _87;
  long unsigned int _88;
  long unsigned int _89;
  long unsigned int _90;
  long unsigned int _92;
  long unsigned int _93;
  long unsigned int _95;
  long long unsigned int _96;
  long long unsigned int _97;
  long unsigned int _98;
  long unsigned int _100;
  long long unsigned int _101;
  long long unsigned int _102;
  long unsigned int _103;
  long unsigned int _105;
  long long unsigned int _106;
  long long unsigned int _107;
  long unsigned int _108;
  long unsigned int _110;
  long unsigned int _111;
  long unsigned int _113;
  long long unsigned int _114;
  long long unsigned int _115;
  long unsigned int _116;
  long unsigned int _118;
  long long unsigned int _119;
  long long unsigned int _120;
  long unsigned int _121;
  long unsigned int _123;
  long long unsigned int _124;
  long long unsigned int _125;
  long unsigned int _126;
  void * _150;
  struct secp256k1_ge_storage[64][16] * _154;
  sizetype _366;
  unsigned int _367;
  unsigned int _368;
  long unsigned int prephitmp_378;
  long unsigned int prephitmp_379;
  long unsigned int prephitmp_380;
  long unsigned int prephitmp_381;
  long unsigned int prephitmp_385;
  long unsigned int prephitmp_386;
  long unsigned int prephitmp_387;
  long unsigned int prephitmp_388;
  vector(2) long unsigned int _399;
  vector(2) long unsigned int _401;
  vector(2) long unsigned int _403;
  vector(2) long unsigned int _405;

  <bb 2> [local count: 987502]:
  *r_12(D) = ctx_13(D)->initial;
  _1 = &ctx_13(D)->blind;
  secp256k1_scalar_add (&gnb, gn_15(D), _1);

  <bb 3> [local count: 63136019]:
  # prephitmp_378 = PHI <0(2), _85(5)>
  # prephitmp_379 = PHI <0(2), _80(5)>
  # prephitmp_380 = PHI <0(2), _67(5)>
  # prephitmp_381 = PHI <0(2), _75(5)>
  # prephitmp_385 = PHI <0(2), _90(5)>
  # prephitmp_386 = PHI <0(2), _62(5)>
  # prephitmp_387 = PHI <0(2), _52(5)>
  # prephitmp_388 = PHI <0(2), _57(5)>
  # ivtmp.479_370 = PHI <0(2), ivtmp.479_369(5)>
  _368 = (unsigned int) ivtmp.479_370;
  _367 = _368 * 4;
  _25 = _367 >> 6;
  _26 = gnb.d[_25];
  _27 = _367 & 63;
  _28 = _26 >> _27;
  _29 = (unsigned int) _28;
  _30 = _29 & 15;
  bits_18 = (int) _30;
  _6 = ctx_13(D)->prec;
  _366 = ivtmp.479_370 * 1024;
  _154 = _6 + _366;
  ivtmp.477_167 = (unsigned long) _154;

  <bb 4> [local count: 1010605806]:
  # i_163 = PHI <0(3), i_19(4)>
  # adds__n_I_lsm.461_109 = PHI <prephitmp_381(3), _75(4)>
  # adds__n_I_lsm.462_112 = PHI <prephitmp_379(3), _80(4)>
  # adds__n_I_lsm.463_117 = PHI <prephitmp_378(3), _85(4)>
  # adds__n_I_lsm.464_122 = PHI <prephitmp_385(3), _90(4)>
  # adds__n_I_lsm.465_91 = PHI <prephitmp_387(3), _52(4)>
  # adds__n_I_lsm.466_94 = PHI <prephitmp_388(3), _57(4)>
  # adds__n_I_lsm.467_99 = PHI <prephitmp_386(3), _62(4)>
  # adds__n_I_lsm.468_104 = PHI <prephitmp_380(3), _67(4)>
  # ivtmp.477_175 = PHI <ivtmp.477_167(3), ivtmp.477_171(4)>
  _4 = bits_18 == i_163;
  _68 = (long unsigned int) _4;
  mask0_69 = _68 + 18446744073709551615;
  _70 = -_68;
  _72 = mask0_69 & adds__n_I_lsm.461_109;
  _150 = (void *) ivtmp.477_175;
  _73 = MEM[base: _150, offset: 0B];
  _74 = _70 & _73;
  _75 = _72 | _74;
  _77 = mask0_69 & adds__n_I_lsm.462_112;
  _78 = MEM[base: _150, offset: 8B];
  _79 = _70 & _78;
  _80 = _77 | _79;
  _82 = mask0_69 & adds__n_I_lsm.463_117;
  _83 = MEM[base: _150, offset: 16B];
  _84 = _70 & _83;
  _85 = _82 | _84;
  _87 = mask0_69 & adds__n_I_lsm.464_122;
  _88 = MEM[base: _150, offset: 24B];
  _89 = _70 & _88;
  _90 = _87 | _89;
  _49 = mask0_69 & adds__n_I_lsm.465_91;
  _50 = MEM[base: _150, offset: 32B];
  _51 = _50 & _70;
  _52 = _49 | _51;
  _54 = mask0_69 & adds__n_I_lsm.466_94;
  _55 = MEM[base: _150, offset: 40B];
  _56 = _55 & _70;
  _57 = _54 | _56;
  _59 = mask0_69 & adds__n_I_lsm.467_99;
  _60 = MEM[base: _150, offset: 48B];
  _61 = _60 & _70;
  _62 = _59 | _61;
  _64 = mask0_69 & adds__n_I_lsm.468_104;
  _65 = MEM[base: _150, offset: 56B];
  _66 = _65 & _70;
  _67 = _64 | _66;
  i_19 = i_163 + 1;
  ivtmp.477_171 = ivtmp.477_175 + 64;
  if (i_19 != 16)
    goto <bb 4>; [93.75%]
  else
    goto <bb 5>; [6.25%]

  <bb 5> [local count: 63136019]:
  _405 = {_62, _67};
  _403 = {_52, _57};
  _401 = {_85, _90};
  _399 = {_75, _80};
  MEM[(long unsigned int *)&adds] = _399;
  MEM[(long unsigned int *)&adds + 16B] = _401;
  MEM[(long unsigned int *)&adds + 32B] = _403;
  MEM[(long unsigned int *)&adds + 48B] = _405;
  _110 = _75 & 4503599627370495;
  MEM[(struct secp256k1_fe *)&add].n[0] = _110;
  _111 = _75 >> 52;
  _113 = _80 << 12;
  _114 = _113 & 4503599627370495;
  _115 = _111 | _114;
  MEM[(struct secp256k1_fe *)&add].n[1] = _115;
  _116 = _80 >> 40;
  _118 = _85 << 24;
  _119 = _118 & 4503599627370495;
  _120 = _116 | _119;
  MEM[(struct secp256k1_fe *)&add].n[2] = _120;
  _121 = _85 >> 28;
  _123 = _90 << 36;
  _124 = _123 & 4503599627370495;
  _125 = _121 | _124;
  MEM[(struct secp256k1_fe *)&add].n[3] = _125;
  _126 = _90 >> 16;
  MEM[(struct secp256k1_fe *)&add].n[4] = _126;
  _92 = _52 & 4503599627370495;
  MEM[(struct secp256k1_fe *)&add + 40B].n[0] = _92;
  _93 = _52 >> 52;
  _95 = _57 << 12;
  _96 = _95 & 4503599627370495;
  _97 = _93 | _96;
  MEM[(struct secp256k1_fe *)&add + 40B].n[1] = _97;
  _98 = _57 >> 40;
  _100 = _62 << 24;
  _101 = _100 & 4503599627370495;
  _102 = _98 | _101;
  MEM[(struct secp256k1_fe *)&add + 40B].n[2] = _102;
  _103 = _62 >> 28;
  _105 = _67 << 36;
  _106 = _105 & 4503599627370495;
  _107 = _103 | _106;
  MEM[(struct secp256k1_fe *)&add + 40B].n[3] = _107;
  _108 = _67 >> 16;
  MEM[(struct secp256k1_fe *)&add + 40B].n[4] = _108;
  add.infinity = 0;
  secp256k1_gej_add_ge (r_12(D), r_12(D), &add);
  ivtmp.479_369 = ivtmp.479_370 + 1;
  if (ivtmp.479_369 != 64)
    goto <bb 3>; [98.44%]
  else
    goto <bb 6>; [1.56%]

  <bb 6> [local count: 987502]:
  add ={v} {CLOBBER};
  adds ={v} {CLOBBER};
  gnb ={v} {CLOBBER};
  return;

}



;; Function secp256k1_ecmult_gen_blind (secp256k1_ecmult_gen_blind, funcdef_no=198, decl_uid=5715, cgraph_uid=198, symbol_order=201)

secp256k1_ecmult_gen_blind (struct secp256k1_ecmult_gen_context * ctx, const unsigned char * seed32)
{
  vector(2) long long unsigned int vect__89.492;
  const vector(2) long unsigned int vect__88.491;
  const vector(2) long unsigned int vect__88.490;
  uint64_t nonzero;
  uint128_t t;
  struct secp256k1_fe zz;
  unsigned char keydata[64];
  int retry;
  struct secp256k1_rfc6979_hmac_sha256_t rng;
  unsigned char nonce32[32];
  struct secp256k1_fe s;
  struct secp256k1_gej gb;
  struct secp256k1_scalar b;
  int _3;
  _Bool _4;
  int _6;
  int retry.125_8;
  int _9;
  size_t iftmp.122_10;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  long unsigned int _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  _Bool _51;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _61;
  _Bool _62;
  int _63;
  long unsigned int _96;
  long long unsigned int _97;
  const uint64_t[5] * _99;
  const uint64_t[5] * _101;
  long unsigned int _107;
  long unsigned int _108;
  long unsigned int _109;
  long unsigned int _110;
  long unsigned int _111;
  long unsigned int _112;
  long unsigned int _113;
  _Bool _114;
  long long unsigned int _115;
  long unsigned int _117;
  __int128 unsigned _118;
  long unsigned int _120;
  long unsigned int _121;
  long unsigned int _123;
  __int128 unsigned _124;
  struct secp256k1_fe * pretmp_125;
  long unsigned int _127;
  long unsigned int _128;
  long unsigned int _130;
  __int128 unsigned _131;
  struct secp256k1_scalar * pretmp_132;
  long unsigned int _134;
  long unsigned int _135;
  long unsigned int _137;
  __int128 unsigned _138;
  long unsigned int _141;
  long unsigned int _142;
  _Bool _151;
  __int128 unsigned _153;
  __int128 unsigned _154;
  __int128 unsigned _155;

  <bb 2> [local count: 118111601]:
  keydata = {};
  pretmp_125 = &MEM[(void *)ctx_18(D) + 40B].y;
  pretmp_132 = &ctx_18(D)->blind;
  if (seed32_17(D) == 0B)
    goto <bb 3>; [17.43%]
  else
    goto <bb 9>; [82.57%]

  <bb 3> [local count: 20586852]:
  MEM[(struct secp256k1_gej *)ctx_18(D) + 40B].infinity = 0;
  MEM[(struct secp256k1_gej *)ctx_18(D) + 40B].x = secp256k1_ge_const_g.x;
  MEM[(struct secp256k1_gej *)ctx_18(D) + 40B].y = secp256k1_ge_const_g.y;
  MEM[(struct secp256k1_fe *)ctx_18(D) + 120B].n[0] = 1;
  MEM[(struct secp256k1_fe *)ctx_18(D) + 120B].n[4] = 0;
  MEM[(struct secp256k1_fe *)ctx_18(D) + 120B].n[3] = 0;
  MEM[(struct secp256k1_fe *)ctx_18(D) + 120B].n[2] = 0;
  MEM[(struct secp256k1_fe *)ctx_18(D) + 120B].n[1] = 0;
  secp256k1_fe_normalize_weak (pretmp_125);
  vect__88.490_211 = MEM[(long unsigned int *)ctx_18(D) + 80B];
  vect__88.491_1 = MEM[(long unsigned int *)ctx_18(D) + 96B];
  vect__89.492_82 = { 18014381329608892, 18014398509481980 } - vect__88.490_211;
  vect__89.492_83 = { 18014398509481980, 18014398509481980 } - vect__88.491_1;
  MEM[(long unsigned int *)ctx_18(D) + 80B] = vect__89.492_82;
  MEM[(long unsigned int *)ctx_18(D) + 96B] = vect__89.492_83;
  _96 = MEM[(const struct secp256k1_fe *)ctx_18(D) + 80B].n[4];
  _97 = 1125899906842620 - _96;
  MEM[(struct secp256k1_fe *)ctx_18(D) + 80B].n[4] = _97;
  MEM[(long unsigned int *)ctx_18(D) + 8B] = { 1, 0 };
  MEM[(long unsigned int *)ctx_18(D) + 24B] = { 0, 0 };
  secp256k1_scalar_get_b32 (&nonce32, pretmp_132);
  MEM[(char * {ref-all})&keydata] = MEM[(char * {ref-all})&nonce32];

  <bb 4> [local count: 118111601]:
  # iftmp.122_10 = PHI <32(3), 64(9)>
  secp256k1_rfc6979_hmac_sha256_initialize (&rng, &keydata, iftmp.122_10);
  __builtin_memset (&keydata, 0, 64);

  <bb 5> [local count: 1073741825]:
  secp256k1_rfc6979_hmac_sha256_generate.constprop (&rng, &nonce32);
  _3 = secp256k1_fe_set_b32 (&s, &nonce32);
  _4 = _3 == 0;
  _42 = MEM[(const uint64_t *)&s];
  _43 = MEM[(const uint64_t *)&s + 8B];
  _44 = _42 | _43;
  _45 = MEM[(const uint64_t *)&s + 16B];
  _46 = _44 | _45;
  _47 = MEM[(const uint64_t *)&s + 24B];
  _48 = _46 | _47;
  _49 = MEM[(const uint64_t *)&s + 32B];
  _50 = _48 | _49;
  _51 = _50 == 0;
  _151 = _4 | _51;
  _6 = (int) _151;
  retry = _6;
  if (_151 != 0)
    goto <bb 5>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 6> [local count: 118111601]:
  secp256k1_fe_sqr_inner (&zz.n, &s.n);
  _99 = &MEM[(const struct secp256k1_fe *)ctx_18(D) + 40B].n;
  secp256k1_fe_mul_inner (_99, _99, &zz.n);
  secp256k1_fe_mul_inner (pretmp_125, pretmp_125, &zz.n);
  secp256k1_fe_mul_inner (pretmp_125, pretmp_125, &s.n);
  _101 = &MEM[(const struct secp256k1_fe *)ctx_18(D) + 120B].n;
  secp256k1_fe_mul_inner (_101, _101, &s.n);
  zz ={v} {CLOBBER};
  MEM[(long unsigned int *)&s] = { 0, 0 };
  MEM[(long unsigned int *)&s + 16B] = { 0, 0 };
  s.n[4] = 0;

  <bb 7> [local count: 1073741815]:
  secp256k1_rfc6979_hmac_sha256_generate.constprop (&rng, &nonce32);
  secp256k1_scalar_set_b32 (&b, &nonce32, &retry);
  _55 = b.d[0];
  _56 = b.d[1];
  _57 = _55 | _56;
  _58 = b.d[2];
  _59 = _57 | _58;
  _60 = b.d[3];
  _61 = _59 | _60;
  _62 = _61 == 0;
  _63 = (int) _62;
  retry.125_8 = retry;
  _9 = retry.125_8 | _63;
  retry = _9;
  if (_9 != 0)
    goto <bb 7>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 118111600]:
  __builtin_memset (&rng.k, 0, 32);
  __builtin_memset (&rng.v, 0, 32);
  rng.retry = 0;
  __builtin_memset (&nonce32, 0, 32);
  secp256k1_ecmult_gen (ctx_18(D), &gb, &b);
  _107 = b.d[0];
  _108 = b.d[1];
  _109 = _107 | _108;
  _110 = b.d[2];
  _111 = _109 | _110;
  _112 = b.d[3];
  _113 = _111 | _112;
  _114 = _113 != 0;
  _115 = (long long unsigned int) _114;
  nonzero_116 = -_115;
  _117 = ~_107;
  _118 = (__int128 unsigned) _117;
  t_119 = _118 + 13822214165235122498;
  _120 = _117 + 13822214165235122498;
  _121 = nonzero_116 & _120;
  b.d[0] = _121;
  t_122 = t_119 >> 64;
  _123 = ~_108;
  _124 = (__int128 unsigned) _123;
  _155 = _124 + 13451932020343611451;
  t_126 = t_122 + _155;
  _127 = (long unsigned int) t_126;
  _128 = nonzero_116 & _127;
  b.d[1] = _128;
  t_129 = t_126 >> 64;
  _130 = ~_110;
  _131 = (__int128 unsigned) _130;
  _154 = _131 + 18446744073709551614;
  t_133 = t_129 + _154;
  _134 = (long unsigned int) t_133;
  _135 = nonzero_116 & _134;
  b.d[2] = _135;
  t_136 = t_133 >> 64;
  _137 = ~_112;
  _138 = (__int128 unsigned) _137;
  _153 = _138 + 18446744073709551615;
  t_140 = t_136 + _153;
  _141 = (long unsigned int) t_140;
  _142 = nonzero_116 & _141;
  b.d[3] = _142;
  ctx_18(D)->blind = b;
  ctx_18(D)->initial = gb;
  b ={v} {CLOBBER};
  gb ={v} {CLOBBER};
  s ={v} {CLOBBER};
  nonce32 ={v} {CLOBBER};
  rng ={v} {CLOBBER};
  retry ={v} {CLOBBER};
  keydata ={v} {CLOBBER};
  return;

  <bb 9> [local count: 63154273]:
  secp256k1_scalar_get_b32 (&nonce32, pretmp_132);
  MEM[(char * {ref-all})&keydata] = MEM[(char * {ref-all})&nonce32];
  __builtin_memcpy (&MEM[(void *)&keydata + 32B], seed32_17(D), 32);
  goto <bb 4>; [100.00%]

}



;; Function secp256k1_scalar_cadd_bit (secp256k1_scalar_cadd_bit, funcdef_no=118, decl_uid=4826, cgraph_uid=118, symbol_order=118)

__attribute__((used))
secp256k1_scalar_cadd_bit (struct secp256k1_scalar * r, unsigned int bit, int flag)
{
  uint128_t t;
  unsigned int flag.2_1;
  unsigned int _2;
  unsigned int _3;
  long unsigned int _4;
  __int128 unsigned _5;
  unsigned int _6;
  _Bool _7;
  long unsigned int _8;
  unsigned int _9;
  long unsigned int _10;
  __int128 unsigned _11;
  long unsigned int _12;
  long unsigned int _13;
  __int128 unsigned _14;
  _Bool _15;
  long unsigned int _16;
  long unsigned int _17;
  __int128 unsigned _18;
  __int128 unsigned _19;
  long unsigned int _20;
  long unsigned int _21;
  __int128 unsigned _22;
  _Bool _23;
  long unsigned int _24;
  long unsigned int _25;
  __int128 unsigned _26;
  __int128 unsigned _27;
  long unsigned int _28;
  long unsigned int _29;
  __int128 unsigned _30;
  _Bool _31;
  long unsigned int _32;
  long unsigned int _33;
  __int128 unsigned _34;
  __int128 unsigned _35;
  long unsigned int _36;

  <bb 2> [local count: 1073741825]:
  flag.2_1 = (unsigned int) flag_37(D);
  _2 = flag.2_1 + 4294967295;
  _3 = _2 & 256;
  bit_39 = _3 + bit_38(D);
  _4 = r_41(D)->d[0];
  _5 = (__int128 unsigned) _4;
  _6 = bit_39 >> 6;
  _7 = _6 == 0;
  _8 = (long unsigned int) _7;
  _9 = bit_39 & 63;
  _10 = _8 << _9;
  _11 = (__int128 unsigned) _10;
  t_42 = _5 + _11;
  _12 = _4 + _10;
  r_41(D)->d[0] = _12;
  t_44 = t_42 >> 64;
  _13 = r_41(D)->d[1];
  _14 = (__int128 unsigned) _13;
  _15 = _6 == 1;
  _16 = (long unsigned int) _15;
  _17 = _16 << _9;
  _18 = (__int128 unsigned) _17;
  _19 = _14 + _18;
  t_45 = _19 + t_44;
  _20 = (long unsigned int) t_45;
  r_41(D)->d[1] = _20;
  t_47 = t_45 >> 64;
  _21 = r_41(D)->d[2];
  _22 = (__int128 unsigned) _21;
  _23 = _6 == 2;
  _24 = (long unsigned int) _23;
  _25 = _24 << _9;
  _26 = (__int128 unsigned) _25;
  _27 = _22 + _26;
  t_48 = _27 + t_47;
  _28 = (long unsigned int) t_48;
  r_41(D)->d[2] = _28;
  t_50 = t_48 >> 64;
  _29 = r_41(D)->d[3];
  _30 = (__int128 unsigned) _29;
  _31 = _6 == 3;
  _32 = (long unsigned int) _31;
  _33 = _32 << _9;
  _34 = (__int128 unsigned) _33;
  _35 = _30 + _34;
  t_51 = _35 + t_50;
  _36 = (long unsigned int) t_51;
  r_41(D)->d[3] = _36;
  return;

}



;; Function secp256k1_scalar_negate (secp256k1_scalar_negate, funcdef_no=122, decl_uid=4845, cgraph_uid=122, symbol_order=122)

__attribute__((used))
secp256k1_scalar_negate (struct secp256k1_scalar * r, const struct secp256k1_scalar * a)
{
  uint128_t t;
  uint64_t nonzero;
  _Bool _1;
  long long unsigned int _2;
  long unsigned int _3;
  __int128 unsigned _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  __int128 unsigned _8;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  __int128 unsigned _13;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  __int128 unsigned _18;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _24;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  __int128 unsigned _44;
  __int128 unsigned _45;
  __int128 unsigned _46;

  <bb 2> [local count: 1073741825]:
  _24 = a_23(D)->d[0];
  _38 = a_23(D)->d[1];
  _39 = _24 | _38;
  _40 = a_23(D)->d[2];
  _41 = _39 | _40;
  _42 = a_23(D)->d[3];
  _43 = _41 | _42;
  _1 = _43 != 0;
  _2 = (long long unsigned int) _1;
  nonzero_25 = -_2;
  _3 = ~_24;
  _4 = (__int128 unsigned) _3;
  t_26 = _4 + 13822214165235122498;
  _5 = _3 + 13822214165235122498;
  _6 = _5 & nonzero_25;
  r_27(D)->d[0] = _6;
  t_29 = t_26 >> 64;
  _7 = ~_38;
  _8 = (__int128 unsigned) _7;
  _46 = _8 + 13451932020343611451;
  t_30 = t_29 + _46;
  _10 = (long unsigned int) t_30;
  _11 = _10 & nonzero_25;
  r_27(D)->d[1] = _11;
  t_32 = t_30 >> 64;
  _12 = ~_40;
  _13 = (__int128 unsigned) _12;
  _44 = _13 + 18446744073709551614;
  t_33 = t_32 + _44;
  _15 = (long unsigned int) t_33;
  _16 = _15 & nonzero_25;
  r_27(D)->d[2] = _16;
  t_35 = t_33 >> 64;
  _17 = ~_42;
  _18 = (__int128 unsigned) _17;
  _45 = _18 + 18446744073709551615;
  t_36 = t_35 + _45;
  _20 = (long unsigned int) t_36;
  _21 = _20 & nonzero_25;
  r_27(D)->d[3] = _21;
  return;

}



;; Function secp256k1_scalar_reduce_512 (secp256k1_scalar_reduce_512, funcdef_no=126, decl_uid=4946, cgraph_uid=126, symbol_order=126)

__attribute__((used))
secp256k1_scalar_reduce_512 (struct secp256k1_scalar * r, const uint64_t * l)
{
  int yes;
  int no;
  uint128_t t;
  uint128_t t;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint32_t p4;
  uint32_t m6;
  uint64_t n3;
  uint64_t n2;
  uint64_t n1;
  uint64_t n0;
  uint64_t c2;
  uint64_t c1;
  uint64_t c0;
  uint128_t c;
  __int128 unsigned _2;
  long unsigned int _3;
  __int128 unsigned _5;
  __int128 unsigned _6;
  long unsigned int _7;
  _Bool _8;
  long unsigned int _9;
  __int128 unsigned _11;
  __int128 unsigned _12;
  _Bool _13;
  long unsigned int _14;
  long unsigned int _15;
  _Bool _16;
  long unsigned int _17;
  __int128 unsigned _19;
  __int128 unsigned _20;
  _Bool _21;
  long unsigned int _22;
  __int128 unsigned _23;
  _Bool _24;
  long unsigned int _25;
  __int128 unsigned _27;
  __int128 unsigned _29;
  __int128 unsigned _30;
  _Bool _31;
  long unsigned int _32;
  __int128 unsigned _34;
  _Bool _35;
  long unsigned int _36;
  unsigned int _37;
  __int128 unsigned _38;
  __int128 unsigned _39;
  __int128 unsigned _40;
  long unsigned int _41;
  __int128 unsigned _42;
  __int128 unsigned _43;
  __int128 unsigned _44;
  long unsigned int _45;
  __int128 unsigned _46;
  __int128 unsigned _47;
  long unsigned int _48;
  __int128 unsigned _49;
  long unsigned int _50;
  unsigned int _51;
  unsigned int _52;
  unsigned int _53;
  long unsigned int _83;
  long unsigned int _88;
  long unsigned int _89;
  int _90;
  int _102;
  long unsigned int _224;
  long unsigned int _225;
  __int128 unsigned _226;
  long unsigned int _228;
  long unsigned int _231;
  __int128 unsigned _232;
  __int128 unsigned _233;
  long unsigned int _235;
  __int128 unsigned _238;
  __int128 unsigned _239;
  long unsigned int _241;
  long unsigned int _243;
  long unsigned int _245;
  _Bool _246;
  _Bool _247;
  _Bool _248;
  _Bool _250;
  int _251;
  int _252;
  int _253;
  _Bool _254;
  _Bool _255;
  _Bool _257;
  unsigned long _258;
  int _259;
  unsigned long _260;
  _Bool _262;
  long unsigned int _263;
  long unsigned int _264;
  __int128 unsigned _270;
  __int128 unsigned _271;
  __int128 unsigned _272;
  __int128 unsigned _273;
  long unsigned int _275;
  _Bool _276;
  long unsigned int _277;
  _Bool _278;
  long unsigned int _279;
  _Bool _280;
  long unsigned int _281;
  _Bool _282;
  long unsigned int _283;
  _Bool _284;
  long unsigned int _285;
  _Bool _286;
  long unsigned int _287;
  _Bool _288;
  long unsigned int _289;
  _Bool _290;
  long unsigned int _291;
  _Bool _292;
  long unsigned int _293;
  _Bool _294;
  long unsigned int _295;
  _Bool _296;
  long unsigned int _297;
  _Bool _298;
  long unsigned int _299;
  _Bool _300;
  long unsigned int _301;
  _Bool _302;
  long unsigned int _303;
  _Bool _304;
  long unsigned int _305;
  _Bool _306;
  long unsigned int _307;
  _Bool _308;
  long unsigned int _309;
  _Bool _310;
  long unsigned int _311;
  _Bool _312;
  long unsigned int _313;
  _Bool _314;
  long unsigned int _315;
  _Bool _316;
  long unsigned int _317;
  _Bool _318;
  long unsigned int _319;
  _Bool _320;
  long unsigned int _321;
  _Bool _322;
  long unsigned int _323;
  _Bool _324;
  long unsigned int _325;
  _Bool _326;
  long unsigned int _327;
  _Bool _328;
  long unsigned int _329;
  _Bool _330;
  _Bool _332;
  long unsigned int _333;
  long unsigned int _335;
  _Bool _336;
  long unsigned int _337;
  _Bool _338;
  long unsigned int _339;
  _Bool _340;
  long unsigned int _341;
  _Bool _342;
  _Bool _343;
  _Bool _344;
  _Bool _345;
  long unsigned int _388;
  __complex__ long unsigned int _389;
  long unsigned int _390;
  __complex__ long unsigned int _391;
  long unsigned int _392;
  __complex__ long unsigned int _393;
  long unsigned int _394;
  __complex__ long unsigned int _395;
  long unsigned int _396;
  __complex__ long unsigned int _397;
  long unsigned int _398;
  __complex__ long unsigned int _399;
  long unsigned int _400;
  __complex__ long unsigned int _401;
  long unsigned int _402;
  __complex__ long unsigned int _403;
  long unsigned int _404;
  __complex__ long unsigned int _405;
  long unsigned int _406;
  __complex__ long unsigned int _407;
  long unsigned int _408;
  __complex__ long unsigned int _409;
  long unsigned int _410;
  __complex__ long unsigned int _411;
  long unsigned int _412;
  __complex__ long unsigned int _413;
  long unsigned int _414;
  __complex__ long unsigned int _415;
  long unsigned int _416;
  __complex__ long unsigned int _417;
  long unsigned int _418;
  __complex__ long unsigned int _419;
  long unsigned int _420;
  __complex__ long unsigned int _421;
  long unsigned int _422;
  __complex__ long unsigned int _423;
  long unsigned int _424;
  __complex__ long unsigned int _425;
  long unsigned int _426;
  __complex__ long unsigned int _427;
  long unsigned int _428;
  __complex__ long unsigned int _429;
  long unsigned int _430;
  __complex__ long unsigned int _431;
  long unsigned int _432;
  __complex__ long unsigned int _433;
  long unsigned int _434;
  __complex__ long unsigned int _435;
  long unsigned int _436;
  __complex__ long unsigned int _437;
  long unsigned int _438;
  __complex__ long unsigned int _439;
  long unsigned int _440;
  __complex__ long unsigned int _441;
  long unsigned int _442;
  __complex__ long unsigned int _443;
  long unsigned int _444;
  __complex__ long unsigned int _445;
  long unsigned int _446;
  __complex__ long unsigned int _447;
  long unsigned int _448;
  __complex__ long unsigned int _449;
  long unsigned int _450;
  __complex__ long unsigned int _451;
  long unsigned int _452;
  __complex__ long unsigned int _453;
  long unsigned int _454;
  __complex__ long unsigned int _455;
  long unsigned int _456;
  __complex__ long unsigned int _457;
  long unsigned int _458;
  __complex__ long unsigned int _459;
  long unsigned int _460;
  __complex__ long unsigned int _461;
  long unsigned int _462;
  __complex__ long unsigned int _463;
  long unsigned int _464;
  __complex__ long unsigned int _465;
  __complex__ long unsigned int _466;
  __complex__ long unsigned int _467;

  <bb 2> [local count: 1073741825]:
  n0_93 = MEM[(const uint64_t *)l_92(D) + 32B];
  n1_94 = MEM[(const uint64_t *)l_92(D) + 40B];
  n2_95 = MEM[(const uint64_t *)l_92(D) + 48B];
  n3_96 = MEM[(const uint64_t *)l_92(D) + 56B];
  c0_97 = *l_92(D);
  t_98 = n0_93 w* 4624529908474429119;
  _2 = t_98 >> 64;
  th_99 = (uint64_t) _2;
  tl_100 = (uint64_t) t_98;
  _455 = ADD_OVERFLOW (c0_97, tl_100);
  c0_101 = REALPART_EXPR <_455>;
  _454 = IMAGPART_EXPR <_455>;
  _276 = _454 != 0;
  _243 = (long unsigned int) _276;
  _3 = MEM[(const uint64_t *)l_92(D) + 8B];
  _88 = _3 + th_99;
  c0_103 = _88 + _243;
  _278 = _3 > c0_103;
  _275 = (long unsigned int) _278;
  t_104 = n1_94 w* 4624529908474429119;
  _5 = t_104 >> 64;
  th_105 = (uint64_t) _5;
  tl_106 = (uint64_t) t_104;
  _453 = ADD_OVERFLOW (c0_103, tl_106);
  c0_107 = REALPART_EXPR <_453>;
  _452 = IMAGPART_EXPR <_453>;
  _280 = _452 != 0;
  _277 = (long unsigned int) _280;
  th_108 = th_105 + _277;
  _451 = ADD_OVERFLOW (th_108, _275);
  c1_109 = REALPART_EXPR <_451>;
  _450 = IMAGPART_EXPR <_451>;
  _282 = _450 != 0;
  _279 = (long unsigned int) _282;
  t_110 = n0_93 w* 4994812053365940164;
  _6 = t_110 >> 64;
  th_111 = (uint64_t) _6;
  tl_112 = (uint64_t) t_110;
  _449 = ADD_OVERFLOW (c0_107, tl_112);
  c0_113 = REALPART_EXPR <_449>;
  _448 = IMAGPART_EXPR <_449>;
  _284 = _448 != 0;
  _281 = (long unsigned int) _284;
  th_114 = th_111 + _281;
  _447 = ADD_OVERFLOW (c1_109, th_114);
  c1_115 = REALPART_EXPR <_447>;
  _446 = IMAGPART_EXPR <_447>;
  _286 = _446 != 0;
  _283 = (long unsigned int) _286;
  c2_116 = _279 + _283;
  _7 = MEM[(const uint64_t *)l_92(D) + 16B];
  _445 = ADD_OVERFLOW (_7, c1_115);
  c0_117 = REALPART_EXPR <_445>;
  _444 = IMAGPART_EXPR <_445>;
  _8 = _444 != 0;
  _9 = (long unsigned int) _8;
  _443 = ADD_OVERFLOW (_9, c2_116);
  c1_118 = REALPART_EXPR <_443>;
  _442 = IMAGPART_EXPR <_443>;
  _288 = _442 != 0;
  _285 = (long unsigned int) _288;
  t_119 = n2_95 w* 4624529908474429119;
  _11 = t_119 >> 64;
  th_120 = (uint64_t) _11;
  tl_121 = (uint64_t) t_119;
  _441 = ADD_OVERFLOW (c0_117, tl_121);
  c0_122 = REALPART_EXPR <_441>;
  _440 = IMAGPART_EXPR <_441>;
  _290 = _440 != 0;
  _287 = (long unsigned int) _290;
  th_123 = th_120 + _287;
  _439 = ADD_OVERFLOW (c1_118, th_123);
  c1_124 = REALPART_EXPR <_439>;
  _438 = IMAGPART_EXPR <_439>;
  _292 = _438 != 0;
  _289 = (long unsigned int) _292;
  c2_125 = _285 + _289;
  t_126 = n1_94 w* 4994812053365940164;
  _12 = t_126 >> 64;
  th_127 = (uint64_t) _12;
  tl_128 = (uint64_t) t_126;
  _437 = ADD_OVERFLOW (c0_122, tl_128);
  c0_129 = REALPART_EXPR <_437>;
  _436 = IMAGPART_EXPR <_437>;
  _294 = _436 != 0;
  _291 = (long unsigned int) _294;
  th_130 = th_127 + _291;
  _435 = ADD_OVERFLOW (c1_124, th_130);
  c1_131 = REALPART_EXPR <_435>;
  _434 = IMAGPART_EXPR <_435>;
  _296 = _434 != 0;
  _293 = (long unsigned int) _296;
  c2_132 = c2_125 + _293;
  _433 = ADD_OVERFLOW (n0_93, c0_129);
  c0_133 = REALPART_EXPR <_433>;
  _432 = IMAGPART_EXPR <_433>;
  _13 = _432 != 0;
  _14 = (long unsigned int) _13;
  _431 = ADD_OVERFLOW (_14, c1_131);
  c1_134 = REALPART_EXPR <_431>;
  _430 = IMAGPART_EXPR <_431>;
  _298 = _430 != 0;
  _295 = (long unsigned int) _298;
  c2_135 = c2_132 + _295;
  _15 = MEM[(const uint64_t *)l_92(D) + 24B];
  _429 = ADD_OVERFLOW (_15, c1_134);
  c0_136 = REALPART_EXPR <_429>;
  _428 = IMAGPART_EXPR <_429>;
  _16 = _428 != 0;
  _17 = (long unsigned int) _16;
  _427 = ADD_OVERFLOW (_17, c2_135);
  c1_137 = REALPART_EXPR <_427>;
  _426 = IMAGPART_EXPR <_427>;
  _300 = _426 != 0;
  _297 = (long unsigned int) _300;
  t_138 = n3_96 w* 4624529908474429119;
  _19 = t_138 >> 64;
  th_139 = (uint64_t) _19;
  tl_140 = (uint64_t) t_138;
  _425 = ADD_OVERFLOW (c0_136, tl_140);
  c0_141 = REALPART_EXPR <_425>;
  _424 = IMAGPART_EXPR <_425>;
  _302 = _424 != 0;
  _299 = (long unsigned int) _302;
  th_142 = th_139 + _299;
  _423 = ADD_OVERFLOW (c1_137, th_142);
  c1_143 = REALPART_EXPR <_423>;
  _422 = IMAGPART_EXPR <_423>;
  _304 = _422 != 0;
  _301 = (long unsigned int) _304;
  c2_144 = _297 + _301;
  t_145 = n2_95 w* 4994812053365940164;
  _20 = t_145 >> 64;
  th_146 = (uint64_t) _20;
  tl_147 = (uint64_t) t_145;
  _421 = ADD_OVERFLOW (c0_141, tl_147);
  c0_148 = REALPART_EXPR <_421>;
  _420 = IMAGPART_EXPR <_421>;
  _306 = _420 != 0;
  _303 = (long unsigned int) _306;
  th_149 = th_146 + _303;
  _419 = ADD_OVERFLOW (c1_143, th_149);
  c1_150 = REALPART_EXPR <_419>;
  _418 = IMAGPART_EXPR <_419>;
  _308 = _418 != 0;
  _305 = (long unsigned int) _308;
  c2_151 = c2_144 + _305;
  _417 = ADD_OVERFLOW (n1_94, c0_148);
  c0_152 = REALPART_EXPR <_417>;
  _416 = IMAGPART_EXPR <_417>;
  _21 = _416 != 0;
  _22 = (long unsigned int) _21;
  _415 = ADD_OVERFLOW (_22, c1_150);
  c1_153 = REALPART_EXPR <_415>;
  _414 = IMAGPART_EXPR <_415>;
  _310 = _414 != 0;
  _307 = (long unsigned int) _310;
  c2_154 = c2_151 + _307;
  t_155 = n3_96 w* 4994812053365940164;
  _23 = t_155 >> 64;
  th_156 = (uint64_t) _23;
  tl_157 = (uint64_t) t_155;
  _413 = ADD_OVERFLOW (c1_153, tl_157);
  c0_158 = REALPART_EXPR <_413>;
  _412 = IMAGPART_EXPR <_413>;
  _312 = _412 != 0;
  _309 = (long unsigned int) _312;
  th_159 = th_156 + _309;
  _411 = ADD_OVERFLOW (c2_154, th_159);
  c1_160 = REALPART_EXPR <_411>;
  _410 = IMAGPART_EXPR <_411>;
  _314 = _410 != 0;
  _311 = (long unsigned int) _314;
  _409 = ADD_OVERFLOW (n2_95, c0_158);
  c0_161 = REALPART_EXPR <_409>;
  _408 = IMAGPART_EXPR <_409>;
  _24 = _408 != 0;
  _25 = (long unsigned int) _24;
  _407 = ADD_OVERFLOW (_25, c1_160);
  c1_162 = REALPART_EXPR <_407>;
  _406 = IMAGPART_EXPR <_407>;
  _316 = _406 != 0;
  _313 = (long unsigned int) _316;
  c2_163 = _311 + _313;
  _405 = ADD_OVERFLOW (n3_96, c1_162);
  c0_164 = REALPART_EXPR <_405>;
  _404 = IMAGPART_EXPR <_405>;
  _318 = _404 != 0;
  _315 = (long unsigned int) _318;
  c1_165 = c2_163 + _315;
  m6_166 = (uint32_t) c1_165;
  t_167 = c0_161 w* 4624529908474429119;
  _27 = t_167 >> 64;
  th_168 = (uint64_t) _27;
  tl_169 = (uint64_t) t_167;
  _403 = ADD_OVERFLOW (c0_101, tl_169);
  c0_170 = REALPART_EXPR <_403>;
  _402 = IMAGPART_EXPR <_403>;
  _320 = _402 != 0;
  _317 = (long unsigned int) _320;
  _89 = c0_113 + th_168;
  c0_172 = _89 + _317;
  _322 = c0_113 > c0_172;
  _319 = (long unsigned int) _322;
  t_173 = c0_164 w* 4624529908474429119;
  _29 = t_173 >> 64;
  th_174 = (uint64_t) _29;
  tl_175 = (uint64_t) t_173;
  _401 = ADD_OVERFLOW (c0_172, tl_175);
  c0_176 = REALPART_EXPR <_401>;
  _400 = IMAGPART_EXPR <_401>;
  _324 = _400 != 0;
  _321 = (long unsigned int) _324;
  th_177 = th_174 + _321;
  _399 = ADD_OVERFLOW (th_177, _319);
  c1_178 = REALPART_EXPR <_399>;
  _398 = IMAGPART_EXPR <_399>;
  _326 = _398 != 0;
  _323 = (long unsigned int) _326;
  t_179 = c0_161 w* 4994812053365940164;
  _30 = t_179 >> 64;
  th_180 = (uint64_t) _30;
  tl_181 = (uint64_t) t_179;
  _397 = ADD_OVERFLOW (c0_176, tl_181);
  c0_182 = REALPART_EXPR <_397>;
  _396 = IMAGPART_EXPR <_397>;
  _328 = _396 != 0;
  _325 = (long unsigned int) _328;
  th_183 = th_180 + _325;
  _395 = ADD_OVERFLOW (c1_178, th_183);
  c1_184 = REALPART_EXPR <_395>;
  _394 = IMAGPART_EXPR <_395>;
  _330 = _394 != 0;
  _327 = (long unsigned int) _330;
  c2_185 = _323 + _327;
  _393 = ADD_OVERFLOW (c0_133, c1_184);
  c0_186 = REALPART_EXPR <_393>;
  _392 = IMAGPART_EXPR <_393>;
  _31 = _392 != 0;
  _32 = (long unsigned int) _31;
  _391 = ADD_OVERFLOW (_32, c2_185);
  c1_187 = REALPART_EXPR <_391>;
  _390 = IMAGPART_EXPR <_391>;
  _332 = _390 != 0;
  _329 = (long unsigned int) _332;
  t_188 = c1_165 w* 4624529908474429119;
  tl_189 = (uint64_t) t_188;
  _389 = ADD_OVERFLOW (c0_186, tl_189);
  c0_190 = REALPART_EXPR <_389>;
  _388 = IMAGPART_EXPR <_389>;
  if (_388 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  c1_192 = c1_187 + 1;

  <bb 4> [local count: 1073741825]:
  # c1_346 = PHI <c1_192(3), c1_187(2)>
  t_194 = c0_164 w* 4994812053365940164;
  _34 = t_194 >> 64;
  th_195 = (uint64_t) _34;
  tl_196 = (uint64_t) t_194;
  _466 = ADD_OVERFLOW (c0_190, tl_196);
  c0_197 = REALPART_EXPR <_466>;
  _264 = IMAGPART_EXPR <_466>;
  _336 = _264 != 0;
  _333 = (long unsigned int) _336;
  th_198 = th_195 + _333;
  _467 = ADD_OVERFLOW (th_198, c1_346);
  c1_199 = REALPART_EXPR <_467>;
  _263 = IMAGPART_EXPR <_467>;
  _338 = _263 != 0;
  _335 = (long unsigned int) _338;
  c2_200 = _329 + _335;
  _465 = ADD_OVERFLOW (c0_161, c0_197);
  c0_201 = REALPART_EXPR <_465>;
  _464 = IMAGPART_EXPR <_465>;
  _35 = _464 != 0;
  _36 = (long unsigned int) _35;
  _463 = ADD_OVERFLOW (_36, c1_199);
  c1_202 = REALPART_EXPR <_463>;
  _462 = IMAGPART_EXPR <_463>;
  _340 = _462 != 0;
  _337 = (long unsigned int) _340;
  c2_203 = c2_200 + _337;
  _461 = ADD_OVERFLOW (c0_152, c1_202);
  c0_204 = REALPART_EXPR <_461>;
  _460 = IMAGPART_EXPR <_461>;
  _342 = _460 != 0;
  _339 = (long unsigned int) _342;
  c1_205 = c2_203 + _339;
  t_206 = c1_165 w* 4994812053365940164;
  tl_207 = (uint64_t) t_206;
  _459 = ADD_OVERFLOW (c0_204, tl_207);
  c0_208 = REALPART_EXPR <_459>;
  _458 = IMAGPART_EXPR <_459>;
  _343 = _458 != 0;
  _341 = (long unsigned int) _343;
  c1_210 = c1_205 + _341;
  _457 = ADD_OVERFLOW (c0_164, c0_208);
  c0_211 = REALPART_EXPR <_457>;
  _456 = IMAGPART_EXPR <_457>;
  _344 = _456 != 0;
  _83 = (long unsigned int) _344;
  c1_212 = _83 + c1_210;
  _37 = (unsigned int) c1_212;
  p4_213 = _37 + m6_166;
  _38 = (__int128 unsigned) c0_170;
  _39 = (__int128 unsigned) p4_213;
  _40 = _39 * 4624529908474429119;
  c_214 = _38 + _40;
  _41 = (long unsigned int) c_214;
  c_216 = c_214 >> 64;
  _42 = (__int128 unsigned) c0_182;
  _43 = _39 * 4994812053365940164;
  _44 = _42 + _43;
  c_217 = _44 + c_216;
  _45 = (long unsigned int) c_217;
  c_218 = c_217 >> 64;
  _46 = (__int128 unsigned) c0_201;
  _47 = _39 + _46;
  c_219 = _47 + c_218;
  _48 = (long unsigned int) c_219;
  c_220 = c_219 >> 64;
  _49 = (__int128 unsigned) c0_211;
  c_221 = _49 + c_220;
  _50 = (long unsigned int) c_221;
  c_222 = c_221 >> 64;
  _246 = _50 != 18446744073709551615;
  _247 = _48 <= 18446744073709551613;
  _248 = _246 | _247;
  no_249 = (int) _248;
  _250 = _48 == 18446744073709551615;
  _251 = (int) _250;
  _252 = ~no_249;
  _253 = _251 & _252;
  _254 = _45 <= 13451932020343611450;
  _255 = _248 | _254;
  no_256 = (int) _255;
  _257 = _45 > 13451932020343611451;
  _259 = ~no_256;
  _262 = _41 > 13822214165235122496;
  _345 = _257 | _262;
  _102 = (int) _345;
  _90 = _102 & _259;
  yes_265 = _90 | _253;
  _51 = (unsigned int) yes_265;
  _52 = (unsigned int) c_222;
  _53 = _51 + _52;
  _270 = c_214 & 18446744073709551615;
  _224 = (long unsigned int) _53;
  _225 = _224 * 4624529908474429119;
  _226 = (__int128 unsigned) _225;
  t_227 = _226 + _270;
  _228 = _41 + _225;
  r_215(D)->d[0] = _228;
  t_229 = t_227 >> 64;
  _271 = c_217 & 18446744073709551615;
  _231 = _224 * 4994812053365940164;
  _232 = (__int128 unsigned) _231;
  _233 = _232 + _271;
  t_234 = t_229 + _233;
  _235 = (long unsigned int) t_234;
  r_215(D)->d[1] = _235;
  t_236 = t_234 >> 64;
  _272 = c_219 & 18446744073709551615;
  _238 = (__int128 unsigned) _53;
  _239 = _238 + _272;
  t_240 = t_236 + _239;
  _241 = (long unsigned int) t_240;
  r_215(D)->d[2] = _241;
  t_242 = t_240 >> 64;
  _273 = c_221 & 18446744073709551615;
  t_244 = t_242 + _273;
  _245 = (long unsigned int) t_244;
  r_215(D)->d[3] = _245;
  return;

}



;; Function secp256k1_scalar_mul_512 (secp256k1_scalar_mul_512, funcdef_no=127, decl_uid=5020, cgraph_uid=127, symbol_order=127)

__attribute__((used))
secp256k1_scalar_mul_512 (uint64_t * l, const struct secp256k1_scalar * a, const struct secp256k1_scalar * b)
{
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint32_t c2;
  uint64_t c1;
  uint64_t c0;
  long unsigned int _1;
  long unsigned int _3;
  __int128 unsigned _5;
  long unsigned int _6;
  long unsigned int _8;
  __int128 unsigned _10;
  long unsigned int _11;
  long unsigned int _13;
  __int128 unsigned _15;
  long unsigned int _16;
  long unsigned int _18;
  __int128 unsigned _20;
  long unsigned int _21;
  long unsigned int _23;
  __int128 unsigned _25;
  long unsigned int _26;
  long unsigned int _28;
  __int128 unsigned _30;
  long unsigned int _31;
  long unsigned int _33;
  __int128 unsigned _35;
  long unsigned int _36;
  long unsigned int _38;
  __int128 unsigned _40;
  long unsigned int _41;
  long unsigned int _43;
  __int128 unsigned _45;
  long unsigned int _46;
  long unsigned int _48;
  __int128 unsigned _50;
  long unsigned int _51;
  long unsigned int _53;
  __int128 unsigned _55;
  long unsigned int _56;
  long unsigned int _58;
  __int128 unsigned _60;
  long unsigned int _61;
  long unsigned int _63;
  __int128 unsigned _65;
  long unsigned int _66;
  long unsigned int _68;
  __int128 unsigned _70;
  long unsigned int _71;
  long unsigned int _73;
  __int128 unsigned _75;
  long unsigned int _76;
  long unsigned int _78;
  __int128 unsigned _80;
  __complex__ long unsigned int _81;
  long unsigned int _82;
  __complex__ long unsigned int _83;
  long unsigned int _84;
  __complex__ long unsigned int _85;
  long unsigned int _86;
  __complex__ long unsigned int _87;
  long unsigned int _88;
  __complex__ long unsigned int _89;
  long unsigned int _90;
  __complex__ long unsigned int _91;
  long unsigned int _92;
  __complex__ long unsigned int _93;
  long unsigned int _94;
  __complex__ long unsigned int _95;
  long unsigned int _96;
  __complex__ long unsigned int _97;
  long unsigned int _98;
  __complex__ long unsigned int _99;
  long unsigned int _100;
  __complex__ long unsigned int _101;
  long unsigned int _102;
  __complex__ long unsigned int _103;
  long unsigned int _104;
  __complex__ long unsigned int _105;
  long unsigned int _106;
  __complex__ long unsigned int _107;
  long unsigned int _108;
  long unsigned int _226;
  __complex__ long unsigned int _227;
  long unsigned int _228;
  _Bool _229;
  long unsigned int _230;
  _Bool _231;
  long unsigned int _232;
  _Bool _233;
  __complex__ long unsigned int _234;
  _Bool _235;
  long unsigned int _236;
  _Bool _237;
  unsigned int _238;
  _Bool _239;
  long unsigned int _240;
  _Bool _241;
  unsigned int _242;
  _Bool _243;
  long unsigned int _244;
  _Bool _245;
  unsigned int _246;
  _Bool _247;
  long unsigned int _248;
  _Bool _249;
  unsigned int _250;
  _Bool _251;
  long unsigned int _252;
  _Bool _253;
  unsigned int _254;
  _Bool _255;
  long unsigned int _256;
  _Bool _257;
  unsigned int _258;
  _Bool _259;
  long unsigned int _260;
  _Bool _261;
  unsigned int _262;
  _Bool _263;
  long unsigned int _264;
  _Bool _265;
  unsigned int _266;
  _Bool _267;
  long unsigned int _268;
  _Bool _269;
  unsigned int _270;
  _Bool _271;
  long unsigned int _272;
  _Bool _273;
  unsigned int _274;
  _Bool _275;
  long unsigned int _276;
  _Bool _277;
  unsigned int _278;
  _Bool _279;
  long unsigned int _280;
  _Bool _281;
  unsigned int _282;
  _Bool _283;
  long unsigned int _284;
  __complex__ long unsigned int _285;
  long unsigned int _286;
  __complex__ long unsigned int _287;
  long unsigned int _288;
  __complex__ long unsigned int _289;
  long unsigned int _290;
  __complex__ long unsigned int _291;
  long unsigned int _292;
  __complex__ long unsigned int _293;
  long unsigned int _294;
  __complex__ long unsigned int _295;
  long unsigned int _296;
  __complex__ long unsigned int _297;
  long unsigned int _298;
  __complex__ long unsigned int _299;
  long unsigned int _300;
  __complex__ long unsigned int _301;
  long unsigned int _302;
  __complex__ long unsigned int _303;
  long unsigned int _304;
  __complex__ long unsigned int _305;
  long unsigned int _306;
  __complex__ long unsigned int _307;
  long unsigned int _308;

  <bb 2> [local count: 1073741825]:
  _1 = a_110(D)->d[0];
  _3 = b_111(D)->d[0];
  t_112 = _1 w* _3;
  _5 = t_112 >> 64;
  th_113 = (uint64_t) _5;
  tl_114 = (uint64_t) t_112;
  *l_115(D) = tl_114;
  _6 = a_110(D)->d[0];
  _8 = b_111(D)->d[1];
  t_117 = _6 w* _8;
  _10 = t_117 >> 64;
  th_118 = (uint64_t) _10;
  tl_119 = (uint64_t) t_117;
  _107 = ADD_OVERFLOW (th_113, tl_119);
  c0_120 = REALPART_EXPR <_107>;
  _108 = IMAGPART_EXPR <_107>;
  _229 = _108 != 0;
  _230 = (long unsigned int) _229;
  th_121 = th_118 + _230;
  _11 = a_110(D)->d[1];
  _13 = b_111(D)->d[0];
  t_122 = _11 w* _13;
  _15 = t_122 >> 64;
  th_123 = (uint64_t) _15;
  tl_124 = (uint64_t) t_122;
  _234 = ADD_OVERFLOW (c0_120, tl_124);
  c0_125 = REALPART_EXPR <_234>;
  _106 = IMAGPART_EXPR <_234>;
  _231 = _106 != 0;
  _232 = (long unsigned int) _231;
  th_126 = th_123 + _232;
  _105 = ADD_OVERFLOW (th_121, th_126);
  c1_127 = REALPART_EXPR <_105>;
  _104 = IMAGPART_EXPR <_105>;
  _233 = _104 != 0;
  MEM[(uint64_t *)l_115(D) + 8B] = c0_125;
  c1_129 = (uint64_t) _233;
  _16 = a_110(D)->d[0];
  _18 = b_111(D)->d[2];
  t_130 = _16 w* _18;
  _20 = t_130 >> 64;
  th_131 = (uint64_t) _20;
  tl_132 = (uint64_t) t_130;
  _103 = ADD_OVERFLOW (c1_127, tl_132);
  c0_133 = REALPART_EXPR <_103>;
  _102 = IMAGPART_EXPR <_103>;
  _235 = _102 != 0;
  _236 = (long unsigned int) _235;
  th_134 = th_131 + _236;
  _101 = ADD_OVERFLOW (c1_129, th_134);
  c1_135 = REALPART_EXPR <_101>;
  _100 = IMAGPART_EXPR <_101>;
  _237 = _100 != 0;
  _238 = (unsigned int) _237;
  _21 = a_110(D)->d[1];
  _23 = b_111(D)->d[1];
  t_136 = _21 w* _23;
  _25 = t_136 >> 64;
  th_137 = (uint64_t) _25;
  tl_138 = (uint64_t) t_136;
  _99 = ADD_OVERFLOW (c0_133, tl_138);
  c0_139 = REALPART_EXPR <_99>;
  _98 = IMAGPART_EXPR <_99>;
  _239 = _98 != 0;
  _240 = (long unsigned int) _239;
  th_140 = th_137 + _240;
  _97 = ADD_OVERFLOW (c1_135, th_140);
  c1_141 = REALPART_EXPR <_97>;
  _96 = IMAGPART_EXPR <_97>;
  _241 = _96 != 0;
  _242 = (unsigned int) _241;
  c2_142 = _238 + _242;
  _26 = a_110(D)->d[2];
  _28 = b_111(D)->d[0];
  t_143 = _26 w* _28;
  _30 = t_143 >> 64;
  th_144 = (uint64_t) _30;
  tl_145 = (uint64_t) t_143;
  _95 = ADD_OVERFLOW (c0_139, tl_145);
  c0_146 = REALPART_EXPR <_95>;
  _94 = IMAGPART_EXPR <_95>;
  _243 = _94 != 0;
  _244 = (long unsigned int) _243;
  th_147 = th_144 + _244;
  _93 = ADD_OVERFLOW (c1_141, th_147);
  c1_148 = REALPART_EXPR <_93>;
  _92 = IMAGPART_EXPR <_93>;
  _245 = _92 != 0;
  _246 = (unsigned int) _245;
  c2_149 = c2_142 + _246;
  MEM[(uint64_t *)l_115(D) + 16B] = c0_146;
  c1_151 = (uint64_t) c2_149;
  _31 = a_110(D)->d[0];
  _33 = b_111(D)->d[3];
  t_152 = _31 w* _33;
  _35 = t_152 >> 64;
  th_153 = (uint64_t) _35;
  tl_154 = (uint64_t) t_152;
  _91 = ADD_OVERFLOW (c1_148, tl_154);
  c0_155 = REALPART_EXPR <_91>;
  _90 = IMAGPART_EXPR <_91>;
  _247 = _90 != 0;
  _248 = (long unsigned int) _247;
  th_156 = th_153 + _248;
  _89 = ADD_OVERFLOW (c1_151, th_156);
  c1_157 = REALPART_EXPR <_89>;
  _88 = IMAGPART_EXPR <_89>;
  _249 = _88 != 0;
  _250 = (unsigned int) _249;
  _36 = a_110(D)->d[1];
  _38 = b_111(D)->d[2];
  t_158 = _36 w* _38;
  _40 = t_158 >> 64;
  th_159 = (uint64_t) _40;
  tl_160 = (uint64_t) t_158;
  _87 = ADD_OVERFLOW (c0_155, tl_160);
  c0_161 = REALPART_EXPR <_87>;
  _86 = IMAGPART_EXPR <_87>;
  _251 = _86 != 0;
  _252 = (long unsigned int) _251;
  th_162 = th_159 + _252;
  _85 = ADD_OVERFLOW (c1_157, th_162);
  c1_163 = REALPART_EXPR <_85>;
  _84 = IMAGPART_EXPR <_85>;
  _253 = _84 != 0;
  _254 = (unsigned int) _253;
  c2_164 = _250 + _254;
  _41 = a_110(D)->d[2];
  _43 = b_111(D)->d[1];
  t_165 = _41 w* _43;
  _45 = t_165 >> 64;
  th_166 = (uint64_t) _45;
  tl_167 = (uint64_t) t_165;
  _83 = ADD_OVERFLOW (c0_161, tl_167);
  c0_168 = REALPART_EXPR <_83>;
  _82 = IMAGPART_EXPR <_83>;
  _255 = _82 != 0;
  _256 = (long unsigned int) _255;
  th_169 = th_166 + _256;
  _81 = ADD_OVERFLOW (c1_163, th_169);
  c1_170 = REALPART_EXPR <_81>;
  _228 = IMAGPART_EXPR <_81>;
  _257 = _228 != 0;
  _258 = (unsigned int) _257;
  c2_171 = c2_164 + _258;
  _46 = a_110(D)->d[3];
  _48 = b_111(D)->d[0];
  t_172 = _46 w* _48;
  _50 = t_172 >> 64;
  th_173 = (uint64_t) _50;
  tl_174 = (uint64_t) t_172;
  _227 = ADD_OVERFLOW (c0_168, tl_174);
  c0_175 = REALPART_EXPR <_227>;
  _226 = IMAGPART_EXPR <_227>;
  _259 = _226 != 0;
  _260 = (long unsigned int) _259;
  th_176 = th_173 + _260;
  _285 = ADD_OVERFLOW (c1_170, th_176);
  c1_177 = REALPART_EXPR <_285>;
  _286 = IMAGPART_EXPR <_285>;
  _261 = _286 != 0;
  _262 = (unsigned int) _261;
  c2_178 = c2_171 + _262;
  MEM[(uint64_t *)l_115(D) + 24B] = c0_175;
  c1_180 = (uint64_t) c2_178;
  _51 = a_110(D)->d[1];
  _53 = b_111(D)->d[3];
  t_181 = _51 w* _53;
  _55 = t_181 >> 64;
  th_182 = (uint64_t) _55;
  tl_183 = (uint64_t) t_181;
  _287 = ADD_OVERFLOW (c1_177, tl_183);
  c0_184 = REALPART_EXPR <_287>;
  _288 = IMAGPART_EXPR <_287>;
  _263 = _288 != 0;
  _264 = (long unsigned int) _263;
  th_185 = th_182 + _264;
  _289 = ADD_OVERFLOW (c1_180, th_185);
  c1_186 = REALPART_EXPR <_289>;
  _290 = IMAGPART_EXPR <_289>;
  _265 = _290 != 0;
  _266 = (unsigned int) _265;
  _56 = a_110(D)->d[2];
  _58 = b_111(D)->d[2];
  t_187 = _56 w* _58;
  _60 = t_187 >> 64;
  th_188 = (uint64_t) _60;
  tl_189 = (uint64_t) t_187;
  _291 = ADD_OVERFLOW (c0_184, tl_189);
  c0_190 = REALPART_EXPR <_291>;
  _292 = IMAGPART_EXPR <_291>;
  _267 = _292 != 0;
  _268 = (long unsigned int) _267;
  th_191 = th_188 + _268;
  _293 = ADD_OVERFLOW (c1_186, th_191);
  c1_192 = REALPART_EXPR <_293>;
  _294 = IMAGPART_EXPR <_293>;
  _269 = _294 != 0;
  _270 = (unsigned int) _269;
  c2_193 = _266 + _270;
  _61 = a_110(D)->d[3];
  _63 = b_111(D)->d[1];
  t_194 = _61 w* _63;
  _65 = t_194 >> 64;
  th_195 = (uint64_t) _65;
  tl_196 = (uint64_t) t_194;
  _295 = ADD_OVERFLOW (c0_190, tl_196);
  c0_197 = REALPART_EXPR <_295>;
  _296 = IMAGPART_EXPR <_295>;
  _271 = _296 != 0;
  _272 = (long unsigned int) _271;
  th_198 = th_195 + _272;
  _297 = ADD_OVERFLOW (c1_192, th_198);
  c1_199 = REALPART_EXPR <_297>;
  _298 = IMAGPART_EXPR <_297>;
  _273 = _298 != 0;
  _274 = (unsigned int) _273;
  c2_200 = c2_193 + _274;
  MEM[(uint64_t *)l_115(D) + 32B] = c0_197;
  c1_202 = (uint64_t) c2_200;
  _66 = a_110(D)->d[2];
  _68 = b_111(D)->d[3];
  t_203 = _66 w* _68;
  _70 = t_203 >> 64;
  th_204 = (uint64_t) _70;
  tl_205 = (uint64_t) t_203;
  _299 = ADD_OVERFLOW (c1_199, tl_205);
  c0_206 = REALPART_EXPR <_299>;
  _300 = IMAGPART_EXPR <_299>;
  _275 = _300 != 0;
  _276 = (long unsigned int) _275;
  th_207 = th_204 + _276;
  _301 = ADD_OVERFLOW (c1_202, th_207);
  c1_208 = REALPART_EXPR <_301>;
  _302 = IMAGPART_EXPR <_301>;
  _277 = _302 != 0;
  _278 = (unsigned int) _277;
  _71 = a_110(D)->d[3];
  _73 = b_111(D)->d[2];
  t_209 = _71 w* _73;
  _75 = t_209 >> 64;
  th_210 = (uint64_t) _75;
  tl_211 = (uint64_t) t_209;
  _303 = ADD_OVERFLOW (c0_206, tl_211);
  c0_212 = REALPART_EXPR <_303>;
  _304 = IMAGPART_EXPR <_303>;
  _279 = _304 != 0;
  _280 = (long unsigned int) _279;
  th_213 = th_210 + _280;
  _305 = ADD_OVERFLOW (c1_208, th_213);
  c1_214 = REALPART_EXPR <_305>;
  _306 = IMAGPART_EXPR <_305>;
  _281 = _306 != 0;
  _282 = (unsigned int) _281;
  c2_215 = _278 + _282;
  MEM[(uint64_t *)l_115(D) + 40B] = c0_212;
  c1_217 = (uint64_t) c2_215;
  _76 = a_110(D)->d[3];
  _78 = b_111(D)->d[3];
  t_218 = _76 w* _78;
  _80 = t_218 >> 64;
  th_219 = (uint64_t) _80;
  tl_220 = (uint64_t) t_218;
  _307 = ADD_OVERFLOW (c1_214, tl_220);
  c0_221 = REALPART_EXPR <_307>;
  _308 = IMAGPART_EXPR <_307>;
  _283 = _308 != 0;
  _284 = (long unsigned int) _283;
  th_222 = th_219 + _284;
  c1_223 = c1_217 + th_222;
  MEM[(uint64_t *)l_115(D) + 48B] = c0_221;
  MEM[(uint64_t *)l_115(D) + 56B] = c1_223;
  return;

}



;; Function secp256k1_scalar_sqr_512 (secp256k1_scalar_sqr_512, funcdef_no=128, decl_uid=5075, cgraph_uid=128, symbol_order=128)

__attribute__((used))
secp256k1_scalar_sqr_512 (uint64_t * l, const struct secp256k1_scalar * a)
{
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t tl2;
  uint64_t th2;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t tl2;
  uint64_t th2;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t tl2;
  uint64_t th2;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t tl2;
  uint64_t th2;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t tl2;
  uint64_t th2;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t tl2;
  uint64_t th2;
  uint64_t th;
  uint64_t tl;
  uint128_t t;
  uint64_t th;
  uint64_t tl;
  uint32_t c2;
  uint64_t c1;
  uint64_t c0;
  long unsigned int _1;
  __int128 unsigned _3;
  long unsigned int _4;
  long unsigned int _6;
  __int128 unsigned _8;
  long unsigned int _9;
  _Bool _10;
  _Bool _11;
  unsigned int _12;
  long unsigned int _13;
  long unsigned int _15;
  __int128 unsigned _17;
  __complex__ long unsigned int _18;
  _Bool _19;
  _Bool _20;
  unsigned int _21;
  long unsigned int _22;
  __int128 unsigned _24;
  long unsigned int _25;
  long unsigned int _27;
  __int128 unsigned _29;
  __complex__ long unsigned int _30;
  _Bool _31;
  _Bool _32;
  unsigned int _33;
  long unsigned int _34;
  long unsigned int _36;
  __int128 unsigned _38;
  long unsigned int _39;
  _Bool _40;
  _Bool _41;
  unsigned int _42;
  long unsigned int _43;
  long unsigned int _45;
  __int128 unsigned _47;
  __complex__ long unsigned int _48;
  _Bool _49;
  _Bool _50;
  unsigned int _51;
  long unsigned int _52;
  __int128 unsigned _54;
  long unsigned int _55;
  long unsigned int _57;
  __int128 unsigned _59;
  long unsigned int _60;
  _Bool _61;
  _Bool _62;
  unsigned int _63;
  long unsigned int _64;
  __int128 unsigned _66;
  long unsigned int _69;
  __complex__ long unsigned int _70;
  long unsigned int _71;
  __complex__ long unsigned int _72;
  long unsigned int _73;
  __complex__ long unsigned int _74;
  long unsigned int _75;
  __complex__ long unsigned int _76;
  long unsigned int _77;
  __complex__ long unsigned int _78;
  long unsigned int _79;
  __complex__ long unsigned int _80;
  long unsigned int _81;
  __complex__ long unsigned int _82;
  long unsigned int _83;
  __complex__ long unsigned int _84;
  long unsigned int _85;
  __complex__ long unsigned int _86;
  long unsigned int _87;
  __complex__ long unsigned int _88;
  long unsigned int _89;
  __complex__ long unsigned int _90;
  long unsigned int _91;
  unsigned int _92;
  unsigned int _93;
  unsigned int _94;
  __complex__ long unsigned int _141;
  long unsigned int _143;
  __complex__ long unsigned int _186;
  long unsigned int _213;
  unsigned int _214;
  _Bool _215;
  _Bool _216;
  _Bool _217;
  long unsigned int _218;
  _Bool _219;
  unsigned int _220;
  _Bool _221;
  long unsigned int _222;
  _Bool _223;
  long unsigned int _224;
  _Bool _225;
  unsigned int _226;
  unsigned int _227;
  long unsigned int _228;
  _Bool _229;
  _Bool _230;
  _Bool _231;
  unsigned int _232;
  _Bool _233;
  long unsigned int _234;
  _Bool _235;
  long unsigned int _236;
  unsigned int _237;
  unsigned int _238;
  _Bool _239;
  _Bool _240;
  _Bool _241;
  long unsigned int _242;
  _Bool _243;
  long unsigned int _244;
  _Bool _245;
  unsigned int _246;
  long unsigned int _247;
  unsigned int _248;
  _Bool _249;
  _Bool _250;
  _Bool _251;
  long unsigned int _252;
  _Bool _253;
  unsigned int _254;
  _Bool _255;
  long unsigned int _256;
  _Bool _257;
  unsigned int _258;
  _Bool _259;
  unsigned int _260;
  long unsigned int _261;
  long unsigned int _262;
  _Bool _263;
  _Bool _264;
  _Bool _265;
  unsigned int _266;
  _Bool _267;
  long unsigned int _268;

  <bb 2> [local count: 1073741825]:
  _1 = a_96(D)->d[0];
  t_97 = _1 w* _1;
  _3 = t_97 >> 64;
  th_98 = (uint64_t) _3;
  tl_99 = (uint64_t) t_97;
  *l_100(D) = tl_99;
  _4 = a_96(D)->d[0];
  _6 = a_96(D)->d[1];
  t_102 = _4 w* _6;
  _8 = t_102 >> 64;
  th_103 = (uint64_t) _8;
  tl_104 = (uint64_t) t_102;
  th2_105 = th_103 * 2;
  _216 = th_103 > th2_105;
  _214 = (unsigned int) _216;
  tl2_106 = tl_104 * 2;
  _215 = tl_104 > tl2_106;
  _213 = (long unsigned int) _215;
  th2_107 = th2_105 + _213;
  _18 = ADD_OVERFLOW (th_98, tl2_106);
  c0_108 = REALPART_EXPR <_18>;
  _9 = IMAGPART_EXPR <_18>;
  _217 = _9 != 0;
  _218 = (long unsigned int) _217;
  th2_109 = th2_107 + _218;
  _10 = th2_109 == 0;
  _11 = _10 & _217;
  _12 = (unsigned int) _11;
  c2_110 = _12 + _214;
  MEM[(uint64_t *)l_100(D) + 8B] = c0_108;
  c1_112 = (uint64_t) c2_110;
  _13 = a_96(D)->d[0];
  _15 = a_96(D)->d[2];
  t_113 = _13 w* _15;
  _17 = t_113 >> 64;
  th_114 = (uint64_t) _17;
  tl_115 = (uint64_t) t_113;
  th2_116 = th_114 * 2;
  _219 = th_114 > th2_116;
  _220 = (unsigned int) _219;
  tl2_117 = tl_115 * 2;
  _221 = tl_115 > tl2_117;
  _222 = (long unsigned int) _221;
  th2_118 = th2_116 + _222;
  _30 = ADD_OVERFLOW (th2_109, tl2_117);
  c0_119 = REALPART_EXPR <_30>;
  _39 = IMAGPART_EXPR <_30>;
  _223 = _39 != 0;
  _224 = (long unsigned int) _223;
  th2_120 = th2_118 + _224;
  _19 = th2_120 == 0;
  _20 = _19 & _223;
  _21 = (unsigned int) _20;
  c2_121 = _21 + _220;
  _48 = ADD_OVERFLOW (c1_112, th2_120);
  c1_122 = REALPART_EXPR <_48>;
  _60 = IMAGPART_EXPR <_48>;
  _225 = _60 != 0;
  _226 = (unsigned int) _225;
  c2_123 = c2_121 + _226;
  _22 = a_96(D)->d[1];
  t_124 = _22 w* _22;
  _24 = t_124 >> 64;
  th_125 = (uint64_t) _24;
  tl_126 = (uint64_t) t_124;
  _141 = ADD_OVERFLOW (c0_119, tl_126);
  c0_127 = REALPART_EXPR <_141>;
  _143 = IMAGPART_EXPR <_141>;
  _230 = _143 != 0;
  _228 = (long unsigned int) _230;
  th_128 = th_125 + _228;
  _186 = ADD_OVERFLOW (c1_122, th_128);
  c1_129 = REALPART_EXPR <_186>;
  _91 = IMAGPART_EXPR <_186>;
  _229 = _91 != 0;
  _227 = (unsigned int) _229;
  c2_130 = c2_123 + _227;
  MEM[(uint64_t *)l_100(D) + 16B] = c0_127;
  c1_132 = (uint64_t) c2_130;
  _25 = a_96(D)->d[0];
  _27 = a_96(D)->d[3];
  t_133 = _25 w* _27;
  _29 = t_133 >> 64;
  th_134 = (uint64_t) _29;
  tl_135 = (uint64_t) t_133;
  th2_136 = th_134 * 2;
  _231 = th_134 > th2_136;
  _232 = (unsigned int) _231;
  tl2_137 = tl_135 * 2;
  _233 = tl_135 > tl2_137;
  _234 = (long unsigned int) _233;
  th2_138 = th2_136 + _234;
  _90 = ADD_OVERFLOW (c1_129, tl2_137);
  c0_139 = REALPART_EXPR <_90>;
  _89 = IMAGPART_EXPR <_90>;
  _235 = _89 != 0;
  _236 = (long unsigned int) _235;
  th2_140 = th2_138 + _236;
  _31 = th2_140 == 0;
  _32 = _31 & _235;
  _33 = (unsigned int) _32;
  _88 = ADD_OVERFLOW (c1_132, th2_140);
  c1_142 = REALPART_EXPR <_88>;
  _87 = IMAGPART_EXPR <_88>;
  _240 = _87 != 0;
  _238 = (unsigned int) _240;
  _34 = a_96(D)->d[1];
  _36 = a_96(D)->d[2];
  t_144 = _34 w* _36;
  _38 = t_144 >> 64;
  th_145 = (uint64_t) _38;
  tl_146 = (uint64_t) t_144;
  th2_147 = th_145 * 2;
  _239 = th_145 > th2_147;
  _237 = (unsigned int) _239;
  _93 = _232 + _237;
  _92 = _33 + _93;
  c2_148 = _92 + _238;
  tl2_149 = tl_146 * 2;
  _241 = tl_146 > tl2_149;
  _242 = (long unsigned int) _241;
  th2_150 = th2_147 + _242;
  _86 = ADD_OVERFLOW (c0_139, tl2_149);
  c0_151 = REALPART_EXPR <_86>;
  _85 = IMAGPART_EXPR <_86>;
  _243 = _85 != 0;
  _244 = (long unsigned int) _243;
  th2_152 = th2_150 + _244;
  _40 = th2_152 == 0;
  _41 = _40 & _243;
  _42 = (unsigned int) _41;
  c2_153 = _42 + c2_148;
  _84 = ADD_OVERFLOW (c1_142, th2_152);
  c1_154 = REALPART_EXPR <_84>;
  _83 = IMAGPART_EXPR <_84>;
  _245 = _83 != 0;
  _246 = (unsigned int) _245;
  c2_155 = c2_153 + _246;
  MEM[(uint64_t *)l_100(D) + 24B] = c0_151;
  c1_157 = (uint64_t) c2_155;
  _43 = a_96(D)->d[1];
  _45 = a_96(D)->d[3];
  t_158 = _43 w* _45;
  _47 = t_158 >> 64;
  th_159 = (uint64_t) _47;
  tl_160 = (uint64_t) t_158;
  th2_161 = th_159 * 2;
  _250 = th_159 > th2_161;
  _248 = (unsigned int) _250;
  tl2_162 = tl_160 * 2;
  _249 = tl_160 > tl2_162;
  _247 = (long unsigned int) _249;
  th2_163 = th2_161 + _247;
  _82 = ADD_OVERFLOW (c1_154, tl2_162);
  c0_164 = REALPART_EXPR <_82>;
  _81 = IMAGPART_EXPR <_82>;
  _251 = _81 != 0;
  _252 = (long unsigned int) _251;
  th2_165 = th2_163 + _252;
  _49 = th2_165 == 0;
  _50 = _49 & _251;
  _51 = (unsigned int) _50;
  c2_166 = _51 + _248;
  _80 = ADD_OVERFLOW (c1_157, th2_165);
  c1_167 = REALPART_EXPR <_80>;
  _79 = IMAGPART_EXPR <_80>;
  _253 = _79 != 0;
  _254 = (unsigned int) _253;
  c2_168 = c2_166 + _254;
  _52 = a_96(D)->d[2];
  t_169 = _52 w* _52;
  _54 = t_169 >> 64;
  th_170 = (uint64_t) _54;
  tl_171 = (uint64_t) t_169;
  _78 = ADD_OVERFLOW (c0_164, tl_171);
  c0_172 = REALPART_EXPR <_78>;
  _77 = IMAGPART_EXPR <_78>;
  _255 = _77 != 0;
  _256 = (long unsigned int) _255;
  th_173 = th_170 + _256;
  _76 = ADD_OVERFLOW (c1_167, th_173);
  c1_174 = REALPART_EXPR <_76>;
  _75 = IMAGPART_EXPR <_76>;
  _257 = _75 != 0;
  _258 = (unsigned int) _257;
  c2_175 = c2_168 + _258;
  MEM[(uint64_t *)l_100(D) + 32B] = c0_172;
  c1_177 = (uint64_t) c2_175;
  _55 = a_96(D)->d[2];
  _57 = a_96(D)->d[3];
  t_178 = _55 w* _57;
  _59 = t_178 >> 64;
  th_179 = (uint64_t) _59;
  tl_180 = (uint64_t) t_178;
  th2_181 = th_179 * 2;
  _259 = th_179 > th2_181;
  _260 = (unsigned int) _259;
  tl2_182 = tl_180 * 2;
  _264 = tl_180 > tl2_182;
  _262 = (long unsigned int) _264;
  th2_183 = th2_181 + _262;
  _74 = ADD_OVERFLOW (c1_174, tl2_182);
  c0_184 = REALPART_EXPR <_74>;
  _73 = IMAGPART_EXPR <_74>;
  _263 = _73 != 0;
  _261 = (long unsigned int) _263;
  th2_185 = th2_183 + _261;
  _61 = th2_185 == 0;
  _62 = _61 & _263;
  _63 = (unsigned int) _62;
  _72 = ADD_OVERFLOW (c1_177, th2_185);
  c1_187 = REALPART_EXPR <_72>;
  _71 = IMAGPART_EXPR <_72>;
  _265 = _71 != 0;
  _266 = (unsigned int) _265;
  _94 = _63 + _266;
  c2_188 = _94 + _260;
  MEM[(uint64_t *)l_100(D) + 40B] = c0_184;
  c1_190 = (uint64_t) c2_188;
  _64 = a_96(D)->d[3];
  t_191 = _64 w* _64;
  _66 = t_191 >> 64;
  th_192 = (uint64_t) _66;
  tl_193 = (uint64_t) t_191;
  _70 = ADD_OVERFLOW (c1_187, tl_193);
  c0_194 = REALPART_EXPR <_70>;
  _69 = IMAGPART_EXPR <_70>;
  _267 = _69 != 0;
  _268 = (long unsigned int) _267;
  th_195 = th_192 + _268;
  c1_196 = c1_190 + th_195;
  MEM[(uint64_t *)l_100(D) + 48B] = c0_194;
  MEM[(uint64_t *)l_100(D) + 56B] = c1_196;
  return;

}



;; Function secp256k1_scalar_inverse (secp256k1_scalar_inverse, funcdef_no=136, decl_uid=4839, cgraph_uid=136, symbol_order=136)

secp256k1_scalar_inverse (struct secp256k1_scalar * r, const struct secp256k1_scalar * x)
{
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  uint64_t l[8];
  struct secp256k1_scalar u13;
  struct secp256k1_scalar u11;
  struct secp256k1_scalar u9;
  struct secp256k1_scalar u5;
  struct secp256k1_scalar u2;
  struct secp256k1_scalar x126;
  struct secp256k1_scalar x112;
  struct secp256k1_scalar x56;
  struct secp256k1_scalar x28;
  struct secp256k1_scalar x14;
  struct secp256k1_scalar x8;
  struct secp256k1_scalar x6;
  struct secp256k1_scalar x3;
  struct secp256k1_scalar x2;
  unsigned int ivtmp_1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_7;
  unsigned int ivtmp_8;
  unsigned int ivtmp_9;
  unsigned int ivtmp_10;
  unsigned int ivtmp_11;
  unsigned int ivtmp_12;
  unsigned int ivtmp_13;
  unsigned int ivtmp_14;
  unsigned int ivtmp_15;
  unsigned int ivtmp_16;
  unsigned int ivtmp_17;
  unsigned int ivtmp_18;
  unsigned int ivtmp_19;
  unsigned int ivtmp_20;
  unsigned int ivtmp_21;
  unsigned int ivtmp_22;
  unsigned int ivtmp_23;
  unsigned int ivtmp_24;
  unsigned int ivtmp_25;
  unsigned int ivtmp_26;
  unsigned int ivtmp_27;
  unsigned int ivtmp_28;
  unsigned int ivtmp_29;
  unsigned int ivtmp_362;
  unsigned int ivtmp_364;
  unsigned int ivtmp_366;
  unsigned int ivtmp_368;
  unsigned int ivtmp_370;
  unsigned int ivtmp_372;
  unsigned int ivtmp_374;
  unsigned int ivtmp_376;
  unsigned int ivtmp_378;
  unsigned int ivtmp_380;
  unsigned int ivtmp_382;
  unsigned int ivtmp_384;
  unsigned int ivtmp_386;
  unsigned int ivtmp_388;
  unsigned int ivtmp_390;
  unsigned int ivtmp_392;
  unsigned int ivtmp_394;
  unsigned int ivtmp_396;
  unsigned int ivtmp_398;
  unsigned int ivtmp_400;
  unsigned int ivtmp_402;
  unsigned int ivtmp_404;
  unsigned int ivtmp_406;
  unsigned int ivtmp_408;
  unsigned int ivtmp_410;
  unsigned int ivtmp_412;
  unsigned int ivtmp_414;
  unsigned int ivtmp_416;
  unsigned int ivtmp_418;

  <bb 2> [local count: 19219979]:
  secp256k1_scalar_sqr_512 (&l, x_60(D));
  secp256k1_scalar_reduce_512 (&u2, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_mul_512 (&l, &u2, x_60(D));
  secp256k1_scalar_reduce_512 (&x2, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_mul_512 (&l, &u2, &x2);
  secp256k1_scalar_reduce_512 (&u5, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_mul_512 (&l, &u5, &u2);
  secp256k1_scalar_reduce_512 (&x3, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_mul_512 (&l, &x3, &u2);
  secp256k1_scalar_reduce_512 (&u9, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_mul_512 (&l, &u9, &u2);
  secp256k1_scalar_reduce_512 (&u11, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_mul_512 (&l, &u11, &u2);
  secp256k1_scalar_reduce_512 (&u13, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_sqr_512 (&l, &u13);
  secp256k1_scalar_reduce_512 (&x6, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_sqr_512 (&l, &x6);
  secp256k1_scalar_reduce_512 (&x6, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_mul_512 (&l, &x6, &u11);
  secp256k1_scalar_reduce_512 (&x6, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_sqr_512 (&l, &x6);
  secp256k1_scalar_reduce_512 (&x8, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_sqr_512 (&l, &x8);
  secp256k1_scalar_reduce_512 (&x8, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_mul_512 (&l, &x8, &x2);
  secp256k1_scalar_reduce_512 (&x8, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_sqr_512 (&l, &x8);
  secp256k1_scalar_reduce_512 (&x14, &l);
  l ={v} {CLOBBER};

  <bb 3> [local count: 96076835]:
  # ivtmp_1 = PHI <5(2), ivtmp_418(3)>
  secp256k1_scalar_sqr_512 (&l, &x14);
  secp256k1_scalar_reduce_512 (&x14, &l);
  l ={v} {CLOBBER};
  ivtmp_418 = ivtmp_1 + 4294967295;
  if (ivtmp_418 != 0)
    goto <bb 3>; [80.00%]
  else
    goto <bb 4>; [20.00%]

  <bb 4> [local count: 19219979]:
  secp256k1_scalar_mul_512 (&l, &x14, &x6);
  secp256k1_scalar_reduce_512 (&x14, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_sqr_512 (&l, &x14);
  secp256k1_scalar_reduce_512 (&x28, &l);
  l ={v} {CLOBBER};

  <bb 5> [local count: 249967401]:
  # ivtmp_2 = PHI <13(4), ivtmp_416(5)>
  secp256k1_scalar_sqr_512 (&l, &x28);
  secp256k1_scalar_reduce_512 (&x28, &l);
  l ={v} {CLOBBER};
  ivtmp_416 = ivtmp_2 + 4294967295;
  if (ivtmp_416 != 0)
    goto <bb 5>; [92.31%]
  else
    goto <bb 6>; [7.69%]

  <bb 6> [local count: 19219979]:
  secp256k1_scalar_mul_512 (&l, &x28, &x14);
  secp256k1_scalar_reduce_512 (&x28, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_sqr_512 (&l, &x28);
  secp256k1_scalar_reduce_512 (&x56, &l);
  l ={v} {CLOBBER};

  <bb 7> [local count: 519154783]:
  # ivtmp_3 = PHI <27(6), ivtmp_414(7)>
  secp256k1_scalar_sqr_512 (&l, &x56);
  secp256k1_scalar_reduce_512 (&x56, &l);
  l ={v} {CLOBBER};
  ivtmp_414 = ivtmp_3 + 4294967295;
  if (ivtmp_414 != 0)
    goto <bb 7>; [96.30%]
  else
    goto <bb 8>; [3.70%]

  <bb 8> [local count: 19219979]:
  secp256k1_scalar_mul_512 (&l, &x56, &x28);
  secp256k1_scalar_reduce_512 (&x56, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_sqr_512 (&l, &x56);
  secp256k1_scalar_reduce_512 (&x112, &l);
  l ={v} {CLOBBER};

  <bb 9> [local count: 1054521846]:
  # ivtmp_4 = PHI <55(8), ivtmp_412(9)>
  secp256k1_scalar_sqr_512 (&l, &x112);
  secp256k1_scalar_reduce_512 (&x112, &l);
  l ={v} {CLOBBER};
  ivtmp_412 = ivtmp_4 + 4294967295;
  if (ivtmp_412 != 0)
    goto <bb 9>; [98.18%]
  else
    goto <bb 10>; [1.82%]

  <bb 10> [local count: 19219979]:
  secp256k1_scalar_mul_512 (&l, &x112, &x56);
  secp256k1_scalar_reduce_512 (&x112, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_sqr_512 (&l, &x112);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 11> [local count: 249967398]:
  # ivtmp_5 = PHI <13(10), ivtmp_410(11)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_410 = ivtmp_5 + 4294967295;
  if (ivtmp_410 != 0)
    goto <bb 11>; [92.31%]
  else
    goto <bb 12>; [7.69%]

  <bb 12> [local count: 19219979]:
  secp256k1_scalar_mul_512 (&l, &x126, &x14);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 13> [local count: 57659936]:
  # ivtmp_6 = PHI <3(12), ivtmp_408(13)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_408 = ivtmp_6 + 4294967295;
  if (ivtmp_408 != 0)
    goto <bb 13>; [66.67%]
  else
    goto <bb 14>; [33.33%]

  <bb 14> [local count: 19219979]:
  secp256k1_scalar_mul_512 (&l, &x126, &u5);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 15> [local count: 76879915]:
  # ivtmp_7 = PHI <4(14), ivtmp_406(15)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_406 = ivtmp_7 + 4294967295;
  if (ivtmp_406 != 0)
    goto <bb 15>; [75.00%]
  else
    goto <bb 16>; [25.00%]

  <bb 16> [local count: 19219979]:
  secp256k1_scalar_mul_512 (&l, &x126, &x3);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 17> [local count: 76879915]:
  # ivtmp_8 = PHI <4(16), ivtmp_404(17)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_404 = ivtmp_8 + 4294967295;
  if (ivtmp_404 != 0)
    goto <bb 17>; [75.00%]
  else
    goto <bb 18>; [25.00%]

  <bb 18> [local count: 19219979]:
  secp256k1_scalar_mul_512 (&l, &x126, &u5);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 19> [local count: 96076833]:
  # ivtmp_9 = PHI <5(18), ivtmp_402(19)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_402 = ivtmp_9 + 4294967295;
  if (ivtmp_402 != 0)
    goto <bb 19>; [80.00%]
  else
    goto <bb 20>; [20.00%]

  <bb 20> [local count: 19219979]:
  secp256k1_scalar_mul_512 (&l, &x126, &u11);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 21> [local count: 76879914]:
  # ivtmp_10 = PHI <4(20), ivtmp_400(21)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_400 = ivtmp_10 + 4294967295;
  if (ivtmp_400 != 0)
    goto <bb 21>; [75.00%]
  else
    goto <bb 22>; [25.00%]

  <bb 22> [local count: 19219979]:
  secp256k1_scalar_mul_512 (&l, &x126, &u11);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 23> [local count: 76879914]:
  # ivtmp_11 = PHI <4(22), ivtmp_398(23)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_398 = ivtmp_11 + 4294967295;
  if (ivtmp_398 != 0)
    goto <bb 23>; [75.00%]
  else
    goto <bb 24>; [25.00%]

  <bb 24> [local count: 19219979]:
  secp256k1_scalar_mul_512 (&l, &x126, &x3);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 25> [local count: 96076833]:
  # ivtmp_12 = PHI <5(24), ivtmp_396(25)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_396 = ivtmp_12 + 4294967295;
  if (ivtmp_396 != 0)
    goto <bb 25>; [80.00%]
  else
    goto <bb 26>; [20.00%]

  <bb 26> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &x3);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 27> [local count: 115279521]:
  # ivtmp_13 = PHI <6(26), ivtmp_394(27)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_394 = ivtmp_13 + 4294967295;
  if (ivtmp_394 != 0)
    goto <bb 27>; [83.33%]
  else
    goto <bb 28>; [16.67%]

  <bb 28> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &u13);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 29> [local count: 76879914]:
  # ivtmp_14 = PHI <4(28), ivtmp_392(29)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_392 = ivtmp_14 + 4294967295;
  if (ivtmp_392 != 0)
    goto <bb 29>; [75.00%]
  else
    goto <bb 30>; [25.00%]

  <bb 30> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &u5);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 31> [local count: 57659935]:
  # ivtmp_15 = PHI <3(30), ivtmp_390(31)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_390 = ivtmp_15 + 4294967295;
  if (ivtmp_390 != 0)
    goto <bb 31>; [66.67%]
  else
    goto <bb 32>; [33.33%]

  <bb 32> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &x3);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 33> [local count: 96076832]:
  # ivtmp_17 = PHI <5(32), ivtmp_16(33)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_16 = ivtmp_17 + 4294967295;
  if (ivtmp_16 != 0)
    goto <bb 33>; [80.00%]
  else
    goto <bb 34>; [20.00%]

  <bb 34> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &u9);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 35> [local count: 115279519]:
  # ivtmp_19 = PHI <6(34), ivtmp_18(35)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_18 = ivtmp_19 + 4294967295;
  if (ivtmp_18 != 0)
    goto <bb 35>; [83.33%]
  else
    goto <bb 36>; [16.67%]

  <bb 36> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &u5);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 37> [local count: 192220925]:
  # ivtmp_21 = PHI <10(36), ivtmp_20(37)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_20 = ivtmp_21 + 4294967295;
  if (ivtmp_20 != 0)
    goto <bb 37>; [90.00%]
  else
    goto <bb 38>; [10.00%]

  <bb 38> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &x3);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 39> [local count: 76879913]:
  # ivtmp_23 = PHI <4(38), ivtmp_22(39)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_22 = ivtmp_23 + 4294967295;
  if (ivtmp_22 != 0)
    goto <bb 39>; [75.00%]
  else
    goto <bb 40>; [25.00%]

  <bb 40> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &x3);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 41> [local count: 172979804]:
  # ivtmp_25 = PHI <9(40), ivtmp_24(41)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_24 = ivtmp_25 + 4294967295;
  if (ivtmp_24 != 0)
    goto <bb 41>; [88.89%]
  else
    goto <bb 42>; [11.11%]

  <bb 42> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &x8);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 43> [local count: 96076831]:
  # ivtmp_27 = PHI <5(42), ivtmp_26(43)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_26 = ivtmp_27 + 4294967295;
  if (ivtmp_26 != 0)
    goto <bb 43>; [80.00%]
  else
    goto <bb 44>; [20.00%]

  <bb 44> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &u9);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 45> [local count: 115279518]:
  # ivtmp_29 = PHI <6(44), ivtmp_28(45)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_28 = ivtmp_29 + 4294967295;
  if (ivtmp_28 != 0)
    goto <bb 45>; [83.33%]
  else
    goto <bb 46>; [16.67%]

  <bb 46> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &u11);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 47> [local count: 76879912]:
  # ivtmp_364 = PHI <4(46), ivtmp_362(47)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_362 = ivtmp_364 + 4294967295;
  if (ivtmp_362 != 0)
    goto <bb 47>; [75.00%]
  else
    goto <bb 48>; [25.00%]

  <bb 48> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &u13);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 49> [local count: 96076830]:
  # ivtmp_368 = PHI <5(48), ivtmp_366(49)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_366 = ivtmp_368 + 4294967295;
  if (ivtmp_366 != 0)
    goto <bb 49>; [80.00%]
  else
    goto <bb 50>; [20.00%]

  <bb 50> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &x2);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 51> [local count: 115279517]:
  # ivtmp_372 = PHI <6(50), ivtmp_370(51)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_370 = ivtmp_372 + 4294967295;
  if (ivtmp_370 != 0)
    goto <bb 51>; [83.33%]
  else
    goto <bb 52>; [16.67%]

  <bb 52> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &u13);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 53> [local count: 192220922]:
  # ivtmp_376 = PHI <10(52), ivtmp_374(53)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_374 = ivtmp_376 + 4294967295;
  if (ivtmp_374 != 0)
    goto <bb 53>; [90.00%]
  else
    goto <bb 54>; [10.00%]

  <bb 54> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &u13);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 55> [local count: 76879911]:
  # ivtmp_380 = PHI <4(54), ivtmp_378(55)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_378 = ivtmp_380 + 4294967295;
  if (ivtmp_378 != 0)
    goto <bb 55>; [75.00%]
  else
    goto <bb 56>; [25.00%]

  <bb 56> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &u9);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 57> [local count: 115279516]:
  # ivtmp_384 = PHI <6(56), ivtmp_382(57)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_382 = ivtmp_384 + 4294967295;
  if (ivtmp_382 != 0)
    goto <bb 57>; [83.33%]
  else
    goto <bb 58>; [16.67%]

  <bb 58> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, x_60(D));
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};

  <bb 59> [local count: 153777121]:
  # ivtmp_388 = PHI <8(58), ivtmp_386(59)>
  secp256k1_scalar_sqr_512 (&l, &x126);
  secp256k1_scalar_reduce_512 (&x126, &l);
  l ={v} {CLOBBER};
  ivtmp_386 = ivtmp_388 + 4294967295;
  if (ivtmp_386 != 0)
    goto <bb 59>; [87.50%]
  else
    goto <bb 60>; [12.50%]

  <bb 60> [local count: 19219978]:
  secp256k1_scalar_mul_512 (&l, &x126, &x6);
  secp256k1_scalar_reduce_512 (r_90(D), &l);
  l ={v} {CLOBBER};
  x2 ={v} {CLOBBER};
  x3 ={v} {CLOBBER};
  x6 ={v} {CLOBBER};
  x8 ={v} {CLOBBER};
  x14 ={v} {CLOBBER};
  x28 ={v} {CLOBBER};
  x56 ={v} {CLOBBER};
  x112 ={v} {CLOBBER};
  x126 ={v} {CLOBBER};
  u2 ={v} {CLOBBER};
  u5 ={v} {CLOBBER};
  u9 ={v} {CLOBBER};
  u11 ={v} {CLOBBER};
  u13 ={v} {CLOBBER};
  return;

}



;; Function secp256k1_scalar_mul (secp256k1_scalar_mul, funcdef_no=129, decl_uid=4830, cgraph_uid=129, symbol_order=129)

__attribute__((used))
secp256k1_scalar_mul (struct secp256k1_scalar * r, const struct secp256k1_scalar * a, const struct secp256k1_scalar * b)
{
  uint64_t l[8];

  <bb 2> [local count: 1073741825]:
  secp256k1_scalar_mul_512 (&l, a_2(D), b_3(D));
  secp256k1_scalar_reduce_512 (r_5(D), &l);
  l ={v} {CLOBBER};
  return;

}



;; Function secp256k1_scalar_shr_int (secp256k1_scalar_shr_int, funcdef_no=130, decl_uid=4833, cgraph_uid=130, symbol_order=130)

__attribute__((used))
secp256k1_scalar_shr_int (struct secp256k1_scalar * r, int n)
{
  int ret;
  long unsigned int _1;
  unsigned int _2;
  int _3;
  int _4;
  unsigned int _5;
  unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;

  <bb 2> [local count: 1073741825]:
  _1 = r_22(D)->d[0];
  _2 = (unsigned int) _1;
  _3 = 1 << n_23(D);
  _4 = _3 + -1;
  _5 = (unsigned int) _4;
  _6 = _2 & _5;
  ret_24 = (int) _6;
  _7 = _1 >> n_23(D);
  _8 = r_22(D)->d[1];
  _9 = 64 - n_23(D);
  _10 = _8 << _9;
  _11 = _7 + _10;
  r_22(D)->d[0] = _11;
  _12 = _8 >> n_23(D);
  _13 = r_22(D)->d[2];
  _14 = _13 << _9;
  _15 = _12 + _14;
  r_22(D)->d[1] = _15;
  _16 = _13 >> n_23(D);
  _17 = r_22(D)->d[3];
  _18 = _17 << _9;
  _19 = _16 + _18;
  r_22(D)->d[2] = _19;
  _20 = _17 >> n_23(D);
  r_22(D)->d[3] = _20;
  return ret_24;

}



;; Function secp256k1_scalar_sqr (secp256k1_scalar_sqr, funcdef_no=131, decl_uid=4836, cgraph_uid=131, symbol_order=131)

__attribute__((used))
secp256k1_scalar_sqr (struct secp256k1_scalar * r, const struct secp256k1_scalar * a)
{
  uint64_t l[8];

  <bb 2> [local count: 1073741825]:
  secp256k1_scalar_sqr_512 (&l, a_2(D));
  secp256k1_scalar_reduce_512 (r_4(D), &l);
  l ={v} {CLOBBER};
  return;

}



;; Function secp256k1_scalar_eq (secp256k1_scalar_eq, funcdef_no=132, decl_uid=4864, cgraph_uid=132, symbol_order=132)

__attribute__((used))
secp256k1_scalar_eq (const struct secp256k1_scalar * a, const struct secp256k1_scalar * b)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  _Bool _16;
  int _20;

  <bb 2> [local count: 1073741825]:
  _1 = a_18(D)->d[0];
  _2 = b_19(D)->d[0];
  _3 = _1 ^ _2;
  _4 = a_18(D)->d[1];
  _5 = b_19(D)->d[1];
  _6 = _4 ^ _5;
  _7 = _3 | _6;
  _8 = a_18(D)->d[2];
  _9 = b_19(D)->d[2];
  _10 = _8 ^ _9;
  _11 = _7 | _10;
  _12 = a_18(D)->d[3];
  _13 = b_19(D)->d[3];
  _14 = _12 ^ _13;
  _15 = _11 | _14;
  _16 = _15 == 0;
  _20 = (int) _16;
  return _20;

}



;; Function secp256k1_scalar_mul_shift_var (secp256k1_scalar_mul_shift_var, funcdef_no=133, decl_uid=4869, cgraph_uid=133, symbol_order=133)

__attribute__((used))
secp256k1_scalar_mul_shift_var (struct secp256k1_scalar * r, const struct secp256k1_scalar * a, const struct secp256k1_scalar * b, unsigned int shift)
{
  uint128_t t;
  unsigned int shifthigh;
  unsigned int shiftlow;
  unsigned int shiftlimbs;
  uint64_t l[8];
  long unsigned int _1;
  long unsigned int _2;
  _Bool _3;
  _Bool _4;
  _Bool _5;
  unsigned int _6;
  long unsigned int _7;
  long unsigned int _10;
  _Bool _11;
  unsigned int _14;
  long unsigned int _15;
  long unsigned int _18;
  unsigned int _22;
  long unsigned int _23;
  unsigned int _26;
  unsigned int _27;
  long unsigned int _28;
  unsigned int _29;
  long unsigned int _30;
  int _31;
  int _32;
  long unsigned int iftmp.108_35;
  uint64_t iftmp.107_48;
  uint64_t iftmp.109_52;
  uint64_t iftmp.111_55;
  uint64_t iftmp.112_58;
  unsigned int flag.2_62;
  unsigned int _63;
  unsigned int _64;
  unsigned int _68;
  _Bool _69;
  long unsigned int _70;
  unsigned int _71;
  __int128 unsigned _73;
  long unsigned int _75;
  long unsigned int _82;
  long unsigned int _85;
  long unsigned int iftmp.106_87;
  long unsigned int _89;
  long unsigned int _95;
  long unsigned int iftmp.110_102;
  long unsigned int _105;
  long unsigned int iftmp.106_112;
  long unsigned int iftmp.106_113;
  long unsigned int iftmp.106_114;
  __int128 unsigned _117;
  __int128 unsigned prephitmp_218;
  __int128 unsigned prephitmp_219;
  __int128 unsigned prephitmp_221;
  __int128 unsigned prephitmp_223;
  __int128 unsigned prephitmp_225;
  __int128 unsigned prephitmp_228;
  __int128 unsigned prephitmp_231;
  __int128 unsigned prephitmp_234;
  __int128 unsigned _235;
  __int128 unsigned prephitmp_236;
  unsigned int _237;
  long unsigned int pretmp_239;
  long unsigned int iftmp.106_241;
  long unsigned int iftmp.106_242;
  _Bool _244;
  long unsigned int _245;
  _Bool _247;
  long unsigned int _248;
  __int128 unsigned _251;
  unsigned int _252;
  long unsigned int pretmp_254;
  long unsigned int prephitmp_255;
  __int128 unsigned _262;
  __int128 unsigned _264;
  __int128 unsigned _265;
  __int128 unsigned _266;
  __int128 unsigned prephitmp_268;
  __int128 unsigned _269;
  __int128 unsigned prephitmp_270;

  <bb 2> [local count: 1073741825]:
  secp256k1_scalar_mul_512 (&l, a_41(D), b_42(D));
  if (shift_44(D) <= 511)
    goto <bb 3>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 3> [local count: 536870912]:
  shiftlimbs_45 = shift_44(D) >> 6;
  shiftlow_46 = shift_44(D) & 63;
  shifthigh_47 = 64 - shiftlow_46;
  _1 = l[shiftlimbs_45];
  _2 = _1 >> shiftlow_46;
  _3 = shift_44(D) <= 447;
  _4 = shiftlow_46 != 0;
  _5 = _3 & _4;
  if (_5 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 268435456]:
  _6 = shiftlimbs_45 + 1;
  _7 = l[_6];
  iftmp.107_48 = _7 << shifthigh_47;
  iftmp.106_87 = _2 | iftmp.107_48;
  r_50(D)->d[0] = iftmp.106_87;
  _266 = (__int128 unsigned) iftmp.106_87;
  _10 = _7 >> shiftlow_46;
  _11 = shift_44(D) <= 383;
  if (shift_44(D) <= 383)
    goto <bb 7>; [100.00%]
  else
    goto <bb 15>; [0.00%]

  <bb 5> [local count: 268435456]:
  r_50(D)->d[0] = _2;
  _265 = (__int128 unsigned) _2;
  if (shift_44(D) <= 447)
    goto <bb 6>; [100.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 6> [local count: 268435456]:
  _237 = shiftlimbs_45 + 1;
  pretmp_239 = l[_237];
  _248 = pretmp_239 >> shiftlow_46;
  _247 = shift_44(D) <= 383;
  goto <bb 15>; [100.00%]

  <bb 7> [local count: 268435456]:
  _14 = shiftlimbs_45 + 2;
  _15 = l[_14];
  iftmp.109_52 = _15 << shifthigh_47;
  iftmp.108_35 = _10 | iftmp.109_52;
  r_50(D)->d[1] = iftmp.108_35;
  _18 = _15 >> shiftlow_46;
  _264 = (__int128 unsigned) iftmp.108_35;
  if (shift_44(D) <= 319)
    goto <bb 8>; [100.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 8> [local count: 268435456]:
  _22 = shiftlimbs_45 + 3;
  _23 = l[_22];
  iftmp.111_55 = _23 << shifthigh_47;
  iftmp.110_102 = _18 | iftmp.111_55;
  _269 = (__int128 unsigned) iftmp.110_102;
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 268435456]:
  _252 = shiftlimbs_45 + 3;
  pretmp_254 = l[_252];

  <bb 10> [local count: 536870912]:
  # prephitmp_255 = PHI <_23(8), pretmp_254(9)>
  # prephitmp_268 = PHI <_264(8), _251(9)>
  # prephitmp_270 = PHI <_269(8), _262(9)>
  # iftmp.106_242 = PHI <iftmp.106_87(8), iftmp.106_241(9)>
  # prephitmp_219 = PHI <_266(8), prephitmp_218(9)>
  iftmp.112_58 = prephitmp_255 >> shiftlow_46;
  _235 = (__int128 unsigned) iftmp.112_58;

  <bb 11> [local count: 1073741825]:
  # iftmp.106_112 = PHI <iftmp.106_242(10), iftmp.106_113(12), iftmp.106_87(16), iftmp.106_241(14)>
  # prephitmp_228 = PHI <prephitmp_219(10), prephitmp_223(12), _266(16), prephitmp_218(14)>
  # prephitmp_231 = PHI <prephitmp_268(10), prephitmp_225(12), _264(16), _251(14)>
  # prephitmp_234 = PHI <prephitmp_270(10), 0(12), _117(16), _262(14)>
  # prephitmp_236 = PHI <_235(10), 0(12), 0(16), 0(14)>
  _26 = shift_44(D) + 4294967295;
  _27 = _26 >> 6;
  _28 = l[_27];
  _29 = _26 & 63;
  _30 = _28 >> _29;
  _31 = (int) _30;
  _32 = _31 & 1;
  flag.2_62 = (unsigned int) _32;
  _63 = flag.2_62 + 4294967295;
  _71 = _63 >> 6;
  _68 = _71 & 4;
  _69 = _68 == 0;
  _70 = (long unsigned int) _69;
  _73 = (__int128 unsigned) _69;
  t_74 = _73 + prephitmp_228;
  _75 = _70 + iftmp.106_112;
  r_50(D)->d[0] = _75;
  t_76 = t_74 >> 64;
  t_84 = t_76 + prephitmp_231;
  _85 = (long unsigned int) t_84;
  r_50(D)->d[1] = _85;
  t_86 = t_84 >> 64;
  t_94 = t_86 + prephitmp_234;
  _95 = (long unsigned int) t_94;
  r_50(D)->d[2] = _95;
  t_96 = t_94 >> 64;
  t_104 = t_96 + prephitmp_236;
  _105 = (long unsigned int) t_104;
  r_50(D)->d[3] = _105;
  l ={v} {CLOBBER};
  return;

  <bb 12> [local count: 536870913]:
  # iftmp.106_113 = PHI <iftmp.106_114(13), iftmp.106_241(15)>
  # prephitmp_223 = PHI <prephitmp_221(13), prephitmp_218(15)>
  # prephitmp_225 = PHI <0(13), _251(15)>
  goto <bb 11>; [100.00%]

  <bb 13> [local count: 536870913]:
  # iftmp.106_114 = PHI <0(2), _2(5)>
  # prephitmp_221 = PHI <0(2), _265(5)>
  goto <bb 12>; [100.00%]

  <bb 14> [local count: 268435456]:
  _64 = shiftlimbs_45 + 2;
  _82 = l[_64];
  _89 = _82 >> shiftlow_46;
  r_50(D)->d[2] = _89;
  _262 = (__int128 unsigned) _89;
  if (shift_44(D) <= 319)
    goto <bb 9>; [100.00%]
  else
    goto <bb 11>; [0.00%]

  <bb 15> [local count: 268435456]:
  # _245 = PHI <_248(6), _10(4)>
  # _244 = PHI <_247(6), _11(4)>
  # iftmp.106_241 = PHI <_2(6), iftmp.106_87(4)>
  # prephitmp_218 = PHI <_265(6), _266(4)>
  r_50(D)->d[1] = _245;
  _251 = (__int128 unsigned) _245;
  if (_244 != 0)
    goto <bb 14>; [100.00%]
  else
    goto <bb 12>; [0.00%]

  <bb 16> [local count: 0]:
  _117 = (__int128 unsigned) _18;
  goto <bb 11>; [100.00%]

}



;; Function secp256k1_ge_neg (secp256k1_ge_neg, funcdef_no=142, decl_uid=4717, cgraph_uid=142, symbol_order=144)

__attribute__((used))
secp256k1_ge_neg (struct secp256k1_ge * r, const struct secp256k1_ge * a)
{
  uint64_t x;
  uint64_t t4;
  uint64_t t3;
  uint64_t t2;
  uint64_t t1;
  uint64_t t0;
  long long unsigned int _8;
  long long unsigned int _10;
  long long unsigned int _12;
  long long unsigned int _14;
  long long unsigned int _16;
  long long unsigned int _29;
  long unsigned int _31;
  long unsigned int _34;
  long unsigned int _37;
  long unsigned int _40;
  long unsigned int _46;

  <bb 2> [local count: 1073741825]:
  *r_3(D) = *a_4(D);
  t0_22 = MEM[(struct secp256k1_fe *)r_3(D) + 40B].n[0];
  t1_23 = MEM[(struct secp256k1_fe *)r_3(D) + 40B].n[1];
  t2_24 = MEM[(struct secp256k1_fe *)r_3(D) + 40B].n[2];
  t3_25 = MEM[(struct secp256k1_fe *)r_3(D) + 40B].n[3];
  t4_26 = MEM[(struct secp256k1_fe *)r_3(D) + 40B].n[4];
  x_27 = t4_26 >> 48;
  t4_28 = t4_26 & 281474976710655;
  _29 = x_27 * 4294968273;
  t0_30 = t0_22 + _29;
  _31 = t0_30 >> 52;
  t1_32 = t1_23 + _31;
  t0_33 = t0_30 & 4503599627370495;
  _34 = t1_32 >> 52;
  t2_35 = t2_24 + _34;
  t1_36 = t1_32 & 4503599627370495;
  _37 = t2_35 >> 52;
  t3_38 = t3_25 + _37;
  t2_39 = t2_35 & 4503599627370495;
  _40 = t3_38 >> 52;
  _46 = 1125899906842620 - t4_28;
  t3_42 = t3_38 & 4503599627370495;
  _8 = 18014381329608892 - t0_33;
  MEM[(struct secp256k1_fe *)r_3(D) + 40B].n[0] = _8;
  _10 = 18014398509481980 - t1_36;
  MEM[(struct secp256k1_fe *)r_3(D) + 40B].n[1] = _10;
  _12 = 18014398509481980 - t2_39;
  MEM[(struct secp256k1_fe *)r_3(D) + 40B].n[2] = _12;
  _14 = 18014398509481980 - t3_42;
  MEM[(struct secp256k1_fe *)r_3(D) + 40B].n[3] = _14;
  _16 = _46 - _40;
  MEM[(struct secp256k1_fe *)r_3(D) + 40B].n[4] = _16;
  return;

}



;; Function secp256k1_gej_double_var (secp256k1_gej_double_var, funcdef_no=159, decl_uid=4759, cgraph_uid=159, symbol_order=161)

__attribute__((used))
secp256k1_gej_double_var (struct secp256k1_gej * r, const struct secp256k1_gej * a, struct secp256k1_fe * rzr)
{
  int _1;

  <bb 2> [local count: 1073741825]:
  _1 = a_6(D)->infinity;
  r_7(D)->infinity = _1;
  if (_1 != 0)
    goto <bb 3>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 3> [local count: 365072220]:
  if (rzr_9(D) != 0B)
    goto <bb 4>; [70.00%]
  else
    goto <bb 6>; [30.00%]

  <bb 4> [local count: 255550554]:
  rzr_9(D)->n[4] = 0;
  MEM[(long unsigned int *)rzr_9(D)] = { 1, 0 };
  MEM[(long unsigned int *)rzr_9(D) + 16B] = { 0, 0 };
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 708669601]:
  secp256k1_gej_double_var.part.14 (r_7(D), a_6(D), rzr_9(D)); [tail call]

  <bb 6> [local count: 1073741825]:
  return;

}



;; Function secp256k1_gej_add_zinv_var (secp256k1_gej_add_zinv_var, funcdef_no=163, decl_uid=4778, cgraph_uid=163, symbol_order=165)

__attribute__((used))
secp256k1_gej_add_zinv_var (struct secp256k1_gej * r, const struct secp256k1_gej * a, const struct secp256k1_ge * b, const struct secp256k1_fe * bzinv)
{
  vector(2) long unsigned int vect__100.679;
  vector(2) long long unsigned int vect__110.678;
  const vector(2) long unsigned int vect__109.677;
  const vector(2) long unsigned int vect__109.676;
  vector(2) long unsigned int vect__99.673;
  vector(2) long unsigned int vect__99.672;
  vector(2) long long unsigned int vect__55.667;
  const vector(2) long unsigned int vect__64.666;
  const vector(2) long unsigned int vect__64.665;
  const vector(2) long unsigned int vect__297.662;
  const vector(2) long unsigned int vect__54.661;
  const vector(2) long unsigned int vect__54.660;
  vector(2) long long unsigned int vect__75.655;
  const vector(2) long unsigned int vect__84.654;
  const vector(2) long unsigned int vect__84.653;
  const vector(2) long unsigned int vect__302.650;
  const vector(2) long unsigned int vect__74.649;
  const vector(2) long unsigned int vect__74.648;
  uint64_t x;
  uint64_t t4;
  uint64_t t3;
  uint64_t t2;
  uint64_t t1;
  uint64_t t0;
  struct secp256k1_fe bzinv3;
  struct secp256k1_fe bzinv2;
  struct secp256k1_fe t;
  struct secp256k1_fe h3;
  struct secp256k1_fe h2;
  struct secp256k1_fe i2;
  struct secp256k1_fe i;
  struct secp256k1_fe h;
  struct secp256k1_fe s2;
  struct secp256k1_fe s1;
  struct secp256k1_fe u2;
  struct secp256k1_fe u1;
  struct secp256k1_fe z12;
  struct secp256k1_fe az;
  int _1;
  int _2;
  int _3;
  int _4;
  uint64_t[5] * _50;
  uint64_t[5] * _52;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _72;
  long unsigned int _82;
  long unsigned int _83;
  long unsigned int _92;
  const uint64_t[5] * _97;
  int _98;
  long unsigned int _107;
  long unsigned int _108;
  long unsigned int _117;
  long long unsigned int _118;
  const uint64_t[5] * _119;
  long unsigned int _120;
  long unsigned int _121;
  long unsigned int _122;
  long unsigned int _123;
  long unsigned int _124;
  long unsigned int _125;
  long unsigned int _126;
  long unsigned int _127;
  long unsigned int _128;
  long unsigned int _129;
  long unsigned int _135;
  long unsigned int _136;
  long unsigned int _137;
  long unsigned int _138;
  long unsigned int _139;
  long unsigned int _140;
  long unsigned int _141;
  long unsigned int _142;
  long unsigned int _143;
  long unsigned int _144;
  long unsigned int _150;
  long unsigned int _152;
  long unsigned int _154;
  long unsigned int _156;
  long unsigned int _158;
  long unsigned int _160;
  long unsigned int _161;
  long unsigned int _162;
  long unsigned int _163;
  long unsigned int _164;
  long unsigned int _165;
  long unsigned int _166;
  long unsigned int _167;
  long unsigned int _168;
  long unsigned int _169;
  const uint64_t[5] * _170;
  long long unsigned int _226;
  long unsigned int _228;
  long unsigned int _231;
  long unsigned int _234;
  long unsigned int _237;
  const uint64_t[5] * pretmp_253;
  const uint64_t[5] * pretmp_254;
  const uint64_t[5] * pretmp_256;
  long unsigned int _283;
  long long unsigned int _284;
  long unsigned int _285;
  long long unsigned int _286;
  long unsigned int _287;
  long long unsigned int _288;
  long unsigned int _289;
  long long unsigned int _290;
  long unsigned int _291;
  long long unsigned int _292;
  long long unsigned int _293;
  long long unsigned int _298;
  long long unsigned int _330;
  long unsigned int _331;
  long unsigned int _332;
  long long unsigned int _334;
  long unsigned int _335;
  long unsigned int _336;
  long long unsigned int _338;
  long unsigned int _339;
  long unsigned int _340;
  long long unsigned int _342;
  long unsigned int _343;
  long unsigned int _344;
  long long unsigned int _346;
  long unsigned int _347;
  long unsigned int _348;

  <bb 2> [local count: 1073741825]:
  _1 = b_9(D)->infinity;
  if (_1 != 0)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  *r_10(D) = *a_11(D);
  goto <bb 12>; [100.00%]

  <bb 4> [local count: 708669604]:
  _2 = a_11(D)->infinity;
  pretmp_253 = &MEM[(const struct secp256k1_fe *)b_9(D) + 40B].n;
  pretmp_254 = &MEM[(const struct secp256k1_fe *)b_9(D)].n;
  pretmp_256 = &bzinv_14(D)->n;
  if (_2 != 0)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 240947665]:
  r_10(D)->infinity = 0;
  secp256k1_fe_sqr_inner (&bzinv2.n, pretmp_256);
  secp256k1_fe_mul_inner (&bzinv3.n, &bzinv2.n, pretmp_256);
  _52 = &MEM[(struct secp256k1_fe *)r_10(D)].n;
  secp256k1_fe_mul_inner (_52, pretmp_254, &bzinv2.n);
  _50 = &MEM[(struct secp256k1_fe *)r_10(D) + 40B].n;
  secp256k1_fe_mul_inner (_50, pretmp_253, &bzinv3.n);
  MEM[(struct secp256k1_fe *)r_10(D) + 80B].n[4] = 0;
  MEM[(long unsigned int *)r_10(D) + 80B] = { 1, 0 };
  MEM[(long unsigned int *)r_10(D) + 96B] = { 0, 0 };
  bzinv2 ={v} {CLOBBER};
  bzinv3 ={v} {CLOBBER};
  goto <bb 12>; [100.00%]

  <bb 6> [local count: 467721939]:
  r_10(D)->infinity = 0;
  _97 = &MEM[(const struct secp256k1_fe *)a_11(D) + 80B].n;
  secp256k1_fe_mul_inner (&az.n, _97, pretmp_256);
  secp256k1_fe_sqr_inner (&z12.n, &az.n);
  u1 = a_11(D)->x;
  t0_219 = u1.n[0];
  t1_220 = u1.n[1];
  t2_221 = u1.n[2];
  t3_222 = u1.n[3];
  t4_223 = u1.n[4];
  x_224 = t4_223 >> 48;
  t4_225 = t4_223 & 281474976710655;
  _226 = x_224 * 4294968273;
  t0_227 = t0_219 + _226;
  _228 = t0_227 >> 52;
  t1_229 = t1_220 + _228;
  t0_230 = t0_227 & 4503599627370495;
  _231 = t1_229 >> 52;
  t2_232 = t2_221 + _231;
  t1_233 = t1_229 & 4503599627370495;
  _234 = t2_232 >> 52;
  t3_235 = t3_222 + _234;
  t2_236 = t2_232 & 4503599627370495;
  _237 = t3_235 >> 52;
  t4_238 = t4_225 + _237;
  t3_239 = t3_235 & 4503599627370495;
  u1.n[0] = t0_230;
  u1.n[1] = t1_233;
  u1.n[2] = t2_236;
  u1.n[3] = t3_239;
  u1.n[4] = t4_238;
  secp256k1_fe_mul_inner (&u2.n, pretmp_254, &z12.n);
  s1 = a_11(D)->y;
  secp256k1_fe_normalize_weak (&s1);
  secp256k1_fe_mul_inner (&s2.n, pretmp_253, &z12.n);
  secp256k1_fe_mul_inner (&s2.n, &s2.n, &az.n);
  vect__84.653_269 = MEM[(long unsigned int *)&u1];
  vect__84.654_271 = MEM[(long unsigned int *)&u1 + 16B];
  _92 = u1.n[4];
  vect__74.648_257 = MEM[(long unsigned int *)&u2];
  vect__74.649_260 = MEM[(long unsigned int *)&u2 + 16B];
  vect__302.650_266 = vect__74.648_257 + { 18014381329608892, 18014398509481980 };
  vect__302.650_268 = vect__74.649_260 + { 18014398509481980, 18014398509481980 };
  vect__75.655_273 = vect__302.650_266 - vect__84.653_269;
  vect__75.655_274 = vect__302.650_268 - vect__84.654_271;
  MEM[(long unsigned int *)&h] = vect__75.655_273;
  MEM[(long unsigned int *)&h + 16B] = vect__75.655_274;
  _82 = u2.n[4];
  _298 = _82 + 1125899906842620;
  _83 = _298 - _92;
  h.n[4] = _83;
  vect__64.665_71 = MEM[(long unsigned int *)&s1];
  vect__64.666_255 = MEM[(long unsigned int *)&s1 + 16B];
  _72 = s1.n[4];
  vect__54.660_85 = MEM[(long unsigned int *)&s2];
  vect__54.661_89 = MEM[(long unsigned int *)&s2 + 16B];
  vect__297.662_67 = vect__54.660_85 + { 18014381329608892, 18014398509481980 };
  vect__297.662_69 = vect__54.661_89 + { 18014398509481980, 18014398509481980 };
  vect__55.667_258 = vect__297.662_67 - vect__64.665_71;
  vect__55.667_153 = vect__297.662_69 - vect__64.666_255;
  MEM[(long unsigned int *)&i] = vect__55.667_258;
  MEM[(long unsigned int *)&i + 16B] = vect__55.667_153;
  _62 = s2.n[4];
  _293 = _62 + 1125899906842620;
  _63 = _293 - _72;
  i.n[4] = _63;
  _3 = secp256k1_fe_normalizes_to_zero_var (&h);
  if (_3 != 0)
    goto <bb 7>; [51.12%]
  else
    goto <bb 11>; [48.88%]

  <bb 7> [local count: 239099455]:
  _4 = secp256k1_fe_normalizes_to_zero_var (&i);
  if (_4 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 8> [local count: 119549727]:
  _98 = a_11(D)->infinity;
  r_10(D)->infinity = _98;
  if (_98 != 0)
    goto <bb 12>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 9> [local count: 78902820]:
  secp256k1_gej_double_var.part.14 (r_10(D), a_11(D), 0B);
  goto <bb 12>; [100.00%]

  <bb 10> [local count: 119549727]:
  r_10(D)->infinity = 1;
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 228622484]:
  secp256k1_fe_sqr_inner (&i2.n, &i.n);
  secp256k1_fe_sqr_inner (&h2.n, &h.n);
  secp256k1_fe_mul_inner (&h3.n, &h.n, &h2.n);
  r_10(D)->z = a_11(D)->z;
  _170 = &MEM[(const struct secp256k1_fe *)r_10(D) + 80B].n;
  secp256k1_fe_mul_inner (_170, _170, &h.n);
  secp256k1_fe_mul_inner (&t.n, &u1.n, &h2.n);
  r_10(D)->x = t;
  _160 = MEM[(struct secp256k1_fe *)r_10(D)].n[0];
  _161 = _160 * 2;
  _162 = MEM[(struct secp256k1_fe *)r_10(D)].n[1];
  _163 = _162 * 2;
  _164 = MEM[(struct secp256k1_fe *)r_10(D)].n[2];
  _165 = _164 * 2;
  _166 = MEM[(struct secp256k1_fe *)r_10(D)].n[3];
  _167 = _166 * 2;
  _168 = MEM[(struct secp256k1_fe *)r_10(D)].n[4];
  _169 = _168 * 2;
  _150 = h3.n[0];
  _152 = h3.n[1];
  _154 = h3.n[2];
  _156 = h3.n[3];
  _158 = h3.n[4];
  _135 = i2.n[0];
  _291 = _135 + 36028762659217784;
  _292 = _291 - _150;
  _136 = _292 - _161;
  MEM[(struct secp256k1_fe *)r_10(D)].n[0] = _136;
  _137 = i2.n[1];
  _289 = _137 + 36028797018963960;
  _290 = _289 - _152;
  _138 = _290 - _163;
  MEM[(struct secp256k1_fe *)r_10(D)].n[1] = _138;
  _139 = i2.n[2];
  _287 = _139 + 36028797018963960;
  _288 = _287 - _154;
  _140 = _288 - _165;
  MEM[(struct secp256k1_fe *)r_10(D)].n[2] = _140;
  _141 = i2.n[3];
  _285 = _141 + 36028797018963960;
  _286 = _285 - _156;
  _142 = _286 - _167;
  MEM[(struct secp256k1_fe *)r_10(D)].n[3] = _142;
  _143 = i2.n[4];
  _283 = _143 + 2251799813685240;
  _284 = _283 - _158;
  _144 = _284 - _169;
  MEM[(struct secp256k1_fe *)r_10(D)].n[4] = _144;
  _120 = t.n[0];
  _346 = _120 + _150;
  _347 = _346 + 54043143988826676;
  _348 = _347 - _291;
  _121 = _161 + _348;
  MEM[(struct secp256k1_fe *)r_10(D) + 40B].n[0] = _121;
  _122 = t.n[1];
  _342 = _122 + _152;
  _343 = _342 + 54043195528445940;
  _344 = _343 - _289;
  _123 = _163 + _344;
  MEM[(struct secp256k1_fe *)r_10(D) + 40B].n[1] = _123;
  _124 = t.n[2];
  _338 = _124 + _154;
  _339 = _338 + 54043195528445940;
  _340 = _339 - _287;
  _125 = _165 + _340;
  MEM[(struct secp256k1_fe *)r_10(D) + 40B].n[2] = _125;
  _126 = t.n[3];
  _334 = _126 + _156;
  _335 = _334 + 54043195528445940;
  _336 = _335 - _285;
  _127 = _167 + _336;
  MEM[(struct secp256k1_fe *)r_10(D) + 40B].n[3] = _127;
  _128 = t.n[4];
  _330 = _128 + _158;
  _331 = _330 + 3377699720527860;
  _332 = _331 - _283;
  _129 = _169 + _332;
  MEM[(struct secp256k1_fe *)r_10(D) + 40B].n[4] = _129;
  _119 = &MEM[(const struct secp256k1_fe *)r_10(D) + 40B].n;
  secp256k1_fe_mul_inner (_119, _119, &i.n);
  secp256k1_fe_mul_inner (&h3.n, &h3.n, &s1.n);
  vect__109.676_147 = MEM[(long unsigned int *)&h3];
  vect__109.677_149 = MEM[(long unsigned int *)&h3 + 16B];
  vect__110.678_133 = { 18014381329608892, 18014398509481980 } - vect__109.676_147;
  vect__110.678_134 = { 18014398509481980, 18014398509481980 } - vect__109.677_149;
  _117 = h3.n[4];
  _118 = 1125899906842620 - _117;
  vect__99.672_267 = MEM[(long unsigned int *)r_10(D) + 40B];
  vect__99.673_145 = MEM[(long unsigned int *)r_10(D) + 56B];
  vect__100.679_303 = vect__110.678_133 + vect__99.672_267;
  vect__100.679_304 = vect__110.678_134 + vect__99.673_145;
  MEM[(long unsigned int *)r_10(D) + 40B] = vect__100.679_303;
  MEM[(long unsigned int *)r_10(D) + 56B] = vect__100.679_304;
  _107 = MEM[(struct secp256k1_fe *)r_10(D) + 40B].n[4];
  _108 = _107 + _118;
  MEM[(struct secp256k1_fe *)r_10(D) + 40B].n[4] = _108;
  az ={v} {CLOBBER};
  z12 ={v} {CLOBBER};
  u1 ={v} {CLOBBER};
  u2 ={v} {CLOBBER};
  s1 ={v} {CLOBBER};
  s2 ={v} {CLOBBER};
  h ={v} {CLOBBER};
  i ={v} {CLOBBER};
  i2 ={v} {CLOBBER};
  h2 ={v} {CLOBBER};
  h3 ={v} {CLOBBER};
  t ={v} {CLOBBER};
  goto <bb 13>; [100.00%]

  <bb 12> [local count: 845119341]:
  az ={v} {CLOBBER};
  z12 ={v} {CLOBBER};
  u1 ={v} {CLOBBER};
  u2 ={v} {CLOBBER};
  s1 ={v} {CLOBBER};
  s2 ={v} {CLOBBER};
  h ={v} {CLOBBER};
  i ={v} {CLOBBER};
  i2 ={v} {CLOBBER};
  h2 ={v} {CLOBBER};
  h3 ={v} {CLOBBER};
  t ={v} {CLOBBER};

  <bb 13> [local count: 1073741824]:
  return;

}



;; Function secp256k1_ge_from_storage (secp256k1_ge_from_storage, funcdef_no=167, decl_uid=4788, cgraph_uid=167, symbol_order=169)

__attribute__((used))
secp256k1_ge_from_storage (struct secp256k1_ge * r, const struct secp256k1_ge_storage * a)
{
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long long unsigned int _16;
  long long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long long unsigned int _21;
  long long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long long unsigned int _26;
  long long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long long unsigned int _34;
  long long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long long unsigned int _39;
  long long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long long unsigned int _44;
  long long unsigned int _45;
  long unsigned int _46;

  <bb 2> [local count: 1073741825]:
  _29 = MEM[(const struct secp256k1_fe_storage *)a_5(D)].n[0];
  _30 = _29 & 4503599627370495;
  MEM[(struct secp256k1_fe *)r_6(D)].n[0] = _30;
  _31 = _29 >> 52;
  _32 = MEM[(const struct secp256k1_fe_storage *)a_5(D)].n[1];
  _33 = _32 << 12;
  _34 = _33 & 4503599627370495;
  _35 = _31 | _34;
  MEM[(struct secp256k1_fe *)r_6(D)].n[1] = _35;
  _36 = _32 >> 40;
  _37 = MEM[(const struct secp256k1_fe_storage *)a_5(D)].n[2];
  _38 = _37 << 24;
  _39 = _38 & 4503599627370495;
  _40 = _36 | _39;
  MEM[(struct secp256k1_fe *)r_6(D)].n[2] = _40;
  _41 = _37 >> 28;
  _42 = MEM[(const struct secp256k1_fe_storage *)a_5(D)].n[3];
  _43 = _42 << 36;
  _44 = _43 & 4503599627370495;
  _45 = _41 | _44;
  MEM[(struct secp256k1_fe *)r_6(D)].n[3] = _45;
  _46 = _42 >> 16;
  MEM[(struct secp256k1_fe *)r_6(D)].n[4] = _46;
  _11 = MEM[(const struct secp256k1_fe_storage *)a_5(D) + 32B].n[0];
  _12 = _11 & 4503599627370495;
  MEM[(struct secp256k1_fe *)r_6(D) + 40B].n[0] = _12;
  _13 = _11 >> 52;
  _14 = MEM[(const struct secp256k1_fe_storage *)a_5(D) + 32B].n[1];
  _15 = _14 << 12;
  _16 = _15 & 4503599627370495;
  _17 = _13 | _16;
  MEM[(struct secp256k1_fe *)r_6(D) + 40B].n[1] = _17;
  _18 = _14 >> 40;
  _19 = MEM[(const struct secp256k1_fe_storage *)a_5(D) + 32B].n[2];
  _20 = _19 << 24;
  _21 = _20 & 4503599627370495;
  _22 = _18 | _21;
  MEM[(struct secp256k1_fe *)r_6(D) + 40B].n[2] = _22;
  _23 = _19 >> 28;
  _24 = MEM[(const struct secp256k1_fe_storage *)a_5(D) + 32B].n[3];
  _25 = _24 << 36;
  _26 = _25 & 4503599627370495;
  _27 = _23 | _26;
  MEM[(struct secp256k1_fe *)r_6(D) + 40B].n[3] = _27;
  _28 = _24 >> 16;
  MEM[(struct secp256k1_fe *)r_6(D) + 40B].n[4] = _28;
  r_6(D)->infinity = 0;
  return;

}



;; Function secp256k1_ecmult (secp256k1_ecmult, funcdef_no=179, decl_uid=5537, cgraph_uid=179, symbol_order=181)

__attribute__((used))
secp256k1_ecmult (const struct secp256k1_ecmult_context * ctx, struct secp256k1_gej * r, const struct secp256k1_gej * a, const struct secp256k1_scalar * na, const struct secp256k1_scalar * ng)
{
  unsigned long ivtmp.758;
  unsigned long ivtmp.756;
  unsigned long ivtmp.740;
  unsigned long ivtmp.727;
  unsigned long ivtmp.723;
  sizetype ivtmp.702;
  vector(2) long long unsigned int vect__255.695;
  const vector(2) long unsigned int vect__254.694;
  const vector(2) long unsigned int vect__254.693;
  vector(2) long long unsigned int vect__208.688;
  const vector(2) long unsigned int vect__207.687;
  const vector(2) long unsigned int vect__207.686;
  int64_t u0;
  int64_t tx;
  int64_t t4;
  int64_t t3;
  uint64_t a4;
  uint64_t a3;
  uint64_t a2;
  uint64_t a1;
  uint64_t a0;
  uint128_t d;
  uint128_t c;
  struct secp256k1_fe zi2;
  struct secp256k1_fe zi3;
  struct secp256k1_fe zi2;
  struct secp256k1_fe zi3;
  struct secp256k1_ge d_ge;
  struct secp256k1_ge a_ge;
  struct secp256k1_gej d;
  struct secp256k1_fe zs;
  struct secp256k1_gej prej[8];
  struct secp256k1_fe zr[8];
  int n;
  int bits;
  int i;
  int bits_ng;
  int wnaf_ng[256];
  int bits_na;
  int wnaf_na[256];
  struct secp256k1_fe Z;
  struct secp256k1_ge tmpa;
  struct secp256k1_ge pre_a[8];
  int _1;
  int _2;
  int _3;
  int _4;
  int _7;
  int _8;
  int _10;
  int _11;
  __int128 unsigned _19;
  const uint64_t[5] * _52;
  __int128 unsigned _64;
  const uint64_t[5] * _72;
  int _78;
  sizetype _80;
  struct secp256k1_fe * _82;
  struct secp256k1_gej * _86;
  sizetype _91;
  const uint64_t[5] * _94;
  const uint64_t[5] * _96;
  int _98;
  const uint64_t[5] * _100;
  uint64_t[5] * _101;
  int _104;
  long unsigned int _110;
  __int128 unsigned _113;
  long unsigned int _114;
  __int128 unsigned _117;
  __int128 unsigned _121;
  __int128 unsigned _122;
  long int _125;
  __int128 unsigned _131;
  __int128 unsigned _132;
  __int128 unsigned _133;
  __int128 unsigned _134;
  __int128 unsigned _135;
  __int128 unsigned _137;
  long int _139;
  long int _141;
  __int128 unsigned _146;
  long unsigned int _147;
  __int128 unsigned _149;
  __int128 unsigned _150;
  long int _152;
  long int _154;
  long int _155;
  __int128 unsigned _158;
  long unsigned int _160;
  long unsigned int _161;
  __int128 unsigned _163;
  __int128 unsigned _165;
  __int128 unsigned _166;
  __int128 unsigned _167;
  __int128 unsigned _169;
  __int128 unsigned _170;
  long unsigned int _173;
  long unsigned int _174;
  __int128 unsigned _176;
  __int128 unsigned _177;
  __int128 unsigned _178;
  __int128 unsigned _180;
  __int128 unsigned _182;
  __int128 unsigned _183;
  long unsigned int _186;
  long unsigned int _187;
  __int128 unsigned _189;
  __int128 unsigned _190;
  __int128 unsigned _191;
  long unsigned int _193;
  long unsigned int _194;
  __int128 unsigned _196;
  long unsigned int _198;
  sizetype _203;
  long unsigned int _215;
  long long unsigned int _216;
  long unsigned int _217;
  long unsigned int _218;
  long unsigned int _219;
  long unsigned int _220;
  long unsigned int _221;
  long long unsigned int _222;
  long long unsigned int _223;
  long unsigned int _224;
  long unsigned int _225;
  long unsigned int _226;
  long long unsigned int _227;
  long long unsigned int _228;
  long unsigned int _229;
  long unsigned int _230;
  long unsigned int _231;
  long long unsigned int _232;
  long long unsigned int _233;
  long unsigned int _234;
  long unsigned int _235;
  long unsigned int _236;
  long unsigned int _237;
  long unsigned int _238;
  long unsigned int _239;
  long long unsigned int _240;
  long long unsigned int _241;
  long unsigned int _242;
  long unsigned int _243;
  long unsigned int _244;
  long long unsigned int _245;
  long long unsigned int _246;
  long unsigned int _247;
  long unsigned int _248;
  long unsigned int _249;
  long long unsigned int _250;
  long long unsigned int _251;
  long unsigned int _252;
  long unsigned int _262;
  long long unsigned int _263;
  long unsigned int _264;
  long unsigned int _265;
  long unsigned int _266;
  long unsigned int _267;
  long unsigned int _268;
  long long unsigned int _269;
  long long unsigned int _270;
  long unsigned int _271;
  long unsigned int _272;
  long unsigned int _273;
  long long unsigned int _274;
  long long unsigned int _275;
  long unsigned int _276;
  long unsigned int _277;
  long unsigned int _278;
  long long unsigned int _279;
  long long unsigned int _280;
  long unsigned int _281;
  long unsigned int _282;
  long unsigned int _283;
  long unsigned int _284;
  long unsigned int _285;
  long unsigned int _286;
  long long unsigned int _287;
  long long unsigned int _288;
  long unsigned int _289;
  long unsigned int _290;
  long unsigned int _291;
  long long unsigned int _292;
  long long unsigned int _293;
  long unsigned int _294;
  long unsigned int _295;
  long unsigned int _296;
  long long unsigned int _297;
  long long unsigned int _298;
  long unsigned int _299;
  unsigned int _354;
  unsigned int _355;
  sizetype _356;
  __int128 unsigned _379;
  unsigned long _551;
  unsigned long _552;
  struct secp256k1_gej[8] * _556;
  unsigned long _557;
  unsigned long _567;
  const uint64_t[5] * _570;
  unsigned long _571;
  uint64_t[5] * _572;
  unsigned long _573;
  int pretmp_624;
  struct secp256k1_ge_storage[<unknown>] * pretmp_625;

  <bb 2> [local count: 118111601]:
  bits_na_24 = secp256k1_ecmult_wnaf.constprop (&wnaf_na, na_22(D), 5);
  _78 = a_25(D)->infinity;
  d.infinity = _78;
  if (_78 != 0)
    goto <bb 4>; [34.00%]
  else
    goto <bb 3>; [66.00%]

  <bb 3> [local count: 77953657]:
  secp256k1_gej_double_var.part.14 (&d, a_25(D), 0B);

  <bb 4> [local count: 118111601]:
  d_ge.x = d.x;
  d_ge.y = d.y;
  d_ge.infinity = 0;
  secp256k1_fe_sqr_inner (&zi2.n, &MEM[(const struct secp256k1_fe *)&d + 80B].n);
  secp256k1_fe_mul_inner (&zi3.n, &zi2.n, &MEM[(const struct secp256k1_fe *)&d + 80B].n);
  _94 = &MEM[(const struct secp256k1_fe *)a_25(D)].n;
  secp256k1_fe_mul_inner (&MEM[(struct secp256k1_fe *)&a_ge].n, _94, &zi2.n);
  _96 = &MEM[(const struct secp256k1_fe *)a_25(D) + 40B].n;
  secp256k1_fe_mul_inner (&MEM[(struct secp256k1_fe *)&a_ge + 40B].n, _96, &zi3.n);
  _98 = a_25(D)->infinity;
  a_ge.infinity = _98;
  zi2 ={v} {CLOBBER};
  zi3 ={v} {CLOBBER};
  MEM[(struct secp256k1_gej *)&prej].x = a_ge.x;
  MEM[(struct secp256k1_gej *)&prej].y = a_ge.y;
  MEM[(struct secp256k1_gej *)&prej].z = a_25(D)->z;
  MEM[(struct secp256k1_gej *)&prej].infinity = 0;
  MEM[(struct secp256k1_fe *)&zr] = d.z;
  ivtmp.756_563 = (unsigned long) &MEM[(void *)&prej + 128B];
  ivtmp.758_559 = (unsigned long) &MEM[(void *)&zr + 40B];
  _552 = (unsigned long) &prej;
  _551 = _552 + 1024;

  <bb 5> [local count: 955630224]:
  # ivtmp.756_565 = PHI <ivtmp.756_563(4), ivtmp.756_564(5)>
  # ivtmp.758_561 = PHI <ivtmp.758_559(4), ivtmp.758_560(5)>
  _82 = (struct secp256k1_fe *) ivtmp.758_561;
  _557 = ivtmp.756_565 + 18446744073709551488;
  _556 = (struct secp256k1_gej[8] *) _557;
  _86 = (struct secp256k1_gej *) ivtmp.756_565;
  secp256k1_gej_add_ge_var (_86, _556, &d_ge, _82);
  ivtmp.756_564 = ivtmp.756_565 + 128;
  ivtmp.758_560 = ivtmp.758_561 + 40;
  if (_551 != ivtmp.756_564)
    goto <bb 5>; [87.64%]
  else
    goto <bb 6>; [12.36%]

  <bb 6> [local count: 118111601]:
  secp256k1_fe_mul_inner (&MEM[(const struct secp256k1_fe *)&prej + 976B].n, &MEM[(const struct secp256k1_fe *)&prej + 976B].n, &MEM[(const struct secp256k1_fe *)&d + 80B].n);
  d ={v} {CLOBBER};
  a_ge ={v} {CLOBBER};
  d_ge ={v} {CLOBBER};
  MEM[(struct secp256k1_ge *)&pre_a + 616B].x = MEM[(const struct secp256k1_gej *)&prej + 896B].x;
  MEM[(struct secp256k1_ge *)&pre_a + 616B].y = MEM[(const struct secp256k1_gej *)&prej + 896B].y;
  Z = MEM[(const struct secp256k1_gej *)&prej + 896B].z;
  MEM[(struct secp256k1_ge *)&pre_a + 616B].infinity = 0;
  zs = MEM[(const struct secp256k1_fe *)&zr + 280B];
  ivtmp.723_391 = (unsigned long) &MEM[(void *)&pre_a + 528B];
  ivtmp.727_415 = (unsigned long) &MEM[(void *)&prej + 768B];
  ivtmp.740_575 = (unsigned long) &MEM[(void *)&zr + 240B];
  _567 = (unsigned long) &pre_a;
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 837518625]:
  _72 = (const uint64_t[5] *) ivtmp.740_407;
  secp256k1_fe_mul_inner (&zs.n, &zs.n, _72);
  ivtmp.740_403 = ivtmp.740_407 + 18446744073709551576;

  <bb 8> [local count: 955630221]:
  # ivtmp.723_399 = PHI <ivtmp.723_395(7), ivtmp.723_391(6)>
  # ivtmp.727_57 = PHI <ivtmp.727_419(7), ivtmp.727_415(6)>
  # ivtmp.740_407 = PHI <ivtmp.740_403(7), ivtmp.740_575(6)>
  a0_105 = MEM[(const uint64_t *)&zs];
  a1_106 = MEM[(const uint64_t *)&zs + 8B];
  a2_107 = MEM[(const uint64_t *)&zs + 16B];
  a3_108 = MEM[(const uint64_t *)&zs + 24B];
  a4_109 = MEM[(const uint64_t *)&zs + 32B];
  _110 = a0_105 * 2;
  _113 = _110 w* a3_108;
  _114 = a1_106 * 2;
  _117 = _114 w* a2_107;
  d_118 = _113 + _117;
  c_120 = a4_109 w* a4_109;
  _121 = c_120 & 4503599627370495;
  _122 = _121 * 68719492368;
  d_123 = d_118 + _122;
  c_124 = c_120 >> 52;
  _125 = (long int) d_123;
  t3_126 = _125 & 4503599627370495;
  d_127 = d_123 >> 52;
  a4_128 = a4_109 * 2;
  _131 = a0_105 w* a4_128;
  _132 = a3_108 w* _114;
  _133 = _131 + _132;
  _134 = a2_107 w* a2_107;
  _135 = _133 + _134;
  _137 = c_124 * 68719492368;
  _64 = _135 + _137;
  d_138 = _64 + d_127;
  _139 = (long int) d_138;
  d_140 = d_138 >> 52;
  _141 = _139 >> 48;
  tx_142 = _141 & 15;
  t4_143 = _139 & 281474976710655;
  c_144 = a0_105 w* a0_105;
  _146 = a4_128 w* a1_106;
  _147 = a2_107 * 2;
  _149 = a3_108 w* _147;
  _150 = _146 + _149;
  d_151 = d_140 + _150;
  _152 = (long int) d_151;
  d_153 = d_151 >> 52;
  _154 = _152 << 4;
  _155 = _154 & 72057594037927920;
  u0_156 = tx_142 | _155;
  _158 = u0_156 w* 4294968273;
  c_159 = c_144 + _158;
  _160 = (long unsigned int) c_159;
  _161 = _160 & 4503599627370495;
  MEM[(uint64_t *)&zi2] = _161;
  c_162 = c_159 >> 52;
  _163 = _110 w* a1_106;
  _165 = a2_107 w* a4_128;
  _166 = a3_108 w* a3_108;
  _167 = _165 + _166;
  d_168 = d_153 + _167;
  _169 = d_168 & 4503599627370495;
  _170 = _169 * 68719492368;
  _19 = _163 + _170;
  c_171 = _19 + c_162;
  d_172 = d_168 >> 52;
  _173 = (long unsigned int) c_171;
  _174 = _173 & 4503599627370495;
  MEM[(uint64_t *)&zi2 + 8B] = _174;
  c_175 = c_171 >> 52;
  _176 = _110 w* a2_107;
  _177 = a1_106 w* a1_106;
  _178 = _176 + _177;
  _180 = a3_108 w* a4_128;
  d_181 = d_172 + _180;
  _182 = d_181 & 4503599627370495;
  _183 = _182 * 68719492368;
  _379 = _178 + _183;
  c_184 = c_175 + _379;
  d_185 = d_181 >> 52;
  _186 = (long unsigned int) c_184;
  _187 = _186 & 4503599627370495;
  MEM[(uint64_t *)&zi2 + 16B] = _187;
  c_188 = c_184 >> 52;
  _189 = d_185 * 68719492368;
  _190 = (__int128 unsigned) t3_126;
  _191 = _189 + _190;
  c_192 = c_188 + _191;
  _193 = (long unsigned int) c_192;
  _194 = _193 & 4503599627370495;
  MEM[(uint64_t *)&zi2 + 24B] = _194;
  c_195 = c_192 >> 52;
  _196 = (__int128 unsigned) t4_143;
  c_197 = c_195 + _196;
  _198 = (long unsigned int) c_197;
  MEM[(uint64_t *)&zi2 + 32B] = _198;
  secp256k1_fe_mul_inner (&zi3.n, &zi2.n, &zs.n);
  _100 = (const uint64_t[5] *) ivtmp.727_57;
  _101 = (uint64_t[5] *) ivtmp.723_399;
  secp256k1_fe_mul_inner (_101, _100, &zi2.n);
  _571 = ivtmp.727_57 + 40;
  _570 = (const uint64_t[5] *) _571;
  _573 = ivtmp.723_399 + 40;
  _572 = (uint64_t[5] *) _573;
  secp256k1_fe_mul_inner (_572, _570, &zi3.n);
  _104 = MEM[base: _100, offset: 120B];
  MEM[base: _101, offset: 80B] = _104;
  zi2 ={v} {CLOBBER};
  zi3 ={v} {CLOBBER};
  ivtmp.723_395 = ivtmp.723_399 + 18446744073709551528;
  ivtmp.727_419 = ivtmp.727_57 + 18446744073709551488;
  if (ivtmp.723_399 != _567)
    goto <bb 7>; [87.64%]
  else
    goto <bb 9>; [12.36%]

  <bb 9> [local count: 118111600]:
  zs ={v} {CLOBBER};
  prej ={v} {CLOBBER};
  zr ={v} {CLOBBER};
  bits_ng_29 = secp256k1_ecmult_wnaf.constprop (&wnaf_ng, ng_27(D), 16);
  bits_69 = MAX_EXPR <bits_na_24, bits_ng_29>;
  r_30(D)->infinity = 1;
  MEM[(long unsigned int *)r_30(D)] = { 0, 0 };
  MEM[(long unsigned int *)r_30(D) + 16B] = { 0, 0 };
  MEM[(long unsigned int *)r_30(D) + 32B] = { 0, 0 };
  MEM[(long unsigned int *)r_30(D) + 48B] = { 0, 0 };
  MEM[(long unsigned int *)r_30(D) + 64B] = { 0, 0 };
  MEM[(long unsigned int *)r_30(D) + 80B] = { 0, 0 };
  MEM[(long unsigned int *)r_30(D) + 96B] = { 0, 0 };
  MEM[(struct secp256k1_fe *)r_30(D) + 80B].n[4] = 0;
  i_32 = bits_69 + -1;
  if (i_32 >= 0)
    goto <bb 10>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 10> [local count: 105119324]:
  ivtmp.702_382 = (sizetype) i_32;
  _356 = (sizetype) bits_69;
  _355 = (unsigned int) bits_69;
  _354 = _355 + 4294967295;
  _203 = (sizetype) _354;
  _80 = _356 + 18446744073709551615;
  _91 = _80 - _203;
  goto <bb 15>; [100.00%]

  <bb 11> [local count: 79134771]:
  goto <bb 30>; [100.00%]

  <bb 12> [local count: 850510877]:
  if (pretmp_624 != 0)
    goto <bb 14>; [25.84%]
  else
    goto <bb 13>; [74.16%]

  <bb 13> [local count: 630715932]:
  secp256k1_gej_double_var.part.14 (r_30(D), r_30(D), 0B);

  <bb 14> [local count: 850510882]:
  ivtmp.702_383 = ivtmp.702_384 + 18446744073709551615;

  <bb 15> [local count: 955630201]:
  # ivtmp.702_384 = PHI <ivtmp.702_383(14), ivtmp.702_382(10)>
  i_357 = (int) ivtmp.702_384;
  if (bits_na_24 > i_357)
    goto <bb 16>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 16> [local count: 477815100]:
  n_33 = MEM[symbol: wnaf_na, index: ivtmp.702_384, step: 4, offset: 0B];
  if (n_33 != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 17> [local count: 238907550]:
  if (n_33 > 0)
    goto <bb 18>; [74.50%]
  else
    goto <bb 19>; [25.50%]

  <bb 18> [local count: 177986125]:
  _1 = n_33 + -1;
  _2 = _1 >> 1;
  tmpa = pre_a[_2];
  goto <bb 20>; [100.00%]

  <bb 19> [local count: 60921425]:
  _3 = ~n_33;
  _4 = _3 >> 1;
  tmpa = MEM[(const struct secp256k1_ge *)&pre_a][_4];
  secp256k1_fe_normalize_weak (&tmpa.y);
  vect__207.686_597 = MEM[(long unsigned int *)&tmpa + 40B];
  vect__207.687_595 = MEM[(long unsigned int *)&tmpa + 56B];
  vect__208.688_591 = { 18014381329608892, 18014398509481980 } - vect__207.686_597;
  vect__208.688_590 = { 18014398509481980, 18014398509481980 } - vect__207.687_595;
  MEM[(long unsigned int *)&tmpa + 40B] = vect__208.688_591;
  MEM[(long unsigned int *)&tmpa + 56B] = vect__208.688_590;
  _215 = MEM[(const struct secp256k1_fe *)&tmpa + 40B].n[4];
  _216 = 1125899906842620 - _215;
  MEM[(struct secp256k1_fe *)&tmpa + 40B].n[4] = _216;

  <bb 20> [local count: 238907550]:
  secp256k1_gej_add_ge_var (r_30(D), r_30(D), &tmpa, 0B);

  <bb 21> [local count: 955630201]:
  if (bits_ng_29 > i_357)
    goto <bb 22>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 22> [local count: 477815100]:
  n_37 = MEM[symbol: wnaf_ng, index: ivtmp.702_384, step: 4, offset: 0B];
  if (n_37 != 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 23> [local count: 238907550]:
  pretmp_625 = ctx_38(D)->pre_g;
  if (n_37 > 0)
    goto <bb 24>; [59.00%]
  else
    goto <bb 25>; [41.00%]

  <bb 24> [local count: 140955455]:
  _7 = n_37 + -1;
  _8 = _7 >> 1;
  _235 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_8].x.n[0];
  _236 = _235 & 4503599627370495;
  MEM[(struct secp256k1_fe *)&tmpa].n[0] = _236;
  _237 = _235 >> 52;
  _238 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_8].x.n[1];
  _239 = _238 << 12;
  _240 = _239 & 4503599627370495;
  _241 = _237 | _240;
  MEM[(struct secp256k1_fe *)&tmpa].n[1] = _241;
  _242 = _238 >> 40;
  _243 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_8].x.n[2];
  _244 = _243 << 24;
  _245 = _244 & 4503599627370495;
  _246 = _242 | _245;
  MEM[(struct secp256k1_fe *)&tmpa].n[2] = _246;
  _247 = _243 >> 28;
  _248 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_8].x.n[3];
  _249 = _248 << 36;
  _250 = _249 & 4503599627370495;
  _251 = _247 | _250;
  MEM[(struct secp256k1_fe *)&tmpa].n[3] = _251;
  _252 = _248 >> 16;
  MEM[(struct secp256k1_fe *)&tmpa].n[4] = _252;
  _217 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_8].y.n[0];
  _218 = _217 & 4503599627370495;
  MEM[(struct secp256k1_fe *)&tmpa + 40B].n[0] = _218;
  _219 = _217 >> 52;
  _220 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_8].y.n[1];
  _221 = _220 << 12;
  _222 = _221 & 4503599627370495;
  _223 = _219 | _222;
  MEM[(struct secp256k1_fe *)&tmpa + 40B].n[1] = _223;
  _224 = _220 >> 40;
  _225 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_8].y.n[2];
  _226 = _225 << 24;
  _227 = _226 & 4503599627370495;
  _228 = _224 | _227;
  MEM[(struct secp256k1_fe *)&tmpa + 40B].n[2] = _228;
  _229 = _225 >> 28;
  _230 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_8].y.n[3];
  _231 = _230 << 36;
  _232 = _231 & 4503599627370495;
  _233 = _229 | _232;
  MEM[(struct secp256k1_fe *)&tmpa + 40B].n[3] = _233;
  _234 = _230 >> 16;
  MEM[(struct secp256k1_fe *)&tmpa + 40B].n[4] = _234;
  tmpa.infinity = 0;
  goto <bb 26>; [100.00%]

  <bb 25> [local count: 97952096]:
  _10 = ~n_37;
  _11 = _10 >> 1;
  _282 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_11].x.n[0];
  _283 = _282 & 4503599627370495;
  MEM[(struct secp256k1_fe *)&tmpa].n[0] = _283;
  _284 = _282 >> 52;
  _285 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_11].x.n[1];
  _286 = _285 << 12;
  _287 = _286 & 4503599627370495;
  _288 = _284 | _287;
  MEM[(struct secp256k1_fe *)&tmpa].n[1] = _288;
  _289 = _285 >> 40;
  _290 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_11].x.n[2];
  _291 = _290 << 24;
  _292 = _291 & 4503599627370495;
  _293 = _289 | _292;
  MEM[(struct secp256k1_fe *)&tmpa].n[2] = _293;
  _294 = _290 >> 28;
  _295 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_11].x.n[3];
  _296 = _295 << 36;
  _297 = _296 & 4503599627370495;
  _298 = _294 | _297;
  MEM[(struct secp256k1_fe *)&tmpa].n[3] = _298;
  _299 = _295 >> 16;
  MEM[(struct secp256k1_fe *)&tmpa].n[4] = _299;
  _264 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_11].y.n[0];
  _265 = _264 & 4503599627370495;
  MEM[(struct secp256k1_fe *)&tmpa + 40B].n[0] = _265;
  _266 = _264 >> 52;
  _267 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_11].y.n[1];
  _268 = _267 << 12;
  _269 = _268 & 4503599627370495;
  _270 = _266 | _269;
  MEM[(struct secp256k1_fe *)&tmpa + 40B].n[1] = _270;
  _271 = _267 >> 40;
  _272 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_11].y.n[2];
  _273 = _272 << 24;
  _274 = _273 & 4503599627370495;
  _275 = _271 | _274;
  MEM[(struct secp256k1_fe *)&tmpa + 40B].n[2] = _275;
  _276 = _272 >> 28;
  _277 = MEM[(const struct secp256k1_fe_storage *)pretmp_625][_11].y.n[3];
  _278 = _277 << 36;
  _279 = _278 & 4503599627370495;
  _280 = _276 | _279;
  MEM[(struct secp256k1_fe *)&tmpa + 40B].n[3] = _280;
  _281 = _277 >> 16;
  MEM[(struct secp256k1_fe *)&tmpa + 40B].n[4] = _281;
  tmpa.infinity = 0;
  secp256k1_fe_normalize_weak (&tmpa.y);
  vect__254.693_586 = MEM[(long unsigned int *)&tmpa + 40B];
  vect__254.694_584 = MEM[(long unsigned int *)&tmpa + 56B];
  vect__255.695_580 = { 18014381329608892, 18014398509481980 } - vect__254.693_586;
  vect__255.695_579 = { 18014398509481980, 18014398509481980 } - vect__254.694_584;
  MEM[(long unsigned int *)&tmpa + 40B] = vect__255.695_580;
  MEM[(long unsigned int *)&tmpa + 56B] = vect__255.695_579;
  _262 = MEM[(const struct secp256k1_fe *)&tmpa + 40B].n[4];
  _263 = 1125899906842620 - _262;
  MEM[(struct secp256k1_fe *)&tmpa + 40B].n[4] = _263;

  <bb 26> [local count: 238907550]:
  secp256k1_gej_add_zinv_var (r_30(D), r_30(D), &tmpa, &Z);

  <bb 27> [local count: 955630201]:
  pretmp_624 = r_30(D)->infinity;
  if (_91 != ivtmp.702_384)
    goto <bb 12>; [89.00%]
  else
    goto <bb 28>; [11.00%]

  <bb 28> [local count: 105119322]:
  if (pretmp_624 == 0)
    goto <bb 29>; [37.08%]
  else
    goto <bb 11>; [62.92%]

  <bb 29> [local count: 38976827]:
  _52 = &MEM[(const struct secp256k1_fe *)r_30(D) + 80B].n;
  secp256k1_fe_mul_inner (_52, _52, &Z.n);

  <bb 30> [local count: 118111598]:
  pre_a ={v} {CLOBBER};
  tmpa ={v} {CLOBBER};
  Z ={v} {CLOBBER};
  wnaf_na ={v} {CLOBBER};
  wnaf_ng ={v} {CLOBBER};
  return;

}



;; Function secp256k1_context_create (secp256k1_context_create, funcdef_no=213, decl_uid=1528, cgraph_uid=213, symbol_order=220)

__attribute__((visibility ("default")))
secp256k1_context_create (unsigned int flags)
{
  unsigned long ivtmp.799;
  unsigned long ivtmp.797;
  unsigned long ivtmp.781;
  unsigned long ivtmp.779;
  unsigned long ivtmp.777;
  unsigned long ivtmp.771;
  unsigned long ivtmp.770;
  struct secp256k1_fe zi2;
  struct secp256k1_fe zi3;
  int64_t u0;
  int64_t tx;
  int64_t t4;
  int64_t t3;
  uint64_t a4;
  uint64_t a3;
  uint64_t a2;
  uint64_t a1;
  uint64_t a0;
  uint128_t d;
  uint128_t c;
  uint64_t u0;
  uint64_t tx;
  uint64_t t4;
  uint64_t t3;
  uint128_t d;
  uint128_t c;
  struct secp256k1_fe zi2;
  struct secp256k1_fe zi3;
  struct secp256k1_fe zi2;
  struct secp256k1_fe zi3;
  struct secp256k1_ge d_ge;
  struct secp256k1_ge a_ge;
  struct secp256k1_gej d;
  struct secp256k1_fe zi;
  void * ret;
  void * ret;
  void * ret;
  void * ret;
  struct secp256k1_gej gj;
  void * ret;
  unsigned int _1;
  __int128 unsigned _2;
  __int128 unsigned _3;
  unsigned int _5;
  struct secp256k1_ecmult_gen_context * _6;
  struct secp256k1_fe * _7;
  const uint64_t[5] * _8;
  __int128 unsigned _9;
  __int128 unsigned _10;
  unsigned long _25;
  void * _26;
  struct _IO_FILE * stderr.120_27;
  struct _IO_FILE * stderr.121_28;
  struct secp256k1_ge_storage[<unknown>] * _29;
  void (*<T319>) (const char *, void *) _31;
  const void * _32;
  __int128 unsigned _33;
  __int128 unsigned _34;
  void (*<T319>) (const char *, void *) _36;
  const void * _37;
  unsigned long _38;
  void (*<T319>) (const char *, void *) _40;
  const void * _41;
  void (*<T319>) (const char *, void *) _44;
  const void * _45;
  __int128 unsigned _46;
  struct secp256k1_ge * _49;
  struct secp256k1_ge_storage * _51;
  struct secp256k1_gej * _56;
  __int128 unsigned _58;
  const uint64_t[5] * _62;
  int _68;
  __int128 unsigned _69;
  struct secp256k1_fe * _72;
  struct secp256k1_gej * _76;
  const uint64_t[5] * _82;
  __int128 unsigned _83;
  __int128 unsigned _84;
  __int128 unsigned _86;
  __int128 unsigned _87;
  int _88;
  struct secp256k1_ge * _89;
  const uint64_t[5] * _90;
  uint64_t[5] * _91;
  const uint64_t[5] * _92;
  uint64_t[5] * _93;
  int _94;
  unsigned long _101;
  __int128 unsigned _103;
  const struct secp256k1_fe * _106;
  __int128 unsigned _107;
  __int128 unsigned _108;
  __int128 unsigned _112;
  uint64_t[5] * _115;
  __int128 unsigned _116;
  unsigned long _120;
  __int128 unsigned _121;
  __int128 unsigned _123;
  __int128 unsigned _124;
  long unsigned int _127;
  __int128 unsigned _130;
  __int128 unsigned _131;
  unsigned long _132;
  __int128 unsigned _133;
  __int128 unsigned _134;
  __int128 unsigned _137;
  __int128 unsigned _140;
  long unsigned int _142;
  long unsigned int _144;
  __int128 unsigned _148;
  __int128 unsigned _149;
  __int128 unsigned _151;
  __int128 unsigned _152;
  __int128 unsigned _154;
  long unsigned int _156;
  long unsigned int _158;
  long unsigned int _159;
  __int128 unsigned _162;
  long unsigned int _164;
  long unsigned int _165;
  __int128 unsigned _167;
  __int128 unsigned _168;
  __int128 unsigned _171;
  __int128 unsigned _172;
  __int128 unsigned _174;
  __int128 unsigned _175;
  __int128 unsigned _177;
  __int128 unsigned _178;
  long unsigned int _181;
  long unsigned int _182;
  __int128 unsigned _184;
  __int128 unsigned _185;
  unsigned int _186;
  __int128 unsigned _187;
  const struct secp256k1_gej * _189;
  __int128 unsigned _190;
  __int128 unsigned _191;
  __int128 unsigned _192;
  __int128 unsigned _194;
  __int128 unsigned _195;
  long unsigned int _198;
  long unsigned int _199;
  __int128 unsigned _201;
  __int128 unsigned _202;
  __int128 unsigned _203;
  long unsigned int _205;
  long unsigned int _206;
  __int128 unsigned _208;
  long unsigned int _210;
  long unsigned int _216;
  __int128 unsigned _218;
  __int128 unsigned _219;
  long unsigned int _220;
  __int128 unsigned _222;
  __int128 unsigned _223;
  __int128 unsigned _225;
  __int128 unsigned _227;
  __int128 unsigned _228;
  long int _231;
  __int128 unsigned _235;
  __int128 unsigned _237;
  __int128 unsigned _238;
  __int128 unsigned _239;
  __int128 unsigned _240;
  __int128 unsigned _241;
  __int128 unsigned _243;
  long int _245;
  long int _247;
  __int128 unsigned _251;
  __int128 unsigned _252;
  long unsigned int _253;
  __int128 unsigned _255;
  __int128 unsigned _256;
  long int _258;
  long int _260;
  long int _261;
  __int128 unsigned _264;
  long unsigned int _266;
  long unsigned int _267;
  __int128 unsigned _269;
  __int128 unsigned _271;
  __int128 unsigned _272;
  __int128 unsigned _273;
  __int128 unsigned _275;
  __int128 unsigned _276;
  long unsigned int _279;
  long unsigned int _280;
  __int128 unsigned _282;
  __int128 unsigned _283;
  __int128 unsigned _284;
  __int128 unsigned _286;
  __int128 unsigned _288;
  __int128 unsigned _289;
  long unsigned int _292;
  long unsigned int _293;
  __int128 unsigned _295;
  __int128 unsigned _296;
  __int128 unsigned _297;
  long unsigned int _299;
  long unsigned int _300;
  __int128 unsigned _302;
  long unsigned int _304;
  const uint64_t[5] * _306;
  uint64_t[5] * _307;
  int _310;
  __int128 unsigned _316;
  __int128 unsigned _317;
  __int128 unsigned _319;
  unsigned long _394;
  unsigned long _395;

  <bb 2> [local count: 1073741825]:
  ret_19 = malloc (208);
  if (ret_19 == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 322122547]:
  stderr.120_27 = stderr;
  __fprintf_chk (stderr.120_27, 1, "[libsecp256k1] internal consistency check failed: %s\n", "Out of memory");
  abort ();

  <bb 4> [local count: 751619277]:
  MEM[(struct secp256k1_context *)ret_19].illegal_callback.fn = default_illegal_callback_fn;
  MEM[(struct secp256k1_context *)ret_19].illegal_callback.data = 0B;
  MEM[(struct secp256k1_context *)ret_19].error_callback.fn = default_error_callback_fn;
  MEM[(struct secp256k1_context *)ret_19].error_callback.data = 0B;
  _1 = flags_17(D) & 255;
  if (_1 != 1)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 75161928]:
  stderr.121_28 = stderr;
  __fprintf_chk (stderr.121_28, 1, "[libsecp256k1] illegal argument: %s\n", "Invalid flags");
  abort ();

  <bb 6> [local count: 676457349]:
  MEM[(struct secp256k1_ge_storage[<unknown>] * *)ret_19] = { 0, 0 };
  _5 = flags_17(D) & 512;
  _186 = flags_17(D) & 256;
  if (_5 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 29>; [67.00%]

  <bb 7> [local count: 223230925]:
  _6 = &MEM[(struct secp256k1_context *)ret_19].ecmult_gen_ctx;
  MEM[(struct secp256k1_ecmult_gen_context *)ret_19 + 8B].prec = &secp256k1_ecmult_static_context;
  secp256k1_ecmult_gen_blind (_6, 0B);
  if (_186 != 0)
    goto <bb 9>; [70.93%]
  else
    goto <bb 8>; [29.07%]

  <bb 8> [local count: 453226424]:
  goto <bb 28>; [100.00%]

  <bb 9> [local count: 158337694]:
  _29 = MEM[(struct secp256k1_ge_storage[<unknown>] * *)ret_19];
  if (_29 != 0B)
    goto <bb 10>; [100.00%]
  else
    goto <bb 11>; [0.00%]

  <bb 10> [local count: 158337695]:
  gj ={v} {CLOBBER};
  goto <bb 28>; [100.00%]

  <bb 11> [local count: 64893232]:
  gj.infinity = 0;
  gj.x = secp256k1_ge_const_g.x;
  gj.y = secp256k1_ge_const_g.y;
  MEM[(struct secp256k1_fe *)&gj + 80B].n[0] = 1;
  MEM[(struct secp256k1_fe *)&gj + 80B].n[4] = 0;
  MEM[(struct secp256k1_fe *)&gj + 80B].n[3] = 0;
  MEM[(struct secp256k1_fe *)&gj + 80B].n[2] = 0;
  MEM[(struct secp256k1_fe *)&gj + 80B].n[1] = 0;
  ret_30 = malloc (1048576);
  if (ret_30 == 0B)
    goto <bb 12>; [30.00%]
  else
    goto <bb 13>; [70.00%]

  <bb 12> [local count: 19467969]:
  _31 = MEM[(void (*<T319>) (const char *, void *) *)ret_19 + 192B];
  _32 = MEM[(const void * *)ret_19 + 200B];
  _31 ("Out of memory", _32);

  <bb 13> [local count: 64893230]:
  MEM[(struct secp256k1_ge_storage[<unknown>] * *)ret_19] = ret_30;
  ret_35 = malloc (2097152);
  if (ret_35 == 0B)
    goto <bb 14>; [30.00%]
  else
    goto <bb 15>; [70.00%]

  <bb 14> [local count: 19467969]:
  _36 = MEM[(void (*<T319>) (const char *, void *) *)ret_19 + 192B];
  _37 = MEM[(const void * *)ret_19 + 200B];
  _36 ("Out of memory", _37);

  <bb 15> [local count: 64893230]:
  ret_39 = malloc (1441792);
  if (ret_39 == 0B)
    goto <bb 16>; [30.00%]
  else
    goto <bb 17>; [70.00%]

  <bb 16> [local count: 19467969]:
  _40 = MEM[(void (*<T319>) (const char *, void *) *)ret_19 + 192B];
  _41 = MEM[(const void * *)ret_19 + 200B];
  _40 ("Out of memory", _41);

  <bb 17> [local count: 64893230]:
  ret_43 = malloc (655360);
  if (ret_43 == 0B)
    goto <bb 18>; [30.00%]
  else
    goto <bb 19>; [70.00%]

  <bb 18> [local count: 19467969]:
  _44 = MEM[(void (*<T319>) (const char *, void *) *)ret_19 + 192B];
  _45 = MEM[(const void * *)ret_19 + 200B];
  _44 ("Out of memory", _45);

  <bb 19> [local count: 64893230]:
  _68 = gj.infinity;
  d.infinity = _68;
  if (_68 != 0)
    goto <bb 21>; [34.00%]
  else
    goto <bb 20>; [66.00%]

  <bb 20> [local count: 42829532]:
  secp256k1_gej_double_var.part.14 (&d, &gj, 0B);

  <bb 21> [local count: 64893230]:
  d_ge.x = d.x;
  d_ge.y = d.y;
  d_ge.infinity = 0;
  secp256k1_fe_sqr_inner (&zi2.n, &MEM[(const struct secp256k1_fe *)&d + 80B].n);
  secp256k1_fe_mul_inner (&zi3.n, &zi2.n, &MEM[(const struct secp256k1_fe *)&d + 80B].n);
  secp256k1_fe_mul_inner (&MEM[(struct secp256k1_fe *)&a_ge].n, &MEM[(const struct secp256k1_fe *)&gj].n, &zi2.n);
  secp256k1_fe_mul_inner (&MEM[(struct secp256k1_fe *)&a_ge + 40B].n, &MEM[(const struct secp256k1_fe *)&gj + 40B].n, &zi3.n);
  _88 = gj.infinity;
  a_ge.infinity = _88;
  zi2 ={v} {CLOBBER};
  zi3 ={v} {CLOBBER};
  MEM[(struct secp256k1_gej *)ret_35].x = a_ge.x;
  MEM[(struct secp256k1_gej *)ret_35].y = a_ge.y;
  MEM[(struct secp256k1_gej *)ret_35].z = gj.z;
  MEM[(struct secp256k1_gej *)ret_35].infinity = 0;
  MEM[(struct secp256k1_fe *)ret_43] = d.z;
  _56 = ret_35 + 128;
  ivtmp.797_96 = (unsigned long) _56;
  _7 = ret_43 + 40;
  ivtmp.799_42 = (unsigned long) _7;
  _394 = (unsigned long) ret_35;
  _395 = _394 + 2097152;

  <bb 22> [local count: 525045221]:
  # ivtmp.797_97 = PHI <ivtmp.797_96(21), ivtmp.797_95(22)>
  # ivtmp.799_55 = PHI <ivtmp.799_42(21), ivtmp.799_4(22)>
  _72 = (struct secp256k1_fe *) ivtmp.799_55;
  _25 = ivtmp.797_97 + 18446744073709551488;
  _26 = (void *) _25;
  _76 = (struct secp256k1_gej *) ivtmp.797_97;
  secp256k1_gej_add_ge_var (_76, _26, &d_ge, _72);
  ivtmp.797_95 = ivtmp.797_97 + 128;
  ivtmp.799_4 = ivtmp.799_55 + 40;
  if (ivtmp.797_95 != _395)
    goto <bb 22>; [87.64%]
  else
    goto <bb 23>; [12.36%]

  <bb 23> [local count: 64893230]:
  _82 = &MEM[(const struct secp256k1_fe *)ret_35 + 2097104B].n;
  secp256k1_fe_mul_inner (_82, _82, &MEM[(const struct secp256k1_fe *)&d + 80B].n);
  d ={v} {CLOBBER};
  a_ge ={v} {CLOBBER};
  d_ge ={v} {CLOBBER};
  secp256k1_fe_inv (&zi, _82);
  a0_211 = MEM[(const uint64_t *)&zi];
  a1_212 = MEM[(const uint64_t *)&zi + 8B];
  a2_213 = MEM[(const uint64_t *)&zi + 16B];
  a3_214 = MEM[(const uint64_t *)&zi + 24B];
  a4_215 = MEM[(const uint64_t *)&zi + 32B];
  _216 = a0_211 * 2;
  _218 = (__int128 unsigned) a3_214;
  _219 = _216 w* a3_214;
  _220 = a1_212 * 2;
  _222 = (__int128 unsigned) a2_213;
  _223 = _220 w* a2_213;
  d_224 = _219 + _223;
  _225 = (__int128 unsigned) a4_215;
  c_226 = a4_215 w* a4_215;
  _227 = c_226 & 4503599627370495;
  _228 = _227 * 68719492368;
  d_229 = d_224 + _228;
  c_230 = c_226 >> 52;
  _231 = (long int) d_229;
  t3_232 = _231 & 4503599627370495;
  d_233 = d_229 >> 52;
  a4_234 = a4_215 * 2;
  _235 = (__int128 unsigned) a0_211;
  _237 = a0_211 w* a4_234;
  _238 = a3_214 w* _220;
  _239 = _237 + _238;
  _240 = a2_213 w* a2_213;
  _241 = _239 + _240;
  _243 = c_230 * 68719492368;
  _121 = _241 + _243;
  d_244 = _121 + d_233;
  _245 = (long int) d_244;
  d_246 = d_244 >> 52;
  _247 = _245 >> 48;
  tx_248 = _247 & 15;
  t4_249 = _245 & 281474976710655;
  c_250 = a0_211 w* a0_211;
  _251 = (__int128 unsigned) a1_212;
  _252 = a4_234 w* a1_212;
  _253 = a2_213 * 2;
  _255 = a3_214 w* _253;
  _256 = _252 + _255;
  d_257 = d_246 + _256;
  _258 = (long int) d_257;
  d_259 = d_257 >> 52;
  _260 = _258 << 4;
  _261 = _260 & 72057594037927920;
  u0_262 = tx_248 | _261;
  _264 = u0_262 w* 4294968273;
  c_265 = c_250 + _264;
  _266 = (long unsigned int) c_265;
  _267 = _266 & 4503599627370495;
  MEM[(uint64_t *)&zi2] = _267;
  c_268 = c_265 >> 52;
  _269 = _216 w* a1_212;
  _271 = a2_213 w* a4_234;
  _272 = a3_214 w* a3_214;
  _273 = _271 + _272;
  d_274 = d_259 + _273;
  _275 = d_274 & 4503599627370495;
  _276 = _275 * 68719492368;
  _34 = _269 + _276;
  c_277 = _34 + c_268;
  d_278 = d_274 >> 52;
  _279 = (long unsigned int) c_277;
  _280 = _279 & 4503599627370495;
  MEM[(uint64_t *)&zi2 + 8B] = _280;
  c_281 = c_277 >> 52;
  _282 = _216 w* a2_213;
  _283 = a1_212 w* a1_212;
  _284 = _282 + _283;
  _286 = a3_214 w* a4_234;
  d_287 = d_278 + _286;
  _288 = d_287 & 4503599627370495;
  _289 = _288 * 68719492368;
  _33 = _284 + _289;
  c_290 = _33 + c_281;
  d_291 = d_287 >> 52;
  _292 = (long unsigned int) c_290;
  _293 = _292 & 4503599627370495;
  MEM[(uint64_t *)&zi2 + 16B] = _293;
  c_294 = c_290 >> 52;
  _295 = d_291 * 68719492368;
  _296 = (__int128 unsigned) t3_232;
  _297 = _295 + _296;
  c_298 = c_294 + _297;
  _299 = (long unsigned int) c_298;
  _300 = _299 & 4503599627370495;
  MEM[(uint64_t *)&zi2 + 24B] = _300;
  c_301 = c_298 >> 52;
  _302 = (__int128 unsigned) t4_249;
  c_303 = c_301 + _302;
  _304 = (long unsigned int) c_303;
  MEM[(uint64_t *)&zi2 + 32B] = _304;
  _103 = _267 w* a3_214;
  _107 = _280 w* a2_213;
  _108 = _103 + _107;
  _112 = _300 w* a0_211;
  _116 = _293 w* a1_212;
  _58 = _108 + _116;
  d_118 = _58 + _112;
  c_122 = _225 * c_303;
  _123 = c_122 & 4503599627370495;
  _124 = _123 * 68719492368;
  d_125 = d_118 + _124;
  c_126 = c_122 >> 52;
  _127 = (long unsigned int) d_125;
  t3_128 = _127 & 4503599627370495;
  d_129 = d_125 >> 52;
  _130 = _267 w* a4_215;
  _131 = _280 w* a3_214;
  _317 = _130 + _131;
  _133 = _300 w* a1_212;
  _134 = _293 w* a2_213;
  _316 = _134 + _317;
  _137 = _235 * c_303;
  _2 = _137 + _316;
  _3 = _2 + _133;
  _140 = c_126 * 68719492368;
  _9 = _3 + _140;
  d_141 = _9 + d_129;
  _142 = (long unsigned int) d_141;
  d_143 = d_141 >> 52;
  _144 = _142 >> 48;
  tx_145 = _144 & 15;
  t4_146 = _142 & 281474976710655;
  c_147 = _267 w* a0_211;
  _148 = _280 w* a4_215;
  _149 = _293 w* a3_214;
  _83 = _148 + _149;
  _151 = _251 * c_303;
  _152 = _300 w* a2_213;
  _319 = _83 + _151;
  _154 = _152 + _319;
  d_155 = d_143 + _154;
  _156 = (long unsigned int) d_155;
  d_157 = d_155 >> 52;
  _158 = _156 << 4;
  _159 = _158 & 72057594037927920;
  u0_160 = tx_145 | _159;
  _162 = u0_160 w* 4294968273;
  c_163 = c_147 + _162;
  _164 = (long unsigned int) c_163;
  _165 = _164 & 4503599627370495;
  MEM[(uint64_t *)&zi3] = _165;
  c_166 = c_163 >> 52;
  _167 = _267 w* a1_212;
  _168 = _280 w* a0_211;
  _69 = _167 + _168;
  _171 = _293 w* a4_215;
  _172 = _300 w* a3_214;
  _174 = _222 * c_303;
  _87 = _171 + _174;
  _175 = _87 + _172;
  d_176 = d_157 + _175;
  _177 = d_176 & 4503599627370495;
  _178 = _177 * 68719492368;
  _86 = _69 + _178;
  c_179 = _86 + c_166;
  d_180 = d_176 >> 52;
  _181 = (long unsigned int) c_179;
  _182 = _181 & 4503599627370495;
  MEM[(uint64_t *)&zi3 + 8B] = _182;
  c_183 = c_179 >> 52;
  _184 = _267 w* a2_213;
  _185 = _280 w* a1_212;
  _10 = _184 + _185;
  _187 = _293 w* a0_211;
  _46 = _10 + _187;
  _190 = _300 w* a4_215;
  _191 = _218 * c_303;
  _192 = _190 + _191;
  d_193 = d_180 + _192;
  _194 = d_193 & 4503599627370495;
  _195 = _194 * 68719492368;
  _84 = _46 + _195;
  c_196 = _84 + c_183;
  d_197 = d_193 >> 52;
  _198 = (long unsigned int) c_196;
  _199 = _198 & 4503599627370495;
  MEM[(uint64_t *)&zi3 + 16B] = _199;
  c_200 = c_196 >> 52;
  _201 = d_197 * 68719492368;
  _202 = (__int128 unsigned) t3_128;
  _203 = _201 + _202;
  c_204 = c_200 + _203;
  _205 = (long unsigned int) c_204;
  _206 = _205 & 4503599627370495;
  MEM[(uint64_t *)&zi3 + 24B] = _206;
  c_207 = c_204 >> 52;
  _208 = (__int128 unsigned) t4_146;
  c_209 = c_207 + _208;
  _210 = (long unsigned int) c_209;
  MEM[(uint64_t *)&zi3 + 32B] = _210;
  _90 = &MEM[(const struct secp256k1_fe *)ret_35 + 2097024B].n;
  _91 = &MEM[(struct secp256k1_fe *)ret_39 + 1441704B].n;
  secp256k1_fe_mul_inner (_91, _90, &zi2.n);
  _92 = &MEM[(const struct secp256k1_fe *)ret_35 + 2097064B].n;
  _93 = &MEM[(struct secp256k1_fe *)ret_39 + 1441744B].n;
  secp256k1_fe_mul_inner (_93, _92, &zi3.n);
  _94 = MEM[(const struct secp256k1_gej *)ret_35 + 2097024B].infinity;
  MEM[(struct secp256k1_ge *)ret_39 + 1441704B].infinity = _94;
  zi2 ={v} {CLOBBER};
  zi3 ={v} {CLOBBER};
  _106 = ret_43 + 655320;
  ivtmp.777_111 = (unsigned long) _106;
  _89 = ret_39 + 1441616;
  ivtmp.779_99 = (unsigned long) _89;
  _189 = ret_35 + 2096896;
  ivtmp.781_188 = (unsigned long) _189;
  _101 = (unsigned long) ret_39;

  <bb 24> [local count: 173264922]:
  # ivtmp.777_119 = PHI <ivtmp.777_111(23), ivtmp.777_117(24)>
  # ivtmp.779_105 = PHI <ivtmp.779_99(23), ivtmp.779_102(24)>
  # ivtmp.781_85 = PHI <ivtmp.781_188(23), ivtmp.781_81(24)>
  _62 = (const uint64_t[5] *) ivtmp.777_119;
  secp256k1_fe_mul_inner (&zi.n, &zi.n, _62);
  secp256k1_fe_sqr_inner (&zi2.n, &zi.n);
  secp256k1_fe_mul_inner (&zi3.n, &zi2.n, &zi.n);
  _306 = (const uint64_t[5] *) ivtmp.781_85;
  _307 = (uint64_t[5] *) ivtmp.779_105;
  secp256k1_fe_mul_inner (_307, _306, &zi2.n);
  _38 = ivtmp.781_85 + 40;
  _8 = (const uint64_t[5] *) _38;
  _120 = ivtmp.779_105 + 40;
  _115 = (uint64_t[5] *) _120;
  secp256k1_fe_mul_inner (_115, _8, &zi3.n);
  _310 = MEM[base: _306, offset: 120B];
  MEM[base: _307, offset: 80B] = _310;
  zi2 ={v} {CLOBBER};
  zi3 ={v} {CLOBBER};
  ivtmp.777_117 = ivtmp.777_119 + 18446744073709551576;
  ivtmp.779_102 = ivtmp.779_105 + 18446744073709551528;
  ivtmp.781_81 = ivtmp.781_85 + 18446744073709551488;
  if (_101 != ivtmp.779_105)
    goto <bb 24>; [83.50%]
  else
    goto <bb 25>; [16.50%]

  <bb 25> [local count: 64893230]:
  zi ={v} {CLOBBER};
  ivtmp.770_150 = (unsigned long) ret_30;
  _132 = _101 + 1441792;

  <bb 26> [local count: 525045219]:
  # ivtmp.770_22 = PHI <ivtmp.770_150(25), ivtmp.770_21(26)>
  # ivtmp.771_139 = PHI <_101(25), ivtmp.771_138(26)>
  _49 = (struct secp256k1_ge *) ivtmp.771_139;
  _51 = (struct secp256k1_ge_storage *) ivtmp.770_22;
  secp256k1_ge_to_storage (_51, _49);
  ivtmp.770_21 = ivtmp.770_22 + 64;
  ivtmp.771_138 = ivtmp.771_139 + 88;
  if (_132 != ivtmp.771_138)
    goto <bb 26>; [87.64%]
  else
    goto <bb 27>; [12.36%]

  <bb 27> [local count: 64893229]:
  free (ret_39);
  free (ret_35);
  free (ret_43);
  gj ={v} {CLOBBER};

  <bb 28> [local count: 676457348]:
  return ret_19;

  <bb 29> [local count: 453226425]:
  if (_186 != 0)
    goto <bb 11>; [14.32%]
  else
    goto <bb 8>; [85.68%]

}



;; Function secp256k1_context_clone (secp256k1_context_clone, funcdef_no=214, decl_uid=1530, cgraph_uid=214, symbol_order=221)

__attribute__((visibility ("default")))
secp256k1_context_clone (const struct secp256k1_context * ctx)
{
  void * ret;
  void * ret;
  struct secp256k1_ge_storage[<unknown>] * pretmp_3;
  struct secp256k1_ge_storage[64][16] * _9;
  void (*<T319>) (const char *, void *) _11;
  const void * _12;
  struct secp256k1_ge_storage[<unknown>] * prephitmp_16;
  struct secp256k1_ge_storage[<unknown>] * _21;
  void (*<T319>) (const char *, void *) _23;
  const void * _24;

  <bb 2> [local count: 1073741825]:
  ret_10 = malloc (208);
  if (ret_10 == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 322122547]:
  _11 = MEM[(void (*<T319>) (const char *, void *) *)ctx_4(D) + 192B];
  _12 = MEM[(const void * *)ctx_4(D) + 200B];
  _11 ("Out of memory", _12);

  <bb 4> [local count: 1073741825]:
  MEM[(struct secp256k1_context *)ret_10].illegal_callback = ctx_4(D)->illegal_callback;
  MEM[(struct secp256k1_context *)ret_10].error_callback = ctx_4(D)->error_callback;
  _21 = MEM[(struct secp256k1_ge_storage[<unknown>] * const *)ctx_4(D)];
  if (_21 == 0B)
    goto <bb 5>; [46.53%]
  else
    goto <bb 6>; [53.47%]

  <bb 5> [local count: 499612071]:
  MEM[(struct secp256k1_ge_storage[<unknown>] * *)ret_10] = 0B;
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 574129753]:
  ret_22 = malloc (1048576);
  if (ret_22 == 0B)
    goto <bb 7>; [30.00%]
  else
    goto <bb 8>; [70.00%]

  <bb 7> [local count: 172238926]:
  _23 = MEM[(void (*<T319>) (const char *, void *) *)ctx_4(D) + 192B];
  _24 = MEM[(const void * *)ctx_4(D) + 200B];
  _23 ("Out of memory", _24);
  pretmp_3 = MEM[(struct secp256k1_ge_storage[<unknown>] * const *)ctx_4(D)];

  <bb 8> [local count: 574129753]:
  # prephitmp_16 = PHI <pretmp_3(7), _21(6)>
  MEM[(struct secp256k1_ge_storage[<unknown>] * *)ret_10] = ret_22;
  __builtin_memcpy (ret_22, prephitmp_16, 1048576);

  <bb 9> [local count: 1073741825]:
  _9 = MEM[(const struct secp256k1_ecmult_gen_context *)ctx_4(D) + 8B].prec;
  if (_9 == 0B)
    goto <bb 11>; [30.00%]
  else
    goto <bb 10>; [70.00%]

  <bb 10> [local count: 751619277]:
  MEM[(struct secp256k1_ecmult_gen_context *)ret_10 + 8B].initial = MEM[(const struct secp256k1_ecmult_gen_context *)ctx_4(D) + 8B].initial;
  MEM[(struct secp256k1_ecmult_gen_context *)ret_10 + 8B].blind = MEM[(const struct secp256k1_ecmult_gen_context *)ctx_4(D) + 8B].blind;

  <bb 11> [local count: 1073741825]:
  MEM[(struct secp256k1_ecmult_gen_context *)ret_10 + 8B].prec = _9;
  return ret_10;

}



;; Function secp256k1_context_destroy (secp256k1_context_destroy, funcdef_no=215, decl_uid=1532, cgraph_uid=215, symbol_order=222)

__attribute__((visibility ("default")))
secp256k1_context_destroy (struct secp256k1_context * ctx)
{
  struct secp256k1_ge_storage[<unknown>] * _6;

  <bb 2> [local count: 1073741826]:
  if (ctx_2(D) != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> [local count: 574129753]:
  _6 = MEM[(struct secp256k1_ecmult_context *)ctx_2(D)].pre_g;
  free (_6);
  free (ctx_2(D)); [tail call]

  <bb 4> [local count: 1073741816]:
  return;

}



;; Function secp256k1_context_set_illegal_callback (secp256k1_context_set_illegal_callback, funcdef_no=216, decl_uid=1538, cgraph_uid=216, symbol_order=223)

__attribute__((visibility ("default")))
secp256k1_context_set_illegal_callback (struct secp256k1_context * ctx, void (*<T319>) (const char *, void *) fun, const void * data)
{
  <bb 2> [local count: 1073741825]:
  if (fun_2(D) == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 322122544]:

  <bb 4> [local count: 1073741825]:
  # fun_1 = PHI <fun_2(D)(2), default_illegal_callback_fn(3)>
  ctx_4(D)->illegal_callback.fn = fun_1;
  ctx_4(D)->illegal_callback.data = data_6(D);
  return;

}



;; Function secp256k1_context_set_error_callback (secp256k1_context_set_error_callback, funcdef_no=217, decl_uid=1544, cgraph_uid=217, symbol_order=224)

__attribute__((visibility ("default")))
secp256k1_context_set_error_callback (struct secp256k1_context * ctx, void (*<T319>) (const char *, void *) fun, const void * data)
{
  <bb 2> [local count: 1073741825]:
  if (fun_2(D) == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 322122544]:

  <bb 4> [local count: 1073741825]:
  # fun_1 = PHI <fun_2(D)(2), default_error_callback_fn(3)>
  ctx_4(D)->error_callback.fn = fun_1;
  ctx_4(D)->error_callback.data = data_6(D);
  return;

}



;; Function secp256k1_ec_pubkey_parse (secp256k1_ec_pubkey_parse, funcdef_no=220, decl_uid=1549, cgraph_uid=220, symbol_order=227)

__attribute__((visibility ("default")))
secp256k1_ec_pubkey_parse (const struct secp256k1_context * ctx, struct secp256k1_pubkey * pubkey, const unsigned char * input, size_t inputlen)
{
  vector(2) long long unsigned int vect__241.831;
  const vector(2) long unsigned int vect__230.830;
  const vector(2) long unsigned int vect__230.829;
  const vector(2) long unsigned int vect__432.826;
  const vector(2) long unsigned int vect__240.825;
  const vector(2) long unsigned int vect__240.824;
  vector(2) long long unsigned int vect__213.819;
  const vector(2) long unsigned int vect__202.818;
  const vector(2) long unsigned int vect__202.817;
  const vector(2) long unsigned int vect__6.814;
  const vector(2) long unsigned int vect__212.813;
  const vector(2) long unsigned int vect__212.812;
  const uint64_t x176__lsm.807;
  const uint64_t x176__lsm.806;
  const uint64_t x176__lsm.805;
  const uint64_t x176__lsm.804;
  const uint64_t x176__lsm.803;
  struct secp256k1_ge_storage s;
  struct secp256k1_fe na;
  struct secp256k1_fe y2;
  struct secp256k1_fe x3;
  struct secp256k1_fe na;
  int64_t u0;
  int64_t tx;
  int64_t t4;
  int64_t t3;
  uint64_t a4;
  uint128_t d;
  uint128_t c;
  struct secp256k1_fe x2;
  struct secp256k1_fe x3;
  struct secp256k1_fe x6;
  struct secp256k1_fe x9;
  struct secp256k1_fe x11;
  struct secp256k1_fe x22;
  struct secp256k1_fe x44;
  struct secp256k1_fe x88;
  struct secp256k1_fe x176;
  struct secp256k1_fe x220;
  struct secp256k1_fe x223;
  struct secp256k1_fe t1;
  struct secp256k1_fe x2;
  struct secp256k1_fe x3;
  struct secp256k1_fe c;
  struct secp256k1_fe x;
  struct secp256k1_fe x;
  struct secp256k1_fe y;
  struct secp256k1_ge Q;
  int _8;
  void (*<T319>) (const char *, void *) _18;
  const void * _19;
  void (*<T319>) (const char *, void *) _20;
  const void * _21;
  unsigned char _32;
  unsigned char _33;
  const unsigned char * _34;
  int _35;
  unsigned char _36;
  _Bool _37;
  int _38;
  unsigned char _40;
  _Bool _41;
  const unsigned char * _44;
  int _45;
  const unsigned char * _46;
  int _47;
  unsigned char _48;
  unsigned char _49;
  long unsigned int _50;
  int _51;
  int _52;
  _Bool _53;
  int _54;
  __int128 unsigned _60;
  long unsigned int _61;
  int _62;
  int _63;
  long long unsigned int _64;
  long unsigned int _65;
  long long unsigned int _66;
  long unsigned int _67;
  long long unsigned int _68;
  long unsigned int _69;
  long long unsigned int _70;
  long unsigned int _71;
  long long unsigned int _72;
  long unsigned int _75;
  long unsigned int _76;
  long unsigned int _77;
  long unsigned int _78;
  long unsigned int _79;
  long unsigned int _80;
  long long unsigned int _90;
  long unsigned int _113;
  __int128 unsigned _116;
  long unsigned int _117;
  __int128 unsigned _120;
  __int128 unsigned _124;
  __int128 unsigned _125;
  long int _128;
  __int128 unsigned _134;
  __int128 unsigned _135;
  __int128 unsigned _136;
  __int128 unsigned _137;
  __int128 unsigned _138;
  __int128 unsigned _140;
  long int _142;
  long int _144;
  __int128 unsigned _149;
  long unsigned int _150;
  __int128 unsigned _152;
  __int128 unsigned _153;
  long int _155;
  long int _157;
  long int _158;
  __int128 unsigned _161;
  long unsigned int _163;
  long unsigned int _164;
  __int128 unsigned _166;
  __int128 unsigned _168;
  __int128 unsigned _169;
  __int128 unsigned _170;
  __int128 unsigned _172;
  __int128 unsigned _173;
  long unsigned int _176;
  long unsigned int _177;
  __int128 unsigned _179;
  __int128 unsigned _180;
  __int128 unsigned _181;
  __int128 unsigned _183;
  __int128 unsigned _185;
  __int128 unsigned _186;
  long unsigned int _189;
  long unsigned int _190;
  __int128 unsigned _192;
  __int128 unsigned _193;
  __int128 unsigned _194;
  long unsigned int _196;
  long unsigned int _197;
  __int128 unsigned _199;
  long unsigned int _201;
  long unsigned int _210;
  long unsigned int _220;
  long unsigned int _221;
  int _222;
  long unsigned int _226;
  long unsigned int _227;
  long unsigned int _238;
  long unsigned int _248;
  long unsigned int _249;
  int _250;
  unsigned char _256;
  __int128 unsigned _394;
  __int128 unsigned _402;
  _Bool _407;
  _Bool _416;
  long long unsigned int _420;
  vector(2) long unsigned int _439;
  vector(2) long unsigned int _443;
  unsigned int ivtmp_599;
  unsigned int ivtmp_600;
  unsigned int ivtmp_601;
  unsigned int ivtmp_602;
  unsigned int ivtmp_603;
  unsigned int ivtmp_604;
  unsigned int ivtmp_605;
  unsigned int ivtmp_606;
  unsigned int ivtmp_607;
  unsigned int ivtmp_608;
  unsigned int ivtmp_609;
  unsigned int ivtmp_610;
  unsigned int ivtmp_611;
  unsigned int ivtmp_612;

  <bb 2> [local count: 452084125]:
  if (pubkey_10(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 45208412]:
  _18 = MEM[(void (*<T319>) (const char *, void *) *)ctx_11(D) + 176B];
  _19 = MEM[(const void * *)ctx_11(D) + 184B];
  _18 ("pubkey != NULL", _19);
  goto <bb 38>; [100.00%]

  <bb 4> [local count: 406875712]:
  __builtin_memset (pubkey_10(D), 0, 64);
  if (input_13(D) == 0B)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 40687571]:
  _20 = MEM[(void (*<T319>) (const char *, void *) *)ctx_11(D) + 176B];
  _21 = MEM[(const void * *)ctx_11(D) + 184B];
  _20 ("input != NULL", _21);
  goto <bb 38>; [100.00%]

  <bb 6> [local count: 366188141]:
  if (inputlen_14(D) == 33)
    goto <bb 7>; [34.00%]
  else
    goto <bb 29>; [66.00%]

  <bb 7> [local count: 124503968]:
  _32 = *input_13(D);
  _33 = _32 + 254;
  if (_33 <= 1)
    goto <bb 9>; [14.99%]
  else
    goto <bb 8>; [85.01%]

  <bb 8> [local count: 231987508]:
  goto <bb 38>; [100.00%]

  <bb 9> [local count: 18663145]:
  _34 = input_13(D) + 1;
  _35 = secp256k1_fe_set_b32 (&x, _34);
  if (_35 != 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 25>; [67.00%]

  <bb 10> [local count: 6158838]:
  _36 = *input_13(D);
  Q.x = x;
  secp256k1_fe_sqr_inner (&x2.n, &x.n);
  secp256k1_fe_mul_inner (&x3.n, &x.n, &x2.n);
  Q.infinity = 0;
  _75 = x3.n[0];
  _76 = _75 + 7;
  c.n[0] = _76;
  _77 = x3.n[1];
  c.n[1] = _77;
  _78 = x3.n[2];
  c.n[2] = _78;
  _79 = x3.n[3];
  c.n[3] = _79;
  _80 = x3.n[4];
  c.n[4] = _80;
  secp256k1_fe_sqr_inner (&x2.n, &c.n);
  secp256k1_fe_mul_inner (&x2.n, &x2.n, &c.n);
  secp256k1_fe_sqr_inner (&x3.n, &x2.n);
  secp256k1_fe_mul_inner (&x3.n, &x3.n, &c.n);
  x6 = x3;
  secp256k1_fe_sqr_inner (&x6.n, &x6.n);
  secp256k1_fe_sqr_inner (&x6.n, &x6.n);
  secp256k1_fe_sqr_inner (&x6.n, &x6.n);
  secp256k1_fe_mul_inner (&x6.n, &x6.n, &x3.n);
  x9 = x6;
  secp256k1_fe_sqr_inner (&x9.n, &x9.n);
  secp256k1_fe_sqr_inner (&x9.n, &x9.n);
  secp256k1_fe_sqr_inner (&x9.n, &x9.n);
  secp256k1_fe_mul_inner (&x9.n, &x9.n, &x3.n);
  x11 = x9;
  secp256k1_fe_sqr_inner (&x11.n, &x11.n);
  secp256k1_fe_sqr_inner (&x11.n, &x11.n);
  secp256k1_fe_mul_inner (&x11.n, &x11.n, &x2.n);
  x22 = x11;

  <bb 11> [local count: 67776790]:
  # ivtmp_600 = PHI <11(10), ivtmp_599(11)>
  secp256k1_fe_sqr_inner (&x22.n, &x22.n);
  ivtmp_599 = ivtmp_600 + 4294967295;
  if (ivtmp_599 != 0)
    goto <bb 11>; [90.91%]
  else
    goto <bb 12>; [9.09%]

  <bb 12> [local count: 6158838]:
  secp256k1_fe_mul_inner (&x22.n, &x22.n, &x11.n);
  x44 = x22;

  <bb 13> [local count: 135423641]:
  # ivtmp_602 = PHI <22(12), ivtmp_601(13)>
  secp256k1_fe_sqr_inner (&x44.n, &x44.n);
  ivtmp_601 = ivtmp_602 + 4294967295;
  if (ivtmp_601 != 0)
    goto <bb 13>; [95.45%]
  else
    goto <bb 14>; [4.55%]

  <bb 14> [local count: 6158838]:
  secp256k1_fe_mul_inner (&x44.n, &x44.n, &x22.n);
  x88 = x44;

  <bb 15> [local count: 271266283]:
  # ivtmp_604 = PHI <44(14), ivtmp_603(15)>
  secp256k1_fe_sqr_inner (&x88.n, &x88.n);
  ivtmp_603 = ivtmp_604 + 4294967295;
  if (ivtmp_603 != 0)
    goto <bb 15>; [97.73%]
  else
    goto <bb 16>; [2.27%]

  <bb 16> [local count: 6158838]:
  secp256k1_fe_mul_inner (&x88.n, &x88.n, &x44.n);
  x176 = x88;
  x176__lsm.803_98 = MEM[(const uint64_t *)&x176];
  x176__lsm.804_419 = MEM[(const uint64_t *)&x176 + 8B];
  x176__lsm.805_96 = MEM[(const uint64_t *)&x176 + 16B];
  x176__lsm.806_415 = MEM[(const uint64_t *)&x176 + 24B];
  x176__lsm.807_94 = MEM[(const uint64_t *)&x176 + 32B];

  <bb 17> [local count: 543737403]:
  # x176__lsm.803_251 = PHI <x176__lsm.803_98(16), _164(17)>
  # x176__lsm.804_42 = PHI <x176__lsm.804_419(16), _177(17)>
  # x176__lsm.805_104 = PHI <x176__lsm.805_96(16), _190(17)>
  # x176__lsm.806_102 = PHI <x176__lsm.806_415(16), _197(17)>
  # x176__lsm.807_88 = PHI <x176__lsm.807_94(16), _201(17)>
  # ivtmp_606 = PHI <88(16), ivtmp_605(17)>
  _113 = x176__lsm.803_251 * 2;
  _116 = _113 w* x176__lsm.806_102;
  _117 = x176__lsm.804_42 * 2;
  _120 = _117 w* x176__lsm.805_104;
  d_121 = _116 + _120;
  c_123 = x176__lsm.807_88 w* x176__lsm.807_88;
  _124 = c_123 & 4503599627370495;
  _125 = _124 * 68719492368;
  d_126 = d_121 + _125;
  c_127 = c_123 >> 52;
  _128 = (long int) d_126;
  t3_129 = _128 & 4503599627370495;
  d_130 = d_126 >> 52;
  a4_131 = x176__lsm.807_88 * 2;
  _134 = x176__lsm.803_251 w* a4_131;
  _135 = x176__lsm.806_102 w* _117;
  _136 = _134 + _135;
  _137 = x176__lsm.805_104 w* x176__lsm.805_104;
  _138 = _136 + _137;
  _140 = c_127 * 68719492368;
  _60 = _138 + _140;
  d_141 = _60 + d_130;
  _142 = (long int) d_141;
  d_143 = d_141 >> 52;
  _144 = _142 >> 48;
  tx_145 = _144 & 15;
  t4_146 = _142 & 281474976710655;
  c_147 = x176__lsm.803_251 w* x176__lsm.803_251;
  _149 = a4_131 w* x176__lsm.804_42;
  _150 = x176__lsm.805_104 * 2;
  _152 = x176__lsm.806_102 w* _150;
  _153 = _149 + _152;
  d_154 = d_143 + _153;
  _155 = (long int) d_154;
  d_156 = d_154 >> 52;
  _157 = _155 << 4;
  _158 = _157 & 72057594037927920;
  u0_159 = tx_145 | _158;
  _161 = u0_159 w* 4294968273;
  c_162 = c_147 + _161;
  _163 = (long unsigned int) c_162;
  _164 = _163 & 4503599627370495;
  c_165 = c_162 >> 52;
  _166 = _113 w* x176__lsm.804_42;
  _168 = x176__lsm.805_104 w* a4_131;
  _169 = x176__lsm.806_102 w* x176__lsm.806_102;
  _170 = _168 + _169;
  d_171 = d_156 + _170;
  _172 = d_171 & 4503599627370495;
  _173 = _172 * 68719492368;
  _402 = _166 + _173;
  c_174 = c_165 + _402;
  d_175 = d_171 >> 52;
  _176 = (long unsigned int) c_174;
  _177 = _176 & 4503599627370495;
  c_178 = c_174 >> 52;
  _179 = _113 w* x176__lsm.805_104;
  _180 = x176__lsm.804_42 w* x176__lsm.804_42;
  _181 = _179 + _180;
  _183 = x176__lsm.806_102 w* a4_131;
  d_184 = d_175 + _183;
  _185 = d_184 & 4503599627370495;
  _186 = _185 * 68719492368;
  _394 = _181 + _186;
  c_187 = c_178 + _394;
  d_188 = d_184 >> 52;
  _189 = (long unsigned int) c_187;
  _190 = _189 & 4503599627370495;
  c_191 = c_187 >> 52;
  _192 = d_188 * 68719492368;
  _193 = (__int128 unsigned) t3_129;
  _194 = _192 + _193;
  c_195 = c_191 + _194;
  _196 = (long unsigned int) c_195;
  _197 = _196 & 4503599627370495;
  c_198 = c_195 >> 52;
  _199 = (__int128 unsigned) t4_146;
  c_200 = c_198 + _199;
  _201 = (long unsigned int) c_200;
  ivtmp_605 = ivtmp_606 + 4294967295;
  if (ivtmp_605 != 0)
    goto <bb 17>; [98.87%]
  else
    goto <bb 18>; [1.13%]

  <bb 18> [local count: 6158838]:
  _439 = {_190, _197};
  _443 = {_164, _177};
  MEM[(const uint64_t *)&x176] = _443;
  MEM[(const uint64_t *)&x176 + 16B] = _439;
  MEM[(const uint64_t *)&x176 + 32B] = _201;
  secp256k1_fe_mul_inner (&x176.n, &x176.n, &x88.n);
  x220 = x176;

  <bb 19> [local count: 271266287]:
  # ivtmp_608 = PHI <44(18), ivtmp_607(19)>
  secp256k1_fe_sqr_inner (&x220.n, &x220.n);
  ivtmp_607 = ivtmp_608 + 4294967295;
  if (ivtmp_607 != 0)
    goto <bb 19>; [97.73%]
  else
    goto <bb 20>; [2.27%]

  <bb 20> [local count: 6158838]:
  secp256k1_fe_mul_inner (&x220.n, &x220.n, &x44.n);
  x223 = x220;
  secp256k1_fe_sqr_inner (&x223.n, &x223.n);
  secp256k1_fe_sqr_inner (&x223.n, &x223.n);
  secp256k1_fe_sqr_inner (&x223.n, &x223.n);
  secp256k1_fe_mul_inner (&x223.n, &x223.n, &x3.n);
  t1 = x223;

  <bb 21> [local count: 141535110]:
  # ivtmp_610 = PHI <23(20), ivtmp_609(21)>
  secp256k1_fe_sqr_inner (&t1.n, &t1.n);
  ivtmp_609 = ivtmp_610 + 4294967295;
  if (ivtmp_609 != 0)
    goto <bb 21>; [95.65%]
  else
    goto <bb 22>; [4.35%]

  <bb 22> [local count: 6158838]:
  secp256k1_fe_mul_inner (&t1.n, &t1.n, &x22.n);

  <bb 23> [local count: 36940096]:
  # ivtmp_612 = PHI <6(22), ivtmp_611(23)>
  secp256k1_fe_sqr_inner (&t1.n, &t1.n);
  ivtmp_611 = ivtmp_612 + 4294967295;
  if (ivtmp_611 != 0)
    goto <bb 23>; [83.33%]
  else
    goto <bb 24>; [16.67%]

  <bb 24> [local count: 6158838]:
  secp256k1_fe_mul_inner (&t1.n, &t1.n, &x2.n);
  secp256k1_fe_sqr_inner (&t1.n, &t1.n);
  secp256k1_fe_sqr_inner (&MEM[(struct secp256k1_fe *)&Q + 40B].n, &t1.n);
  secp256k1_fe_sqr_inner (&t1.n, &MEM[(struct secp256k1_fe *)&Q + 40B].n);
  vect__202.817_597 = MEM[(long unsigned int *)&t1];
  vect__202.818_595 = MEM[(long unsigned int *)&t1 + 16B];
  _210 = t1.n[4];
  vect__212.812_91 = MEM[(long unsigned int *)&c];
  vect__212.813_95 = MEM[(long unsigned int *)&c + 16B];
  vect__6.814_105 = vect__212.812_91 + { 18014381329608892, 18014398509481980 };
  vect__6.814_598 = vect__212.813_95 + { 18014398509481980, 18014398509481980 };
  vect__213.819_593 = vect__6.814_105 - vect__202.817_597;
  vect__213.819_592 = vect__6.814_598 - vect__202.818_595;
  MEM[(long unsigned int *)&na] = vect__213.819_593;
  MEM[(long unsigned int *)&na + 16B] = vect__213.819_592;
  _220 = c.n[4];
  _420 = _220 + 1125899906842620;
  _221 = _420 - _210;
  na.n[4] = _221;
  _222 = secp256k1_fe_normalizes_to_zero (&na);
  na ={v} {CLOBBER};
  x2 ={v} {CLOBBER};
  x3 ={v} {CLOBBER};
  x6 ={v} {CLOBBER};
  x9 ={v} {CLOBBER};
  x11 ={v} {CLOBBER};
  x22 ={v} {CLOBBER};
  x44 ={v} {CLOBBER};
  x88 ={v} {CLOBBER};
  x176 ={v} {CLOBBER};
  x220 ={v} {CLOBBER};
  x223 ={v} {CLOBBER};
  t1 ={v} {CLOBBER};
  x2 ={v} {CLOBBER};
  x3 ={v} {CLOBBER};
  c ={v} {CLOBBER};
  if (_222 == 0)
    goto <bb 25>; [51.12%]
  else
    goto <bb 26>; [48.88%]

  <bb 25> [local count: 15652705]:
  x ={v} {CLOBBER};
  goto <bb 38>; [100.00%]

  <bb 26> [local count: 3010440]:
  secp256k1_fe_normalize_var (&Q.y);
  _61 = MEM[(long unsigned int *)&Q + 40B];
  _62 = (int) _61;
  _63 = _62 & 1;
  _37 = _36 == 3;
  _38 = (int) _37;
  if (_38 != _63)
    goto <bb 27>; [66.00%]
  else
    goto <bb 28>; [34.00%]

  <bb 27> [local count: 1986890]:
  _64 = 18014381329608892 - _61;
  MEM[(struct secp256k1_fe *)&Q + 40B].n[0] = _64;
  _65 = MEM[(const struct secp256k1_fe *)&Q + 40B].n[1];
  _66 = 18014398509481980 - _65;
  MEM[(struct secp256k1_fe *)&Q + 40B].n[1] = _66;
  _67 = MEM[(const struct secp256k1_fe *)&Q + 40B].n[2];
  _68 = 18014398509481980 - _67;
  MEM[(struct secp256k1_fe *)&Q + 40B].n[2] = _68;
  _69 = MEM[(const struct secp256k1_fe *)&Q + 40B].n[3];
  _70 = 18014398509481980 - _69;
  MEM[(struct secp256k1_fe *)&Q + 40B].n[3] = _70;
  _71 = MEM[(const struct secp256k1_fe *)&Q + 40B].n[4];
  _72 = 1125899906842620 - _71;
  MEM[(struct secp256k1_fe *)&Q + 40B].n[4] = _72;

  <bb 28> [local count: 2408352]:
  x ={v} {CLOBBER};
  goto <bb 37>; [100.00%]

  <bb 29> [local count: 241684172]:
  if (inputlen_14(D) == 65)
    goto <bb 30>; [71.90%]
  else
    goto <bb 8>; [28.10%]

  <bb 30> [local count: 173762498]:
  _40 = *input_13(D);
  _41 = _40 == 4;
  _256 = _40 + 250;
  _416 = _256 <= 1;
  _407 = _41 | _416;
  if (_407 != 0)
    goto <bb 31>; [66.50%]
  else
    goto <bb 8>; [33.50%]

  <bb 31> [local count: 115552061]:
  _44 = input_13(D) + 1;
  _45 = secp256k1_fe_set_b32 (&x, _44);
  if (_45 == 0)
    goto <bb 32>; [51.12%]
  else
    goto <bb 33>; [48.88%]

  <bb 32> [local count: 96296100]:
  x ={v} {CLOBBER};
  y ={v} {CLOBBER};
  goto <bb 38>; [100.00%]

  <bb 33> [local count: 56481847]:
  _46 = input_13(D) + 33;
  _47 = secp256k1_fe_set_b32 (&y, _46);
  if (_47 == 0)
    goto <bb 32>; [34.00%]
  else
    goto <bb 34>; [66.00%]

  <bb 34> [local count: 37278019]:
  Q.infinity = 0;
  Q.x = x;
  Q.y = y;
  _48 = *input_13(D);
  _49 = _48 + 250;
  if (_49 <= 1)
    goto <bb 35>; [73.25%]
  else
    goto <bb 36>; [26.75%]

  <bb 35> [local count: 27306149]:
  _50 = MEM[(long unsigned int *)&y];
  _51 = (int) _50;
  _52 = _51 & 1;
  _53 = _48 == 7;
  _54 = (int) _53;
  if (_52 != _54)
    goto <bb 32>; [66.00%]
  else
    goto <bb 36>; [34.00%]

  <bb 36> [local count: 19927027]:
  secp256k1_fe_sqr_inner (&y2.n, &MEM[(const struct secp256k1_fe *)&Q + 40B].n);
  secp256k1_fe_sqr_inner (&x3.n, &MEM[(const struct secp256k1_fe *)&Q].n);
  secp256k1_fe_mul_inner (&x3.n, &x3.n, &MEM[(const struct secp256k1_fe *)&Q].n);
  _226 = x3.n[0];
  _227 = _226 + 7;
  x3.n[0] = _227;
  secp256k1_fe_normalize_weak (&x3);
  vect__230.829_580 = MEM[(long unsigned int *)&y2];
  vect__230.830_578 = MEM[(long unsigned int *)&y2 + 16B];
  _238 = y2.n[4];
  vect__240.824_588 = MEM[(long unsigned int *)&x3];
  vect__240.825_586 = MEM[(long unsigned int *)&x3 + 16B];
  vect__432.826_582 = vect__240.824_588 + { 18014381329608892, 18014398509481980 };
  vect__432.826_581 = vect__240.825_586 + { 18014398509481980, 18014398509481980 };
  vect__241.831_576 = vect__432.826_582 - vect__230.829_580;
  vect__241.831_575 = vect__432.826_581 - vect__230.830_578;
  MEM[(long unsigned int *)&na] = vect__241.831_576;
  MEM[(long unsigned int *)&na + 16B] = vect__241.831_575;
  _248 = x3.n[4];
  _90 = _248 + 1125899906842620;
  _249 = _90 - _238;
  na.n[4] = _249;
  _250 = secp256k1_fe_normalizes_to_zero_var (&na);
  na ={v} {CLOBBER};
  y2 ={v} {CLOBBER};
  x3 ={v} {CLOBBER};
  x ={v} {CLOBBER};
  y ={v} {CLOBBER};
  if (_250 == 0)
    goto <bb 8>; [0.07%]
  else
    goto <bb 37>; [99.93%]

  <bb 37> [local count: 178992763]:
  secp256k1_ge_to_storage (&s, &Q);
  MEM[(char * {ref-all})pubkey_10(D)] = MEM[(char * {ref-all})&s];
  s ={v} {CLOBBER};

  <bb 38> [local count: 452084122]:
  # _8 = PHI <0(3), 0(5), 0(25), 1(37), 0(32), 0(8)>
  Q ={v} {CLOBBER};
  return _8;

}



;; Function secp256k1_ec_pubkey_serialize (secp256k1_ec_pubkey_serialize, funcdef_no=221, decl_uid=1555, cgraph_uid=221, symbol_order=228)

__attribute__((visibility ("default")))
secp256k1_ec_pubkey_serialize (const struct secp256k1_context * ctx, unsigned char * output, size_t * outputlen, const struct secp256k1_pubkey * pubkey, unsigned int flags)
{
  size_t len;
  struct secp256k1_ge Q;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _15;
  int _19;
  int flags.130_20;
  int _21;
  int _23;
  size_t iftmp.128_24;
  void (*<T319>) (const char *, void *) _40;
  const void * _41;
  void (*<T319>) (const char *, void *) _42;
  const void * _43;
  void (*<T319>) (const char *, void *) _44;
  const void * _45;
  void (*<T319>) (const char *, void *) _46;
  const void * _47;
  void (*<T319>) (const char *, void *) _48;
  const void * _49;
  int _57;
  unsigned char * _60;
  long unsigned int _61;
  int _62;
  int _63;
  unsigned char iftmp.132_64;
  unsigned char * _65;

  <bb 2> [local count: 1073741825]:
  if (outputlen_26(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _40 = MEM[(void (*<T319>) (const char *, void *) *)ctx_27(D) + 176B];
  _41 = MEM[(const void * *)ctx_27(D) + 184B];
  _40 ("outputlen != NULL", _41);
  goto <bb 22>; [100.00%]

  <bb 4> [local count: 966367642]:
  _4 = *outputlen_26(D);
  _5 = flags_29(D) & 256;
  if (_5 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 483183821]:

  <bb 6> [local count: 966367642]:
  # iftmp.128_24 = PHI <33(4), 65(5)>
  if (_4 < iftmp.128_24)
    goto <bb 7>; [10.00%]
  else
    goto <bb 8>; [90.00%]

  <bb 7> [local count: 96636764]:
  _42 = MEM[(void (*<T319>) (const char *, void *) *)ctx_27(D) + 176B];
  _43 = MEM[(const void * *)ctx_27(D) + 184B];
  _42 ("*outputlen >= ((flags & SECP256K1_FLAGS_BIT_COMPRESSION) ? 33 : 65)", _43);
  goto <bb 22>; [100.00%]

  <bb 8> [local count: 869730878]:
  *outputlen_26(D) = 0;
  if (output_32(D) == 0B)
    goto <bb 9>; [10.00%]
  else
    goto <bb 10>; [90.00%]

  <bb 9> [local count: 86973088]:
  _44 = MEM[(void (*<T319>) (const char *, void *) *)ctx_27(D) + 176B];
  _45 = MEM[(const void * *)ctx_27(D) + 184B];
  _44 ("output != NULL", _45);
  goto <bb 22>; [100.00%]

  <bb 10> [local count: 782757789]:
  __builtin_memset (output_32(D), 0, _4);
  if (pubkey_33(D) == 0B)
    goto <bb 11>; [10.00%]
  else
    goto <bb 12>; [90.00%]

  <bb 11> [local count: 78275779]:
  _46 = MEM[(void (*<T319>) (const char *, void *) *)ctx_27(D) + 176B];
  _47 = MEM[(const void * *)ctx_27(D) + 184B];
  _46 ("pubkey != NULL", _47);
  goto <bb 22>; [100.00%]

  <bb 12> [local count: 704482010]:
  _15 = flags_29(D) & 255;
  if (_15 != 2)
    goto <bb 13>; [10.00%]
  else
    goto <bb 14>; [90.00%]

  <bb 13> [local count: 70448201]:
  _48 = MEM[(void (*<T319>) (const char *, void *) *)ctx_27(D) + 176B];
  _49 = MEM[(const void * *)ctx_27(D) + 184B];
  _48 ("(flags & SECP256K1_FLAGS_TYPE_MASK) == SECP256K1_FLAGS_TYPE_COMPRESSION", _49);
  goto <bb 22>; [100.00%]

  <bb 14> [local count: 634033809]:
  _19 = secp256k1_pubkey_load (ctx_27(D), &Q, pubkey_33(D));
  if (_19 != 0)
    goto <bb 15>; [33.00%]
  else
    goto <bb 22>; [67.00%]

  <bb 15> [local count: 209231157]:
  _57 = MEM[(int *)&Q + 80B];
  if (_57 != 0)
    goto <bb 22>; [51.12%]
  else
    goto <bb 16>; [48.88%]

  <bb 16> [local count: 102272190]:
  secp256k1_fe_normalize_var (&Q.x);
  secp256k1_fe_normalize_var (&Q.y);
  _60 = output_32(D) + 1;
  secp256k1_fe_get_b32 (_60, &Q.x);
  flags.130_20 = (int) flags_29(D);
  _21 = flags.130_20 & 256;
  if (_21 != 0)
    goto <bb 17>; [67.00%]
  else
    goto <bb 20>; [33.00%]

  <bb 17> [local count: 68522367]:
  _61 = MEM[(long unsigned int *)&Q + 40B];
  _62 = (int) _61;
  _63 = _62 & 1;
  if (_63 != 0)
    goto <bb 19>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 18> [local count: 34261184]:

  <bb 19> [local count: 68522367]:
  # iftmp.132_64 = PHI <3(17), 2(18)>
  *output_32(D) = iftmp.132_64;
  goto <bb 21>; [100.00%]

  <bb 20> [local count: 33749823]:
  *output_32(D) = 4;
  _65 = output_32(D) + 33;
  secp256k1_fe_get_b32 (_65, &Q.y);

  <bb 21> [local count: 104615578]:
  # len_79 = PHI <33(19), 65(20)>
  *outputlen_26(D) = len_79;

  <bb 22> [local count: 1073741825]:
  # _23 = PHI <0(3), 0(7), 0(9), 0(11), 0(13), _19(14), 1(21), 0(15)>
  Q ={v} {CLOBBER};
  return _23;

}



;; Function secp256k1_ecdsa_signature_parse_der (secp256k1_ecdsa_signature_parse_der, funcdef_no=224, decl_uid=1564, cgraph_uid=224, symbol_order=231)

__attribute__((visibility ("default")))
secp256k1_ecdsa_signature_parse_der (const struct secp256k1_context * ctx, struct secp256k1_ecdsa_signature * sig, const unsigned char * input, size_t inputlen)
{
  const unsigned char * sigend;
  int rlen;
  const unsigned char * sig;
  struct secp256k1_scalar s;
  struct secp256k1_scalar r;
  int _8;
  void (*<T319>) (const char *, void *) _19;
  const void * _20;
  void (*<T319>) (const char *, void *) _21;
  const void * _22;
  const unsigned char * _29;
  unsigned char _30;
  const unsigned char * sig.137_32;
  sizetype _33;
  const unsigned char * _34;
  int _35;
  int _36;
  const unsigned char * sig.139_37;

  <bb 2> [local count: 1073741825]:
  if (sig_10(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _19 = MEM[(void (*<T319>) (const char *, void *) *)ctx_11(D) + 176B];
  _20 = MEM[(const void * *)ctx_11(D) + 184B];
  _19 ("sig != NULL", _20);
  goto <bb 16>; [100.00%]

  <bb 4> [local count: 966367642]:
  if (input_13(D) == 0B)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 96636764]:
  _21 = MEM[(void (*<T319>) (const char *, void *) *)ctx_11(D) + 176B];
  _22 = MEM[(const void * *)ctx_11(D) + 184B];
  _21 ("input != NULL", _22);
  goto <bb 16>; [100.00%]

  <bb 6> [local count: 869730878]:
  sigend_28 = input_13(D) + inputlen_14(D);
  if (input_13(D) == sigend_28)
    goto <bb 7>; [18.09%]
  else
    goto <bb 8>; [81.91%]

  <bb 7> [local count: 864864955]:
  sig ={v} {CLOBBER};
  __builtin_memset (sig_10(D), 0, 64);
  goto <bb 16>; [100.00%]

  <bb 8> [local count: 712396561]:
  _29 = input_13(D) + 1;
  sig = _29;
  _30 = *input_13(D);
  if (_30 != 48)
    goto <bb 7>; [67.00%]
  else
    goto <bb 9>; [33.00%]

  <bb 9> [local count: 235090865]:
  rlen_31 = secp256k1_der_read_len (&sig, sigend_28);
  if (rlen_31 < 0)
    goto <bb 7>; [26.36%]
  else
    goto <bb 10>; [73.64%]

  <bb 10> [local count: 173120913]:
  sig.137_32 = sig;
  _33 = (sizetype) rlen_31;
  _34 = sig.137_32 + _33;
  if (sigend_28 < _34)
    goto <bb 7>; [34.00%]
  else
    goto <bb 11>; [66.00%]

  <bb 11> [local count: 114259803]:
  if (sigend_28 != _34)
    goto <bb 7>; [70.93%]
  else
    goto <bb 12>; [29.07%]

  <bb 12> [local count: 33215325]:
  _35 = secp256k1_der_parse_integer (&r, &sig, sigend_28);
  if (_35 == 0)
    goto <bb 7>; [51.12%]
  else
    goto <bb 13>; [48.88%]

  <bb 13> [local count: 16235651]:
  _36 = secp256k1_der_parse_integer (&s, &sig, sigend_28);
  if (_36 == 0)
    goto <bb 7>; [34.00%]
  else
    goto <bb 14>; [66.00%]

  <bb 14> [local count: 10715529]:
  sig.139_37 = sig;
  if (sigend_28 != sig.139_37)
    goto <bb 7>; [54.59%]
  else
    goto <bb 15>; [45.41%]

  <bb 15> [local count: 434865438]:
  sig ={v} {CLOBBER};
  MEM[(char * {ref-all})sig_10(D)] = MEM[(char * {ref-all})&r];
  MEM[(char * {ref-all})sig_10(D) + 32B] = MEM[(char * {ref-all})&s];

  <bb 16> [local count: 1073741823]:
  # _8 = PHI <0(3), 0(5), 1(15), 0(7)>
  r ={v} {CLOBBER};
  s ={v} {CLOBBER};
  return _8;

}



;; Function secp256k1_ecdsa_signature_parse_compact (secp256k1_ecdsa_signature_parse_compact, funcdef_no=225, decl_uid=1559, cgraph_uid=225, symbol_order=232)

__attribute__((visibility ("default")))
secp256k1_ecdsa_signature_parse_compact (const struct secp256k1_context * ctx, struct secp256k1_ecdsa_signature * sig, const unsigned char * input64)
{
  int overflow;
  struct secp256k1_scalar s;
  struct secp256k1_scalar r;
  int overflow.143_7;
  const unsigned char * _8;
  int overflow.144_9;
  int _10;
  int _12;
  void (*<T319>) (const char *, void *) _25;
  const void * _26;
  void (*<T319>) (const char *, void *) _27;
  const void * _28;

  <bb 2> [local count: 1073741825]:
  overflow = 0;
  if (sig_15(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _25 = MEM[(void (*<T319>) (const char *, void *) *)ctx_16(D) + 176B];
  _26 = MEM[(const void * *)ctx_16(D) + 184B];
  _25 ("sig != NULL", _26);
  goto <bb 9>; [100.00%]

  <bb 4> [local count: 966367642]:
  if (input64_17(D) == 0B)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 96636764]:
  _27 = MEM[(void (*<T319>) (const char *, void *) *)ctx_16(D) + 176B];
  _28 = MEM[(const void * *)ctx_16(D) + 184B];
  _27 ("input64 != NULL", _28);
  goto <bb 9>; [100.00%]

  <bb 6> [local count: 869730878]:
  secp256k1_scalar_set_b32 (&r, input64_17(D), &overflow);
  overflow.143_7 = overflow;
  _8 = input64_17(D) + 32;
  secp256k1_scalar_set_b32 (&s, _8, &overflow);
  overflow.144_9 = overflow;
  _12 = overflow.143_7 | overflow.144_9;
  if (_12 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 434865439]:
  MEM[(char * {ref-all})sig_15(D)] = MEM[(char * {ref-all})&r];
  MEM[(char * {ref-all})sig_15(D) + 32B] = MEM[(char * {ref-all})&s];
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 434865439]:
  __builtin_memset (sig_15(D), 0, 64);

  <bb 9> [local count: 1073741825]:
  # _10 = PHI <0(3), 0(5), 0(8), 1(7)>
  r ={v} {CLOBBER};
  s ={v} {CLOBBER};
  overflow ={v} {CLOBBER};
  return _10;

}



;; Function secp256k1_ecdsa_signature_serialize_der (secp256k1_ecdsa_signature_serialize_der, funcdef_no=226, decl_uid=1569, cgraph_uid=226, symbol_order=233)

__attribute__((visibility ("default")))
secp256k1_ecdsa_signature_serialize_der (const struct secp256k1_context * ctx, unsigned char * output, size_t * outputlen, const struct secp256k1_ecdsa_signature * sig)
{
  unsigned char rp__lsm0.870;
  unsigned char sp__lsm0.869;
  unsigned char r[33];
  unsigned char s[33];
  unsigned char * rp;
  unsigned char * sp;
  size_t lenR;
  size_t lenS;
  struct secp256k1_scalar s;
  struct secp256k1_scalar r;
  long unsigned int _6;
  long unsigned int _8;
  int _10;
  long unsigned int _18;
  long unsigned int _19;
  void (*<T319>) (const char *, void *) _22;
  const void * _23;
  void (*<T319>) (const char *, void *) _24;
  const void * _25;
  void (*<T319>) (const char *, void *) _26;
  const void * _27;
  long unsigned int _33;
  unsigned char _36;
  signed char _37;
  unsigned char _38;
  unsigned char _43;
  signed char _44;
  long unsigned int _45;
  long unsigned int _47;
  long unsigned int _49;
  unsigned char _50;
  unsigned char _51;
  unsigned char _53;
  unsigned char * _54;
  long unsigned int _55;
  long unsigned int _57;
  unsigned char * _58;
  long unsigned int _59;
  unsigned char * _60;
  unsigned char * _62;
  int _65;
  long unsigned int _68;
  long unsigned int _69;
  unsigned char _91;
  unsigned char _93;
  long unsigned int prephitmp_97;
  long unsigned int _98;

  <bb 2> [local count: 1073741826]:
  if (output_12(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374181]:
  _22 = MEM[(void (*<T319>) (const char *, void *) *)ctx_13(D) + 176B];
  _23 = MEM[(const void * *)ctx_13(D) + 184B];
  _22 ("output != NULL", _23);
  goto <bb 22>; [100.00%]

  <bb 4> [local count: 966367645]:
  if (outputlen_15(D) == 0B)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 96636767]:
  _24 = MEM[(void (*<T319>) (const char *, void *) *)ctx_13(D) + 176B];
  _25 = MEM[(const void * *)ctx_13(D) + 184B];
  _24 ("outputlen != NULL", _25);
  goto <bb 22>; [100.00%]

  <bb 6> [local count: 869730878]:
  if (sig_16(D) == 0B)
    goto <bb 7>; [10.00%]
  else
    goto <bb 8>; [90.00%]

  <bb 7> [local count: 86973089]:
  _26 = MEM[(void (*<T319>) (const char *, void *) *)ctx_13(D) + 176B];
  _27 = MEM[(const void * *)ctx_13(D) + 184B];
  _26 ("sig != NULL", _27);
  goto <bb 22>; [100.00%]

  <bb 8> [local count: 782757790]:
  MEM[(char * {ref-all})&r] = MEM[(char * {ref-all})sig_16(D)];
  MEM[(char * {ref-all})&s] = MEM[(char * {ref-all})sig_16(D) + 32B];
  r = {};
  s = {};
  secp256k1_scalar_get_b32 (&r[1], &r);
  secp256k1_scalar_get_b32 (&s[1], &s);
  _91 = MEM[(unsigned char *)&r];
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 7046145551]:
  rp_34 = rp_100 + 1;
  if (&MEM[(void *)&r + 32B] != rp_34)
    goto <bb 10>; [96.63%]
  else
    goto <bb 12>; [3.37%]

  <bb 10> [local count: 7591687550]:
  # rp_100 = PHI <&r(8), rp_34(9)>
  # rp__lsm0.870_92 = PHI <_91(8), _36(9)>
  _19 = (long unsigned int) &r;
  _47 = (long unsigned int) rp_100;
  _55 = _19 + 33;
  _6 = _55 - _47;
  if (rp__lsm0.870_92 == 0)
    goto <bb 13>; [96.34%]
  else
    goto <bb 11>; [3.66%]

  <bb 11> [local count: 277855773]:
  _33 = _6 + 6;

  <bb 12> [local count: 782757787]:
  # lenR_9 = PHI <_6(14), _6(11), 1(9)>
  # rp_56 = PHI <rp_100(14), rp_100(11), &MEM[(void *)&r + 32B](9)>
  # prephitmp_97 = PHI <_98(14), _33(11), 7(9)>
  _93 = MEM[(unsigned char *)&s];
  goto <bb 16>; [100.00%]

  <bb 13> [local count: 7313831789]:
  _36 = MEM[base: rp_100, offset: 1B];
  _37 = (signed char) _36;
  if (_37 >= 0)
    goto <bb 9>; [96.34%]
  else
    goto <bb 14>; [3.66%]

  <bb 14> [local count: 267686252]:
  _98 = _6 + 6;
  goto <bb 12>; [100.00%]

  <bb 15> [local count: 7046145434]:
  sp_41 = sp_102 + 1;
  if (&MEM[(void *)&s + 32B] != sp_41)
    goto <bb 16>; [96.63%]
  else
    goto <bb 18>; [3.37%]

  <bb 16> [local count: 7591687441]:
  # sp_102 = PHI <&s(12), sp_41(15)>
  # sp__lsm0.869_63 = PHI <_93(12), _43(15)>
  _18 = (long unsigned int) &s;
  _69 = (long unsigned int) sp_102;
  _8 = _18 + 33;
  _68 = _8 - _69;
  if (sp__lsm0.869_63 == 0)
    goto <bb 17>; [96.34%]
  else
    goto <bb 18>; [3.66%]

  <bb 17> [local count: 7313831680]:
  _43 = MEM[base: sp_102, offset: 1B];
  _44 = (signed char) _43;
  if (_44 >= 0)
    goto <bb 15>; [96.34%]
  else
    goto <bb 18>; [3.66%]

  <bb 18> [local count: 782757768]:
  # lenS_46 = PHI <1(15), _68(16), _68(17)>
  # sp_64 = PHI <&MEM[(void *)&s + 32B](15), sp_102(16), sp_102(17)>
  _45 = *outputlen_15(D);
  _49 = lenS_46 + prephitmp_97;
  if (_45 < _49)
    goto <bb 19>; [51.12%]
  else
    goto <bb 20>; [48.88%]

  <bb 19> [local count: 400145773]:
  *outputlen_15(D) = _49;
  goto <bb 21>; [100.00%]

  <bb 20> [local count: 382611995]:
  *outputlen_15(D) = _49;
  *output_12(D) = 48;
  _50 = (unsigned char) lenS_46;
  _51 = (unsigned char) lenR_9;
  _38 = _51 + 4;
  _53 = _38 + _50;
  MEM[(unsigned char *)output_12(D) + 1B] = _53;
  MEM[(unsigned char *)output_12(D) + 2B] = 2;
  MEM[(unsigned char *)output_12(D) + 3B] = _51;
  _54 = output_12(D) + 4;
  __builtin_memcpy (_54, rp_56, lenR_9);
  _57 = lenR_9 + 4;
  _58 = output_12(D) + _57;
  *_58 = 2;
  _59 = lenR_9 + 5;
  _60 = output_12(D) + _59;
  *_60 = _50;
  _62 = output_12(D) + prephitmp_97;
  __builtin_memcpy (_62, sp_64, lenS_46);

  <bb 21> [local count: 782757768]:
  # _65 = PHI <0(19), 1(20)>
  r ={v} {CLOBBER};
  s ={v} {CLOBBER};

  <bb 22> [local count: 1073741804]:
  # _10 = PHI <0(3), 0(5), 0(7), _65(21)>
  r ={v} {CLOBBER};
  s ={v} {CLOBBER};
  return _10;

}



;; Function secp256k1_ecdsa_signature_serialize_compact (secp256k1_ecdsa_signature_serialize_compact, funcdef_no=227, decl_uid=1573, cgraph_uid=227, symbol_order=234)

__attribute__((visibility ("default")))
secp256k1_ecdsa_signature_serialize_compact (const struct secp256k1_context * ctx, unsigned char * output64, const struct secp256k1_ecdsa_signature * sig)
{
  struct secp256k1_scalar s;
  struct secp256k1_scalar r;
  unsigned char * _7;
  int _8;
  void (*<T319>) (const char *, void *) _19;
  const void * _20;
  void (*<T319>) (const char *, void *) _21;
  const void * _22;

  <bb 2> [local count: 1073741825]:
  if (output64_10(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _19 = MEM[(void (*<T319>) (const char *, void *) *)ctx_11(D) + 176B];
  _20 = MEM[(const void * *)ctx_11(D) + 184B];
  _19 ("output64 != NULL", _20);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 966367642]:
  if (sig_13(D) == 0B)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 96636764]:
  _21 = MEM[(void (*<T319>) (const char *, void *) *)ctx_11(D) + 176B];
  _22 = MEM[(const void * *)ctx_11(D) + 184B];
  _21 ("sig != NULL", _22);
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 869730878]:
  MEM[(char * {ref-all})&r] = MEM[(char * {ref-all})sig_13(D)];
  MEM[(char * {ref-all})&s] = MEM[(char * {ref-all})sig_13(D) + 32B];
  secp256k1_scalar_get_b32 (output64_10(D), &r);
  _7 = output64_10(D) + 32;
  secp256k1_scalar_get_b32 (_7, &s);

  <bb 7> [local count: 1073741825]:
  # _8 = PHI <0(3), 0(5), 1(6)>
  r ={v} {CLOBBER};
  s ={v} {CLOBBER};
  return _8;

}



;; Function secp256k1_ecdsa_signature_normalize (secp256k1_ecdsa_signature_normalize, funcdef_no=228, decl_uid=1582, cgraph_uid=228, symbol_order=235)

__attribute__((visibility ("default")))
secp256k1_ecdsa_signature_normalize (const struct secp256k1_context * ctx, struct secp256k1_ecdsa_signature * sigout, const struct secp256k1_ecdsa_signature * sigin)
{
  long unsigned int s$d$3;
  long unsigned int s$d$2;
  long unsigned int s$d$1;
  long unsigned int s$d$0;
  uint128_t t;
  uint64_t nonzero;
  int yes;
  int no;
  struct secp256k1_scalar s;
  struct secp256k1_scalar r;
  int _4;
  __int128 unsigned _5;
  __int128 unsigned _16;
  void (*<T319>) (const char *, void *) _17;
  const void * _18;
  _Bool _20;
  _Bool _21;
  int _22;
  signed long _23;
  _Bool _24;
  int _25;
  int _26;
  int _27;
  int _28;
  _Bool _29;
  int _31;
  int _32;
  _Bool _35;
  _Bool _36;
  _Bool _40;
  int _42;
  int _45;
  _Bool _46;
  long unsigned int _56;
  long unsigned int _58;
  long unsigned int _60;
  _Bool _61;
  long long unsigned int _62;
  long unsigned int _64;
  __int128 unsigned _65;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _70;
  __int128 unsigned _71;
  long unsigned int _74;
  long unsigned int _75;
  long unsigned int _77;
  __int128 unsigned _78;
  long unsigned int _81;
  long unsigned int _82;
  long unsigned int _84;
  __int128 unsigned _85;
  long unsigned int _88;
  long unsigned int _89;
  int _100;
  int _101;
  __int128 unsigned _102;

  <bb 2> [local count: 1073741825]:
  if (sigin_7(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _17 = MEM[(void (*<T319>) (const char *, void *) *)ctx_8(D) + 176B];
  _18 = MEM[(const void * *)ctx_8(D) + 184B];
  _17 ("sigin != NULL", _18);
  goto <bb 8>; [100.00%]

  <bb 4> [local count: 966367642]:
  MEM[(char * {ref-all})&r] = MEM[(char * {ref-all})sigin_7(D)];
  MEM[(char * {ref-all})&s] = MEM[(char * {ref-all})sigin_7(D) + 32B];
  s$d$0_54 = MEM[(char * {ref-all})&s];
  s$d$1_55 = MEM[(char * {ref-all})&s + 8B];
  s$d$2_11 = MEM[(char * {ref-all})&s + 16B];
  s$d$3_3 = MEM[(char * {ref-all})&s + 24B];
  _21 = s$d$3_3 <= 9223372036854775806;
  _22 = (int) _21;
  _23 = (signed long) s$d$3_3;
  _24 = _23 < 0;
  _25 = (int) _24;
  _26 = ~_22;
  _27 = _25 & _26;
  _29 = s$d$2_11 != 18446744073709551615;
  _31 = ~_25;
  _32 = _22 | _31;
  _36 = s$d$1_55 <= 6725966010171805724;
  _20 = _29 | _36;
  _28 = (int) _20;
  _100 = _28 & _32;
  no_39 = _22 | _100;
  _40 = s$d$1_55 > 6725966010171805725;
  _42 = ~no_39;
  _46 = s$d$0_54 > 16134479119472337056;
  _35 = _40 | _46;
  _45 = (int) _35;
  _101 = _42 & _45;
  yes_49 = _27 | _101;
  if (sigout_12(D) != 0B)
    goto <bb 5>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 5> [local count: 676457349]:
  if (yes_49 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [local count: 223230925]:
  _56 = s$d$0_54 | s$d$1_55;
  _58 = s$d$2_11 | _56;
  _60 = s$d$3_3 | _58;
  _61 = _60 != 0;
  _62 = (long long unsigned int) _61;
  nonzero_63 = -_62;
  _64 = ~s$d$0_54;
  _65 = (__int128 unsigned) _64;
  t_66 = _65 + 13822214165235122498;
  _67 = _64 + 13822214165235122498;
  _68 = nonzero_63 & _67;
  t_69 = t_66 >> 64;
  _70 = ~s$d$1_55;
  _71 = (__int128 unsigned) _70;
  _102 = _71 + 13451932020343611451;
  t_73 = t_69 + _102;
  _74 = (long unsigned int) t_73;
  _75 = nonzero_63 & _74;
  t_76 = t_73 >> 64;
  _77 = ~s$d$2_11;
  _78 = (__int128 unsigned) _77;
  _16 = _78 + 18446744073709551614;
  t_80 = _16 + t_76;
  _81 = (long unsigned int) t_80;
  _82 = nonzero_63 & _81;
  t_83 = t_80 >> 64;
  _84 = ~s$d$3_3;
  _85 = (__int128 unsigned) _84;
  _5 = _85 + 18446744073709551615;
  t_87 = _5 + t_83;
  _88 = (long unsigned int) t_87;
  _89 = nonzero_63 & _88;

  <bb 7> [local count: 676457349]:
  # s$d$0_1 = PHI <_68(6), s$d$0_54(5)>
  # s$d$1_2 = PHI <_75(6), s$d$1_55(5)>
  # s$d$2_91 = PHI <_82(6), s$d$2_11(5)>
  # s$d$3_93 = PHI <_89(6), s$d$3_3(5)>
  MEM[(char * {ref-all})sigout_12(D)] = MEM[(char * {ref-all})&r];
  MEM[(char * {ref-all})&s] = s$d$0_1;
  MEM[(char * {ref-all})&s + 8B] = s$d$1_2;
  MEM[(char * {ref-all})&s + 16B] = s$d$2_91;
  MEM[(char * {ref-all})&s + 24B] = s$d$3_93;
  MEM[(char * {ref-all})sigout_12(D) + 32B] = MEM[(char * {ref-all})&s];

  <bb 8> [local count: 1073741823]:
  # _4 = PHI <0(3), yes_49(7), yes_49(4)>
  r ={v} {CLOBBER};
  return _4;

}



;; Function secp256k1_ecdsa_verify (secp256k1_ecdsa_verify, funcdef_no=229, decl_uid=1578, cgraph_uid=229, symbol_order=236)

__attribute__((visibility ("default")))
secp256k1_ecdsa_verify (const struct secp256k1_context * ctx, const struct secp256k1_ecdsa_signature * sig, const unsigned char * msg32, const struct secp256k1_pubkey * pubkey)
{
  sizetype ivtmp.929;
  vector(2) long unsigned int vect__102.924;
  vector(2) long unsigned int vect__101.923;
  vector(2) long unsigned int vect__101.922;
  const vector(2) long unsigned int vect__157.914;
  const vector(2) long unsigned int vect__157.913;
  const vector(2) long unsigned int vect_iftmp.147_155.908;
  const vector(2) long unsigned int vect_iftmp.147_155.907;
  int tmp.903;
  unsigned int niters_vector_mult_vf.902;
  unsigned int niters.900;
  long unsigned int s$d$3;
  long unsigned int s$d$2;
  long unsigned int s$d$1;
  long unsigned int s$d$0;
  int len;
  int len;
  int i;
  mp_limb_t g[5];
  mp_limb_t u[5];
  mp_limb_t v[5];
  mp_size_t sn;
  mp_size_t __gmp_j;
  mp_limb_t __gmp_x;
  mp_size_t __gmp_i;
  int shift;
  int len;
  unsigned char tmp[65];
  unsigned char b[32];
  struct secp256k1_num n;
  struct secp256k1_num m;
  struct secp256k1_scalar t;
  uint64_t l[8];
  unsigned char c[32];
  struct secp256k1_scalar sn;
  struct secp256k1_scalar u1;
  struct secp256k1_scalar u2;
  struct secp256k1_fe xr;
  struct secp256k1_gej pubkeyj;
  struct secp256k1_gej pr;
  uint64_t l[8];
  uint64_t l[8];
  int yes;
  int no;
  struct secp256k1_scalar m;
  struct secp256k1_scalar s;
  struct secp256k1_scalar r;
  struct secp256k1_ge q;
  long unsigned int _1;
  int _7;
  long int _8;
  int _10;
  long unsigned int _11;
  mp_limb_t * _12;
  int _14;
  const struct secp256k1_ecmult_context * _15;
  int _17;
  void (*<T319>) (const char *, void *) _32;
  const void * _33;
  void (*<T319>) (const char *, void *) _34;
  const void * _35;
  void (*<T319>) (const char *, void *) _36;
  const void * _37;
  void (*<T319>) (const char *, void *) _38;
  const void * _39;
  struct secp256k1_ge_storage[<unknown>] * _40;
  _Bool _45;
  _Bool _46;
  int _47;
  signed long _48;
  _Bool _49;
  int _50;
  int _51;
  int _52;
  int _53;
  _Bool _54;
  int _56;
  int _57;
  int _58;
  _Bool _60;
  _Bool _61;
  _Bool _65;
  int _66;
  int _67;
  vector(2) long unsigned int _68;
  int _70;
  _Bool _71;
  long unsigned int _79;
  long unsigned int _80;
  long unsigned int _81;
  long unsigned int _82;
  long unsigned int _83;
  long unsigned int _84;
  long unsigned int _85;
  long unsigned int _88;
  long unsigned int _90;
  long unsigned int _92;
  int _93;
  int _94;
  int _95;
  long unsigned int _97;
  unsigned int _100;
  int _111;
  mp_limb_t * _112;
  long unsigned int _113;
  long unsigned int _114;
  long unsigned int _115;
  long unsigned int _117;
  long unsigned int _119;
  long unsigned int _120;
  long unsigned int _121;
  int _122;
  const mp_limb_t * _123;
  struct _IO_FILE * stderr.146_124;
  long unsigned int _126;
  long int _127;
  long unsigned int _129;
  int _133;
  unsigned char _134;
  unsigned int _135;
  long unsigned int _138;
  const mp_limb_t * _139;
  long unsigned int iftmp.147_140;
  long unsigned int _141;
  long unsigned int _143;
  sizetype _144;
  const void * _145;
  sizetype _147;
  sizetype _148;
  sizetype _149;
  unsigned char * _150;
  long unsigned int _151;
  int _153;
  int _154;
  long int _159;
  int _161;
  int _162;
  int _163;
  long int sn.148_164;
  long int _165;
  int _166;
  long int _167;
  long unsigned int _169;
  long unsigned int _177;
  mp_limb_t * _181;
  long unsigned int _182;
  int _185;
  sizetype _188;
  int _189;
  long unsigned int _191;
  long int _193;
  sizetype _198;
  long int _201;
  int _208;
  int _211;
  long unsigned int _229;
  mp_limb_t * _242;
  sizetype _251;
  unsigned int _258;
  unsigned int _286;
  int _298;
  long unsigned int _299;
  int _304;
  const mp_limb_t * _306;
  int _310;
  long unsigned int _311;
  unsigned int _312;
  long unsigned int _313;
  long unsigned int _320;
  unsigned int _321;
  long unsigned int _339;
  sizetype _340;
  sizetype _341;
  sizetype _342;
  sizetype _343;
  sizetype _345;
  unsigned int _349;
  unsigned int _350;
  unsigned int _351;
  unsigned int _352;
  const mp_limb_t * _353;
  mp_limb_t * _356;
  sizetype _358;
  unsigned int _359;
  int _361;
  unsigned int len.157_362;
  unsigned int _363;
  unsigned int shift.158_364;
  unsigned int _365;
  long unsigned int _366;
  int _369;
  sizetype _376;
  long unsigned int _378;
  unsigned char _379;
  int _381;
  unsigned int _384;
  unsigned int _385;
  long unsigned int _387;
  long unsigned int _388;
  long unsigned int prephitmp_389;
  long unsigned int _392;
  sizetype _395;
  unsigned long _396;
  int _398;
  long unsigned int __gmp_i.151_401;
  long unsigned int _404;
  unsigned long _405;
  unsigned long _406;
  long unsigned int _413;
  vector(2) long unsigned int _418;
  long unsigned int _419;
  int _425;
  long unsigned int _426;
  int _429;
  long unsigned int _430;
  int _433;
  long unsigned int _434;
  int _437;
  long unsigned int _438;
  int _441;
  long unsigned int _442;
  int _445;
  long unsigned int _446;
  int _449;
  long unsigned int _450;
  int _453;
  long unsigned int _454;
  long unsigned int iftmp.147_457;
  long unsigned int _459;
  long unsigned int iftmp.147_464;
  long unsigned int _466;
  int _471;
  long unsigned int _472;
  int _475;
  long unsigned int _476;
  int _479;
  long unsigned int _480;
  int _483;
  long unsigned int _484;
  int _487;
  long unsigned int _488;
  int _491;
  long unsigned int _492;
  int _495;
  long unsigned int _496;
  int _499;
  long unsigned int _500;
  int _503;
  long unsigned int _504;
  int _507;
  long unsigned int _508;
  int _511;
  long unsigned int _512;
  int _515;
  long unsigned int _516;
  int _519;
  long unsigned int _520;
  int _523;
  long unsigned int _524;
  int _527;
  long unsigned int _528;
  int _531;
  long unsigned int _532;
  int prephitmp_550;
  int prephitmp_551;

  <bb 2> [local count: 1073741825]:
  _40 = MEM[(struct secp256k1_ge_storage[<unknown>] * *)ctx_19(D)];
  if (_40 == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _32 = MEM[(void (*<T319>) (const char *, void *) *)ctx_19(D) + 176B];
  _33 = MEM[(const void * *)ctx_19(D) + 184B];
  _32 ("secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx)", _33);
  goto <bb 127>; [100.00%]

  <bb 4> [local count: 966367642]:
  if (msg32_21(D) == 0B)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 96636764]:
  _34 = MEM[(void (*<T319>) (const char *, void *) *)ctx_19(D) + 176B];
  _35 = MEM[(const void * *)ctx_19(D) + 184B];
  _34 ("msg32 != NULL", _35);
  goto <bb 127>; [100.00%]

  <bb 6> [local count: 869730878]:
  if (sig_22(D) == 0B)
    goto <bb 7>; [10.00%]
  else
    goto <bb 8>; [90.00%]

  <bb 7> [local count: 86973088]:
  _36 = MEM[(void (*<T319>) (const char *, void *) *)ctx_19(D) + 176B];
  _37 = MEM[(const void * *)ctx_19(D) + 184B];
  _36 ("sig != NULL", _37);
  goto <bb 127>; [100.00%]

  <bb 8> [local count: 782757789]:
  if (pubkey_23(D) == 0B)
    goto <bb 9>; [10.00%]
  else
    goto <bb 10>; [90.00%]

  <bb 9> [local count: 78275779]:
  _38 = MEM[(void (*<T319>) (const char *, void *) *)ctx_19(D) + 176B];
  _39 = MEM[(const void * *)ctx_19(D) + 184B];
  _38 ("pubkey != NULL", _39);
  goto <bb 127>; [100.00%]

  <bb 10> [local count: 704482010]:
  secp256k1_scalar_set_b32 (&m, msg32_21(D), 0B);
  MEM[(char * {ref-all})&r] = MEM[(char * {ref-all})sig_22(D)];
  MEM[(char * {ref-all})&s] = MEM[(char * {ref-all})sig_22(D) + 32B];
  s$d$0_212 = MEM[(char * {ref-all})&s];
  s$d$1_170 = MEM[(char * {ref-all})&s + 8B];
  s$d$2_131 = MEM[(char * {ref-all})&s + 16B];
  s$d$3_360 = MEM[(char * {ref-all})&s + 24B];
  _46 = s$d$3_360 <= 9223372036854775806;
  _47 = (int) _46;
  _48 = (signed long) s$d$3_360;
  _49 = _48 < 0;
  _50 = (int) _49;
  _51 = ~_47;
  _52 = _50 & _51;
  _54 = s$d$2_131 != 18446744073709551615;
  _56 = ~_50;
  _57 = _47 | _56;
  _61 = s$d$1_170 <= 6725966010171805724;
  _45 = _54 | _61;
  _53 = (int) _45;
  _369 = _53 & _57;
  no_64 = _47 | _369;
  _65 = s$d$1_170 > 6725966010171805725;
  _67 = ~no_64;
  _71 = s$d$0_212 > 16134479119472337056;
  _60 = _65 | _71;
  _70 = (int) _60;
  _154 = _67 & _70;
  yes_74 = _52 | _154;
  if (yes_74 == 0)
    goto <bb 12>; [33.00%]
  else
    goto <bb 11>; [67.00%]

  <bb 11> [local count: 627763921]:
  goto <bb 127>; [100.00%]

  <bb 12> [local count: 232479063]:
  _14 = secp256k1_pubkey_load (ctx_19(D), &q, pubkey_23(D));
  if (_14 != 0)
    goto <bb 13>; [33.00%]
  else
    goto <bb 11>; [67.00%]

  <bb 13> [local count: 76718091]:
  _79 = r.d[0];
  _80 = r.d[1];
  _81 = _79 | _80;
  _82 = r.d[2];
  _83 = _81 | _82;
  _84 = r.d[3];
  _85 = _83 | _84;
  if (_85 == 0)
    goto <bb 14>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 14> [local count: 69565847]:
  c ={v} {CLOBBER};
  sn ={v} {CLOBBER};
  u1 ={v} {CLOBBER};
  u2 ={v} {CLOBBER};
  xr ={v} {CLOBBER};
  pubkeyj ={v} {CLOBBER};
  pr ={v} {CLOBBER};
  goto <bb 127>; [100.00%]

  <bb 15> [local count: 50633940]:
  _88 = s$d$1_170 | s$d$0_212;
  _90 = _88 | s$d$2_131;
  _92 = _90 | s$d$3_360;
  if (_92 == 0)
    goto <bb 14>; [51.12%]
  else
    goto <bb 16>; [48.88%]

  <bb 16> [local count: 24749870]:
  _418 = {s$d$0_212, s$d$1_170};
  _68 = {s$d$2_131, s$d$3_360};
  MEM[(struct  *)&t] = _418;
  MEM[(struct  *)&t + 16B] = _68;
  secp256k1_scalar_get_b32 (&b, &t);
  _201 = __gmpn_set_str (&n.data, &b, 32, 256);
  len_202 = (int) _201;
  if (len_202 == 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 17> [local count: 12374935]:
  n.data[0] = 0;
  MEM[(int *)&n + 64B] = 4294967296;
  goto <bb 40>; [100.00%]

  <bb 18> [local count: 12374935]:
  n.limbs = len_202;
  n.neg = 0;
  if (len_202 > 1)
    goto <bb 19>; [98.57%]
  else
    goto <bb 40>; [1.43%]

  <bb 19> [local count: 23388627]:
  _122 = len_202 + -1;
  _151 = n.data[_122];
  if (_151 == 0)
    goto <bb 20>; [94.50%]
  else
    goto <bb 40>; [5.50%]

  <bb 20> [local count: 22102253]:
  if (_122 != 1)
    goto <bb 21>; [94.50%]
  else
    goto <bb 39>; [5.50%]

  <bb 21> [local count: 20886629]:
  _298 = len_202 + -2;
  _299 = n.data[_298];
  if (_299 == 0)
    goto <bb 22>; [94.50%]
  else
    goto <bb 38>; [5.50%]

  <bb 22> [local count: 19737863]:
  if (_298 != 1)
    goto <bb 23>; [94.50%]
  else
    goto <bb 39>; [5.50%]

  <bb 23> [local count: 18652281]:
  _503 = len_202 + -3;
  _504 = n.data[_503];
  if (_504 == 0)
    goto <bb 24>; [94.50%]
  else
    goto <bb 38>; [5.50%]

  <bb 24> [local count: 17626405]:
  if (_503 != 1)
    goto <bb 25>; [94.50%]
  else
    goto <bb 39>; [5.50%]

  <bb 25> [local count: 16656953]:
  _507 = len_202 + -4;
  _508 = n.data[_507];
  if (_508 == 0)
    goto <bb 26>; [94.50%]
  else
    goto <bb 38>; [5.50%]

  <bb 26> [local count: 15740820]:
  if (_507 != 1)
    goto <bb 27>; [94.50%]
  else
    goto <bb 39>; [5.50%]

  <bb 27> [local count: 14875075]:
  _511 = len_202 + -5;
  _512 = n.data[_511];
  if (_512 == 0)
    goto <bb 28>; [94.50%]
  else
    goto <bb 38>; [5.50%]

  <bb 28> [local count: 14056945]:
  if (_511 != 1)
    goto <bb 29>; [94.50%]
  else
    goto <bb 39>; [5.50%]

  <bb 29> [local count: 13283813]:
  _515 = len_202 + -6;
  _516 = n.data[_515];
  if (_516 == 0)
    goto <bb 30>; [94.50%]
  else
    goto <bb 38>; [5.50%]

  <bb 30> [local count: 12553204]:
  if (_515 != 1)
    goto <bb 31>; [94.50%]
  else
    goto <bb 39>; [5.50%]

  <bb 31> [local count: 11862777]:
  _519 = len_202 + -7;
  _520 = n.data[_519];
  if (_520 == 0)
    goto <bb 32>; [94.50%]
  else
    goto <bb 38>; [5.50%]

  <bb 32> [local count: 11210325]:
  if (_519 != 1)
    goto <bb 33>; [94.50%]
  else
    goto <bb 39>; [5.50%]

  <bb 33> [local count: 10593757]:
  _523 = len_202 + -8;
  _524 = n.data[_523];
  if (_524 == 0)
    goto <bb 34>; [94.50%]
  else
    goto <bb 38>; [5.50%]

  <bb 34> [local count: 10011100]:
  if (_523 != 1)
    goto <bb 35>; [94.50%]
  else
    goto <bb 39>; [5.50%]

  <bb 35> [local count: 9460489]:
  _527 = len_202 + -9;
  _528 = n.data[_527];
  if (_528 == 0)
    goto <bb 36>; [94.50%]
  else
    goto <bb 38>; [5.50%]

  <bb 36> [local count: 8940163]:
  if (_527 != 1)
    goto <bb 37>; [94.50%]
  else
    goto <bb 39>; [5.50%]

  <bb 37> [local count: 8448454]:
  _531 = len_202 + -10;
  _532 = n.data[_531];
  if (_532 == 0)
    goto <bb 39>; [94.50%]
  else
    goto <bb 38>; [5.50%]

  <bb 38> [local count: 10738626]:
  # _381 = PHI <_523(35), _519(33), _122(21), _298(23), _503(25), _507(27), _511(29), _515(31), _527(37)>
  n.limbs = _381;
  goto <bb 40>; [100.00%]

  <bb 39> [local count: 11363626]:
  n.limbs = 1;

  <bb 40> [local count: 24749870]:
  _193 = __gmpn_set_str (&m.data, &order, 32, 256);
  len_194 = (int) _193;
  if (len_194 == 0)
    goto <bb 41>; [50.00%]
  else
    goto <bb 42>; [50.00%]

  <bb 41> [local count: 12374935]:
  m.data[0] = 0;
  MEM[(int *)&m + 64B] = 4294967296;
  goto <bb 64>; [100.00%]

  <bb 42> [local count: 12374935]:
  m.limbs = len_194;
  m.neg = 0;
  if (len_194 > 1)
    goto <bb 43>; [94.50%]
  else
    goto <bb 62>; [5.50%]

  <bb 43> [local count: 23388627]:
  _10 = len_194 + -1;
  _11 = m.data[_10];
  if (_11 == 0)
    goto <bb 44>; [94.50%]
  else
    goto <bb 132>; [5.50%]

  <bb 44> [local count: 22102253]:
  if (_10 != 1)
    goto <bb 45>; [94.50%]
  else
    goto <bb 131>; [5.50%]

  <bb 45> [local count: 20886629]:
  _310 = len_194 + -2;
  _311 = m.data[_310];
  if (_311 == 0)
    goto <bb 46>; [94.50%]
  else
    goto <bb 63>; [5.50%]

  <bb 46> [local count: 19737863]:
  if (_310 != 1)
    goto <bb 47>; [94.50%]
  else
    goto <bb 131>; [5.50%]

  <bb 47> [local count: 18652281]:
  _471 = len_194 + -3;
  _472 = m.data[_471];
  if (_472 == 0)
    goto <bb 48>; [94.50%]
  else
    goto <bb 63>; [5.50%]

  <bb 48> [local count: 17626405]:
  if (_471 != 1)
    goto <bb 49>; [94.50%]
  else
    goto <bb 131>; [5.50%]

  <bb 49> [local count: 16656953]:
  _475 = len_194 + -4;
  _476 = m.data[_475];
  if (_476 == 0)
    goto <bb 50>; [94.50%]
  else
    goto <bb 63>; [5.50%]

  <bb 50> [local count: 15740820]:
  if (_475 != 1)
    goto <bb 51>; [94.50%]
  else
    goto <bb 131>; [5.50%]

  <bb 51> [local count: 14875074]:
  _479 = len_194 + -5;
  _480 = m.data[_479];
  if (_480 == 0)
    goto <bb 52>; [94.50%]
  else
    goto <bb 63>; [5.50%]

  <bb 52> [local count: 14056945]:
  if (_479 != 1)
    goto <bb 53>; [94.50%]
  else
    goto <bb 131>; [5.50%]

  <bb 53> [local count: 13283813]:
  _483 = len_194 + -6;
  _484 = m.data[_483];
  if (_484 == 0)
    goto <bb 54>; [94.50%]
  else
    goto <bb 63>; [5.50%]

  <bb 54> [local count: 12553203]:
  if (_483 != 1)
    goto <bb 55>; [94.50%]
  else
    goto <bb 131>; [5.50%]

  <bb 55> [local count: 11862777]:
  _487 = len_194 + -7;
  _488 = m.data[_487];
  if (_488 == 0)
    goto <bb 56>; [94.50%]
  else
    goto <bb 63>; [5.50%]

  <bb 56> [local count: 11210325]:
  if (_487 != 1)
    goto <bb 57>; [94.50%]
  else
    goto <bb 131>; [5.50%]

  <bb 57> [local count: 10593757]:
  _491 = len_194 + -8;
  _492 = m.data[_491];
  if (_492 == 0)
    goto <bb 58>; [94.50%]
  else
    goto <bb 63>; [5.50%]

  <bb 58> [local count: 10011100]:
  if (_491 != 1)
    goto <bb 59>; [94.50%]
  else
    goto <bb 131>; [5.50%]

  <bb 59> [local count: 9460489]:
  _495 = len_194 + -9;
  _496 = m.data[_495];
  if (_496 == 0)
    goto <bb 60>; [94.50%]
  else
    goto <bb 63>; [5.50%]

  <bb 60> [local count: 8940163]:
  if (_495 != 1)
    goto <bb 61>; [94.50%]
  else
    goto <bb 131>; [5.50%]

  <bb 61> [local count: 8448454]:
  _499 = len_194 + -10;
  _500 = m.data[_499];
  if (_500 == 0)
    goto <bb 131>; [94.50%]
  else
    goto <bb 63>; [5.50%]

  <bb 62> [local count: 3445182]:
  if (len_194 == 1)
    goto <bb 64>; [0.00%]
  else
    goto <bb 73>; [100.00%]

  <bb 63> [local count: 10738626]:
  # _58 = PHI <_491(59), _487(57), _10(45), _310(47), _471(49), _475(51), _479(53), _483(55), _495(61)>
  m.limbs = _58;
  goto <bb 132>; [100.00%]

  <bb 64> [local count: 20624067]:
  # _7 = PHI <_211(132), 1(41), len_194(62)>
  _153 = n.limbs;
  if (_153 > 0)
    goto <bb 65>; [100.00%]
  else
    goto <bb 70>; [100.00%]

  <bb 65> [local count: 20624067]:
  _398 = MIN_EXPR <_7, _153>;
  _100 = (unsigned int) _398;
  niters.900_295 = _398 > 0 ? _100 : 1;
  if (_398 <= 3)
    goto <bb 67>; [10.00%]
  else
    goto <bb 66>; [90.00%]

  <bb 66> [local count: 37123320]:
  vect_iftmp.147_155.907_383 = MEM[(long unsigned int *)&n];
  vect_iftmp.147_155.908_9 = MEM[(long unsigned int *)&n + 16B];
  MEM[(long unsigned int *)&u] = vect_iftmp.147_155.907_383;
  MEM[(long unsigned int *)&u + 16B] = vect_iftmp.147_155.908_9;
  vect__157.913_347 = MEM[(long unsigned int *)&m];
  vect__157.914_346 = MEM[(long unsigned int *)&m + 16B];
  MEM[(long unsigned int *)&v] = vect__157.913_347;
  MEM[(long unsigned int *)&v + 16B] = vect__157.914_346;
  niters_vector_mult_vf.902_128 = niters.900_295 & 4294967292;
  tmp.903_142 = (int) niters_vector_mult_vf.902_128;
  if (niters_vector_mult_vf.902_128 == niters.900_295)
    goto <bb 71>; [25.00%]
  else
    goto <bb 67>; [75.00%]

  <bb 67> [local count: 15983652]:
  # i_192 = PHI <yes_74(65), tmp.903_142(66)>
  iftmp.147_457 = n.data[i_192];
  u[i_192] = iftmp.147_457;
  _459 = m.data[i_192];
  v[i_192] = _459;
  i_461 = i_192 + 1;
  if (_398 > i_461)
    goto <bb 68>; [83.33%]
  else
    goto <bb 71>; [16.67%]

  <bb 68> [local count: 13319177]:
  iftmp.147_464 = n.data[i_461];
  u[i_461] = iftmp.147_464;
  _466 = m.data[i_461];
  v[i_461] = _466;
  i_468 = i_192 + 2;
  if (_398 > i_468)
    goto <bb 69>; [83.33%]
  else
    goto <bb 71>; [16.67%]

  <bb 69> [local count: 11098870]:
  iftmp.147_140 = n.data[i_468];
  u[i_468] = iftmp.147_140;
  _138 = m.data[i_468];
  v[i_468] = _138;
  i_319 = i_192 + 3;
  goto <bb 71>; [100.00%]

  <bb 70> [local count: 20624067]:
  # i_400 = PHI <yes_74(64), i_146(71)>
  _352 = (unsigned int) _7;
  _351 = (unsigned int) i_400;
  _350 = _352 - _351;
  _349 = _350 + 4294967295;
  _345 = (sizetype) _349;
  _343 = _345 + 1;
  _342 = _343 * 8;
  _341 = _7 > i_400 ? _342 : 8;
  _340 = (sizetype) i_400;
  _251 = _340 * 8;
  _242 = &u + _251;
  __builtin_memset (_242, 0, _341);
  _112 = &v + _251;
  _306 = &m + _251;
  __builtin_memcpy (_112, _306, _341);
  goto <bb 72>; [16.67%]

  <bb 71> [local count: 20624066]:
  # i_146 = PHI <i_319(69), i_461(67), 4(66), i_468(68)>
  if (_7 > i_146)
    goto <bb 70>; [80.00%]
  else
    goto <bb 72>; [20.00%]

  <bb 72> [local count: 20624066]:

  <bb 73> [local count: 24749870]:
  # _208 = PHI <_7(72), len_194(62)>
  sn = 5;
  _159 = (long int) _208;
  __gmpn_gcdext (&g, &n.data, &sn, &u, _159, &v, _159);
  _161 = n.neg;
  _162 = m.neg;
  _163 = _161 ^ _162;
  n.neg = _163;
  sn.148_164 = sn;
  if (sn.148_164 < 0)
    goto <bb 74>; [25.50%]
  else
    goto <bb 105>; [74.50%]

  <bb 74> [local count: 6311217]:
  _165 = -sn.148_164;
  _166 = m.limbs;
  _167 = (long int) _166;
  _169 = __gmpn_sub_n (&n.data, &m.data, &n.data, _165);
  if (_169 != 0)
    goto <bb 77>; [50.00%]
  else
    goto <bb 75>; [50.00%]

  <bb 75> [local count: 4688797]:
  # __gmp_j_190 = PHI <_8(78), _165(74), __gmp_i_180(80), __gmp_i_175(81)>
  if (_167 > __gmp_j_190)
    goto <bb 83>; [89.00%]
  else
    goto <bb 76>; [11.00%]

  <bb 76> [local count: 6311217]:
  _185 = m.limbs;
  n.limbs = _185;
  if (_185 > 1)
    goto <bb 84>; [94.50%]
  else
    goto <bb 133>; [5.50%]

  <bb 77> [local count: 3155609]:
  if (_165 >= _167)
    goto <bb 76>; [5.50%]
  else
    goto <bb 78>; [94.50%]

  <bb 78> [local count: 2982050]:
  _121 = (long unsigned int) sn.148_164;
  _191 = _121 * 18446744073709551608;
  _123 = &m.data + _191;
  __gmp_x_218 = *_123;
  _8 = 1 - sn.148_164;
  _12 = &n.data + _191;
  _1 = __gmp_x_218 + 18446744073709551615;
  *_12 = _1;
  if (__gmp_x_218 == 0)
    goto <bb 79>; [94.50%]
  else
    goto <bb 75>; [5.50%]

  <bb 79> [local count: 2818037]:
  if (_8 >= _167)
    goto <bb 76>; [5.50%]
  else
    goto <bb 80>; [94.50%]

  <bb 80> [local count: 2663045]:
  __gmp_i.151_401 = (long unsigned int) _8;
  _339 = __gmp_i.151_401 * 8;
  _139 = &m.data + _339;
  __gmp_x_179 = *_139;
  __gmp_i_180 = 2 - sn.148_164;
  _181 = &n.data + _339;
  _182 = __gmp_x_179 + 18446744073709551615;
  *_181 = _182;
  if (__gmp_x_179 == 0)
    goto <bb 82>; [94.50%]
  else
    goto <bb 75>; [5.50%]

  <bb 81> [local count: 22231043]:
  _188 = (sizetype) __gmp_i_300;
  __gmp_x_174 = MEM[symbol: m, index: _188, step: 8, offset: 0B];
  __gmp_i_175 = __gmp_i_300 + 1;
  _177 = __gmp_x_174 + 18446744073709551615;
  _198 = (sizetype) __gmp_i_175;
  MEM[symbol: n, index: _198, step: 8, offset: -8B] = _177;
  if (__gmp_x_174 == 0)
    goto <bb 82>; [94.50%]
  else
    goto <bb 75>; [5.50%]

  <bb 82> [local count: 23524913]:
  # __gmp_i_300 = PHI <__gmp_i_180(80), __gmp_i_175(81)>
  if (_167 == __gmp_i_300)
    goto <bb 76>; [5.50%]
  else
    goto <bb 81>; [94.50%]

  <bb 83> [local count: 4173029]:
  _405 = (unsigned long) _166;
  _406 = (unsigned long) __gmp_j_190;
  _396 = _405 - _406;
  _395 = _396 * 8;
  _392 = _406 * 8;
  _356 = &n.data + _392;
  _353 = &m.data + _392;
  __builtin_memcpy (_356, _353, _395);
  goto <bb 76>; [11.00%]

  <bb 84> [local count: 5964100]:
  _133 = _185 + -1;
  _378 = n.data[_133];
  if (_378 == 0)
    goto <bb 85>; [94.50%]
  else
    goto <bb 134>; [5.50%]

  <bb 85> [local count: 5636075]:
  if (_133 != 1)
    goto <bb 86>; [94.50%]
  else
    goto <bb 103>; [5.50%]

  <bb 86> [local count: 5326091]:
  _304 = _185 + -2;
  _404 = n.data[_304];
  if (_404 == 0)
    goto <bb 87>; [94.50%]
  else
    goto <bb 104>; [5.50%]

  <bb 87> [local count: 5033156]:
  if (_304 != 1)
    goto <bb 88>; [94.50%]
  else
    goto <bb 103>; [5.50%]

  <bb 88> [local count: 4756332]:
  _425 = _185 + -3;
  _426 = n.data[_425];
  if (_426 == 0)
    goto <bb 89>; [94.50%]
  else
    goto <bb 104>; [5.50%]

  <bb 89> [local count: 4494734]:
  if (_425 != 1)
    goto <bb 90>; [94.50%]
  else
    goto <bb 103>; [5.50%]

  <bb 90> [local count: 4247524]:
  _429 = _185 + -4;
  _430 = n.data[_429];
  if (_430 == 0)
    goto <bb 91>; [94.50%]
  else
    goto <bb 104>; [5.50%]

  <bb 91> [local count: 4013910]:
  if (_429 != 1)
    goto <bb 92>; [94.50%]
  else
    goto <bb 103>; [5.50%]

  <bb 92> [local count: 3793145]:
  _433 = _185 + -5;
  _434 = n.data[_433];
  if (_434 == 0)
    goto <bb 93>; [94.50%]
  else
    goto <bb 104>; [5.50%]

  <bb 93> [local count: 3584522]:
  if (_433 != 1)
    goto <bb 94>; [94.50%]
  else
    goto <bb 103>; [5.50%]

  <bb 94> [local count: 3387373]:
  _437 = _185 + -6;
  _438 = n.data[_437];
  if (_438 == 0)
    goto <bb 95>; [94.50%]
  else
    goto <bb 104>; [5.50%]

  <bb 95> [local count: 3201068]:
  if (_437 != 1)
    goto <bb 96>; [94.50%]
  else
    goto <bb 103>; [5.50%]

  <bb 96> [local count: 3025009]:
  _441 = _185 + -7;
  _442 = n.data[_441];
  if (_442 == 0)
    goto <bb 97>; [94.50%]
  else
    goto <bb 104>; [5.50%]

  <bb 97> [local count: 2858633]:
  if (_441 != 1)
    goto <bb 98>; [94.50%]
  else
    goto <bb 103>; [5.50%]

  <bb 98> [local count: 2701409]:
  _445 = _185 + -8;
  _446 = n.data[_445];
  if (_446 == 0)
    goto <bb 99>; [94.50%]
  else
    goto <bb 104>; [5.50%]

  <bb 99> [local count: 2552831]:
  if (_445 != 1)
    goto <bb 100>; [94.50%]
  else
    goto <bb 103>; [5.50%]

  <bb 100> [local count: 2412425]:
  _449 = _185 + -9;
  _450 = n.data[_449];
  if (_450 == 0)
    goto <bb 101>; [94.50%]
  else
    goto <bb 104>; [5.50%]

  <bb 101> [local count: 2279742]:
  if (_449 != 1)
    goto <bb 102>; [94.50%]
  else
    goto <bb 103>; [5.50%]

  <bb 102> [local count: 2154356]:
  _453 = _185 + -10;
  _454 = n.data[_453];
  if (_454 == 0)
    goto <bb 103>; [94.50%]
  else
    goto <bb 104>; [5.50%]

  <bb 103> [local count: 2897725]:
  n.limbs = 1;
  g ={v} {CLOBBER};
  u ={v} {CLOBBER};
  v ={v} {CLOBBER};
  sn ={v} {CLOBBER};
  goto <bb 106>; [100.00%]

  <bb 104> [local count: 2738350]:
  # _66 = PHI <_445(100), _441(98), _133(86), _304(88), _425(90), _429(92), _433(94), _437(96), _449(102)>
  n.limbs = _66;
  g ={v} {CLOBBER};
  u ={v} {CLOBBER};
  v ={v} {CLOBBER};
  sn ={v} {CLOBBER};
  goto <bb 107>; [100.00%]

  <bb 105> [local count: 18438653]:
  _189 = (int) sn.148_164;
  n.limbs = _189;
  g ={v} {CLOBBER};
  u ={v} {CLOBBER};
  v ={v} {CLOBBER};
  sn ={v} {CLOBBER};
  if (_189 > 1)
    goto <bb 107>; [39.05%]
  else
    goto <bb 106>; [60.95%]

  <bb 106> [local count: 14483624]:
  # prephitmp_550 = PHI <_185(133), 1(103), _189(105)>
  _126 = n.data[0];
  if (_126 != 0)
    goto <bb 107>; [50.00%]
  else
    goto <bb 130>; [50.00%]

  <bb 107> [local count: 17508058]:
  # prephitmp_551 = PHI <_185(134), _189(105), _66(104), prephitmp_550(106)>
  _127 = (long int) prephitmp_551;
  _129 = __gmpn_get_str (&tmp, 256, &n.data, _127);
  len_130 = (int) _129;
  if (len_130 > 0)
    goto <bb 109>; [97.55%]
  else
    goto <bb 108>; [2.45%]

  <bb 108> [local count: 428333]:
  _312 = (unsigned int) _129;
  _384 = 32 - _312;
  _387 = (long unsigned int) _384;
  goto <bb 130>; [100.00%]

  <bb 109> [local count: 17079725]:
  _379 = tmp[0];
  if (_379 == 0)
    goto <bb 110>; [94.50%]
  else
    goto <bb 129>; [5.50%]

  <bb 110> [local count: 16140340]:
  _286 = (unsigned int) _129;
  _359 = _286 + 4294967295;
  _358 = (sizetype) _359;
  _376 = _358 + 1;

  <bb 111> [local count: 206611378]:
  # ivtmp.929_289 = PHI <1(110), ivtmp.929_288(113)>
  shift_132 = (int) ivtmp.929_289;
  if (ivtmp.929_289 != _376)
    goto <bb 113>; [97.55%]
  else
    goto <bb 112>; [2.45%]

  <bb 112> [local count: 5054725]:
  _135 = (unsigned int) ivtmp.929_289;
  _321 = (unsigned int) _129;
  _258 = 32 - _321;
  _385 = _135 + _258;
  _388 = (long unsigned int) _385;
  goto <bb 130>; [100.00%]

  <bb 113> [local count: 201556653]:
  ivtmp.929_288 = ivtmp.929_289 + 1;
  _134 = MEM[symbol: tmp, index: ivtmp.929_288, offset: -1B];
  if (_134 == 0)
    goto <bb 111>; [94.50%]
  else
    goto <bb 129>; [5.50%]

  <bb 114> [local count: 24749869]:
  tmp ={v} {CLOBBER};
  secp256k1_scalar_set_b32 (&sn, &b, 0B);
  secp256k1_scalar_mul_512 (&l, &t, &sn);
  secp256k1_scalar_reduce_512 (&t, &l);
  l ={v} {CLOBBER};
  _113 = t.d[0];
  _114 = _113 ^ 1;
  _115 = t.d[1];
  _117 = t.d[2];
  _229 = _115 | _117;
  _119 = t.d[3];
  _313 = _119 | _229;
  _120 = _114 | _313;
  if (_120 != 0)
    goto <bb 115>; [10.00%]
  else
    goto <bb 116>; [90.00%]

  <bb 115> [local count: 2474987]:
  stderr.146_124 = stderr;
  __fprintf_chk (stderr.146_124, 1, "%s:%d: %s\n", "src/scalar_impl.h", 240, "test condition failed: secp256k1_scalar_is_one(&t)");
  abort ();

  <bb 116> [local count: 22274882]:
  b ={v} {CLOBBER};
  n ={v} {CLOBBER};
  m ={v} {CLOBBER};
  t ={v} {CLOBBER};
  secp256k1_scalar_mul_512 (&l, &sn, &m);
  secp256k1_scalar_reduce_512 (&u1, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_mul_512 (&l, &sn, &r);
  secp256k1_scalar_reduce_512 (&u2, &l);
  l ={v} {CLOBBER};
  _93 = q.infinity;
  pubkeyj.infinity = _93;
  pubkeyj.x = q.x;
  pubkeyj.y = q.y;
  MEM[(struct secp256k1_fe *)&pubkeyj + 80B].n[0] = 1;
  MEM[(struct secp256k1_fe *)&pubkeyj + 80B].n[4] = 0;
  MEM[(struct secp256k1_fe *)&pubkeyj + 80B].n[3] = 0;
  MEM[(struct secp256k1_fe *)&pubkeyj + 80B].n[2] = 0;
  MEM[(struct secp256k1_fe *)&pubkeyj + 80B].n[1] = 0;
  _15 = &ctx_19(D)->ecmult_ctx;
  secp256k1_ecmult (_15, &pr, &pubkeyj, &u2, &u1);
  _94 = MEM[(int *)&pr + 120B];
  if (_94 != 0)
    goto <bb 14>; [51.12%]
  else
    goto <bb 117>; [48.88%]

  <bb 117> [local count: 10887963]:
  secp256k1_scalar_get_b32 (&c, &r);
  secp256k1_fe_set_b32 (&xr, &c);
  _95 = secp256k1_gej_eq_x_var (&xr, &pr);
  if (_95 != 0)
    goto <bb 126>; [34.00%]
  else
    goto <bb 118>; [66.00%]

  <bb 118> [local count: 7186056]:
  _141 = xr.n[4];
  if (_141 != 0)
    goto <bb 14>; [3.66%]
  else
    goto <bb 119>; [96.34%]

  <bb 119> [local count: 6669663]:
  _320 = xr.n[3];
  if (_320 != 0)
    goto <bb 14>; [3.66%]
  else
    goto <bb 120>; [96.34%]

  <bb 120> [local count: 6190378]:
  _413 = xr.n[2];
  if (_413 > 21319971)
    goto <bb 14>; [3.66%]
  else
    goto <bb 121>; [96.34%]

  <bb 121> [local count: 5963810]:
  if (_413 != 21319971)
    goto <bb 128>; [3.66%]
  else
    goto <bb 122>; [96.34%]

  <bb 122> [local count: 5745534]:
  _419 = xr.n[1];
  if (_419 > 445351433356290)
    goto <bb 14>; [3.66%]
  else
    goto <bb 123>; [96.34%]

  <bb 123> [local count: 5535248]:
  if (_419 != 445351433356290)
    goto <bb 128>; [3.66%]
  else
    goto <bb 124>; [96.34%]

  <bb 124> [local count: 5332658]:
  _97 = xr.n[0];
  if (_97 > 3836686497331950)
    goto <bb 14>; [3.66%]
  else
    goto <bb 125>; [96.34%]

  <bb 125> [local count: 5137483]:
  if (_97 != 3836686497331950)
    goto <bb 128>; [3.66%]
  else
    goto <bb 14>; [96.34%]

  <bb 126> [local count: 4677256]:
  c ={v} {CLOBBER};
  sn ={v} {CLOBBER};
  u1 ={v} {CLOBBER};
  u2 ={v} {CLOBBER};
  xr ={v} {CLOBBER};
  pubkeyj ={v} {CLOBBER};
  pr ={v} {CLOBBER};

  <bb 127> [local count: 1071266836]:
  # _17 = PHI <0(3), 0(5), 0(7), 0(9), 0(11), 1(126), yes_74(14)>
  q ={v} {CLOBBER};
  r ={v} {CLOBBER};
  m ={v} {CLOBBER};
  return _17;

  <bb 128> [local count: 2868673]:
  vect__101.922_157 = MEM[(long unsigned int *)&xr];
  vect__101.923_456 = MEM[(long unsigned int *)&xr + 16B];
  vect__102.924_377 = vect__101.922_157 + { 666908835070273, 4058248194014205 };
  vect__102.924_205 = vect__101.923_456 + { 4503599606050524, 4503599627370495 };
  MEM[(long unsigned int *)&xr] = vect__102.924_377;
  MEM[(long unsigned int *)&xr + 16B] = vect__102.924_205;
  xr.n[4] = 281474976710655;
  _111 = secp256k1_gej_eq_x_var (&xr, &pr);
  if (_111 != 0)
    goto <bb 126>; [34.00%]
  else
    goto <bb 14>; [66.00%]

  <bb 129> [local count: 8167457]:
  # shift_230 = PHI <yes_74(109), shift_132(113)>
  _361 = len_130 - shift_230;
  len.157_362 = (unsigned int) _129;
  _363 = 32 - len.157_362;
  shift.158_364 = (unsigned int) shift_230;
  _365 = _363 + shift.158_364;
  _366 = (long unsigned int) _365;
  __builtin___memset_chk (&b, 0, _366, 32);
  _143 = (long unsigned int) _361;
  _144 = (sizetype) shift_230;
  _145 = &tmp + _144;
  _147 = (sizetype) len_130;
  _148 = 32 - _147;
  _149 = _144 + _148;
  _150 = &b + _149;
  __builtin_memcpy (_150, _145, _143);
  goto <bb 114>; [100.00%]

  <bb 130> [local count: 12724869]:
  # prephitmp_389 = PHI <_388(112), _387(108), 32(106)>
  __builtin___memset_chk (&b, 0, prephitmp_389, 32);
  goto <bb 114>; [100.00%]

  <bb 131> [local count: 11363626]:
  m.limbs = 1;

  <bb 132> [local count: 20624067]:
  # _211 = PHI <_58(63), 1(131), len_194(43)>
  goto <bb 64>; [100.00%]

  <bb 133> [local count: 347117]:
  g ={v} {CLOBBER};
  u ={v} {CLOBBER};
  v ={v} {CLOBBER};
  sn ={v} {CLOBBER};
  goto <bb 106>; [100.00%]

  <bb 134> [local count: 328025]:
  g ={v} {CLOBBER};
  u ={v} {CLOBBER};
  v ={v} {CLOBBER};
  sn ={v} {CLOBBER};
  goto <bb 107>; [100.00%]

}



;; Function secp256k1_ecdsa_sign (secp256k1_ecdsa_sign, funcdef_no=231, decl_uid=1591, cgraph_uid=231, symbol_order=240)

__attribute__((visibility ("default")))
secp256k1_ecdsa_sign (const struct secp256k1_context * ctx, struct secp256k1_ecdsa_signature * signature, const unsigned char * msg32, const unsigned char * seckey, int (*secp256k1_nonce_function) (unsigned char *, const unsigned char *, const unsigned char *, const unsigned char *, void *, unsigned int) noncefp, const void * noncedata)
{
  int yes;
  int no;
  uint64_t l[8];
  uint64_t l[8];
  int overflow;
  struct secp256k1_scalar n;
  struct secp256k1_ge r;
  struct secp256k1_gej rp;
  unsigned char b[32];
  unsigned int count;
  unsigned char nonce32[32];
  int overflow;
  int ret;
  struct secp256k1_scalar msg;
  struct secp256k1_scalar non;
  struct secp256k1_scalar sec;
  struct secp256k1_scalar s;
  struct secp256k1_scalar r;
  int overflow.159_14;
  int overflow.160_15;
  const struct secp256k1_ecmult_gen_context * _16;
  int _20;
  void (*<T319>) (const char *, void *) _50;
  const void * _51;
  void (*<T319>) (const char *, void *) _52;
  const void * _53;
  void (*<T319>) (const char *, void *) _54;
  const void * _55;
  void (*<T319>) (const char *, void *) _56;
  const void * _57;
  struct secp256k1_ge_storage[64][16] * _58;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int _72;
  long unsigned int _73;
  long unsigned int _102;
  long unsigned int _103;
  long unsigned int _104;
  long unsigned int _105;
  long unsigned int _106;
  long unsigned int _107;
  long unsigned int _108;
  int _114;
  _Bool _120;
  _Bool _123;
  int _124;
  signed long _125;
  _Bool _126;
  int _127;
  int _128;
  int _129;
  _Bool _131;
  int _133;
  int _134;
  _Bool _136;
  _Bool _138;
  _Bool _142;
  int _144;
  int _146;
  _Bool _148;
  int _182;
  int _204;

  <bb 2> [local count: 470579968]:
  overflow = 0;
  _58 = MEM[(struct secp256k1_ge_storage[64][16] * *)ctx_28(D) + 8B];
  if (_58 == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 47057997]:
  _50 = MEM[(void (*<T319>) (const char *, void *) *)ctx_28(D) + 176B];
  _51 = MEM[(const void * *)ctx_28(D) + 184B];
  _50 ("secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx)", _51);
  goto <bb 25>; [100.00%]

  <bb 4> [local count: 423521971]:
  if (msg32_30(D) == 0B)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 42352197]:
  _52 = MEM[(void (*<T319>) (const char *, void *) *)ctx_28(D) + 176B];
  _53 = MEM[(const void * *)ctx_28(D) + 184B];
  _52 ("msg32 != NULL", _53);
  goto <bb 25>; [100.00%]

  <bb 6> [local count: 381169774]:
  if (signature_31(D) == 0B)
    goto <bb 7>; [10.00%]
  else
    goto <bb 8>; [90.00%]

  <bb 7> [local count: 38116978]:
  _54 = MEM[(void (*<T319>) (const char *, void *) *)ctx_28(D) + 176B];
  _55 = MEM[(const void * *)ctx_28(D) + 184B];
  _54 ("signature != NULL", _55);
  goto <bb 25>; [100.00%]

  <bb 8> [local count: 343052797]:
  if (seckey_32(D) == 0B)
    goto <bb 9>; [10.00%]
  else
    goto <bb 10>; [90.00%]

  <bb 9> [local count: 34305280]:
  _56 = MEM[(void (*<T319>) (const char *, void *) *)ctx_28(D) + 176B];
  _57 = MEM[(const void * *)ctx_28(D) + 184B];
  _56 ("seckey != NULL", _57);
  goto <bb 25>; [100.00%]

  <bb 10> [local count: 308747517]:
  if (noncefp_33(D) == 0B)
    goto <bb 11>; [30.00%]
  else
    goto <bb 12>; [70.00%]

  <bb 11> [local count: 92624254]:

  <bb 12> [local count: 308747517]:
  # noncefp_18 = PHI <noncefp_33(D)(10), nonce_function_rfc6979(11)>
  secp256k1_scalar_set_b32 (&sec, seckey_32(D), &overflow);
  overflow.159_14 = overflow;
  if (overflow.159_14 == 0)
    goto <bb 13>; [67.00%]
  else
    goto <bb 24>; [33.00%]

  <bb 13> [local count: 206860837]:
  _60 = sec.d[0];
  _61 = sec.d[1];
  _62 = _60 | _61;
  _63 = sec.d[2];
  _64 = _62 | _63;
  _65 = sec.d[3];
  _66 = _64 | _65;
  if (_66 != 0)
    goto <bb 14>; [33.00%]
  else
    goto <bb 24>; [67.00%]

  <bb 14> [local count: 68264076]:
  secp256k1_scalar_set_b32 (&msg, msg32_30(D), 0B);

  <bb 15> [local count: 1073741761]:
  # count_19 = PHI <0(14), count_41(23)>
  ret_38 = noncefp_18 (&nonce32, msg32_30(D), seckey_32(D), 0B, noncedata_36(D), count_19);
  if (ret_38 == 0)
    goto <bb 26>; [5.50%]
  else
    goto <bb 16>; [94.50%]

  <bb 16> [local count: 1014685964]:
  secp256k1_scalar_set_b32 (&non, &nonce32, &overflow);
  overflow.160_15 = overflow;
  if (overflow.160_15 == 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 23>; [50.00%]

  <bb 17> [local count: 507342982]:
  _67 = non.d[0];
  _68 = non.d[1];
  _69 = _67 | _68;
  _70 = non.d[2];
  _71 = _69 | _70;
  _72 = non.d[3];
  _73 = _71 | _72;
  if (_73 != 0)
    goto <bb 18>; [33.00%]
  else
    goto <bb 23>; [67.00%]

  <bb 18> [local count: 167423184]:
  _16 = &ctx_28(D)->ecmult_gen_ctx;
  overflow = 0;
  secp256k1_ecmult_gen (_16, &rp, &non);
  secp256k1_ge_set_gej (&r, &rp);
  secp256k1_fe_normalize (&r.x);
  secp256k1_fe_normalize (&r.y);
  secp256k1_fe_get_b32 (&b, &r.x);
  secp256k1_scalar_set_b32 (&r, &b, &overflow);
  secp256k1_scalar_mul_512 (&l, &r, &sec);
  secp256k1_scalar_reduce_512 (&n, &l);
  l ={v} {CLOBBER};
  secp256k1_scalar_add (&n, &n, &msg);
  secp256k1_scalar_inverse (&s, &non);
  secp256k1_scalar_mul_512 (&l, &s, &n);
  secp256k1_scalar_reduce_512 (&s, &l);
  l ={v} {CLOBBER};
  MEM[(long unsigned int *)&n] = { 0, 0 };
  MEM[(long unsigned int *)&n + 16B] = { 0, 0 };
  rp.infinity = 0;
  MEM[(long unsigned int *)&rp] = { 0, 0 };
  MEM[(long unsigned int *)&rp + 16B] = { 0, 0 };
  MEM[(long unsigned int *)&rp + 32B] = { 0, 0 };
  MEM[(long unsigned int *)&rp + 48B] = { 0, 0 };
  MEM[(long unsigned int *)&rp + 64B] = { 0, 0 };
  MEM[(long unsigned int *)&rp + 80B] = { 0, 0 };
  MEM[(long unsigned int *)&rp + 96B] = { 0, 0 };
  MEM[(struct secp256k1_fe *)&rp + 80B].n[4] = 0;
  r.infinity = 0;
  MEM[(long unsigned int *)&r] = { 0, 0 };
  MEM[(long unsigned int *)&r + 16B] = { 0, 0 };
  MEM[(long unsigned int *)&r + 32B] = { 0, 0 };
  MEM[(long unsigned int *)&r + 48B] = { 0, 0 };
  MEM[(long unsigned int *)&r + 64B] = { 0, 0 };
  _102 = s.d[0];
  _103 = s.d[1];
  _104 = _102 | _103;
  _105 = s.d[2];
  _106 = _104 | _105;
  _107 = s.d[3];
  _108 = _106 | _107;
  if (_108 == 0)
    goto <bb 19>; [34.00%]
  else
    goto <bb 20>; [66.00%]

  <bb 19> [local count: 56923883]:
  b ={v} {CLOBBER};
  rp ={v} {CLOBBER};
  r ={v} {CLOBBER};
  n ={v} {CLOBBER};
  overflow ={v} {CLOBBER};
  goto <bb 23>; [100.00%]

  <bb 20> [local count: 110499298]:
  _123 = _107 <= 9223372036854775806;
  _124 = (int) _123;
  _125 = (signed long) _107;
  _126 = _125 < 0;
  _127 = (int) _126;
  _128 = ~_124;
  _129 = _127 & _128;
  _131 = _105 != 18446744073709551615;
  _133 = ~_127;
  _134 = _124 | _133;
  _138 = _103 <= 6725966010171805724;
  _136 = _131 | _138;
  _146 = (int) _136;
  _114 = _134 & _146;
  no_141 = _114 | _124;
  _142 = _103 > 6725966010171805725;
  _144 = ~no_141;
  _148 = _102 > 16134479119472337056;
  _120 = _142 | _148;
  _204 = (int) _120;
  _182 = _144 & _204;
  yes_151 = _129 | _182;
  if (yes_151 != 0)
    goto <bb 21>; [33.00%]
  else
    goto <bb 22>; [67.00%]

  <bb 21> [local count: 36464769]:
  secp256k1_scalar_negate (&s, &s);
  b ={v} {CLOBBER};
  rp ={v} {CLOBBER};
  r ={v} {CLOBBER};
  n ={v} {CLOBBER};
  overflow ={v} {CLOBBER};
  goto <bb 27>; [100.00%]

  <bb 22> [local count: 74034527]:
  b ={v} {CLOBBER};
  rp ={v} {CLOBBER};
  r ={v} {CLOBBER};
  n ={v} {CLOBBER};
  overflow ={v} {CLOBBER};
  goto <bb 27>; [100.00%]

  <bb 23> [local count: 1005477684]:
  count_41 = count_19 + 1;
  goto <bb 15>; [100.00%]

  <bb 24> [local count: 286220369]:
  __builtin_memset (signature_31(D), 0, 64);

  <bb 25> [local count: 470579964]:
  # _20 = PHI <0(3), 0(5), 0(7), 0(9), 0(24), ret_38(27)>
  r ={v} {CLOBBER};
  s ={v} {CLOBBER};
  sec ={v} {CLOBBER};
  non ={v} {CLOBBER};
  msg ={v} {CLOBBER};
  overflow ={v} {CLOBBER};
  return _20;

  <bb 26> [local count: 45736928]:
  nonce32 ={v} {CLOBBER};
  goto <bb 24>; [100.00%]

  <bb 27> [local count: 22527144]:
  nonce32 ={v} {CLOBBER};
  MEM[(char * {ref-all})signature_31(D)] = MEM[(char * {ref-all})&r];
  MEM[(char * {ref-all})signature_31(D) + 32B] = MEM[(char * {ref-all})&s];
  goto <bb 25>; [100.00%]

}



;; Function secp256k1_ec_seckey_verify (secp256k1_ec_seckey_verify, funcdef_no=232, decl_uid=1594, cgraph_uid=232, symbol_order=241)

__attribute__((visibility ("default")))
secp256k1_ec_seckey_verify (const struct secp256k1_context * ctx, const unsigned char * seckey)
{
  int overflow;
  struct secp256k1_scalar sec;
  _Bool _1;
  int _2;
  int overflow.165_4;
  int _5;
  void (*<T319>) (const char *, void *) _14;
  const void * _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;

  <bb 2> [local count: 1073741825]:
  if (seckey_8(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _14 = MEM[(void (*<T319>) (const char *, void *) *)ctx_9(D) + 176B];
  _15 = MEM[(const void * *)ctx_9(D) + 184B];
  _14 ("seckey != NULL", _15);
  goto <bb 6>; [100.00%]

  <bb 4> [local count: 966367642]:
  secp256k1_scalar_set_b32 (&sec, seckey_8(D), &overflow);
  overflow.165_4 = overflow;
  if (overflow.165_4 == 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 483183821]:
  _16 = sec.d[0];
  _17 = sec.d[1];
  _18 = _16 | _17;
  _19 = sec.d[2];
  _20 = _18 | _19;
  _21 = sec.d[3];
  _22 = _20 | _21;
  _1 = _22 != 0;
  _2 = (int) _1;

  <bb 6> [local count: 1073741825]:
  # _5 = PHI <0(3), _2(5), 0(4)>
  sec ={v} {CLOBBER};
  overflow ={v} {CLOBBER};
  return _5;

}



;; Function secp256k1_ec_pubkey_create (secp256k1_ec_pubkey_create, funcdef_no=233, decl_uid=1598, cgraph_uid=233, symbol_order=242)

__attribute__((visibility ("default")))
secp256k1_ec_pubkey_create (const struct secp256k1_context * ctx, struct secp256k1_pubkey * pubkey, const unsigned char * seckey)
{
  struct secp256k1_fe z3;
  struct secp256k1_fe z2;
  struct secp256k1_ge_storage s;
  int overflow;
  struct secp256k1_scalar sec;
  struct secp256k1_ge p;
  struct secp256k1_gej pj;
  int overflow.166_10;
  _Bool _11;
  _Bool _12;
  _Bool _13;
  const struct secp256k1_ecmult_gen_context * _14;
  int _15;
  void (*<T319>) (const char *, void *) _32;
  const void * _33;
  void (*<T319>) (const char *, void *) _34;
  const void * _35;
  void (*<T319>) (const char *, void *) _36;
  const void * _37;
  struct secp256k1_ge_storage[64][16] * _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  int _52;

  <bb 2> [local count: 1073741825]:
  if (pubkey_18(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _32 = MEM[(void (*<T319>) (const char *, void *) *)ctx_19(D) + 176B];
  _33 = MEM[(const void * *)ctx_19(D) + 184B];
  _32 ("pubkey != NULL", _33);
  goto <bb 10>; [100.00%]

  <bb 4> [local count: 966367642]:
  __builtin_memset (pubkey_18(D), 0, 64);
  _38 = MEM[(struct secp256k1_ge_storage[64][16] * *)ctx_19(D) + 8B];
  if (_38 == 0B)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 96636764]:
  _34 = MEM[(void (*<T319>) (const char *, void *) *)ctx_19(D) + 176B];
  _35 = MEM[(const void * *)ctx_19(D) + 184B];
  _34 ("secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx)", _35);
  goto <bb 10>; [100.00%]

  <bb 6> [local count: 869730878]:
  if (seckey_21(D) == 0B)
    goto <bb 7>; [10.00%]
  else
    goto <bb 8>; [90.00%]

  <bb 7> [local count: 86973088]:
  _36 = MEM[(void (*<T319>) (const char *, void *) *)ctx_19(D) + 176B];
  _37 = MEM[(const void * *)ctx_19(D) + 184B];
  _36 ("seckey != NULL", _37);
  goto <bb 10>; [100.00%]

  <bb 8> [local count: 782757789]:
  secp256k1_scalar_set_b32 (&sec, seckey_21(D), &overflow);
  overflow.166_10 = overflow;
  _11 = overflow.166_10 == 0;
  _39 = sec.d[0];
  _40 = sec.d[1];
  _41 = _39 | _40;
  _42 = sec.d[2];
  _43 = _41 | _42;
  _44 = sec.d[3];
  _45 = _43 | _44;
  _12 = _45 != 0;
  _13 = _11 & _12;
  if (_13 != 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 258310071]:
  _14 = &ctx_19(D)->ecmult_gen_ctx;
  secp256k1_ecmult_gen (_14, &pj, &sec);
  _52 = pj.infinity;
  p.infinity = _52;
  secp256k1_fe_inv (&pj.z, &pj.z);
  secp256k1_fe_sqr_inner (&z2.n, &MEM[(const struct secp256k1_fe *)&pj + 80B].n);
  secp256k1_fe_mul_inner (&z3.n, &MEM[(const struct secp256k1_fe *)&pj + 80B].n, &z2.n);
  secp256k1_fe_mul_inner (&MEM[(const struct secp256k1_fe *)&pj].n, &MEM[(const struct secp256k1_fe *)&pj].n, &z2.n);
  secp256k1_fe_mul_inner (&MEM[(const struct secp256k1_fe *)&pj + 40B].n, &MEM[(const struct secp256k1_fe *)&pj + 40B].n, &z3.n);
  MEM[(struct secp256k1_fe *)&pj + 80B].n[4] = 0;
  MEM[(long unsigned int *)&pj + 80B] = { 1, 0 };
  MEM[(long unsigned int *)&pj + 96B] = { 0, 0 };
  p.x = pj.x;
  p.y = pj.y;
  z2 ={v} {CLOBBER};
  z3 ={v} {CLOBBER};
  secp256k1_ge_to_storage (&s, &p);
  MEM[(char * {ref-all})pubkey_18(D)] = MEM[(char * {ref-all})&s];
  s ={v} {CLOBBER};

  <bb 10> [local count: 1073741824]:
  # _15 = PHI <0(3), 0(5), 0(7), 1(9), 0(8)>
  pj ={v} {CLOBBER};
  p ={v} {CLOBBER};
  sec ={v} {CLOBBER};
  overflow ={v} {CLOBBER};
  return _15;

}



;; Function secp256k1_ec_privkey_negate (secp256k1_ec_privkey_negate, funcdef_no=234, decl_uid=1601, cgraph_uid=234, symbol_order=243)

__attribute__((visibility ("default")))
secp256k1_ec_privkey_negate (const struct secp256k1_context * ctx, unsigned char * seckey)
{
  uint128_t t;
  uint64_t nonzero;
  struct secp256k1_scalar sec;
  __int128 unsigned _1;
  __int128 unsigned _2;
  int _4;
  void (*<T319>) (const char *, void *) _13;
  const void * _14;
  long unsigned int _108;
  long unsigned int _109;
  long unsigned int _110;
  long unsigned int _111;
  long unsigned int _112;
  long unsigned int _113;
  long unsigned int _114;
  _Bool _115;
  long long unsigned int _116;
  long unsigned int _118;
  __int128 unsigned _119;
  long unsigned int _121;
  long unsigned int _122;
  long unsigned int _124;
  __int128 unsigned _125;
  long unsigned int _126;
  long unsigned int _128;
  long unsigned int _129;
  long unsigned int _131;
  __int128 unsigned _132;
  long unsigned int _133;
  long unsigned int _135;
  long unsigned int _136;
  long unsigned int _138;
  __int128 unsigned _139;
  long unsigned int _140;
  long unsigned int _142;
  long unsigned int _143;
  __int128 unsigned _144;
  long unsigned int _145;

  <bb 2> [local count: 1073741825]:
  if (seckey_6(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _13 = MEM[(void (*<T319>) (const char *, void *) *)ctx_7(D) + 176B];
  _14 = MEM[(const void * *)ctx_7(D) + 184B];
  _13 ("seckey != NULL", _14);
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 966367642]:
  secp256k1_scalar_set_b32 (&sec, seckey_6(D), 0B);
  _108 = sec.d[0];
  _109 = sec.d[1];
  _110 = _108 | _109;
  _111 = sec.d[2];
  _112 = _110 | _111;
  _113 = sec.d[3];
  _114 = _112 | _113;
  _115 = _114 != 0;
  _116 = (long long unsigned int) _115;
  nonzero_117 = -_116;
  _118 = ~_108;
  _119 = (__int128 unsigned) _118;
  t_120 = _119 + 13822214165235122498;
  _121 = _118 + 13822214165235122498;
  _122 = nonzero_117 & _121;
  t_123 = t_120 >> 64;
  _124 = ~_109;
  _125 = (__int128 unsigned) _124;
  _144 = _125 + 13451932020343611451;
  t_127 = t_123 + _144;
  _128 = (long unsigned int) t_127;
  _129 = nonzero_117 & _128;
  t_130 = t_127 >> 64;
  _131 = ~_111;
  _132 = (__int128 unsigned) _131;
  _2 = _132 + 18446744073709551614;
  t_134 = _2 + t_130;
  _135 = (long unsigned int) t_134;
  _136 = nonzero_117 & _135;
  t_137 = t_134 >> 64;
  _138 = ~_113;
  _139 = (__int128 unsigned) _138;
  _1 = _139 + 18446744073709551615;
  t_141 = _1 + t_137;
  _142 = (long unsigned int) t_141;
  _143 = nonzero_117 & _142;
  _126 = __builtin_bswap64 (_143);
  MEM[(unsigned char *)seckey_6(D)] = _126;
  _133 = __builtin_bswap64 (_136);
  MEM[(unsigned char *)seckey_6(D) + 8B] = _133;
  _140 = __builtin_bswap64 (_129);
  MEM[(unsigned char *)seckey_6(D) + 16B] = _140;
  _145 = __builtin_bswap64 (_122);
  MEM[(unsigned char *)seckey_6(D) + 24B] = _145;

  <bb 5> [local count: 1073741825]:
  # _4 = PHI <0(3), 1(4)>
  sec ={v} {CLOBBER};
  return _4;

}



;; Function secp256k1_ec_pubkey_negate (secp256k1_ec_pubkey_negate, funcdef_no=235, decl_uid=1604, cgraph_uid=235, symbol_order=244)

__attribute__((visibility ("default")))
secp256k1_ec_pubkey_negate (const struct secp256k1_context * ctx, struct secp256k1_pubkey * pubkey)
{
  const long unsigned int s$32$n$3;
  const long unsigned int s$32$n$2;
  const long unsigned int s$32$n$1;
  const long unsigned int s$32$n$0;
  const long unsigned int s$n$3;
  const long unsigned int s$n$2;
  const long unsigned int s$n$1;
  const long unsigned int s$n$0;
  struct secp256k1_ge_storage s;
  struct secp256k1_ge_storage s;
  struct secp256k1_ge p;
  int _4;
  void (*<T319>) (const char *, void *) _14;
  const void * _15;
  long unsigned int _29;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _39;
  long long unsigned int _40;
  long long unsigned int _41;
  long unsigned int _42;
  long unsigned int _44;
  long long unsigned int _45;
  long long unsigned int _46;
  long unsigned int _47;
  long unsigned int _49;
  long long unsigned int _50;
  long long unsigned int _51;
  long unsigned int _52;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _57;
  long long unsigned int _58;
  long long unsigned int _59;
  long unsigned int _60;
  long unsigned int _62;
  long long unsigned int _63;
  long long unsigned int _64;
  long unsigned int _65;
  long unsigned int _67;
  long long unsigned int _68;
  long long unsigned int _69;
  long unsigned int _70;
  void (*<T319>) (const char *, void *) _71;
  const void * _72;
  long long unsigned int _78;
  long long unsigned int _80;
  long long unsigned int _82;
  long long unsigned int _84;
  long unsigned int _121;
  long unsigned int _128;
  long unsigned int _129;
  long unsigned int _130;

  <bb 2> [local count: 1073741825]:
  if (pubkey_6(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _14 = MEM[(void (*<T319>) (const char *, void *) *)ctx_7(D) + 176B];
  _15 = MEM[(const void * *)ctx_7(D) + 184B];
  _14 ("pubkey != NULL", _15);
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 966367642]:
  MEM[(char * {ref-all})&s] = MEM[(char * {ref-all})pubkey_6(D)];
  s$n$0_21 = MEM[(char * {ref-all})&s];
  s$n$1_1 = MEM[(char * {ref-all})&s + 8B];
  s$n$2_2 = MEM[(char * {ref-all})&s + 16B];
  s$n$3_30 = MEM[(char * {ref-all})&s + 24B];
  s$32$n$0_31 = MEM[(char * {ref-all})&s + 32B];
  s$32$n$1_32 = MEM[(char * {ref-all})&s + 40B];
  s$32$n$2_22 = MEM[(char * {ref-all})&s + 48B];
  s$32$n$3_75 = MEM[(char * {ref-all})&s + 56B];
  _54 = s$n$0_21 & 4503599627370495;
  MEM[(struct secp256k1_fe *)&p].n[0] = _54;
  _55 = s$n$0_21 >> 52;
  _57 = s$n$1_1 << 12;
  _58 = _57 & 4503599627370495;
  _59 = _55 | _58;
  MEM[(struct secp256k1_fe *)&p].n[1] = _59;
  _60 = s$n$1_1 >> 40;
  _62 = s$n$2_2 << 24;
  _63 = _62 & 4503599627370495;
  _64 = _60 | _63;
  MEM[(struct secp256k1_fe *)&p].n[2] = _64;
  _65 = s$n$2_2 >> 28;
  _67 = s$n$3_30 << 36;
  _68 = _67 & 4503599627370495;
  _69 = _65 | _68;
  MEM[(struct secp256k1_fe *)&p].n[3] = _69;
  _70 = s$n$3_30 >> 16;
  MEM[(struct secp256k1_fe *)&p].n[4] = _70;
  _36 = s$32$n$0_31 & 4503599627370495;
  MEM[(struct secp256k1_fe *)&p + 40B].n[0] = _36;
  _37 = s$32$n$0_31 >> 52;
  _39 = s$32$n$1_32 << 12;
  _40 = _39 & 4503599627370495;
  _41 = _37 | _40;
  MEM[(struct secp256k1_fe *)&p + 40B].n[1] = _41;
  _42 = s$32$n$1_32 >> 40;
  _44 = s$32$n$2_22 << 24;
  _45 = _44 & 4503599627370495;
  _46 = _42 | _45;
  MEM[(struct secp256k1_fe *)&p + 40B].n[2] = _46;
  _47 = s$32$n$2_22 >> 28;
  _49 = s$32$n$3_75 << 36;
  _50 = _49 & 4503599627370495;
  _51 = _47 | _50;
  MEM[(struct secp256k1_fe *)&p + 40B].n[3] = _51;
  _52 = s$32$n$3_75 >> 16;
  MEM[(struct secp256k1_fe *)&p + 40B].n[4] = _52;
  p.infinity = 0;
  _129 = _54 | _70;
  _130 = _59 | _129;
  _121 = _64 | _130;
  _29 = _69 | _121;
  if (_29 == 0)
    goto <bb 6>; [10.00%]
  else
    goto <bb 5>; [90.00%]

  <bb 5> [local count: 869730876]:
  __builtin_memset (pubkey_6(D), 0, 64);
  _128 = 1125899906842620 - _52;
  _78 = 18014381329608892 - _36;
  MEM[(struct secp256k1_fe *)&p + 40B].n[0] = _78;
  _80 = 18014398509481980 - _41;
  MEM[(struct secp256k1_fe *)&p + 40B].n[1] = _80;
  _82 = 18014398509481980 - _46;
  MEM[(struct secp256k1_fe *)&p + 40B].n[2] = _82;
  _84 = 18014398509481980 - _51;
  MEM[(struct secp256k1_fe *)&p + 40B].n[3] = _84;
  MEM[(struct secp256k1_fe *)&p + 40B].n[4] = _128;
  secp256k1_ge_to_storage (&s, &p);
  MEM[(char * {ref-all})pubkey_6(D)] = MEM[(char * {ref-all})&s];
  s ={v} {CLOBBER};
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 96636764]:
  _71 = MEM[(void (*<T319>) (const char *, void *) *)ctx_7(D) + 176B];
  _72 = MEM[(const void * *)ctx_7(D) + 184B];
  _71 ("!secp256k1_fe_is_zero(&ge->x)", _72);
  __builtin_memset (pubkey_6(D), 0, 64);

  <bb 7> [local count: 1073741824]:
  # _4 = PHI <0(3), 1(5), 0(6)>
  p ={v} {CLOBBER};
  return _4;

}



;; Function secp256k1_ec_privkey_tweak_add (secp256k1_ec_privkey_tweak_add, funcdef_no=236, decl_uid=1608, cgraph_uid=236, symbol_order=245)

__attribute__((visibility ("default")))
secp256k1_ec_privkey_tweak_add (const struct secp256k1_context * ctx, unsigned char * seckey, const unsigned char * tweak)
{
  int yes;
  int no;
  uint128_t t;
  uint128_t t;
  int overflow;
  struct secp256k1_scalar sec;
  struct secp256k1_scalar term;
  __int128 unsigned _1;
  int overflow.168_7;
  int _8;
  void (*<T319>) (const char *, void *) _24;
  const void * _25;
  void (*<T319>) (const char *, void *) _26;
  const void * _27;
  int _29;
  long unsigned int _31;
  long unsigned int _33;
  long unsigned int _35;
  __int128 unsigned _39;
  long unsigned int _40;
  __int128 unsigned _41;
  long unsigned int _42;
  __int128 unsigned _43;
  long unsigned int _45;
  long unsigned int _47;
  __int128 unsigned _48;
  long unsigned int _49;
  __int128 unsigned _50;
  __int128 unsigned _51;
  long unsigned int _53;
  long unsigned int _55;
  __int128 unsigned _56;
  long unsigned int _57;
  __int128 unsigned _58;
  __int128 unsigned _59;
  long unsigned int _61;
  long unsigned int _63;
  __int128 unsigned _64;
  long unsigned int _65;
  __int128 unsigned _66;
  __int128 unsigned _67;
  long unsigned int _69;
  _Bool _71;
  _Bool _72;
  _Bool _73;
  _Bool _75;
  int _76;
  int _77;
  int _78;
  _Bool _79;
  _Bool _80;
  _Bool _82;
  int _84;
  _Bool _86;
  _Bool _87;
  unsigned int _91;
  unsigned int _92;
  unsigned int _93;
  long unsigned int _96;
  long unsigned int _97;
  __int128 unsigned _98;
  long unsigned int _100;
  long unsigned int _103;
  __int128 unsigned _104;
  __int128 unsigned _105;
  long unsigned int _107;
  __int128 unsigned _110;
  __int128 unsigned _111;
  long unsigned int _113;
  long unsigned int _117;
  __int128 unsigned _123;
  __int128 unsigned _124;
  int _125;

  <bb 2> [local count: 1073741825]:
  overflow = 0;
  if (seckey_15(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _24 = MEM[(void (*<T319>) (const char *, void *) *)ctx_16(D) + 176B];
  _25 = MEM[(const void * *)ctx_16(D) + 184B];
  _24 ("seckey != NULL", _25);
  goto <bb 10>; [100.00%]

  <bb 4> [local count: 966367642]:
  if (tweak_17(D) == 0B)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 96636764]:
  _26 = MEM[(void (*<T319>) (const char *, void *) *)ctx_16(D) + 176B];
  _27 = MEM[(const void * *)ctx_16(D) + 184B];
  _26 ("tweak != NULL", _27);
  goto <bb 10>; [100.00%]

  <bb 6> [local count: 869730878]:
  secp256k1_scalar_set_b32 (&term, tweak_17(D), &overflow);
  secp256k1_scalar_set_b32 (&sec, seckey_15(D), 0B);
  overflow.168_7 = overflow;
  if (overflow.168_7 == 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 7> [local count: 680303493]:
  __builtin_memset (seckey_15(D), 0, 32);
  goto <bb 10>; [100.00%]

  <bb 8> [local count: 287011189]:
  _40 = sec.d[0];
  _41 = (__int128 unsigned) _40;
  _42 = term.d[0];
  _43 = (__int128 unsigned) _42;
  t_44 = _41 + _43;
  _45 = _40 + _42;
  t_46 = t_44 >> 64;
  _47 = sec.d[1];
  _48 = (__int128 unsigned) _47;
  _49 = term.d[1];
  _50 = (__int128 unsigned) _49;
  _51 = _48 + _50;
  t_52 = t_46 + _51;
  _53 = (long unsigned int) t_52;
  t_54 = t_52 >> 64;
  _55 = sec.d[2];
  _56 = (__int128 unsigned) _55;
  _57 = term.d[2];
  _58 = (__int128 unsigned) _57;
  _59 = _56 + _58;
  t_60 = t_54 + _59;
  _61 = (long unsigned int) t_60;
  t_62 = t_60 >> 64;
  _63 = sec.d[3];
  _64 = (__int128 unsigned) _63;
  _65 = term.d[3];
  _66 = (__int128 unsigned) _65;
  _67 = _64 + _66;
  t_68 = t_62 + _67;
  _69 = (long unsigned int) t_68;
  t_70 = t_68 >> 64;
  _71 = _69 != 18446744073709551615;
  _72 = _61 <= 18446744073709551613;
  _73 = _71 | _72;
  no_74 = (int) _73;
  _75 = _61 == 18446744073709551615;
  _76 = (int) _75;
  _77 = ~no_74;
  _78 = _76 & _77;
  _79 = _53 <= 13451932020343611450;
  _80 = _73 | _79;
  no_81 = (int) _80;
  _82 = _53 > 13451932020343611451;
  _84 = ~no_81;
  _87 = _45 > 13822214165235122496;
  _86 = _82 | _87;
  _125 = (int) _86;
  _29 = _84 & _125;
  yes_90 = _29 | _78;
  _91 = (unsigned int) yes_90;
  _92 = (unsigned int) t_70;
  _93 = _91 + _92;
  _1 = (__int128 unsigned) _45;
  _96 = (long unsigned int) _93;
  _97 = _96 * 4624529908474429119;
  _98 = (__int128 unsigned) _97;
  t_99 = _1 + _98;
  _100 = _45 + _97;
  sec.d[0] = _100;
  t_101 = t_99 >> 64;
  _39 = t_52 & 18446744073709551615;
  _103 = _96 * 4994812053365940164;
  _104 = (__int128 unsigned) _103;
  _105 = _39 + _104;
  t_106 = t_101 + _105;
  _107 = (long unsigned int) t_106;
  sec.d[1] = _107;
  t_108 = t_106 >> 64;
  _123 = t_60 & 18446744073709551615;
  _110 = (__int128 unsigned) _93;
  _111 = _110 + _123;
  t_112 = t_108 + _111;
  _113 = (long unsigned int) t_112;
  sec.d[2] = _113;
  t_114 = t_112 >> 64;
  _124 = t_68 & 18446744073709551615;
  t_116 = t_114 + _124;
  _117 = (long unsigned int) t_116;
  sec.d[3] = _117;
  _31 = _100 | _107;
  _33 = _31 | _113;
  _35 = _33 | _117;
  if (_35 == 0)
    goto <bb 7>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 9> [local count: 287011189]:
  __builtin_memset (seckey_15(D), 0, 32);
  secp256k1_scalar_get_b32 (seckey_15(D), &sec);

  <bb 10> [local count: 1073741823]:
  # _8 = PHI <0(3), 0(5), 1(9), 0(7)>
  term ={v} {CLOBBER};
  sec ={v} {CLOBBER};
  overflow ={v} {CLOBBER};
  return _8;

}



;; Function secp256k1_ec_pubkey_tweak_add (secp256k1_ec_pubkey_tweak_add, funcdef_no=237, decl_uid=1612, cgraph_uid=237, symbol_order=246)

__attribute__((visibility ("default")))
secp256k1_ec_pubkey_tweak_add (const struct secp256k1_context * ctx, struct secp256k1_pubkey * pubkey, const unsigned char * tweak)
{
  struct secp256k1_ge_storage s;
  struct secp256k1_fe z3;
  struct secp256k1_fe z2;
  struct secp256k1_gej pt;
  struct secp256k1_scalar one;
  int overflow;
  struct secp256k1_scalar term;
  struct secp256k1_ge p;
  int overflow.170_10;
  int _11;
  const struct secp256k1_ecmult_context * _12;
  int _14;
  void (*<T319>) (const char *, void *) _31;
  const void * _32;
  void (*<T319>) (const char *, void *) _33;
  const void * _34;
  void (*<T319>) (const char *, void *) _35;
  const void * _36;
  struct secp256k1_ge_storage[<unknown>] * _37;
  int _42;
  int _43;

  <bb 2> [local count: 1073741825]:
  overflow = 0;
  _37 = MEM[(struct secp256k1_ge_storage[<unknown>] * *)ctx_20(D)];
  if (_37 == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _31 = MEM[(void (*<T319>) (const char *, void *) *)ctx_20(D) + 176B];
  _32 = MEM[(const void * *)ctx_20(D) + 184B];
  _31 ("secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx)", _32);
  goto <bb 14>; [100.00%]

  <bb 4> [local count: 966367642]:
  if (pubkey_22(D) == 0B)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 96636764]:
  _33 = MEM[(void (*<T319>) (const char *, void *) *)ctx_20(D) + 176B];
  _34 = MEM[(const void * *)ctx_20(D) + 184B];
  _33 ("pubkey != NULL", _34);
  goto <bb 14>; [100.00%]

  <bb 6> [local count: 869730878]:
  if (tweak_23(D) == 0B)
    goto <bb 7>; [10.00%]
  else
    goto <bb 8>; [90.00%]

  <bb 7> [local count: 86973088]:
  _35 = MEM[(void (*<T319>) (const char *, void *) *)ctx_20(D) + 176B];
  _36 = MEM[(const void * *)ctx_20(D) + 184B];
  _35 ("tweak != NULL", _36);
  goto <bb 14>; [100.00%]

  <bb 8> [local count: 782757789]:
  secp256k1_scalar_set_b32 (&term, tweak_23(D), &overflow);
  overflow.170_10 = overflow;
  if (overflow.170_10 == 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 9> [local count: 653602753]:
  __builtin_memset (pubkey_22(D), 0, 64);
  goto <bb 14>; [100.00%]

  <bb 10> [local count: 258310071]:
  _11 = secp256k1_pubkey_load (ctx_20(D), &p, pubkey_22(D));
  if (_11 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 11> [local count: 258310071]:
  __builtin_memset (pubkey_22(D), 0, 64);
  _12 = &ctx_20(D)->ecmult_ctx;
  _42 = p.infinity;
  pt.infinity = _42;
  pt.x = p.x;
  pt.y = p.y;
  MEM[(struct secp256k1_fe *)&pt + 80B].n[0] = 1;
  MEM[(struct secp256k1_fe *)&pt + 80B].n[4] = 0;
  MEM[(struct secp256k1_fe *)&pt + 80B].n[3] = 0;
  MEM[(struct secp256k1_fe *)&pt + 80B].n[2] = 0;
  MEM[(struct secp256k1_fe *)&pt + 80B].n[1] = 0;
  one.d[0] = 1;
  one.d[1] = 0;
  one.d[2] = 0;
  one.d[3] = 0;
  secp256k1_ecmult (_12, &pt, &pt, &one, &term);
  _43 = MEM[(int *)&pt + 120B];
  if (_43 != 0)
    goto <bb 13>; [51.12%]
  else
    goto <bb 12>; [48.88%]

  <bb 12> [local count: 126261962]:
  p.infinity = 0;
  secp256k1_fe_inv (&pt.z, &pt.z);
  secp256k1_fe_sqr_inner (&z2.n, &MEM[(const struct secp256k1_fe *)&pt + 80B].n);
  secp256k1_fe_mul_inner (&z3.n, &MEM[(const struct secp256k1_fe *)&pt + 80B].n, &z2.n);
  secp256k1_fe_mul_inner (&MEM[(const struct secp256k1_fe *)&pt].n, &MEM[(const struct secp256k1_fe *)&pt].n, &z2.n);
  secp256k1_fe_mul_inner (&MEM[(const struct secp256k1_fe *)&pt + 40B].n, &MEM[(const struct secp256k1_fe *)&pt + 40B].n, &z3.n);
  p.x = pt.x;
  p.y = pt.y;
  z2 ={v} {CLOBBER};
  z3 ={v} {CLOBBER};
  pt ={v} {CLOBBER};
  one ={v} {CLOBBER};
  secp256k1_ge_to_storage (&s, &p);
  MEM[(char * {ref-all})pubkey_22(D)] = MEM[(char * {ref-all})&s];
  s ={v} {CLOBBER};
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 132048109]:
  pt ={v} {CLOBBER};
  one ={v} {CLOBBER};

  <bb 14> [local count: 1073741824]:
  # _14 = PHI <0(3), 0(5), 0(7), 1(12), 0(9), overflow.170_10(13)>
  p ={v} {CLOBBER};
  term ={v} {CLOBBER};
  overflow ={v} {CLOBBER};
  return _14;

}



;; Function secp256k1_ec_privkey_tweak_mul (secp256k1_ec_privkey_tweak_mul, funcdef_no=238, decl_uid=1616, cgraph_uid=238, symbol_order=247)

__attribute__((visibility ("default")))
secp256k1_ec_privkey_tweak_mul (const struct secp256k1_context * ctx, unsigned char * seckey, const unsigned char * tweak)
{
  uint64_t l[8];
  int overflow;
  struct secp256k1_scalar sec;
  struct secp256k1_scalar factor;
  int overflow.172_7;
  int _9;
  void (*<T319>) (const char *, void *) _26;
  const void * _27;
  void (*<T319>) (const char *, void *) _28;
  const void * _29;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;

  <bb 2> [local count: 1073741825]:
  overflow = 0;
  if (seckey_16(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _26 = MEM[(void (*<T319>) (const char *, void *) *)ctx_17(D) + 176B];
  _27 = MEM[(const void * *)ctx_17(D) + 184B];
  _26 ("seckey != NULL", _27);
  goto <bb 10>; [100.00%]

  <bb 4> [local count: 966367642]:
  if (tweak_18(D) == 0B)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 96636764]:
  _28 = MEM[(void (*<T319>) (const char *, void *) *)ctx_17(D) + 176B];
  _29 = MEM[(const void * *)ctx_17(D) + 184B];
  _28 ("tweak != NULL", _29);
  goto <bb 10>; [100.00%]

  <bb 6> [local count: 869730878]:
  secp256k1_scalar_set_b32 (&factor, tweak_18(D), &overflow);
  secp256k1_scalar_set_b32 (&sec, seckey_16(D), 0B);
  overflow.172_7 = overflow;
  if (overflow.172_7 == 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 7> [local count: 729439811]:
  __builtin_memset (seckey_16(D), 0, 32);
  goto <bb 10>; [100.00%]

  <bb 8> [local count: 287011189]:
  _34 = factor.d[0];
  _35 = factor.d[1];
  _36 = _34 | _35;
  _37 = factor.d[2];
  _38 = _36 | _37;
  _39 = factor.d[3];
  _40 = _38 | _39;
  if (_40 == 0)
    goto <bb 7>; [51.12%]
  else
    goto <bb 9>; [48.88%]

  <bb 9> [local count: 287011189]:
  secp256k1_scalar_mul_512 (&l, &sec, &factor);
  secp256k1_scalar_reduce_512 (&sec, &l);
  l ={v} {CLOBBER};
  __builtin_memset (seckey_16(D), 0, 32);
  secp256k1_scalar_get_b32 (seckey_16(D), &sec);

  <bb 10> [local count: 1073741823]:
  # _9 = PHI <0(3), 0(5), 1(9), 0(7)>
  factor ={v} {CLOBBER};
  sec ={v} {CLOBBER};
  overflow ={v} {CLOBBER};
  return _9;

}



;; Function secp256k1_ec_pubkey_tweak_mul (secp256k1_ec_pubkey_tweak_mul, funcdef_no=239, decl_uid=1620, cgraph_uid=239, symbol_order=248)

__attribute__((visibility ("default")))
secp256k1_ec_pubkey_tweak_mul (const struct secp256k1_context * ctx, struct secp256k1_pubkey * pubkey, const unsigned char * tweak)
{
  struct secp256k1_ge_storage s;
  struct secp256k1_fe z3;
  struct secp256k1_fe z2;
  struct secp256k1_scalar zero;
  struct secp256k1_gej pt;
  int overflow;
  struct secp256k1_scalar factor;
  struct secp256k1_ge p;
  int overflow.174_10;
  int _11;
  const struct secp256k1_ecmult_context * _12;
  int _14;
  void (*<T319>) (const char *, void *) _31;
  const void * _32;
  void (*<T319>) (const char *, void *) _33;
  const void * _34;
  void (*<T319>) (const char *, void *) _35;
  const void * _36;
  struct secp256k1_ge_storage[<unknown>] * _37;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  long unsigned int _47;
  long unsigned int _48;
  int _49;
  int _51;

  <bb 2> [local count: 1073741825]:
  overflow = 0;
  _37 = MEM[(struct secp256k1_ge_storage[<unknown>] * *)ctx_20(D)];
  if (_37 == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _31 = MEM[(void (*<T319>) (const char *, void *) *)ctx_20(D) + 176B];
  _32 = MEM[(const void * *)ctx_20(D) + 184B];
  _31 ("secp256k1_ecmult_context_is_built(&ctx->ecmult_ctx)", _32);
  goto <bb 14>; [100.00%]

  <bb 4> [local count: 966367642]:
  if (pubkey_22(D) == 0B)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 96636764]:
  _33 = MEM[(void (*<T319>) (const char *, void *) *)ctx_20(D) + 176B];
  _34 = MEM[(const void * *)ctx_20(D) + 184B];
  _33 ("pubkey != NULL", _34);
  goto <bb 14>; [100.00%]

  <bb 6> [local count: 869730878]:
  if (tweak_23(D) == 0B)
    goto <bb 7>; [10.00%]
  else
    goto <bb 8>; [90.00%]

  <bb 7> [local count: 86973088]:
  _35 = MEM[(void (*<T319>) (const char *, void *) *)ctx_20(D) + 176B];
  _36 = MEM[(const void * *)ctx_20(D) + 184B];
  _35 ("tweak != NULL", _36);
  goto <bb 14>; [100.00%]

  <bb 8> [local count: 782757789]:
  secp256k1_scalar_set_b32 (&factor, tweak_23(D), &overflow);
  overflow.174_10 = overflow;
  if (overflow.174_10 == 0)
    goto <bb 10>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 9> [local count: 653602753]:
  __builtin_memset (pubkey_22(D), 0, 64);
  goto <bb 14>; [100.00%]

  <bb 10> [local count: 258310071]:
  _11 = secp256k1_pubkey_load (ctx_20(D), &p, pubkey_22(D));
  if (_11 != 0)
    goto <bb 11>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 11> [local count: 258310071]:
  __builtin_memset (pubkey_22(D), 0, 64);
  _42 = factor.d[0];
  _43 = factor.d[1];
  _44 = _42 | _43;
  _45 = factor.d[2];
  _46 = _44 | _45;
  _47 = factor.d[3];
  _48 = _46 | _47;
  if (_48 == 0)
    goto <bb 13>; [51.12%]
  else
    goto <bb 12>; [48.88%]

  <bb 12> [local count: 126261962]:
  MEM[(long unsigned int *)&zero] = { 0, 0 };
  MEM[(long unsigned int *)&zero + 16B] = { 0, 0 };
  _49 = p.infinity;
  pt.infinity = _49;
  pt.x = p.x;
  pt.y = p.y;
  MEM[(struct secp256k1_fe *)&pt + 80B].n[0] = 1;
  MEM[(struct secp256k1_fe *)&pt + 80B].n[4] = 0;
  MEM[(struct secp256k1_fe *)&pt + 80B].n[3] = 0;
  MEM[(struct secp256k1_fe *)&pt + 80B].n[2] = 0;
  MEM[(struct secp256k1_fe *)&pt + 80B].n[1] = 0;
  _12 = &ctx_20(D)->ecmult_ctx;
  secp256k1_ecmult (_12, &pt, &pt, &factor, &zero);
  _51 = pt.infinity;
  p.infinity = _51;
  secp256k1_fe_inv (&pt.z, &pt.z);
  secp256k1_fe_sqr_inner (&z2.n, &MEM[(const struct secp256k1_fe *)&pt + 80B].n);
  secp256k1_fe_mul_inner (&z3.n, &MEM[(const struct secp256k1_fe *)&pt + 80B].n, &z2.n);
  secp256k1_fe_mul_inner (&MEM[(const struct secp256k1_fe *)&pt].n, &MEM[(const struct secp256k1_fe *)&pt].n, &z2.n);
  secp256k1_fe_mul_inner (&MEM[(const struct secp256k1_fe *)&pt + 40B].n, &MEM[(const struct secp256k1_fe *)&pt + 40B].n, &z3.n);
  p.x = pt.x;
  p.y = pt.y;
  z2 ={v} {CLOBBER};
  z3 ={v} {CLOBBER};
  zero ={v} {CLOBBER};
  pt ={v} {CLOBBER};
  secp256k1_ge_to_storage (&s, &p);
  MEM[(char * {ref-all})pubkey_22(D)] = MEM[(char * {ref-all})&s];
  s ={v} {CLOBBER};
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 132048109]:
  zero ={v} {CLOBBER};
  pt ={v} {CLOBBER};

  <bb 14> [local count: 1073741824]:
  # _14 = PHI <0(3), 0(5), 0(7), 1(12), 0(9), overflow.174_10(13)>
  p ={v} {CLOBBER};
  factor ={v} {CLOBBER};
  overflow ={v} {CLOBBER};
  return _14;

}



;; Function secp256k1_context_randomize (secp256k1_context_randomize, funcdef_no=240, decl_uid=1623, cgraph_uid=240, symbol_order=249)

__attribute__((visibility ("default")))
secp256k1_context_randomize (struct secp256k1_context * ctx, const unsigned char * seed32)
{
  struct secp256k1_ecmult_gen_context * _4;
  int _5;
  void (*<T319>) (const char *, void *) _11;
  const void * _12;
  struct secp256k1_ge_storage[64][16] * _13;

  <bb 2> [local count: 1073741825]:
  _13 = MEM[(struct secp256k1_ge_storage[64][16] * *)ctx_7(D) + 8B];
  if (_13 == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 107374182]:
  _11 = MEM[(void (*<T319>) (const char *, void *) *)ctx_7(D) + 176B];
  _12 = MEM[(const void * *)ctx_7(D) + 184B];
  _11 ("secp256k1_ecmult_gen_context_is_built(&ctx->ecmult_gen_ctx)", _12);
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 966367642]:
  _4 = &ctx_7(D)->ecmult_gen_ctx;
  secp256k1_ecmult_gen_blind (_4, seed32_9(D));

  <bb 5> [local count: 1073741825]:
  # _5 = PHI <0(3), 1(4)>
  return _5;

}



;; Function secp256k1_ec_pubkey_combine (secp256k1_ec_pubkey_combine, funcdef_no=241, decl_uid=1628, cgraph_uid=241, symbol_order=250)

__attribute__((visibility ("default")))
secp256k1_ec_pubkey_combine (const struct secp256k1_context * ctx, struct secp256k1_pubkey * pubnonce, const struct secp256k1_pubkey * const * pubnonces, size_t n)
{
  unsigned long ivtmp.979;
  const long unsigned int s$32$n$3;
  const long unsigned int s$32$n$2;
  const long unsigned int s$32$n$1;
  const long unsigned int s$32$n$0;
  const long unsigned int s$n$3;
  const long unsigned int s$n$2;
  const long unsigned int s$n$1;
  const long unsigned int s$n$0;
  struct secp256k1_ge_storage s;
  struct secp256k1_ge_storage s;
  struct secp256k1_ge Q;
  struct secp256k1_gej Qj;
  long unsigned int _4;
  long unsigned int _6;
  const struct secp256k1_pubkey * _12;
  int _14;
  void (*<T319>) (const char *, void *) _31;
  const void * _32;
  void (*<T319>) (const char *, void *) _33;
  const void * _34;
  void (*<T319>) (const char *, void *) _35;
  const void * _36;
  int _37;
  void * _50;
  long unsigned int _59;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int _69;
  long long unsigned int _70;
  long long unsigned int _71;
  long unsigned int _72;
  long unsigned int _74;
  long long unsigned int _75;
  long long unsigned int _76;
  long unsigned int _77;
  long unsigned int _79;
  long long unsigned int _80;
  long long unsigned int _81;
  long unsigned int _82;
  long unsigned int _84;
  long unsigned int _85;
  long unsigned int _87;
  long long unsigned int _88;
  long long unsigned int _89;
  long unsigned int _90;
  long unsigned int _92;
  long long unsigned int _93;
  long long unsigned int _94;
  long unsigned int _95;
  long unsigned int _97;
  long long unsigned int _98;
  long long unsigned int _99;
  long unsigned int _100;
  void (*<T319>) (const char *, void *) _101;
  const void * _102;
  long unsigned int _126;
  unsigned long _154;
  unsigned long _162;

  <bb 2> [local count: 162018657]:
  if (pubnonce_17(D) == 0B)
    goto <bb 3>; [10.00%]
  else
    goto <bb 4>; [90.00%]

  <bb 3> [local count: 16201866]:
  _31 = MEM[(void (*<T319>) (const char *, void *) *)ctx_18(D) + 176B];
  _32 = MEM[(const void * *)ctx_18(D) + 184B];
  _31 ("pubnonce != NULL", _32);
  goto <bb 15>; [100.00%]

  <bb 4> [local count: 145816791]:
  __builtin_memset (pubnonce_17(D), 0, 64);
  if (n_20(D) == 0)
    goto <bb 5>; [10.00%]
  else
    goto <bb 6>; [90.00%]

  <bb 5> [local count: 14581679]:
  _33 = MEM[(void (*<T319>) (const char *, void *) *)ctx_18(D) + 176B];
  _34 = MEM[(const void * *)ctx_18(D) + 184B];
  _33 ("n >= 1", _34);
  goto <bb 15>; [100.00%]

  <bb 6> [local count: 131235112]:
  if (pubnonces_21(D) == 0B)
    goto <bb 7>; [10.00%]
  else
    goto <bb 8>; [90.00%]

  <bb 7> [local count: 13123511]:
  _35 = MEM[(void (*<T319>) (const char *, void *) *)ctx_18(D) + 176B];
  _36 = MEM[(const void * *)ctx_18(D) + 184B];
  _35 ("pubnonces != NULL", _36);
  goto <bb 15>; [100.00%]

  <bb 8> [local count: 118111601]:
  Qj.infinity = 1;
  MEM[(long unsigned int *)&Qj] = { 0, 0 };
  MEM[(long unsigned int *)&Qj + 16B] = { 0, 0 };
  MEM[(long unsigned int *)&Qj + 32B] = { 0, 0 };
  MEM[(long unsigned int *)&Qj + 48B] = { 0, 0 };
  MEM[(long unsigned int *)&Qj + 64B] = { 0, 0 };
  MEM[(long unsigned int *)&Qj + 80B] = { 0, 0 };
  MEM[(long unsigned int *)&Qj + 96B] = { 0, 0 };
  MEM[(struct secp256k1_fe *)&Qj + 80B].n[4] = 0;
  ivtmp.979_28 = (unsigned long) pubnonces_21(D);
  _162 = n_20(D) * 8;
  _154 = ivtmp.979_28 + _162;
  goto <bb 10>; [100.00%]

  <bb 9> [local count: 850510883]:
  # ivtmp.979_146 = PHI <ivtmp.979_25(11), ivtmp.979_134(12)>

  <bb 10> [local count: 955630205]:
  # ivtmp.979_138 = PHI <ivtmp.979_146(9), ivtmp.979_28(8)>
  _50 = (void *) ivtmp.979_138;
  _12 = MEM[base: _50, offset: 0B];
  MEM[(char * {ref-all})&s] = MEM[(char * {ref-all})_12];
  s$n$0_15 = MEM[(char * {ref-all})&s];
  s$n$1_13 = MEM[(char * {ref-all})&s + 8B];
  s$n$2_1 = MEM[(char * {ref-all})&s + 16B];
  s$n$3_64 = MEM[(char * {ref-all})&s + 24B];
  s$32$n$0_5 = MEM[(char * {ref-all})&s + 32B];
  s$32$n$1_7 = MEM[(char * {ref-all})&s + 40B];
  s$32$n$2_8 = MEM[(char * {ref-all})&s + 48B];
  s$32$n$3_60 = MEM[(char * {ref-all})&s + 56B];
  _84 = s$n$0_15 & 4503599627370495;
  MEM[(struct secp256k1_fe *)&Q].n[0] = _84;
  _85 = s$n$0_15 >> 52;
  _87 = s$n$1_13 << 12;
  _88 = _87 & 4503599627370495;
  _89 = _85 | _88;
  MEM[(struct secp256k1_fe *)&Q].n[1] = _89;
  _90 = s$n$1_13 >> 40;
  _92 = s$n$2_1 << 24;
  _93 = _92 & 4503599627370495;
  _94 = _90 | _93;
  MEM[(struct secp256k1_fe *)&Q].n[2] = _94;
  _95 = s$n$2_1 >> 28;
  _97 = s$n$3_64 << 36;
  _98 = _97 & 4503599627370495;
  _99 = _95 | _98;
  MEM[(struct secp256k1_fe *)&Q].n[3] = _99;
  _100 = s$n$3_64 >> 16;
  MEM[(struct secp256k1_fe *)&Q].n[4] = _100;
  _66 = s$32$n$0_5 & 4503599627370495;
  MEM[(struct secp256k1_fe *)&Q + 40B].n[0] = _66;
  _67 = s$32$n$0_5 >> 52;
  _69 = s$32$n$1_7 << 12;
  _70 = _69 & 4503599627370495;
  _71 = _67 | _70;
  MEM[(struct secp256k1_fe *)&Q + 40B].n[1] = _71;
  _72 = s$32$n$1_7 >> 40;
  _74 = s$32$n$2_8 << 24;
  _75 = _74 & 4503599627370495;
  _76 = _72 | _75;
  MEM[(struct secp256k1_fe *)&Q + 40B].n[2] = _76;
  _77 = s$32$n$2_8 >> 28;
  _79 = s$32$n$3_60 << 36;
  _80 = _79 & 4503599627370495;
  _81 = _77 | _80;
  MEM[(struct secp256k1_fe *)&Q + 40B].n[3] = _81;
  _82 = s$32$n$3_60 >> 16;
  MEM[(struct secp256k1_fe *)&Q + 40B].n[4] = _82;
  Q.infinity = 0;
  _4 = _84 | _100;
  _126 = _4 | _89;
  _6 = _94 | _126;
  _59 = _6 | _99;
  if (_59 == 0)
    goto <bb 11>; [10.00%]
  else
    goto <bb 12>; [90.00%]

  <bb 11> [local count: 95563020]:
  _101 = MEM[(void (*<T319>) (const char *, void *) *)ctx_18(D) + 176B];
  _102 = MEM[(const void * *)ctx_18(D) + 184B];
  _101 ("!secp256k1_fe_is_zero(&ge->x)", _102);
  secp256k1_gej_add_ge (&Qj, &Qj, &Q);
  ivtmp.979_25 = ivtmp.979_138 + 8;
  if (ivtmp.979_25 != _154)
    goto <bb 9>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 12> [local count: 860067185]:
  secp256k1_gej_add_ge (&Qj, &Qj, &Q);
  ivtmp.979_134 = ivtmp.979_138 + 8;
  if (ivtmp.979_134 != _154)
    goto <bb 9>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 13> [local count: 118111599]:
  _37 = MEM[(int *)&Qj + 120B];
  if (_37 != 0)
    goto <bb 15>; [51.12%]
  else
    goto <bb 14>; [48.88%]

  <bb 14> [local count: 57732949]:
  secp256k1_ge_set_gej (&Q, &Qj);
  secp256k1_ge_to_storage (&s, &Q);
  MEM[(char * {ref-all})pubnonce_17(D)] = MEM[(char * {ref-all})&s];
  s ={v} {CLOBBER};

  <bb 15> [local count: 162018654]:
  # _14 = PHI <0(3), 0(5), 0(7), 1(14), 0(13)>
  Qj ={v} {CLOBBER};
  Q ={v} {CLOBBER};
  return _14;

}


