
;; Function felem_one (felem_one, funcdef_no=405, decl_uid=10400, cgraph_uid=405, symbol_order=407)

felem_one (limb * out)
{
  <bb 2> [local count: 1073741825]:
  MEM[(limb *)out_2(D)] = { 1, 0 };
  MEM[(limb *)out_2(D) + 16B] = { 0, 0 };
  return;

}



;; Function felem_assign (felem_assign, funcdef_no=406, decl_uid=10404, cgraph_uid=406, symbol_order=408)

felem_assign (limb * out, const limb * in)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741825]:
  _1 = *in_6(D);
  *out_7(D) = _1;
  _2 = MEM[(const limb *)in_6(D) + 8B];
  MEM[(limb *)out_7(D) + 8B] = _2;
  _3 = MEM[(const limb *)in_6(D) + 16B];
  MEM[(limb *)out_7(D) + 16B] = _3;
  _4 = MEM[(const limb *)in_6(D) + 24B];
  MEM[(limb *)out_7(D) + 24B] = _4;
  return;

}



;; Function felem_contract (felem_contract, funcdef_no=418, decl_uid=10472, cgraph_uid=418, symbol_order=420)

felem_contract (limb * out, const limb * in)
{
  int64_t a;
  long unsigned int _1;
  long int _2;
  long unsigned int _3;
  long int _4;
  long unsigned int _5;
  long unsigned int _6;
  long int _7;
  long unsigned int _8;
  long int _9;
  long int _10;
  long int _11;
  long int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long int _19;
  long int _20;
  long int _21;
  long unsigned int _22;
  long unsigned int _23;
  long int _24;
  long unsigned int _25;
  long unsigned int a.1_26;
  long unsigned int _27;
  long unsigned int _28;
  long int _29;
  long unsigned int _30;
  long int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;

  <bb 2> [local count: 1073741825]:
  _1 = *in_53(D);
  _2 = (long int) _1;
  _3 = MEM[(const limb *)in_53(D) + 8B];
  _4 = (long int) _3;
  _5 = MEM[(const limb *)in_53(D) + 16B];
  _6 = MEM[(const limb *)in_53(D) + 24B];
  _7 = (long int) _6;
  _8 = _6 >> 56;
  a_54 = (int64_t) _8;
  _9 = _2 - a_54;
  _10 = a_54 << 40;
  _11 = _4 + _10;
  _12 = _7 & 72057594037927935;
  _13 = _5 & _6;
  _14 = _3 | 1099511627775;
  _15 = _13 & _14;
  _16 = _15 + 1;
  _17 = _3 & 1099511627775;
  _18 = _1 + _17;
  _19 = (long int) _18;
  _20 = _19 + -1;
  _21 = _20 >> 63;
  _22 = (long unsigned int) _21;
  _23 = _16 | _22;
  a_55 = (int64_t) _23;
  a_56 = a_55 & 72057594037927935;
  _24 = a_56 + -1;
  a_57 = _24 >> 63;
  _25 = (long unsigned int) _12;
  a.1_26 = (long unsigned int) a_57;
  _27 = ~a.1_26;
  _28 = _25 & _27;
  _29 = (long int) _28;
  _30 = _5 & _27;
  _31 = (long int) _30;
  _32 = (long unsigned int) _11;
  _33 = _27 | 1099511627775;
  _34 = _32 & _33;
  _35 = (long int) _34;
  _36 = a_57 & 1;
  _37 = _9 - _36;
  a_58 = _37 >> 63;
  _38 = a_58 & 72057594037927936;
  _39 = _37 + _38;
  _40 = a_58 & 1;
  _41 = _35 - _40;
  _42 = _41 >> 56;
  _43 = _31 + _42;
  _44 = _41 & 72057594037927935;
  _45 = _43 >> 56;
  _46 = _29 + _45;
  _47 = _43 & 72057594037927935;
  _48 = (long unsigned int) _39;
  *out_59(D) = _48;
  _49 = (long unsigned int) _44;
  MEM[(limb *)out_59(D) + 8B] = _49;
  _50 = (long unsigned int) _47;
  MEM[(limb *)out_59(D) + 16B] = _50;
  _51 = (long unsigned int) _46;
  MEM[(limb *)out_59(D) + 24B] = _51;
  return;

}



;; Function ec_GFp_nistp224_have_precompute_mult (ec_GFp_nistp224_have_precompute_mult, funcdef_no=438, decl_uid=10075, cgraph_uid=438, symbol_order=440)

ec_GFp_nistp224_have_precompute_mult (const struct EC_GROUP * group)
{
  <unnamed type> _1;
  struct NISTP224_PRE_COMP * _2;
  int iftmp.12_3;
  _Bool _6;
  int _7;

  <bb 2> [local count: 1073741825]:
  _1 = group_5(D)->pre_comp_type;
  if (_1 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  _2 = group_5(D)->pre_comp.nistp224;
  _6 = _2 != 0B;
  _7 = (int) _6;

  <bb 4> [local count: 1073741825]:
  # iftmp.12_3 = PHI <_7(3), 0(2)>
  return iftmp.12_3;

}



;; Function ec_GFp_nistp224_group_init (ec_GFp_nistp224_group_init, funcdef_no=432, decl_uid=10042, cgraph_uid=432, symbol_order=434)

ec_GFp_nistp224_group_init (struct EC_GROUP * group)
{
  int ret;

  <bb 2> [local count: 1073741825]:
  ret_4 = ec_GFp_simple_group_init (group_2(D));
  group_2(D)->a_is_minus3 = 1;
  return ret_4;

}



;; Function felem_to_BN (felem_to_BN, funcdef_no=404, decl_uid=10395, cgraph_uid=404, symbol_order=406)

felem_to_BN (struct BIGNUM * out, const limb * in)
{
  unsigned long ivtmp.32;
  unsigned long ivtmp.30;
  u8 b_out[28];
  u8 b_in[28];
  unsigned int _3;
  struct BIGNUM * _6;
  unsigned char _15;
  long unsigned int _19;
  long unsigned int _22;
  unsigned char _25;
  long unsigned int _26;
  long unsigned int _27;
  unsigned char _31;
  long unsigned int _32;
  long unsigned int _33;
  unsigned char _37;
  long unsigned int _38;
  long unsigned int _39;
  unsigned char _43;
  unsigned int _51;
  unsigned int _61;
  unsigned int _82;
  unsigned long _142;
  void * _169;
  void * _170;
  long unsigned int _173;
  unsigned char _176;
  long unsigned int _178;
  unsigned char _182;
  long unsigned int _184;
  unsigned char _188;
  long unsigned int _190;
  unsigned char _194;
  long unsigned int _202;
  unsigned char _205;
  long unsigned int _207;
  unsigned char _211;
  long unsigned int _213;
  unsigned char _217;
  long unsigned int _219;
  unsigned char _223;

  <bb 2> [local count: 118111601]:
  _82 = MEM[(const limb *)in_2(D)];
  _19 = *in_2(D);
  _61 = MEM[(const limb *)in_2(D) + 8B];
  _26 = MEM[(const limb *)in_2(D) + 8B];
  _51 = MEM[(const limb *)in_2(D) + 16B];
  _32 = MEM[(const limb *)in_2(D) + 16B];
  _3 = MEM[(const limb *)in_2(D) + 24B];
  _38 = MEM[(const limb *)in_2(D) + 24B];
  MEM[(u8 *)&b_in] = _82;
  MEM[(u8 *)&b_in + 7B] = _61;
  MEM[(u8 *)&b_in + 14B] = _51;
  MEM[(u8 *)&b_in + 21B] = _3;
  _173 = _19 >> 32;
  _176 = (unsigned char) _173;
  MEM[(u8 *)&b_in + 4B] = _176;
  _178 = _26 >> 32;
  _182 = (unsigned char) _178;
  MEM[(u8 *)&b_in + 11B] = _182;
  _184 = _32 >> 32;
  _188 = (unsigned char) _184;
  MEM[(u8 *)&b_in + 18B] = _188;
  _190 = _38 >> 32;
  _194 = (unsigned char) _190;
  MEM[(u8 *)&b_in + 25B] = _194;
  _202 = _19 >> 40;
  _205 = (unsigned char) _202;
  MEM[(u8 *)&b_in + 5B] = _205;
  _207 = _26 >> 40;
  _211 = (unsigned char) _207;
  MEM[(u8 *)&b_in + 12B] = _211;
  _213 = _32 >> 40;
  _217 = (unsigned char) _213;
  MEM[(u8 *)&b_in + 19B] = _217;
  _219 = _38 >> 40;
  _223 = (unsigned char) _219;
  MEM[(u8 *)&b_in + 26B] = _223;
  _22 = _19 >> 48;
  _25 = (unsigned char) _22;
  MEM[(u8 *)&b_in + 6B] = _25;
  _27 = _26 >> 48;
  _31 = (unsigned char) _27;
  MEM[(u8 *)&b_in + 13B] = _31;
  _33 = _32 >> 48;
  _37 = (unsigned char) _33;
  MEM[(u8 *)&b_in + 20B] = _37;
  _39 = _38 >> 48;
  _43 = (unsigned char) _39;
  MEM[(u8 *)&b_in + 27B] = _43;
  ivtmp.30_58 = (unsigned long) &MEM[(void *)&b_in + 27B];
  ivtmp.32_171 = (unsigned long) &b_out;
  _142 = (unsigned long) &b_in;

  <bb 3> [local count: 955630224]:
  # ivtmp.30_86 = PHI <ivtmp.30_58(2), ivtmp.30_59(3)>
  # ivtmp.32_199 = PHI <ivtmp.32_171(2), ivtmp.32_198(3)>
  _170 = (void *) ivtmp.30_86;
  _15 = MEM[base: _170, offset: 0B];
  _169 = (void *) ivtmp.32_199;
  MEM[base: _169, offset: 0B] = _15;
  ivtmp.30_59 = ivtmp.30_86 + 18446744073709551615;
  ivtmp.32_198 = ivtmp.32_199 + 1;
  if (ivtmp.30_86 != _142)
    goto <bb 3>; [87.64%]
  else
    goto <bb 4>; [12.36%]

  <bb 4> [local count: 118111601]:
  _6 = BN_bin2bn (&b_out, 28, out_4(D));
  b_in ={v} {CLOBBER};
  b_out ={v} {CLOBBER};
  return _6;

}



;; Function ec_GFp_nistp224_group_set_curve (ec_GFp_nistp224_group_set_curve, funcdef_no=433, decl_uid=10048, cgraph_uid=433, symbol_order=435)

ec_GFp_nistp224_group_set_curve (struct EC_GROUP * group, const struct BIGNUM * p, const struct BIGNUM * a, const struct BIGNUM * b, struct BN_CTX * ctx)
{
  struct BIGNUM * curve_b;
  struct BIGNUM * curve_a;
  struct BIGNUM * curve_p;
  struct BN_CTX * new_ctx;
  int ret;
  int _1;
  int _2;
  int _3;
  int _7;

  <bb 2> [local count: 1073741825]:
  if (ctx_12(D) == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 322122547]:
  new_ctx_15 = BN_CTX_new ();
  if (new_ctx_15 == 0B)
    goto <bb 11>; [18.09%]
  else
    goto <bb 4>; [81.91%]

  <bb 4> [local count: 1015469856]:
  # ctx_4 = PHI <ctx_12(D)(2), new_ctx_15(3)>
  # new_ctx_6 = PHI <0B(2), new_ctx_15(3)>
  BN_CTX_start (ctx_4);
  curve_p_18 = BN_CTX_get (ctx_4);
  curve_a_20 = BN_CTX_get (ctx_4);
  curve_b_22 = BN_CTX_get (ctx_4);
  if (curve_b_22 == 0B)
    goto <bb 10>; [30.95%]
  else
    goto <bb 5>; [69.05%]

  <bb 5> [local count: 701181935]:
  BN_bin2bn (&nistp224_curve_params[0], 28, curve_p_18);
  BN_bin2bn (&nistp224_curve_params[1], 28, curve_a_20);
  BN_bin2bn (&nistp224_curve_params[2], 28, curve_b_22);
  _1 = BN_cmp (curve_p_18, p_26(D));
  if (_1 != 0)
    goto <bb 6>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 6> [local count: 590612006]:
  ERR_put_error (16, 225, 145, "ecp_nistp224.c", 1310);
  goto <bb 10>; [100.00%]

  <bb 7> [local count: 462780077]:
  _2 = BN_cmp (curve_a_20, a_28(D));
  if (_2 != 0)
    goto <bb 6>; [51.12%]
  else
    goto <bb 8>; [48.88%]

  <bb 8> [local count: 226206902]:
  _3 = BN_cmp (curve_b_22, b_30(D));
  if (_3 != 0)
    goto <bb 6>; [51.12%]
  else
    goto <bb 9>; [48.88%]

  <bb 9> [local count: 110569933]:
  group_32(D)->field_mod_func = BN_nist_mod_224;
  ret_35 = ec_GFp_simple_group_set_curve (group_32(D), p_26(D), a_28(D), b_30(D), ctx_4);

  <bb 10> [local count: 1015469855]:
  # ret_5 = PHI <ret_35(9), 0(6), 0(4)>
err:
  BN_CTX_end (ctx_4);
  BN_CTX_free (new_ctx_6);

  <bb 11> [local count: 1073741824]:
  # _7 = PHI <ret_5(10), 0(3)>
  return _7;

}



;; Function BN_to_felem (BN_to_felem, funcdef_no=403, decl_uid=10388, cgraph_uid=403, symbol_order=405)

BN_to_felem (limb * out, const struct BIGNUM * bn)
{
  unsigned long ivtmp.42;
  unsigned int ivtmp.40;
  unsigned int num_bytes;
  u8 b_out[28];
  u8 b_in[28];
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  sizetype _31;
  const u8 * _32;
  unsigned char _35;
  void * _45;
  unsigned int _56;
  vector(2) long unsigned int _61;
  vector(2) long unsigned int _63;
  long unsigned int pretmp_64;
  long unsigned int _66;
  long unsigned int prephitmp_67;
  long unsigned int pretmp_68;
  long unsigned int _70;
  long unsigned int prephitmp_71;
  long unsigned int pretmp_72;
  long unsigned int _74;
  long unsigned int prephitmp_75;
  long unsigned int pretmp_76;
  long unsigned int _78;
  long unsigned int prephitmp_79;

  <bb 2> [local count: 271146926]:
  __builtin_memset (&b_out, 0, 28);
  _1 = BN_num_bits (bn_9(D));
  _2 = _1 + 7;
  _3 = _2 / 8;
  num_bytes_11 = (unsigned int) _3;
  if (num_bytes_11 > 28)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 92189955]:
  ERR_put_error (16, 224, 144, "ecp_nistp224.c", 345);
  goto <bb 11>; [100.00%]

  <bb 4> [local count: 178956971]:
  _4 = BN_is_negative (bn_9(D));
  if (_4 != 0)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 60845370]:
  ERR_put_error (16, 224, 144, "ecp_nistp224.c", 349);
  goto <bb 11>; [100.00%]

  <bb 6> [local count: 118111601]:
  _5 = BN_bn2bin (bn_9(D), &b_in);
  num_bytes_16 = (unsigned int) _5;
  if (num_bytes_16 != 0)
    goto <bb 7>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 7> [local count: 105119325]:
  _56 = num_bytes_16 + 4294967295;
  ivtmp.42_46 = (unsigned long) &b_out;

  <bb 8> [local count: 955630223]:
  # ivtmp.40_43 = PHI <_56(7), ivtmp.40_42(8)>
  # ivtmp.42_50 = PHI <ivtmp.42_46(7), ivtmp.42_49(8)>
  _31 = (sizetype) ivtmp.40_43;
  _32 = &b_in + _31;
  _35 = *_32;
  _45 = (void *) ivtmp.42_50;
  MEM[base: _45, offset: 0B] = _35;
  ivtmp.40_42 = ivtmp.40_43 + 4294967295;
  ivtmp.42_49 = ivtmp.42_50 + 1;
  if (ivtmp.40_42 != 4294967295)
    goto <bb 8>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 105119324]:
  pretmp_64 = MEM[(const uint64_t *)&b_out];
  _66 = pretmp_64 & 72057594037927935;
  pretmp_68 = MEM[(const uint64_t *)&b_out + 7B];
  _70 = pretmp_68 & 72057594037927935;
  pretmp_72 = MEM[(const uint64_t *)&b_out + 14B];
  _74 = pretmp_72 & 72057594037927935;
  pretmp_76 = MEM[(const uint64_t *)&b_out + 20B];
  _78 = pretmp_76 >> 8;

  <bb 10> [local count: 118111601]:
  # prephitmp_67 = PHI <_66(9), 0(6)>
  # prephitmp_71 = PHI <_70(9), 0(6)>
  # prephitmp_75 = PHI <_74(9), 0(6)>
  # prephitmp_79 = PHI <_78(9), 0(6)>
  _63 = {prephitmp_75, prephitmp_79};
  _61 = {prephitmp_67, prephitmp_71};
  MEM[(limb *)out_17(D)] = _61;
  MEM[(limb *)out_17(D) + 16B] = _63;

  <bb 11> [local count: 271146926]:
  # _6 = PHI <0(3), 0(5), 1(10)>
  b_in ={v} {CLOBBER};
  b_out ={v} {CLOBBER};
  return _6;

}



;; Function felem_is_zero_int (felem_is_zero_int, funcdef_no=421, decl_uid=10489, cgraph_uid=421, symbol_order=423)

felem_is_zero_int (const void * in)
{
  limb zero;
  limb two224m96p1;
  limb two225m97p2;
  long unsigned int _1;
  int _2;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long int zero.4_13;
  long int _14;
  unsigned long _15;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long int two224m96p1.5_24;
  long int _25;
  unsigned long _26;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _31;
  long unsigned int _32;
  long int two225m97p2.6_34;
  long int _35;
  unsigned long _36;
  long unsigned int _39;
  long unsigned int _40;

  <bb 2> [local count: 1073741825]:
  _6 = MEM[(const limb *)in_4(D)];
  _7 = MEM[(const limb *)in_4(D) + 8B];
  _8 = _6 | _7;
  _9 = MEM[(const limb *)in_4(D) + 16B];
  _10 = _8 | _9;
  _11 = MEM[(const limb *)in_4(D) + 24B];
  zero_12 = _10 | _11;
  zero.4_13 = (long int) zero_12;
  _14 = zero.4_13 + -1;
  _15 = (unsigned long) _14;
  zero_16 = _15 >> 63;
  _17 = _6 ^ 1;
  _18 = _7 ^ 72056494526300160;
  _19 = _17 | _18;
  _20 = _9 ^ 72057594037927935;
  _21 = _19 | _20;
  _22 = _11 ^ 72057594037927935;
  two224m96p1_23 = _21 | _22;
  two224m96p1.5_24 = (long int) two224m96p1_23;
  _25 = two224m96p1.5_24 + -1;
  _26 = (unsigned long) _25;
  two224m96p1_27 = _26 >> 63;
  _28 = _6 ^ 2;
  _29 = _7 ^ 72055395014672384;
  _1 = _20 | _28;
  _31 = _1 | _29;
  _32 = _11 ^ 144115188075855871;
  two225m97p2_33 = _31 | _32;
  two225m97p2.6_34 = (long int) two225m97p2_33;
  _35 = two225m97p2.6_34 + -1;
  _36 = (unsigned long) _35;
  two225m97p2_37 = _36 >> 63;
  _40 = two224m96p1_27 | two225m97p2_37;
  _39 = zero_16 | _40;
  _2 = (int) _39;
  return _2;

}



;; Function felem_square_reduce (felem_square_reduce, funcdef_no=416, decl_uid=10461, cgraph_uid=416, symbol_order=418)

__attribute__((used))
felem_square_reduce (limb * out, const limb * in)
{
  limb tmp0;
  limb tmp1;
  limb tmp2;
  __int128 unsigned _8;
  __int128 unsigned _10;
  __int128 unsigned _12;
  __int128 unsigned _16;
  __int128 unsigned _17;
  __int128 unsigned _18;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _21;
  __int128 unsigned _23;
  __int128 unsigned _24;
  __int128 unsigned _25;
  __int128 unsigned _26;
  __int128 unsigned _27;
  __int128 unsigned _28;
  __int128 unsigned _29;
  __int128 unsigned _30;
  __int128 unsigned _31;
  __int128 unsigned _32;
  __int128 unsigned _33;
  __int128 unsigned _34;
  __int128 unsigned _35;
  __int128 unsigned _36;
  __int128 unsigned _37;
  __int128 unsigned _38;
  __int128 unsigned _39;
  __int128 unsigned _40;
  __int128 unsigned _41;
  __int128 unsigned _42;
  __int128 unsigned _43;
  __int128 unsigned _44;
  __int128 unsigned _45;
  __int128 unsigned _46;
  __int128 unsigned _47;
  long unsigned int _48;
  long unsigned int _49;
  __int128 unsigned _50;
  __int128 unsigned _51;
  long unsigned int _52;
  long unsigned int _53;
  __int128 unsigned _54;
  __int128 unsigned _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _61;
  long unsigned int _63;
  __int128 unsigned _66;
  __int128 unsigned _68;
  __int128 unsigned _70;
  __int128 unsigned _72;
  long unsigned int _74;
  __int128 unsigned _77;
  __int128 unsigned _78;
  __int128 unsigned _79;
  __int128 unsigned _80;
  __int128 unsigned _82;
  __int128 unsigned _84;
  __int128 unsigned _85;
  __int128 unsigned _90;
  __int128 unsigned _91;

  <bb 2> [local count: 1073741825]:
  _59 = *in_2(D);
  tmp0_60 = _59 * 2;
  _61 = MEM[(const limb *)in_2(D) + 8B];
  tmp1_62 = _61 * 2;
  _63 = MEM[(const limb *)in_2(D) + 16B];
  tmp2_64 = _63 * 2;
  _66 = _59 w* _59;
  _68 = _59 w* tmp1_62;
  _70 = _59 w* tmp2_64;
  _72 = _61 w* _61;
  _90 = _72 + 0x7fffffffffffff800000000000000000;
  _74 = MEM[(const limb *)in_2(D) + 24B];
  _77 = _74 w* tmp0_60;
  _78 = tmp2_64 w* _61;
  _79 = _77 + _78;
  _80 = tmp1_62 w* _74;
  _82 = _63 w* _63;
  _84 = tmp2_64 w* _74;
  _85 = _74 w* _74;
  _8 = _66 + 0x80000000000000000000000000008000;
  _10 = _68 + 0x7fffffffffffff7fff80000000000000;
  _12 = _70 + _90;
  _16 = _85 >> 16;
  _91 = _16 + _80;
  _17 = _82 + _91;
  _18 = _85 << 40;
  _19 = _18 & 72056494526300160;
  _20 = _19 + _79;
  _21 = _12 - _85;
  _23 = _84 >> 16;
  _24 = _20 + _23;
  _25 = _84 << 40;
  _26 = _25 & 72056494526300160;
  _27 = _21 + _26;
  _28 = _10 - _84;
  _29 = _17 >> 16;
  _30 = _27 + _29;
  _31 = _17 << 40;
  _32 = _31 & 72056494526300160;
  _33 = _28 + _32;
  _34 = _8 - _17;
  _35 = _30 >> 56;
  _36 = _24 + _35;
  _37 = _30 & 72057594037927935;
  _38 = _36 >> 56;
  _39 = _36 & 72057594037927935;
  _40 = _36 >> 72;
  _41 = _37 + _40;
  _42 = _38 << 40;
  _43 = _42 & 72056494526300160;
  _44 = _33 + _43;
  _45 = _34 - _38;
  _46 = _45 >> 56;
  _47 = _44 + _46;
  _48 = (long unsigned int) _45;
  _49 = _48 & 72057594037927935;
  *out_4(D) = _49;
  _50 = _47 >> 56;
  _51 = _41 + _50;
  _52 = (long unsigned int) _47;
  _53 = _52 & 72057594037927935;
  MEM[(limb *)out_4(D) + 8B] = _53;
  _54 = _51 >> 56;
  _55 = _39 + _54;
  _56 = (long unsigned int) _51;
  _57 = _56 & 72057594037927935;
  MEM[(limb *)out_4(D) + 16B] = _57;
  _58 = (long unsigned int) _55;
  MEM[(limb *)out_4(D) + 24B] = _58;
  return;

}



;; Function felem_mul_reduce (felem_mul_reduce, funcdef_no=417, decl_uid=10467, cgraph_uid=417, symbol_order=419)

__attribute__((used))
felem_mul_reduce (limb * out, const limb * in1, const limb * in2)
{
  __int128 unsigned _9;
  __int128 unsigned _11;
  __int128 unsigned _12;
  __int128 unsigned _13;
  __int128 unsigned _17;
  __int128 unsigned _18;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _21;
  __int128 unsigned _22;
  __int128 unsigned _24;
  __int128 unsigned _25;
  __int128 unsigned _26;
  __int128 unsigned _27;
  __int128 unsigned _28;
  __int128 unsigned _29;
  __int128 unsigned _30;
  __int128 unsigned _31;
  __int128 unsigned _32;
  __int128 unsigned _33;
  __int128 unsigned _34;
  __int128 unsigned _35;
  __int128 unsigned _36;
  __int128 unsigned _37;
  __int128 unsigned _38;
  __int128 unsigned _39;
  __int128 unsigned _40;
  __int128 unsigned _41;
  __int128 unsigned _42;
  __int128 unsigned _43;
  __int128 unsigned _44;
  __int128 unsigned _45;
  __int128 unsigned _46;
  __int128 unsigned _47;
  __int128 unsigned _48;
  long unsigned int _49;
  long unsigned int _50;
  __int128 unsigned _51;
  __int128 unsigned _52;
  long unsigned int _53;
  long unsigned int _54;
  __int128 unsigned _55;
  __int128 unsigned _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _62;
  __int128 unsigned _64;
  long unsigned int _65;
  __int128 unsigned _67;
  long unsigned int _68;
  __int128 unsigned _70;
  __int128 unsigned _71;
  long unsigned int _72;
  __int128 unsigned _74;
  __int128 unsigned _75;
  __int128 unsigned _76;
  long unsigned int _77;
  __int128 unsigned _79;
  long unsigned int _81;
  __int128 unsigned _83;
  __int128 unsigned _84;
  long unsigned int _86;
  __int128 unsigned _88;
  __int128 unsigned _89;
  __int128 unsigned _91;
  __int128 unsigned _92;
  __int128 unsigned _93;
  __int128 unsigned _94;
  __int128 unsigned _95;
  __int128 unsigned _96;
  __int128 unsigned _97;
  __int128 unsigned _98;
  __int128 unsigned _99;
  __int128 unsigned _100;
  __int128 unsigned _106;
  __int128 unsigned _107;

  <bb 2> [local count: 1073741825]:
  _60 = *in1_2(D);
  _62 = *in2_3(D);
  _64 = _60 w* _62;
  _65 = MEM[(const limb *)in2_3(D) + 8B];
  _67 = _60 w* _65;
  _68 = MEM[(const limb *)in1_2(D) + 8B];
  _70 = _62 w* _68;
  _71 = _67 + _70;
  _72 = MEM[(const limb *)in2_3(D) + 16B];
  _74 = _60 w* _72;
  _75 = _65 w* _68;
  _76 = _74 + _75;
  _77 = MEM[(const limb *)in1_2(D) + 16B];
  _79 = _62 w* _77;
  _12 = _76 + 0x7fffffffffffff800000000000000000;
  _81 = MEM[(const limb *)in2_3(D) + 24B];
  _83 = _60 w* _81;
  _84 = _68 w* _72;
  _106 = _83 + _84;
  _86 = MEM[(const limb *)in1_2(D) + 24B];
  _88 = _62 w* _86;
  _89 = _65 w* _77;
  _107 = _88 + _106;
  _91 = _89 + _107;
  _92 = _68 w* _81;
  _93 = _72 w* _77;
  _94 = _92 + _93;
  _95 = _65 w* _86;
  _96 = _94 + _95;
  _97 = _77 w* _81;
  _98 = _72 w* _86;
  _99 = _97 + _98;
  _100 = _81 w* _86;
  _9 = _64 + 0x80000000000000000000000000008000;
  _11 = _71 + 0x7fffffffffffff7fff80000000000000;
  _13 = _12 + _79;
  _17 = _100 >> 16;
  _18 = _17 + _96;
  _19 = _100 << 40;
  _20 = _19 & 72056494526300160;
  _21 = _20 + _91;
  _22 = _13 - _100;
  _24 = _99 >> 16;
  _25 = _21 + _24;
  _26 = _99 << 40;
  _27 = _26 & 72056494526300160;
  _28 = _22 + _27;
  _29 = _11 - _99;
  _30 = _18 >> 16;
  _31 = _28 + _30;
  _32 = _18 << 40;
  _33 = _32 & 72056494526300160;
  _34 = _29 + _33;
  _35 = _9 - _18;
  _36 = _31 >> 56;
  _37 = _25 + _36;
  _38 = _31 & 72057594037927935;
  _39 = _37 >> 56;
  _40 = _37 & 72057594037927935;
  _41 = _37 >> 72;
  _42 = _38 + _41;
  _43 = _39 << 40;
  _44 = _43 & 72056494526300160;
  _45 = _34 + _44;
  _46 = _35 - _39;
  _47 = _46 >> 56;
  _48 = _45 + _47;
  _49 = (long unsigned int) _46;
  _50 = _49 & 72057594037927935;
  *out_5(D) = _50;
  _51 = _48 >> 56;
  _52 = _42 + _51;
  _53 = (long unsigned int) _48;
  _54 = _53 & 72057594037927935;
  MEM[(limb *)out_5(D) + 8B] = _54;
  _55 = _52 >> 56;
  _56 = _40 + _55;
  _57 = (long unsigned int) _52;
  _58 = _57 & 72057594037927935;
  MEM[(limb *)out_5(D) + 16B] = _58;
  _59 = (long unsigned int) _56;
  MEM[(limb *)out_5(D) + 24B] = _59;
  return;

}



;; Function EC_GFp_nistp224_method (EC_GFp_nistp224_method, funcdef_no=399, decl_uid=8525, cgraph_uid=399, symbol_order=401)

EC_GFp_nistp224_method ()
{
  static const struct EC_METHOD ret = {.flags=1, .field_type=406, .group_init=ec_GFp_nistp224_group_init, .group_finish=ec_GFp_simple_group_finish, .group_clear_finish=ec_GFp_simple_group_clear_finish, .group_copy=ec_GFp_nist_group_copy, .group_set_curve=ec_GFp_nistp224_group_set_curve, .group_get_curve=ec_GFp_simple_group_get_curve, .group_get_degree=ec_GFp_simple_group_get_degree, .group_order_bits=ec_group_simple_order_bits, .group_check_discriminant=ec_GFp_simple_group_check_discriminant, .point_init=ec_GFp_simple_point_init, .point_finish=ec_GFp_simple_point_finish, .point_clear_finish=ec_GFp_simple_point_clear_finish, .point_copy=ec_GFp_simple_point_copy, .point_set_to_infinity=ec_GFp_simple_point_set_to_infinity, .point_set_Jprojective_coordinates_GFp=ec_GFp_simple_set_Jprojective_coordinates_GFp, .point_get_Jprojective_coordinates_GFp=ec_GFp_simple_get_Jprojective_coordinates_GFp, .point_set_affine_coordinates=ec_GFp_simple_point_set_affine_coordinates, .point_get_affine_coordinates=ec_GFp_nistp224_point_get_affine_coordinates, .point_set_compressed_coordinates=0B, .point2oct=0B, .oct2point=0B, .add=ec_GFp_simple_add, .dbl=ec_GFp_simple_dbl, .invert=ec_GFp_simple_invert, .is_at_infinity=ec_GFp_simple_is_at_infinity, .is_on_curve=ec_GFp_simple_is_on_curve, .point_cmp=ec_GFp_simple_cmp, .make_affine=ec_GFp_simple_make_affine, .points_make_affine=ec_GFp_simple_points_make_affine, .mul=ec_GFp_nistp224_points_mul, .precompute_mult=ec_GFp_nistp224_precompute_mult, .have_precompute_mult=ec_GFp_nistp224_have_precompute_mult, .field_mul=ec_GFp_nist_field_mul, .field_sqr=ec_GFp_nist_field_sqr, .field_div=0B, .field_encode=0B, .field_decode=0B, .field_set_to_one=0B, .priv2oct=ec_key_simple_priv2oct, .oct2priv=ec_key_simple_oct2priv, .set_private=0B, .keygen=ec_key_simple_generate_key, .keycheck=ec_key_simple_check_key, .keygenpub=ec_key_simple_generate_public_key, .keycopy=0B, .keyfinish=0B, .ecdh_compute_key=ecdh_simple_compute_key, .field_inverse_mod_ord=0B, .blind_coordinates=0B, .ladder_pre=0B, .ladder_step=0B, .ladder_post=0B};

  <bb 2> [local count: 1073741825]:
  return &ret;

}



;; Function felem_sum (felem_sum, funcdef_no=407, decl_uid=10408, cgraph_uid=407, symbol_order=409)

__attribute__((used))
felem_sum (limb * out, const limb * in)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;

  <bb 2> [local count: 1073741825]:
  _1 = *out_14(D);
  _2 = *in_15(D);
  _3 = _1 + _2;
  *out_14(D) = _3;
  _4 = MEM[(limb *)out_14(D) + 8B];
  _5 = MEM[(const limb *)in_15(D) + 8B];
  _6 = _4 + _5;
  MEM[(limb *)out_14(D) + 8B] = _6;
  _7 = MEM[(limb *)out_14(D) + 16B];
  _8 = MEM[(const limb *)in_15(D) + 16B];
  _9 = _7 + _8;
  MEM[(limb *)out_14(D) + 16B] = _9;
  _10 = MEM[(limb *)out_14(D) + 24B];
  _11 = MEM[(const limb *)in_15(D) + 24B];
  _12 = _10 + _11;
  MEM[(limb *)out_14(D) + 24B] = _12;
  return;

}



;; Function felem_diff (felem_diff, funcdef_no=408, decl_uid=10412, cgraph_uid=408, symbol_order=410)

__attribute__((used))
felem_diff (limb * out, const limb * in)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;

  <bb 2> [local count: 1073741825]:
  _1 = *out_18(D);
  _2 = _1 + 288230376151711748;
  *out_18(D) = _2;
  _3 = MEM[(limb *)out_18(D) + 8B];
  _4 = _3 + 288225978105200636;
  MEM[(limb *)out_18(D) + 8B] = _4;
  _5 = MEM[(limb *)out_18(D) + 16B];
  _6 = _5 + 288230376151711740;
  MEM[(limb *)out_18(D) + 16B] = _6;
  _7 = MEM[(limb *)out_18(D) + 24B];
  _8 = _7 + 288230376151711740;
  MEM[(limb *)out_18(D) + 24B] = _8;
  _9 = *in_23(D);
  _10 = _2 - _9;
  *out_18(D) = _10;
  _11 = MEM[(const limb *)in_23(D) + 8B];
  _12 = _4 - _11;
  MEM[(limb *)out_18(D) + 8B] = _12;
  _13 = MEM[(const limb *)in_23(D) + 16B];
  _14 = _6 - _13;
  MEM[(limb *)out_18(D) + 16B] = _14;
  _15 = MEM[(const limb *)in_23(D) + 24B];
  _16 = _8 - _15;
  MEM[(limb *)out_18(D) + 24B] = _16;
  return;

}



;; Function widefelem_diff (widefelem_diff, funcdef_no=409, decl_uid=10419, cgraph_uid=409, symbol_order=411)

__attribute__((used))
widefelem_diff (widelimb * out, const widelimb * in)
{
  __int128 unsigned _1;
  __int128 unsigned _2;
  __int128 unsigned _3;
  __int128 unsigned _4;
  __int128 unsigned _5;
  __int128 unsigned _6;
  __int128 unsigned _7;
  __int128 unsigned _8;
  __int128 unsigned _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  __int128 unsigned _12;
  __int128 unsigned _13;
  __int128 unsigned _14;
  __int128 unsigned _15;
  __int128 unsigned _16;
  __int128 unsigned _17;
  __int128 unsigned _18;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _21;
  __int128 unsigned _22;
  __int128 unsigned _23;
  __int128 unsigned _24;
  __int128 unsigned _25;
  __int128 unsigned _26;
  __int128 unsigned _27;
  __int128 unsigned _28;

  <bb 2> [local count: 1073741825]:
  _1 = *out_30(D);
  _2 = _1 + 0x1000000000000000000000000000000;
  *out_30(D) = _2;
  _3 = MEM[(widelimb *)out_30(D) + 16B];
  _4 = _3 + 0xffffffffffffff0000000000000000;
  MEM[(widelimb *)out_30(D) + 16B] = _4;
  _5 = MEM[(widelimb *)out_30(D) + 32B];
  _6 = _5 + 0xffffffffffffff0000000000000000;
  MEM[(widelimb *)out_30(D) + 32B] = _6;
  _7 = MEM[(widelimb *)out_30(D) + 48B];
  _8 = _7 + 0x1000000000000000000000000000000;
  MEM[(widelimb *)out_30(D) + 48B] = _8;
  _9 = MEM[(widelimb *)out_30(D) + 64B];
  _10 = _9 + 0xfffeffffffffff0000000000000000;
  MEM[(widelimb *)out_30(D) + 64B] = _10;
  _11 = MEM[(widelimb *)out_30(D) + 80B];
  _12 = _11 + 0xffffffffffffff0000000000000000;
  MEM[(widelimb *)out_30(D) + 80B] = _12;
  _13 = MEM[(widelimb *)out_30(D) + 96B];
  _14 = _13 + 0xffffffffffffff0000000000000000;
  MEM[(widelimb *)out_30(D) + 96B] = _14;
  _15 = *in_38(D);
  _16 = _2 - _15;
  *out_30(D) = _16;
  _17 = MEM[(const widelimb *)in_38(D) + 16B];
  _18 = _4 - _17;
  MEM[(widelimb *)out_30(D) + 16B] = _18;
  _19 = MEM[(const widelimb *)in_38(D) + 32B];
  _20 = _6 - _19;
  MEM[(widelimb *)out_30(D) + 32B] = _20;
  _21 = MEM[(const widelimb *)in_38(D) + 48B];
  _22 = _8 - _21;
  MEM[(widelimb *)out_30(D) + 48B] = _22;
  _23 = MEM[(const widelimb *)in_38(D) + 64B];
  _24 = _10 - _23;
  MEM[(widelimb *)out_30(D) + 64B] = _24;
  _25 = MEM[(const widelimb *)in_38(D) + 80B];
  _26 = _12 - _25;
  MEM[(widelimb *)out_30(D) + 80B] = _26;
  _27 = MEM[(const widelimb *)in_38(D) + 96B];
  _28 = _14 - _27;
  MEM[(widelimb *)out_30(D) + 96B] = _28;
  return;

}



;; Function felem_diff_128_64 (felem_diff_128_64, funcdef_no=410, decl_uid=10426, cgraph_uid=410, symbol_order=412)

__attribute__((used))
felem_diff_128_64 (widelimb * out, const limb * in)
{
  __int128 unsigned _1;
  __int128 unsigned _2;
  __int128 unsigned _3;
  __int128 unsigned _4;
  __int128 unsigned _5;
  __int128 unsigned _6;
  __int128 unsigned _7;
  __int128 unsigned _8;
  long unsigned int _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  long unsigned int _12;
  __int128 unsigned _13;
  __int128 unsigned _14;
  long unsigned int _15;
  __int128 unsigned _16;
  __int128 unsigned _17;
  long unsigned int _18;
  __int128 unsigned _19;
  __int128 unsigned _20;

  <bb 2> [local count: 1073741825]:
  _1 = *out_22(D);
  _2 = _1 + 0x10000000000000100;
  _3 = MEM[(widelimb *)out_22(D) + 16B];
  _4 = _3 + 18446462598732840704;
  _5 = MEM[(widelimb *)out_22(D) + 32B];
  _6 = _5 + 18446744073709551360;
  _7 = MEM[(widelimb *)out_22(D) + 48B];
  _8 = _7 + 18446744073709551360;
  _9 = *in_23(D);
  _10 = (__int128 unsigned) _9;
  _11 = _2 - _10;
  *out_22(D) = _11;
  _12 = MEM[(const limb *)in_23(D) + 8B];
  _13 = (__int128 unsigned) _12;
  _14 = _4 - _13;
  MEM[(widelimb *)out_22(D) + 16B] = _14;
  _15 = MEM[(const limb *)in_23(D) + 16B];
  _16 = (__int128 unsigned) _15;
  _17 = _6 - _16;
  MEM[(widelimb *)out_22(D) + 32B] = _17;
  _18 = MEM[(const limb *)in_23(D) + 24B];
  _19 = (__int128 unsigned) _18;
  _20 = _8 - _19;
  MEM[(widelimb *)out_22(D) + 48B] = _20;
  return;

}



;; Function felem_scalar (felem_scalar, funcdef_no=411, decl_uid=10433, cgraph_uid=411, symbol_order=413)

__attribute__((used))
felem_scalar (limb * out, const limb scalar)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;

  <bb 2> [local count: 1073741825]:
  _1 = *out_10(D);
  _2 = _1 * scalar_11(D);
  *out_10(D) = _2;
  _3 = MEM[(limb *)out_10(D) + 8B];
  _4 = _3 * scalar_11(D);
  MEM[(limb *)out_10(D) + 8B] = _4;
  _5 = MEM[(limb *)out_10(D) + 16B];
  _6 = _5 * scalar_11(D);
  MEM[(limb *)out_10(D) + 16B] = _6;
  _7 = MEM[(limb *)out_10(D) + 24B];
  _8 = _7 * scalar_11(D);
  MEM[(limb *)out_10(D) + 24B] = _8;
  return;

}



;; Function widefelem_scalar (widefelem_scalar, funcdef_no=412, decl_uid=10437, cgraph_uid=412, symbol_order=414)

__attribute__((used))
widefelem_scalar (widelimb * out, const widelimb scalar)
{
  __int128 unsigned _1;
  __int128 unsigned _2;
  __int128 unsigned _3;
  __int128 unsigned _4;
  __int128 unsigned _5;
  __int128 unsigned _6;
  __int128 unsigned _7;
  __int128 unsigned _8;
  __int128 unsigned _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  __int128 unsigned _12;
  __int128 unsigned _13;
  __int128 unsigned _14;

  <bb 2> [local count: 1073741825]:
  _1 = *out_16(D);
  _2 = _1 * scalar_17(D);
  *out_16(D) = _2;
  _3 = MEM[(widelimb *)out_16(D) + 16B];
  _4 = _3 * scalar_17(D);
  MEM[(widelimb *)out_16(D) + 16B] = _4;
  _5 = MEM[(widelimb *)out_16(D) + 32B];
  _6 = _5 * scalar_17(D);
  MEM[(widelimb *)out_16(D) + 32B] = _6;
  _7 = MEM[(widelimb *)out_16(D) + 48B];
  _8 = _7 * scalar_17(D);
  MEM[(widelimb *)out_16(D) + 48B] = _8;
  _9 = MEM[(widelimb *)out_16(D) + 64B];
  _10 = _9 * scalar_17(D);
  MEM[(widelimb *)out_16(D) + 64B] = _10;
  _11 = MEM[(widelimb *)out_16(D) + 80B];
  _12 = _11 * scalar_17(D);
  MEM[(widelimb *)out_16(D) + 80B] = _12;
  _13 = MEM[(widelimb *)out_16(D) + 96B];
  _14 = _13 * scalar_17(D);
  MEM[(widelimb *)out_16(D) + 96B] = _14;
  return;

}



;; Function felem_square (felem_square, funcdef_no=413, decl_uid=10441, cgraph_uid=413, symbol_order=415)

__attribute__((used))
felem_square (widelimb * out, const limb * in)
{
  limb tmp2;
  limb tmp1;
  limb tmp0;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  __int128 unsigned _5;
  __int128 unsigned _7;
  __int128 unsigned _9;
  __int128 unsigned _11;
  __int128 unsigned _12;
  long unsigned int _13;
  __int128 unsigned _16;
  __int128 unsigned _17;
  __int128 unsigned _18;
  __int128 unsigned _19;
  __int128 unsigned _21;
  __int128 unsigned _22;
  __int128 unsigned _23;
  __int128 unsigned _24;

  <bb 2> [local count: 1073741825]:
  _1 = *in_26(D);
  tmp0_27 = _1 * 2;
  _2 = MEM[(const limb *)in_26(D) + 8B];
  tmp1_28 = _2 * 2;
  _3 = MEM[(const limb *)in_26(D) + 16B];
  tmp2_29 = _3 * 2;
  _5 = _1 w* _1;
  *out_30(D) = _5;
  _7 = _1 w* tmp1_28;
  MEM[(widelimb *)out_30(D) + 16B] = _7;
  _9 = _1 w* tmp2_29;
  _11 = _2 w* _2;
  _12 = _9 + _11;
  MEM[(widelimb *)out_30(D) + 32B] = _12;
  _13 = MEM[(const limb *)in_26(D) + 24B];
  _16 = _13 w* tmp0_27;
  _17 = tmp2_29 w* _2;
  _18 = _16 + _17;
  MEM[(widelimb *)out_30(D) + 48B] = _18;
  _19 = tmp1_28 w* _13;
  _21 = _3 w* _3;
  _22 = _19 + _21;
  MEM[(widelimb *)out_30(D) + 64B] = _22;
  _23 = tmp2_29 w* _13;
  MEM[(widelimb *)out_30(D) + 80B] = _23;
  _24 = _13 w* _13;
  MEM[(widelimb *)out_30(D) + 96B] = _24;
  return;

}



;; Function felem_mul (felem_mul, funcdef_no=414, decl_uid=10449, cgraph_uid=414, symbol_order=416)

__attribute__((used))
felem_mul (widelimb * out, const limb * in1, const limb * in2)
{
  long unsigned int _1;
  long unsigned int _3;
  __int128 unsigned _5;
  long unsigned int _6;
  __int128 unsigned _8;
  long unsigned int _9;
  __int128 unsigned _11;
  __int128 unsigned _12;
  long unsigned int _13;
  __int128 unsigned _15;
  __int128 unsigned _16;
  __int128 unsigned _17;
  long unsigned int _18;
  __int128 unsigned _20;
  __int128 unsigned _21;
  long unsigned int _22;
  __int128 unsigned _24;
  __int128 unsigned _25;
  long unsigned int _27;
  __int128 unsigned _29;
  __int128 unsigned _30;
  __int128 unsigned _32;
  __int128 unsigned _33;
  __int128 unsigned _34;
  __int128 unsigned _35;
  __int128 unsigned _36;
  __int128 unsigned _37;
  __int128 unsigned _38;
  __int128 unsigned _39;
  __int128 unsigned _40;
  __int128 unsigned _41;
  __int128 unsigned _53;
  __int128 unsigned _54;

  <bb 2> [local count: 1073741825]:
  _1 = *in1_43(D);
  _3 = *in2_44(D);
  _5 = _1 w* _3;
  *out_45(D) = _5;
  _6 = MEM[(const limb *)in2_44(D) + 8B];
  _8 = _1 w* _6;
  _9 = MEM[(const limb *)in1_43(D) + 8B];
  _11 = _3 w* _9;
  _12 = _8 + _11;
  MEM[(widelimb *)out_45(D) + 16B] = _12;
  _13 = MEM[(const limb *)in2_44(D) + 16B];
  _15 = _1 w* _13;
  _16 = _6 w* _9;
  _17 = _15 + _16;
  _18 = MEM[(const limb *)in1_43(D) + 16B];
  _20 = _3 w* _18;
  _21 = _17 + _20;
  MEM[(widelimb *)out_45(D) + 32B] = _21;
  _22 = MEM[(const limb *)in2_44(D) + 24B];
  _24 = _1 w* _22;
  _25 = _9 w* _13;
  _54 = _24 + _25;
  _27 = MEM[(const limb *)in1_43(D) + 24B];
  _29 = _3 w* _27;
  _30 = _6 w* _18;
  _53 = _29 + _54;
  _32 = _30 + _53;
  MEM[(widelimb *)out_45(D) + 48B] = _32;
  _33 = _9 w* _22;
  _34 = _13 w* _18;
  _35 = _33 + _34;
  _36 = _6 w* _27;
  _37 = _35 + _36;
  MEM[(widelimb *)out_45(D) + 64B] = _37;
  _38 = _18 w* _22;
  _39 = _13 w* _27;
  _40 = _38 + _39;
  MEM[(widelimb *)out_45(D) + 80B] = _40;
  _41 = _22 w* _27;
  MEM[(widelimb *)out_45(D) + 96B] = _41;
  return;

}



;; Function felem_reduce (felem_reduce, funcdef_no=415, decl_uid=10453, cgraph_uid=415, symbol_order=417)

__attribute__((used))
felem_reduce (limb * out, const widelimb * in)
{
  __int128 unsigned _1;
  __int128 unsigned _2;
  __int128 unsigned _3;
  __int128 unsigned _4;
  __int128 unsigned _5;
  __int128 unsigned _6;
  __int128 unsigned _7;
  __int128 unsigned _8;
  __int128 unsigned _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  __int128 unsigned _12;
  __int128 unsigned _13;
  __int128 unsigned _15;
  __int128 unsigned _16;
  __int128 unsigned _17;
  __int128 unsigned _18;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _21;
  __int128 unsigned _22;
  __int128 unsigned _23;
  __int128 unsigned _24;
  __int128 unsigned _25;
  __int128 unsigned _26;
  __int128 unsigned _27;
  __int128 unsigned _28;
  __int128 unsigned _29;
  __int128 unsigned _30;
  __int128 unsigned _31;
  __int128 unsigned _32;
  __int128 unsigned _33;
  __int128 unsigned _34;
  __int128 unsigned _35;
  __int128 unsigned _36;
  __int128 unsigned _37;
  __int128 unsigned _38;
  __int128 unsigned _39;
  __int128 unsigned _40;
  __int128 unsigned _41;
  long unsigned int _42;
  long unsigned int _43;
  __int128 unsigned _44;
  __int128 unsigned _45;
  long unsigned int _46;
  long unsigned int _47;
  __int128 unsigned _48;
  __int128 unsigned _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  __int128 unsigned _64;

  <bb 2> [local count: 1073741825]:
  _1 = *in_54(D);
  _2 = _1 + 0x80000000000000000000000000008000;
  _3 = MEM[(const widelimb *)in_54(D) + 16B];
  _4 = _3 + 0x7fffffffffffff7fff80000000000000;
  _5 = MEM[(const widelimb *)in_54(D) + 32B];
  _6 = _5 + 0x7fffffffffffff800000000000000000;
  _7 = MEM[(const widelimb *)in_54(D) + 48B];
  _8 = MEM[(const widelimb *)in_54(D) + 64B];
  _9 = MEM[(const widelimb *)in_54(D) + 96B];
  _10 = _9 >> 16;
  _11 = _8 + _10;
  _12 = _9 << 40;
  _13 = _12 & 72056494526300160;
  _15 = _6 - _9;
  _16 = MEM[(const widelimb *)in_54(D) + 80B];
  _17 = _16 >> 16;
  _64 = _7 + _17;
  _18 = _13 + _64;
  _19 = _16 << 40;
  _20 = _19 & 72056494526300160;
  _21 = _15 + _20;
  _22 = _4 - _16;
  _23 = _11 >> 16;
  _24 = _21 + _23;
  _25 = _11 << 40;
  _26 = _25 & 72056494526300160;
  _27 = _22 + _26;
  _28 = _2 - _11;
  _29 = _24 >> 56;
  _30 = _18 + _29;
  _31 = _24 & 72057594037927935;
  _32 = _30 >> 56;
  _33 = _30 & 72057594037927935;
  _34 = _30 >> 72;
  _35 = _31 + _34;
  _36 = _32 << 40;
  _37 = _36 & 72056494526300160;
  _38 = _27 + _37;
  _39 = _28 - _32;
  _40 = _39 >> 56;
  _41 = _38 + _40;
  _42 = (long unsigned int) _39;
  _43 = _42 & 72057594037927935;
  *out_55(D) = _43;
  _44 = _41 >> 56;
  _45 = _35 + _44;
  _46 = (long unsigned int) _41;
  _47 = _46 & 72057594037927935;
  MEM[(limb *)out_55(D) + 8B] = _47;
  _48 = _45 >> 56;
  _49 = _33 + _48;
  _50 = (long unsigned int) _45;
  _51 = _50 & 72057594037927935;
  MEM[(limb *)out_55(D) + 16B] = _51;
  _52 = (long unsigned int) _49;
  MEM[(limb *)out_55(D) + 24B] = _52;
  return;

}



;; Function felem_inv (felem_inv, funcdef_no=422, decl_uid=10493, cgraph_uid=422, symbol_order=424)

felem_inv (limb * out, const limb * in)
{
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  widelimb tmp[7];
  limb ftmp4[4];
  limb ftmp3[4];
  limb ftmp2[4];
  limb ftmp[4];
  __int128 unsigned _2;
  __int128 unsigned _3;
  __int128 unsigned _5;
  __int128 unsigned _6;
  __int128 unsigned _9;
  __int128 unsigned _10;
  __int128 unsigned _12;
  __int128 unsigned _13;
  __int128 unsigned _17;
  __int128 unsigned _19;
  __int128 unsigned _38;
  __int128 unsigned _40;
  __int128 unsigned _45;
  __int128 unsigned _47;
  __int128 unsigned _52;
  __int128 unsigned _54;
  __int128 unsigned _59;
  __int128 unsigned _61;
  __int128 unsigned _66;
  __int128 unsigned _68;
  __int128 unsigned _71;
  __int128 unsigned _73;
  long unsigned int _88;
  long unsigned int _90;
  long unsigned int _92;
  __int128 unsigned _95;
  __int128 unsigned _97;
  __int128 unsigned _99;
  __int128 unsigned _101;
  __int128 unsigned _102;
  long unsigned int _103;
  __int128 unsigned _106;
  __int128 unsigned _107;
  __int128 unsigned _108;
  __int128 unsigned _109;
  __int128 unsigned _111;
  __int128 unsigned _112;
  __int128 unsigned _113;
  __int128 unsigned _114;
  long unsigned int _115;
  long unsigned int _117;
  __int128 unsigned _119;
  long unsigned int _120;
  __int128 unsigned _122;
  long unsigned int _123;
  __int128 unsigned _125;
  __int128 unsigned _126;
  long unsigned int _127;
  __int128 unsigned _129;
  __int128 unsigned _130;
  __int128 unsigned _131;
  long unsigned int _132;
  __int128 unsigned _134;
  __int128 unsigned _135;
  long unsigned int _136;
  __int128 unsigned _138;
  __int128 unsigned _139;
  long unsigned int _141;
  __int128 unsigned _143;
  __int128 unsigned _144;
  __int128 unsigned _146;
  __int128 unsigned _147;
  __int128 unsigned _148;
  __int128 unsigned _149;
  __int128 unsigned _150;
  __int128 unsigned _151;
  __int128 unsigned _152;
  __int128 unsigned _153;
  __int128 unsigned _154;
  __int128 unsigned _155;
  long unsigned int _156;
  long unsigned int _158;
  long unsigned int _160;
  __int128 unsigned _163;
  __int128 unsigned _165;
  __int128 unsigned _167;
  __int128 unsigned _169;
  __int128 unsigned _170;
  long unsigned int _171;
  __int128 unsigned _174;
  __int128 unsigned _175;
  __int128 unsigned _176;
  __int128 unsigned _177;
  __int128 unsigned _179;
  __int128 unsigned _180;
  __int128 unsigned _181;
  __int128 unsigned _182;
  long unsigned int _183;
  long unsigned int _185;
  long unsigned int _187;
  __int128 unsigned _190;
  __int128 unsigned _192;
  __int128 unsigned _194;
  __int128 unsigned _196;
  __int128 unsigned _197;
  long unsigned int _198;
  __int128 unsigned _201;
  __int128 unsigned _202;
  __int128 unsigned _203;
  __int128 unsigned _204;
  __int128 unsigned _206;
  __int128 unsigned _207;
  __int128 unsigned _208;
  __int128 unsigned _209;
  long unsigned int _210;
  long unsigned int _212;
  long unsigned int _214;
  __int128 unsigned _217;
  __int128 unsigned _219;
  __int128 unsigned _221;
  __int128 unsigned _223;
  __int128 unsigned _224;
  long unsigned int _225;
  __int128 unsigned _228;
  __int128 unsigned _229;
  __int128 unsigned _230;
  __int128 unsigned _231;
  __int128 unsigned _233;
  __int128 unsigned _234;
  __int128 unsigned _235;
  __int128 unsigned _236;
  long unsigned int _237;
  long unsigned int _239;
  __int128 unsigned _241;
  long unsigned int _242;
  __int128 unsigned _244;
  long unsigned int _245;
  __int128 unsigned _247;
  __int128 unsigned _248;
  long unsigned int _249;
  __int128 unsigned _251;
  __int128 unsigned _252;
  __int128 unsigned _253;
  long unsigned int _254;
  __int128 unsigned _256;
  __int128 unsigned _257;
  long unsigned int _258;
  __int128 unsigned _260;
  __int128 unsigned _261;
  long unsigned int _263;
  __int128 unsigned _265;
  __int128 unsigned _266;
  __int128 unsigned _268;
  __int128 unsigned _269;
  __int128 unsigned _270;
  __int128 unsigned _271;
  __int128 unsigned _272;
  __int128 unsigned _273;
  __int128 unsigned _274;
  __int128 unsigned _275;
  __int128 unsigned _276;
  __int128 unsigned _277;
  long unsigned int _278;
  long unsigned int _280;
  long unsigned int _282;
  __int128 unsigned _285;
  __int128 unsigned _287;
  __int128 unsigned _289;
  __int128 unsigned _291;
  __int128 unsigned _292;
  long unsigned int _293;
  __int128 unsigned _296;
  __int128 unsigned _297;
  __int128 unsigned _298;
  __int128 unsigned _299;
  __int128 unsigned _301;
  __int128 unsigned _302;
  __int128 unsigned _303;
  __int128 unsigned _304;
  long unsigned int _305;
  long unsigned int _307;
  __int128 unsigned _309;
  long unsigned int _310;
  __int128 unsigned _312;
  long unsigned int _313;
  __int128 unsigned _315;
  __int128 unsigned _316;
  long unsigned int _317;
  __int128 unsigned _319;
  __int128 unsigned _320;
  __int128 unsigned _321;
  long unsigned int _322;
  __int128 unsigned _324;
  __int128 unsigned _325;
  long unsigned int _326;
  __int128 unsigned _328;
  __int128 unsigned _329;
  long unsigned int _331;
  __int128 unsigned _333;
  __int128 unsigned _334;
  __int128 unsigned _336;
  __int128 unsigned _337;
  __int128 unsigned _338;
  __int128 unsigned _339;
  __int128 unsigned _340;
  __int128 unsigned _341;
  __int128 unsigned _342;
  __int128 unsigned _343;
  __int128 unsigned _344;
  __int128 unsigned _345;
  long unsigned int _346;
  long unsigned int _348;
  long unsigned int _350;
  __int128 unsigned _353;
  __int128 unsigned _355;
  __int128 unsigned _357;
  __int128 unsigned _359;
  __int128 unsigned _360;
  long unsigned int _361;
  __int128 unsigned _364;
  __int128 unsigned _365;
  __int128 unsigned _366;
  __int128 unsigned _367;
  __int128 unsigned _369;
  __int128 unsigned _370;
  __int128 unsigned _371;
  __int128 unsigned _372;
  long unsigned int _373;
  long unsigned int _375;
  long unsigned int _377;
  __int128 unsigned _380;
  __int128 unsigned _382;
  __int128 unsigned _384;
  __int128 unsigned _386;
  __int128 unsigned _387;
  long unsigned int _388;
  __int128 unsigned _391;
  __int128 unsigned _392;
  __int128 unsigned _393;
  __int128 unsigned _394;
  __int128 unsigned _396;
  __int128 unsigned _397;
  __int128 unsigned _398;
  __int128 unsigned _399;
  long unsigned int _400;
  long unsigned int _402;
  long unsigned int _404;
  __int128 unsigned _407;
  __int128 unsigned _409;
  __int128 unsigned _411;
  __int128 unsigned _413;
  __int128 unsigned _414;
  long unsigned int _415;
  __int128 unsigned _418;
  __int128 unsigned _419;
  __int128 unsigned _420;
  __int128 unsigned _421;
  __int128 unsigned _423;
  __int128 unsigned _424;
  __int128 unsigned _425;
  __int128 unsigned _426;
  long unsigned int _427;
  long unsigned int _429;
  __int128 unsigned _431;
  long unsigned int _432;
  __int128 unsigned _434;
  long unsigned int _435;
  __int128 unsigned _437;
  __int128 unsigned _438;
  long unsigned int _439;
  __int128 unsigned _441;
  __int128 unsigned _442;
  __int128 unsigned _443;
  long unsigned int _444;
  __int128 unsigned _446;
  __int128 unsigned _447;
  long unsigned int _448;
  __int128 unsigned _450;
  __int128 unsigned _451;
  long unsigned int _453;
  __int128 unsigned _455;
  __int128 unsigned _456;
  __int128 unsigned _458;
  __int128 unsigned _459;
  __int128 unsigned _460;
  __int128 unsigned _461;
  __int128 unsigned _462;
  __int128 unsigned _463;
  __int128 unsigned _464;
  __int128 unsigned _465;
  __int128 unsigned _466;
  __int128 unsigned _467;
  long unsigned int _468;
  long unsigned int _470;
  long unsigned int _472;
  __int128 unsigned _475;
  __int128 unsigned _477;
  __int128 unsigned _479;
  __int128 unsigned _481;
  __int128 unsigned _482;
  long unsigned int _483;
  __int128 unsigned _486;
  __int128 unsigned _487;
  __int128 unsigned _488;
  __int128 unsigned _489;
  __int128 unsigned _491;
  __int128 unsigned _492;
  __int128 unsigned _493;
  __int128 unsigned _494;
  long unsigned int _495;
  long unsigned int _497;
  long unsigned int _499;
  __int128 unsigned _502;
  __int128 unsigned _504;
  __int128 unsigned _506;
  __int128 unsigned _508;
  __int128 unsigned _509;
  long unsigned int _510;
  __int128 unsigned _513;
  __int128 unsigned _514;
  __int128 unsigned _515;
  __int128 unsigned _516;
  __int128 unsigned _518;
  __int128 unsigned _519;
  __int128 unsigned _520;
  __int128 unsigned _521;
  long unsigned int _522;
  long unsigned int _524;
  __int128 unsigned _526;
  long unsigned int _527;
  __int128 unsigned _529;
  long unsigned int _530;
  __int128 unsigned _532;
  __int128 unsigned _533;
  long unsigned int _534;
  __int128 unsigned _536;
  __int128 unsigned _537;
  __int128 unsigned _538;
  long unsigned int _539;
  __int128 unsigned _541;
  __int128 unsigned _542;
  long unsigned int _543;
  __int128 unsigned _545;
  __int128 unsigned _546;
  long unsigned int _548;
  __int128 unsigned _550;
  __int128 unsigned _551;
  __int128 unsigned _553;
  __int128 unsigned _554;
  __int128 unsigned _555;
  __int128 unsigned _556;
  __int128 unsigned _557;
  __int128 unsigned _558;
  __int128 unsigned _559;
  __int128 unsigned _560;
  __int128 unsigned _561;
  __int128 unsigned _562;
  long unsigned int _563;
  long unsigned int _565;
  long unsigned int _567;
  __int128 unsigned _570;
  __int128 unsigned _572;
  __int128 unsigned _574;
  __int128 unsigned _576;
  __int128 unsigned _577;
  long unsigned int _578;
  __int128 unsigned _581;
  __int128 unsigned _582;
  __int128 unsigned _583;
  __int128 unsigned _584;
  __int128 unsigned _586;
  __int128 unsigned _587;
  __int128 unsigned _588;
  __int128 unsigned _589;
  long unsigned int _590;
  long unsigned int _592;
  long unsigned int _594;
  __int128 unsigned _597;
  __int128 unsigned _599;
  __int128 unsigned _601;
  __int128 unsigned _603;
  __int128 unsigned _604;
  long unsigned int _605;
  __int128 unsigned _608;
  __int128 unsigned _609;
  __int128 unsigned _610;
  __int128 unsigned _611;
  __int128 unsigned _613;
  __int128 unsigned _614;
  __int128 unsigned _615;
  __int128 unsigned _616;
  long unsigned int _617;
  long unsigned int _619;
  __int128 unsigned _621;
  long unsigned int _622;
  __int128 unsigned _624;
  long unsigned int _625;
  __int128 unsigned _627;
  __int128 unsigned _628;
  long unsigned int _629;
  __int128 unsigned _631;
  __int128 unsigned _632;
  __int128 unsigned _633;
  long unsigned int _634;
  __int128 unsigned _636;
  __int128 unsigned _637;
  long unsigned int _638;
  __int128 unsigned _640;
  __int128 unsigned _641;
  long unsigned int _643;
  __int128 unsigned _645;
  __int128 unsigned _646;
  __int128 unsigned _648;
  __int128 unsigned _649;
  __int128 unsigned _650;
  __int128 unsigned _651;
  __int128 unsigned _652;
  __int128 unsigned _653;
  __int128 unsigned _654;
  __int128 unsigned _655;
  __int128 unsigned _656;
  __int128 unsigned _657;
  long unsigned int _658;
  long unsigned int _660;
  long unsigned int _662;
  __int128 unsigned _665;
  __int128 unsigned _667;
  __int128 unsigned _669;
  __int128 unsigned _671;
  __int128 unsigned _672;
  long unsigned int _673;
  __int128 unsigned _676;
  __int128 unsigned _677;
  __int128 unsigned _678;
  __int128 unsigned _679;
  __int128 unsigned _681;
  __int128 unsigned _682;
  __int128 unsigned _683;
  __int128 unsigned _684;
  long unsigned int _685;
  long unsigned int _687;
  long unsigned int _689;
  __int128 unsigned _692;
  __int128 unsigned _694;
  __int128 unsigned _696;
  __int128 unsigned _698;
  __int128 unsigned _699;
  long unsigned int _700;
  __int128 unsigned _703;
  __int128 unsigned _704;
  __int128 unsigned _705;
  __int128 unsigned _706;
  __int128 unsigned _708;
  __int128 unsigned _709;
  __int128 unsigned _710;
  __int128 unsigned _711;
  long unsigned int _712;
  long unsigned int _714;
  __int128 unsigned _716;
  long unsigned int _717;
  __int128 unsigned _719;
  long unsigned int _720;
  __int128 unsigned _722;
  __int128 unsigned _723;
  long unsigned int _724;
  __int128 unsigned _726;
  __int128 unsigned _727;
  __int128 unsigned _728;
  long unsigned int _729;
  __int128 unsigned _731;
  __int128 unsigned _732;
  long unsigned int _733;
  __int128 unsigned _735;
  __int128 unsigned _736;
  long unsigned int _738;
  __int128 unsigned _740;
  __int128 unsigned _741;
  __int128 unsigned _743;
  __int128 unsigned _744;
  __int128 unsigned _745;
  __int128 unsigned _746;
  __int128 unsigned _747;
  __int128 unsigned _748;
  __int128 unsigned _749;
  __int128 unsigned _750;
  __int128 unsigned _751;
  __int128 unsigned _752;
  long unsigned int _753;
  long unsigned int _755;
  long unsigned int _757;
  __int128 unsigned _760;
  __int128 unsigned _762;
  __int128 unsigned _764;
  __int128 unsigned _766;
  __int128 unsigned _767;
  long unsigned int _768;
  __int128 unsigned _771;
  __int128 unsigned _772;
  __int128 unsigned _773;
  __int128 unsigned _774;
  __int128 unsigned _776;
  __int128 unsigned _777;
  __int128 unsigned _778;
  __int128 unsigned _779;
  long unsigned int _780;
  long unsigned int _782;
  __int128 unsigned _784;
  long unsigned int _785;
  __int128 unsigned _787;
  long unsigned int _788;
  __int128 unsigned _790;
  __int128 unsigned _791;
  long unsigned int _792;
  __int128 unsigned _794;
  __int128 unsigned _795;
  __int128 unsigned _796;
  long unsigned int _797;
  __int128 unsigned _799;
  __int128 unsigned _800;
  long unsigned int _801;
  __int128 unsigned _803;
  __int128 unsigned _804;
  long unsigned int _806;
  __int128 unsigned _808;
  __int128 unsigned _809;
  __int128 unsigned _811;
  __int128 unsigned _812;
  __int128 unsigned _813;
  __int128 unsigned _814;
  __int128 unsigned _815;
  __int128 unsigned _816;
  __int128 unsigned _817;
  __int128 unsigned _818;
  __int128 unsigned _819;
  __int128 unsigned _820;
  long unsigned int _821;
  long unsigned int _823;
  long unsigned int _825;
  __int128 unsigned _828;
  __int128 unsigned _830;
  __int128 unsigned _832;
  __int128 unsigned _834;
  __int128 unsigned _835;
  long unsigned int _836;
  __int128 unsigned _839;
  __int128 unsigned _840;
  __int128 unsigned _841;
  __int128 unsigned _842;
  __int128 unsigned _844;
  __int128 unsigned _845;
  __int128 unsigned _846;
  __int128 unsigned _847;
  long unsigned int _848;
  long unsigned int _850;
  __int128 unsigned _852;
  long unsigned int _853;
  __int128 unsigned _855;
  long unsigned int _856;
  __int128 unsigned _858;
  __int128 unsigned _859;
  long unsigned int _860;
  __int128 unsigned _862;
  __int128 unsigned _863;
  __int128 unsigned _864;
  long unsigned int _865;
  __int128 unsigned _867;
  __int128 unsigned _868;
  long unsigned int _869;
  __int128 unsigned _871;
  __int128 unsigned _872;
  long unsigned int _874;
  __int128 unsigned _876;
  __int128 unsigned _877;
  __int128 unsigned _879;
  __int128 unsigned _880;
  __int128 unsigned _881;
  __int128 unsigned _882;
  __int128 unsigned _883;
  __int128 unsigned _884;
  __int128 unsigned _885;
  __int128 unsigned _886;
  __int128 unsigned _887;
  __int128 unsigned _888;
  long unsigned int _889;
  long unsigned int _891;
  long unsigned int _893;
  __int128 unsigned _896;
  __int128 unsigned _898;
  __int128 unsigned _900;
  __int128 unsigned _902;
  __int128 unsigned _903;
  long unsigned int _904;
  __int128 unsigned _907;
  __int128 unsigned _908;
  __int128 unsigned _909;
  __int128 unsigned _910;
  __int128 unsigned _912;
  __int128 unsigned _913;
  __int128 unsigned _914;
  __int128 unsigned _915;
  long unsigned int _916;
  long unsigned int _918;
  __int128 unsigned _920;
  long unsigned int _921;
  __int128 unsigned _923;
  long unsigned int _924;
  __int128 unsigned _926;
  __int128 unsigned _927;
  long unsigned int _928;
  __int128 unsigned _930;
  __int128 unsigned _931;
  __int128 unsigned _932;
  long unsigned int _933;
  __int128 unsigned _935;
  __int128 unsigned _936;
  long unsigned int _937;
  __int128 unsigned _939;
  __int128 unsigned _940;
  long unsigned int _942;
  __int128 unsigned _944;
  __int128 unsigned _945;
  __int128 unsigned _947;
  __int128 unsigned _948;
  __int128 unsigned _949;
  __int128 unsigned _950;
  __int128 unsigned _951;
  __int128 unsigned _952;
  __int128 unsigned _953;
  __int128 unsigned _954;
  __int128 unsigned _955;
  __int128 unsigned _956;
  long unsigned int _957;
  long unsigned int _959;
  long unsigned int _961;
  __int128 unsigned _964;
  __int128 unsigned _966;
  __int128 unsigned _968;
  __int128 unsigned _970;
  __int128 unsigned _971;
  long unsigned int _972;
  __int128 unsigned _975;
  __int128 unsigned _976;
  __int128 unsigned _977;
  __int128 unsigned _978;
  __int128 unsigned _980;
  __int128 unsigned _981;
  __int128 unsigned _982;
  __int128 unsigned _983;
  long unsigned int _984;
  long unsigned int _986;
  __int128 unsigned _988;
  long unsigned int _989;
  __int128 unsigned _991;
  long unsigned int _992;
  __int128 unsigned _994;
  __int128 unsigned _995;
  long unsigned int _996;
  __int128 unsigned _998;
  __int128 unsigned _999;
  __int128 unsigned _1000;
  long unsigned int _1001;
  __int128 unsigned _1003;
  __int128 unsigned _1004;
  long unsigned int _1005;
  __int128 unsigned _1007;
  __int128 unsigned _1008;
  long unsigned int _1010;
  __int128 unsigned _1012;
  __int128 unsigned _1013;
  __int128 unsigned _1015;
  __int128 unsigned _1016;
  __int128 unsigned _1017;
  __int128 unsigned _1018;
  __int128 unsigned _1019;
  __int128 unsigned _1020;
  __int128 unsigned _1021;
  __int128 unsigned _1022;
  __int128 unsigned _1023;
  __int128 unsigned _1024;
  unsigned int ivtmp_1465;
  unsigned int ivtmp_1466;
  unsigned int ivtmp_1467;
  unsigned int ivtmp_1468;
  unsigned int ivtmp_1469;
  unsigned int ivtmp_1470;
  unsigned int ivtmp_1471;
  unsigned int ivtmp_1472;
  unsigned int ivtmp_1473;
  unsigned int ivtmp_1474;
  unsigned int ivtmp_1475;
  unsigned int ivtmp_1476;
  unsigned int ivtmp_1477;
  unsigned int ivtmp_1478;

  <bb 2> [local count: 10952168]:
  _346 = *in_16(D);
  tmp0_347 = _346 * 2;
  _348 = MEM[(const limb *)in_16(D) + 8B];
  tmp1_349 = _348 * 2;
  _350 = MEM[(const limb *)in_16(D) + 16B];
  tmp2_351 = _350 * 2;
  _353 = _346 w* _346;
  MEM[(widelimb *)&tmp] = _353;
  _355 = _346 w* tmp1_349;
  MEM[(widelimb *)&tmp + 16B] = _355;
  _357 = _346 w* tmp2_351;
  _359 = _348 w* _348;
  _360 = _357 + _359;
  MEM[(widelimb *)&tmp + 32B] = _360;
  _361 = MEM[(const limb *)in_16(D) + 24B];
  _364 = _361 w* tmp0_347;
  _365 = tmp2_351 w* _348;
  _366 = _364 + _365;
  MEM[(widelimb *)&tmp + 48B] = _366;
  _367 = tmp1_349 w* _361;
  _369 = _350 w* _350;
  _370 = _367 + _369;
  MEM[(widelimb *)&tmp + 64B] = _370;
  _371 = tmp2_351 w* _361;
  MEM[(widelimb *)&tmp + 80B] = _371;
  _372 = _361 w* _361;
  MEM[(widelimb *)&tmp + 96B] = _372;
  felem_reduce (&ftmp, &tmp);
  _305 = *in_16(D);
  _307 = MEM[(const limb *)&ftmp];
  _309 = _305 w* _307;
  MEM[(widelimb *)&tmp] = _309;
  _310 = MEM[(const limb *)&ftmp + 8B];
  _312 = _305 w* _310;
  _313 = MEM[(const limb *)in_16(D) + 8B];
  _315 = _307 w* _313;
  _316 = _312 + _315;
  MEM[(widelimb *)&tmp + 16B] = _316;
  _317 = MEM[(const limb *)&ftmp + 16B];
  _319 = _305 w* _317;
  _320 = _310 w* _313;
  _321 = _319 + _320;
  _322 = MEM[(const limb *)in_16(D) + 16B];
  _324 = _307 w* _322;
  _325 = _321 + _324;
  MEM[(widelimb *)&tmp + 32B] = _325;
  _326 = MEM[(const limb *)&ftmp + 24B];
  _328 = _305 w* _326;
  _329 = _313 w* _317;
  _73 = _328 + _329;
  _331 = MEM[(const limb *)in_16(D) + 24B];
  _333 = _307 w* _331;
  _334 = _310 w* _322;
  _71 = _73 + _333;
  _336 = _71 + _334;
  MEM[(widelimb *)&tmp + 48B] = _336;
  _337 = _313 w* _326;
  _338 = _317 w* _322;
  _339 = _337 + _338;
  _340 = _310 w* _331;
  _341 = _339 + _340;
  MEM[(widelimb *)&tmp + 64B] = _341;
  _342 = _322 w* _326;
  _343 = _317 w* _331;
  _344 = _342 + _343;
  MEM[(widelimb *)&tmp + 80B] = _344;
  _345 = _326 w* _331;
  MEM[(widelimb *)&tmp + 96B] = _345;
  felem_reduce (&ftmp, &tmp);
  _278 = MEM[(const limb *)&ftmp];
  tmp0_279 = _278 * 2;
  _280 = MEM[(const limb *)&ftmp + 8B];
  tmp1_281 = _280 * 2;
  _282 = MEM[(const limb *)&ftmp + 16B];
  tmp2_283 = _282 * 2;
  _285 = _278 w* _278;
  MEM[(widelimb *)&tmp] = _285;
  _287 = _278 w* tmp1_281;
  MEM[(widelimb *)&tmp + 16B] = _287;
  _289 = _278 w* tmp2_283;
  _291 = _280 w* _280;
  _292 = _289 + _291;
  MEM[(widelimb *)&tmp + 32B] = _292;
  _293 = MEM[(const limb *)&ftmp + 24B];
  _296 = _293 w* tmp0_279;
  _297 = tmp2_283 w* _280;
  _298 = _296 + _297;
  MEM[(widelimb *)&tmp + 48B] = _298;
  _299 = tmp1_281 w* _293;
  _301 = _282 w* _282;
  _302 = _299 + _301;
  MEM[(widelimb *)&tmp + 64B] = _302;
  _303 = tmp2_283 w* _293;
  MEM[(widelimb *)&tmp + 80B] = _303;
  _304 = _293 w* _293;
  MEM[(widelimb *)&tmp + 96B] = _304;
  felem_reduce (&ftmp, &tmp);
  _237 = *in_16(D);
  _239 = MEM[(const limb *)&ftmp];
  _241 = _237 w* _239;
  MEM[(widelimb *)&tmp] = _241;
  _242 = MEM[(const limb *)&ftmp + 8B];
  _244 = _237 w* _242;
  _245 = MEM[(const limb *)in_16(D) + 8B];
  _247 = _239 w* _245;
  _248 = _244 + _247;
  MEM[(widelimb *)&tmp + 16B] = _248;
  _249 = MEM[(const limb *)&ftmp + 16B];
  _251 = _237 w* _249;
  _252 = _242 w* _245;
  _253 = _251 + _252;
  _254 = MEM[(const limb *)in_16(D) + 16B];
  _256 = _239 w* _254;
  _257 = _253 + _256;
  MEM[(widelimb *)&tmp + 32B] = _257;
  _258 = MEM[(const limb *)&ftmp + 24B];
  _260 = _237 w* _258;
  _261 = _245 w* _249;
  _66 = _260 + _261;
  _263 = MEM[(const limb *)in_16(D) + 24B];
  _265 = _239 w* _263;
  _266 = _242 w* _254;
  _68 = _66 + _265;
  _268 = _68 + _266;
  MEM[(widelimb *)&tmp + 48B] = _268;
  _269 = _245 w* _258;
  _270 = _249 w* _254;
  _271 = _269 + _270;
  _272 = _242 w* _263;
  _273 = _271 + _272;
  MEM[(widelimb *)&tmp + 64B] = _273;
  _274 = _254 w* _258;
  _275 = _249 w* _263;
  _276 = _274 + _275;
  MEM[(widelimb *)&tmp + 80B] = _276;
  _277 = _258 w* _263;
  MEM[(widelimb *)&tmp + 96B] = _277;
  felem_reduce (&ftmp, &tmp);
  _210 = MEM[(const limb *)&ftmp];
  tmp0_211 = _210 * 2;
  _212 = MEM[(const limb *)&ftmp + 8B];
  tmp1_213 = _212 * 2;
  _214 = MEM[(const limb *)&ftmp + 16B];
  tmp2_215 = _214 * 2;
  _217 = _210 w* _210;
  MEM[(widelimb *)&tmp] = _217;
  _219 = _210 w* tmp1_213;
  MEM[(widelimb *)&tmp + 16B] = _219;
  _221 = _210 w* tmp2_215;
  _223 = _212 w* _212;
  _224 = _221 + _223;
  MEM[(widelimb *)&tmp + 32B] = _224;
  _225 = MEM[(const limb *)&ftmp + 24B];
  _228 = _225 w* tmp0_211;
  _229 = tmp2_215 w* _212;
  _230 = _228 + _229;
  MEM[(widelimb *)&tmp + 48B] = _230;
  _231 = tmp1_213 w* _225;
  _233 = _214 w* _214;
  _234 = _231 + _233;
  MEM[(widelimb *)&tmp + 64B] = _234;
  _235 = tmp2_215 w* _225;
  MEM[(widelimb *)&tmp + 80B] = _235;
  _236 = _225 w* _225;
  MEM[(widelimb *)&tmp + 96B] = _236;
  felem_reduce (&ftmp2, &tmp);
  _183 = MEM[(const limb *)&ftmp2];
  tmp0_184 = _183 * 2;
  _185 = MEM[(const limb *)&ftmp2 + 8B];
  tmp1_186 = _185 * 2;
  _187 = MEM[(const limb *)&ftmp2 + 16B];
  tmp2_188 = _187 * 2;
  _190 = _183 w* _183;
  MEM[(widelimb *)&tmp] = _190;
  _192 = _183 w* tmp1_186;
  MEM[(widelimb *)&tmp + 16B] = _192;
  _194 = _183 w* tmp2_188;
  _196 = _185 w* _185;
  _197 = _194 + _196;
  MEM[(widelimb *)&tmp + 32B] = _197;
  _198 = MEM[(const limb *)&ftmp2 + 24B];
  _201 = _198 w* tmp0_184;
  _202 = tmp2_188 w* _185;
  _203 = _201 + _202;
  MEM[(widelimb *)&tmp + 48B] = _203;
  _204 = tmp1_186 w* _198;
  _206 = _187 w* _187;
  _207 = _204 + _206;
  MEM[(widelimb *)&tmp + 64B] = _207;
  _208 = tmp2_188 w* _198;
  MEM[(widelimb *)&tmp + 80B] = _208;
  _209 = _198 w* _198;
  MEM[(widelimb *)&tmp + 96B] = _209;
  felem_reduce (&ftmp2, &tmp);
  _156 = MEM[(const limb *)&ftmp2];
  tmp0_157 = _156 * 2;
  _158 = MEM[(const limb *)&ftmp2 + 8B];
  tmp1_159 = _158 * 2;
  _160 = MEM[(const limb *)&ftmp2 + 16B];
  tmp2_161 = _160 * 2;
  _163 = _156 w* _156;
  MEM[(widelimb *)&tmp] = _163;
  _165 = _156 w* tmp1_159;
  MEM[(widelimb *)&tmp + 16B] = _165;
  _167 = _156 w* tmp2_161;
  _169 = _158 w* _158;
  _170 = _167 + _169;
  MEM[(widelimb *)&tmp + 32B] = _170;
  _171 = MEM[(const limb *)&ftmp2 + 24B];
  _174 = _171 w* tmp0_157;
  _175 = tmp2_161 w* _158;
  _176 = _174 + _175;
  MEM[(widelimb *)&tmp + 48B] = _176;
  _177 = tmp1_159 w* _171;
  _179 = _160 w* _160;
  _180 = _177 + _179;
  MEM[(widelimb *)&tmp + 64B] = _180;
  _181 = tmp2_161 w* _171;
  MEM[(widelimb *)&tmp + 80B] = _181;
  _182 = _171 w* _171;
  MEM[(widelimb *)&tmp + 96B] = _182;
  felem_reduce (&ftmp2, &tmp);
  _115 = MEM[(const limb *)&ftmp2];
  _117 = MEM[(const limb *)&ftmp];
  _119 = _115 w* _117;
  MEM[(widelimb *)&tmp] = _119;
  _120 = MEM[(const limb *)&ftmp + 8B];
  _122 = _115 w* _120;
  _123 = MEM[(const limb *)&ftmp2 + 8B];
  _125 = _117 w* _123;
  _126 = _122 + _125;
  MEM[(widelimb *)&tmp + 16B] = _126;
  _127 = MEM[(const limb *)&ftmp + 16B];
  _129 = _115 w* _127;
  _130 = _120 w* _123;
  _131 = _129 + _130;
  _132 = MEM[(const limb *)&ftmp2 + 16B];
  _134 = _117 w* _132;
  _135 = _131 + _134;
  MEM[(widelimb *)&tmp + 32B] = _135;
  _136 = MEM[(const limb *)&ftmp + 24B];
  _138 = _115 w* _136;
  _139 = _123 w* _127;
  _10 = _138 + _139;
  _141 = MEM[(const limb *)&ftmp2 + 24B];
  _143 = _117 w* _141;
  _144 = _120 w* _132;
  _9 = _10 + _143;
  _146 = _9 + _144;
  MEM[(widelimb *)&tmp + 48B] = _146;
  _147 = _123 w* _136;
  _148 = _127 w* _132;
  _149 = _147 + _148;
  _150 = _120 w* _141;
  _151 = _149 + _150;
  MEM[(widelimb *)&tmp + 64B] = _151;
  _152 = _132 w* _136;
  _153 = _127 w* _141;
  _154 = _152 + _153;
  MEM[(widelimb *)&tmp + 80B] = _154;
  _155 = _136 w* _141;
  MEM[(widelimb *)&tmp + 96B] = _155;
  felem_reduce (&ftmp, &tmp);
  _88 = MEM[(const limb *)&ftmp];
  tmp0_89 = _88 * 2;
  _90 = MEM[(const limb *)&ftmp + 8B];
  tmp1_91 = _90 * 2;
  _92 = MEM[(const limb *)&ftmp + 16B];
  tmp2_93 = _92 * 2;
  _95 = _88 w* _88;
  MEM[(widelimb *)&tmp] = _95;
  _97 = _88 w* tmp1_91;
  MEM[(widelimb *)&tmp + 16B] = _97;
  _99 = _88 w* tmp2_93;
  _101 = _90 w* _90;
  _102 = _99 + _101;
  MEM[(widelimb *)&tmp + 32B] = _102;
  _103 = MEM[(const limb *)&ftmp + 24B];
  _106 = _103 w* tmp0_89;
  _107 = tmp2_93 w* _90;
  _108 = _106 + _107;
  MEM[(widelimb *)&tmp + 48B] = _108;
  _109 = tmp1_91 w* _103;
  _111 = _92 w* _92;
  _112 = _109 + _111;
  MEM[(widelimb *)&tmp + 64B] = _112;
  _113 = tmp2_93 w* _103;
  MEM[(widelimb *)&tmp + 80B] = _113;
  _114 = _103 w* _103;
  MEM[(widelimb *)&tmp + 96B] = _114;
  felem_reduce (&ftmp2, &tmp);

  <bb 3> [local count: 54747698]:
  # ivtmp_1466 = PHI <5(2), ivtmp_1465(3)>
  _373 = MEM[(const limb *)&ftmp2];
  tmp0_374 = _373 * 2;
  _375 = MEM[(const limb *)&ftmp2 + 8B];
  tmp1_376 = _375 * 2;
  _377 = MEM[(const limb *)&ftmp2 + 16B];
  tmp2_378 = _377 * 2;
  _380 = _373 w* _373;
  MEM[(widelimb *)&tmp] = _380;
  _382 = _373 w* tmp1_376;
  MEM[(widelimb *)&tmp + 16B] = _382;
  _384 = _373 w* tmp2_378;
  _386 = _375 w* _375;
  _387 = _384 + _386;
  MEM[(widelimb *)&tmp + 32B] = _387;
  _388 = MEM[(const limb *)&ftmp2 + 24B];
  _391 = _388 w* tmp0_374;
  _392 = tmp2_378 w* _375;
  _393 = _391 + _392;
  MEM[(widelimb *)&tmp + 48B] = _393;
  _394 = tmp1_376 w* _388;
  _396 = _377 w* _377;
  _397 = _394 + _396;
  MEM[(widelimb *)&tmp + 64B] = _397;
  _398 = tmp2_378 w* _388;
  MEM[(widelimb *)&tmp + 80B] = _398;
  _399 = _388 w* _388;
  MEM[(widelimb *)&tmp + 96B] = _399;
  felem_reduce (&ftmp2, &tmp);
  ivtmp_1465 = ivtmp_1466 + 4294967295;
  if (ivtmp_1465 != 0)
    goto <bb 3>; [80.00%]
  else
    goto <bb 4>; [20.00%]

  <bb 4> [local count: 10952168]:
  _427 = MEM[(const limb *)&ftmp2];
  _429 = MEM[(const limb *)&ftmp];
  _431 = _427 w* _429;
  MEM[(widelimb *)&tmp] = _431;
  _432 = MEM[(const limb *)&ftmp + 8B];
  _434 = _427 w* _432;
  _435 = MEM[(const limb *)&ftmp2 + 8B];
  _437 = _429 w* _435;
  _438 = _434 + _437;
  MEM[(widelimb *)&tmp + 16B] = _438;
  _439 = MEM[(const limb *)&ftmp + 16B];
  _441 = _427 w* _439;
  _442 = _432 w* _435;
  _443 = _441 + _442;
  _444 = MEM[(const limb *)&ftmp2 + 16B];
  _446 = _429 w* _444;
  _447 = _443 + _446;
  MEM[(widelimb *)&tmp + 32B] = _447;
  _448 = MEM[(const limb *)&ftmp + 24B];
  _450 = _427 w* _448;
  _451 = _435 w* _439;
  _13 = _450 + _451;
  _453 = MEM[(const limb *)&ftmp2 + 24B];
  _455 = _429 w* _453;
  _456 = _432 w* _444;
  _12 = _13 + _455;
  _458 = _12 + _456;
  MEM[(widelimb *)&tmp + 48B] = _458;
  _459 = _435 w* _448;
  _460 = _439 w* _444;
  _461 = _459 + _460;
  _462 = _432 w* _453;
  _463 = _461 + _462;
  MEM[(widelimb *)&tmp + 64B] = _463;
  _464 = _444 w* _448;
  _465 = _439 w* _453;
  _466 = _464 + _465;
  MEM[(widelimb *)&tmp + 80B] = _466;
  _467 = _448 w* _453;
  MEM[(widelimb *)&tmp + 96B] = _467;
  felem_reduce (&ftmp2, &tmp);
  _400 = MEM[(const limb *)&ftmp2];
  tmp0_401 = _400 * 2;
  _402 = MEM[(const limb *)&ftmp2 + 8B];
  tmp1_403 = _402 * 2;
  _404 = MEM[(const limb *)&ftmp2 + 16B];
  tmp2_405 = _404 * 2;
  _407 = _400 w* _400;
  MEM[(widelimb *)&tmp] = _407;
  _409 = _400 w* tmp1_403;
  MEM[(widelimb *)&tmp + 16B] = _409;
  _411 = _400 w* tmp2_405;
  _413 = _402 w* _402;
  _414 = _411 + _413;
  MEM[(widelimb *)&tmp + 32B] = _414;
  _415 = MEM[(const limb *)&ftmp2 + 24B];
  _418 = _415 w* tmp0_401;
  _419 = tmp2_405 w* _402;
  _420 = _418 + _419;
  MEM[(widelimb *)&tmp + 48B] = _420;
  _421 = tmp1_403 w* _415;
  _423 = _404 w* _404;
  _424 = _421 + _423;
  MEM[(widelimb *)&tmp + 64B] = _424;
  _425 = tmp2_405 w* _415;
  MEM[(widelimb *)&tmp + 80B] = _425;
  _426 = _415 w* _415;
  MEM[(widelimb *)&tmp + 96B] = _426;
  felem_reduce (&ftmp3, &tmp);

  <bb 5> [local count: 120526434]:
  # ivtmp_1468 = PHI <11(4), ivtmp_1467(5)>
  _468 = MEM[(const limb *)&ftmp3];
  tmp0_469 = _468 * 2;
  _470 = MEM[(const limb *)&ftmp3 + 8B];
  tmp1_471 = _470 * 2;
  _472 = MEM[(const limb *)&ftmp3 + 16B];
  tmp2_473 = _472 * 2;
  _475 = _468 w* _468;
  MEM[(widelimb *)&tmp] = _475;
  _477 = _468 w* tmp1_471;
  MEM[(widelimb *)&tmp + 16B] = _477;
  _479 = _468 w* tmp2_473;
  _481 = _470 w* _470;
  _482 = _479 + _481;
  MEM[(widelimb *)&tmp + 32B] = _482;
  _483 = MEM[(const limb *)&ftmp3 + 24B];
  _486 = _483 w* tmp0_469;
  _487 = tmp2_473 w* _470;
  _488 = _486 + _487;
  MEM[(widelimb *)&tmp + 48B] = _488;
  _489 = tmp1_471 w* _483;
  _491 = _472 w* _472;
  _492 = _489 + _491;
  MEM[(widelimb *)&tmp + 64B] = _492;
  _493 = tmp2_473 w* _483;
  MEM[(widelimb *)&tmp + 80B] = _493;
  _494 = _483 w* _483;
  MEM[(widelimb *)&tmp + 96B] = _494;
  felem_reduce (&ftmp3, &tmp);
  ivtmp_1467 = ivtmp_1468 + 4294967295;
  if (ivtmp_1467 != 0)
    goto <bb 5>; [90.91%]
  else
    goto <bb 6>; [9.09%]

  <bb 6> [local count: 10952168]:
  _522 = MEM[(const limb *)&ftmp3];
  _524 = MEM[(const limb *)&ftmp2];
  _526 = _522 w* _524;
  MEM[(widelimb *)&tmp] = _526;
  _527 = MEM[(const limb *)&ftmp2 + 8B];
  _529 = _522 w* _527;
  _530 = MEM[(const limb *)&ftmp3 + 8B];
  _532 = _524 w* _530;
  _533 = _529 + _532;
  MEM[(widelimb *)&tmp + 16B] = _533;
  _534 = MEM[(const limb *)&ftmp2 + 16B];
  _536 = _522 w* _534;
  _537 = _527 w* _530;
  _538 = _536 + _537;
  _539 = MEM[(const limb *)&ftmp3 + 16B];
  _541 = _524 w* _539;
  _542 = _538 + _541;
  MEM[(widelimb *)&tmp + 32B] = _542;
  _543 = MEM[(const limb *)&ftmp2 + 24B];
  _545 = _522 w* _543;
  _546 = _530 w* _534;
  _52 = _545 + _546;
  _548 = MEM[(const limb *)&ftmp3 + 24B];
  _550 = _524 w* _548;
  _551 = _527 w* _539;
  _61 = _52 + _550;
  _553 = _61 + _551;
  MEM[(widelimb *)&tmp + 48B] = _553;
  _554 = _530 w* _543;
  _555 = _534 w* _539;
  _556 = _554 + _555;
  _557 = _527 w* _548;
  _558 = _556 + _557;
  MEM[(widelimb *)&tmp + 64B] = _558;
  _559 = _539 w* _543;
  _560 = _534 w* _548;
  _561 = _559 + _560;
  MEM[(widelimb *)&tmp + 80B] = _561;
  _562 = _543 w* _548;
  MEM[(widelimb *)&tmp + 96B] = _562;
  felem_reduce (&ftmp2, &tmp);
  _495 = MEM[(const limb *)&ftmp2];
  tmp0_496 = _495 * 2;
  _497 = MEM[(const limb *)&ftmp2 + 8B];
  tmp1_498 = _497 * 2;
  _499 = MEM[(const limb *)&ftmp2 + 16B];
  tmp2_500 = _499 * 2;
  _502 = _495 w* _495;
  MEM[(widelimb *)&tmp] = _502;
  _504 = _495 w* tmp1_498;
  MEM[(widelimb *)&tmp + 16B] = _504;
  _506 = _495 w* tmp2_500;
  _508 = _497 w* _497;
  _509 = _506 + _508;
  MEM[(widelimb *)&tmp + 32B] = _509;
  _510 = MEM[(const limb *)&ftmp2 + 24B];
  _513 = _510 w* tmp0_496;
  _514 = tmp2_500 w* _497;
  _515 = _513 + _514;
  MEM[(widelimb *)&tmp + 48B] = _515;
  _516 = tmp1_498 w* _510;
  _518 = _499 w* _499;
  _519 = _516 + _518;
  MEM[(widelimb *)&tmp + 64B] = _519;
  _520 = tmp2_500 w* _510;
  MEM[(widelimb *)&tmp + 80B] = _520;
  _521 = _510 w* _510;
  MEM[(widelimb *)&tmp + 96B] = _521;
  felem_reduce (&ftmp3, &tmp);

  <bb 7> [local count: 251689734]:
  # ivtmp_1470 = PHI <23(6), ivtmp_1469(7)>
  _563 = MEM[(const limb *)&ftmp3];
  tmp0_564 = _563 * 2;
  _565 = MEM[(const limb *)&ftmp3 + 8B];
  tmp1_566 = _565 * 2;
  _567 = MEM[(const limb *)&ftmp3 + 16B];
  tmp2_568 = _567 * 2;
  _570 = _563 w* _563;
  MEM[(widelimb *)&tmp] = _570;
  _572 = _563 w* tmp1_566;
  MEM[(widelimb *)&tmp + 16B] = _572;
  _574 = _563 w* tmp2_568;
  _576 = _565 w* _565;
  _577 = _574 + _576;
  MEM[(widelimb *)&tmp + 32B] = _577;
  _578 = MEM[(const limb *)&ftmp3 + 24B];
  _581 = _578 w* tmp0_564;
  _582 = tmp2_568 w* _565;
  _583 = _581 + _582;
  MEM[(widelimb *)&tmp + 48B] = _583;
  _584 = tmp1_566 w* _578;
  _586 = _567 w* _567;
  _587 = _584 + _586;
  MEM[(widelimb *)&tmp + 64B] = _587;
  _588 = tmp2_568 w* _578;
  MEM[(widelimb *)&tmp + 80B] = _588;
  _589 = _578 w* _578;
  MEM[(widelimb *)&tmp + 96B] = _589;
  felem_reduce (&ftmp3, &tmp);
  ivtmp_1469 = ivtmp_1470 + 4294967295;
  if (ivtmp_1469 != 0)
    goto <bb 7>; [95.65%]
  else
    goto <bb 8>; [4.35%]

  <bb 8> [local count: 10952167]:
  _617 = MEM[(const limb *)&ftmp3];
  _619 = MEM[(const limb *)&ftmp2];
  _621 = _617 w* _619;
  MEM[(widelimb *)&tmp] = _621;
  _622 = MEM[(const limb *)&ftmp2 + 8B];
  _624 = _617 w* _622;
  _625 = MEM[(const limb *)&ftmp3 + 8B];
  _627 = _619 w* _625;
  _628 = _624 + _627;
  MEM[(widelimb *)&tmp + 16B] = _628;
  _629 = MEM[(const limb *)&ftmp2 + 16B];
  _631 = _617 w* _629;
  _632 = _622 w* _625;
  _633 = _631 + _632;
  _634 = MEM[(const limb *)&ftmp3 + 16B];
  _636 = _619 w* _634;
  _637 = _633 + _636;
  MEM[(widelimb *)&tmp + 32B] = _637;
  _638 = MEM[(const limb *)&ftmp2 + 24B];
  _640 = _617 w* _638;
  _641 = _625 w* _629;
  _38 = _640 + _641;
  _643 = MEM[(const limb *)&ftmp3 + 24B];
  _645 = _619 w* _643;
  _646 = _622 w* _634;
  _47 = _38 + _645;
  _648 = _47 + _646;
  MEM[(widelimb *)&tmp + 48B] = _648;
  _649 = _625 w* _638;
  _650 = _629 w* _634;
  _651 = _649 + _650;
  _652 = _622 w* _643;
  _653 = _651 + _652;
  MEM[(widelimb *)&tmp + 64B] = _653;
  _654 = _634 w* _638;
  _655 = _629 w* _643;
  _656 = _654 + _655;
  MEM[(widelimb *)&tmp + 80B] = _656;
  _657 = _638 w* _643;
  MEM[(widelimb *)&tmp + 96B] = _657;
  felem_reduce (&ftmp3, &tmp);
  _590 = MEM[(const limb *)&ftmp3];
  tmp0_591 = _590 * 2;
  _592 = MEM[(const limb *)&ftmp3 + 8B];
  tmp1_593 = _592 * 2;
  _594 = MEM[(const limb *)&ftmp3 + 16B];
  tmp2_595 = _594 * 2;
  _597 = _590 w* _590;
  MEM[(widelimb *)&tmp] = _597;
  _599 = _590 w* tmp1_593;
  MEM[(widelimb *)&tmp + 16B] = _599;
  _601 = _590 w* tmp2_595;
  _603 = _592 w* _592;
  _604 = _601 + _603;
  MEM[(widelimb *)&tmp + 32B] = _604;
  _605 = MEM[(const limb *)&ftmp3 + 24B];
  _608 = _605 w* tmp0_591;
  _609 = tmp2_595 w* _592;
  _610 = _608 + _609;
  MEM[(widelimb *)&tmp + 48B] = _610;
  _611 = tmp1_593 w* _605;
  _613 = _594 w* _594;
  _614 = _611 + _613;
  MEM[(widelimb *)&tmp + 64B] = _614;
  _615 = tmp2_595 w* _605;
  MEM[(widelimb *)&tmp + 80B] = _615;
  _616 = _605 w* _605;
  MEM[(widelimb *)&tmp + 96B] = _616;
  felem_reduce (&ftmp4, &tmp);

  <bb 9> [local count: 515594336]:
  # ivtmp_1472 = PHI <47(8), ivtmp_1471(9)>
  _658 = MEM[(const limb *)&ftmp4];
  tmp0_659 = _658 * 2;
  _660 = MEM[(const limb *)&ftmp4 + 8B];
  tmp1_661 = _660 * 2;
  _662 = MEM[(const limb *)&ftmp4 + 16B];
  tmp2_663 = _662 * 2;
  _665 = _658 w* _658;
  MEM[(widelimb *)&tmp] = _665;
  _667 = _658 w* tmp1_661;
  MEM[(widelimb *)&tmp + 16B] = _667;
  _669 = _658 w* tmp2_663;
  _671 = _660 w* _660;
  _672 = _669 + _671;
  MEM[(widelimb *)&tmp + 32B] = _672;
  _673 = MEM[(const limb *)&ftmp4 + 24B];
  _676 = _673 w* tmp0_659;
  _677 = tmp2_663 w* _660;
  _678 = _676 + _677;
  MEM[(widelimb *)&tmp + 48B] = _678;
  _679 = tmp1_661 w* _673;
  _681 = _662 w* _662;
  _682 = _679 + _681;
  MEM[(widelimb *)&tmp + 64B] = _682;
  _683 = tmp2_663 w* _673;
  MEM[(widelimb *)&tmp + 80B] = _683;
  _684 = _673 w* _673;
  MEM[(widelimb *)&tmp + 96B] = _684;
  felem_reduce (&ftmp4, &tmp);
  ivtmp_1471 = ivtmp_1472 + 4294967295;
  if (ivtmp_1471 != 0)
    goto <bb 9>; [97.88%]
  else
    goto <bb 10>; [2.12%]

  <bb 10> [local count: 10952167]:
  _712 = MEM[(const limb *)&ftmp3];
  _714 = MEM[(const limb *)&ftmp4];
  _716 = _712 w* _714;
  MEM[(widelimb *)&tmp] = _716;
  _717 = MEM[(const limb *)&ftmp4 + 8B];
  _719 = _712 w* _717;
  _720 = MEM[(const limb *)&ftmp3 + 8B];
  _722 = _714 w* _720;
  _723 = _719 + _722;
  MEM[(widelimb *)&tmp + 16B] = _723;
  _724 = MEM[(const limb *)&ftmp4 + 16B];
  _726 = _712 w* _724;
  _727 = _717 w* _720;
  _728 = _726 + _727;
  _729 = MEM[(const limb *)&ftmp3 + 16B];
  _731 = _714 w* _729;
  _732 = _728 + _731;
  MEM[(widelimb *)&tmp + 32B] = _732;
  _733 = MEM[(const limb *)&ftmp4 + 24B];
  _735 = _712 w* _733;
  _736 = _720 w* _724;
  _17 = _735 + _736;
  _738 = MEM[(const limb *)&ftmp3 + 24B];
  _740 = _714 w* _738;
  _741 = _717 w* _729;
  _19 = _17 + _740;
  _743 = _19 + _741;
  MEM[(widelimb *)&tmp + 48B] = _743;
  _744 = _720 w* _733;
  _745 = _724 w* _729;
  _746 = _744 + _745;
  _747 = _717 w* _738;
  _748 = _746 + _747;
  MEM[(widelimb *)&tmp + 64B] = _748;
  _749 = _729 w* _733;
  _750 = _724 w* _738;
  _751 = _749 + _750;
  MEM[(widelimb *)&tmp + 80B] = _751;
  _752 = _733 w* _738;
  MEM[(widelimb *)&tmp + 96B] = _752;
  felem_reduce (&ftmp3, &tmp);
  _685 = MEM[(const limb *)&ftmp3];
  tmp0_686 = _685 * 2;
  _687 = MEM[(const limb *)&ftmp3 + 8B];
  tmp1_688 = _687 * 2;
  _689 = MEM[(const limb *)&ftmp3 + 16B];
  tmp2_690 = _689 * 2;
  _692 = _685 w* _685;
  MEM[(widelimb *)&tmp] = _692;
  _694 = _685 w* tmp1_688;
  MEM[(widelimb *)&tmp + 16B] = _694;
  _696 = _685 w* tmp2_690;
  _698 = _687 w* _687;
  _699 = _696 + _698;
  MEM[(widelimb *)&tmp + 32B] = _699;
  _700 = MEM[(const limb *)&ftmp3 + 24B];
  _703 = _700 w* tmp0_686;
  _704 = tmp2_690 w* _687;
  _705 = _703 + _704;
  MEM[(widelimb *)&tmp + 48B] = _705;
  _706 = tmp1_688 w* _700;
  _708 = _689 w* _689;
  _709 = _706 + _708;
  MEM[(widelimb *)&tmp + 64B] = _709;
  _710 = tmp2_690 w* _700;
  MEM[(widelimb *)&tmp + 80B] = _710;
  _711 = _700 w* _700;
  MEM[(widelimb *)&tmp + 96B] = _711;
  felem_reduce (&ftmp4, &tmp);

  <bb 11> [local count: 251689728]:
  # ivtmp_1474 = PHI <23(10), ivtmp_1473(11)>
  _753 = MEM[(const limb *)&ftmp4];
  tmp0_754 = _753 * 2;
  _755 = MEM[(const limb *)&ftmp4 + 8B];
  tmp1_756 = _755 * 2;
  _757 = MEM[(const limb *)&ftmp4 + 16B];
  tmp2_758 = _757 * 2;
  _760 = _753 w* _753;
  MEM[(widelimb *)&tmp] = _760;
  _762 = _753 w* tmp1_756;
  MEM[(widelimb *)&tmp + 16B] = _762;
  _764 = _753 w* tmp2_758;
  _766 = _755 w* _755;
  _767 = _764 + _766;
  MEM[(widelimb *)&tmp + 32B] = _767;
  _768 = MEM[(const limb *)&ftmp4 + 24B];
  _771 = _768 w* tmp0_754;
  _772 = tmp2_758 w* _755;
  _773 = _771 + _772;
  MEM[(widelimb *)&tmp + 48B] = _773;
  _774 = tmp1_756 w* _768;
  _776 = _757 w* _757;
  _777 = _774 + _776;
  MEM[(widelimb *)&tmp + 64B] = _777;
  _778 = tmp2_758 w* _768;
  MEM[(widelimb *)&tmp + 80B] = _778;
  _779 = _768 w* _768;
  MEM[(widelimb *)&tmp + 96B] = _779;
  felem_reduce (&ftmp4, &tmp);
  ivtmp_1473 = ivtmp_1474 + 4294967295;
  if (ivtmp_1473 != 0)
    goto <bb 11>; [95.65%]
  else
    goto <bb 12>; [4.35%]

  <bb 12> [local count: 10952167]:
  _780 = MEM[(const limb *)&ftmp2];
  _782 = MEM[(const limb *)&ftmp4];
  _784 = _780 w* _782;
  MEM[(widelimb *)&tmp] = _784;
  _785 = MEM[(const limb *)&ftmp4 + 8B];
  _787 = _780 w* _785;
  _788 = MEM[(const limb *)&ftmp2 + 8B];
  _790 = _782 w* _788;
  _791 = _787 + _790;
  MEM[(widelimb *)&tmp + 16B] = _791;
  _792 = MEM[(const limb *)&ftmp4 + 16B];
  _794 = _780 w* _792;
  _795 = _785 w* _788;
  _796 = _794 + _795;
  _797 = MEM[(const limb *)&ftmp2 + 16B];
  _799 = _782 w* _797;
  _800 = _796 + _799;
  MEM[(widelimb *)&tmp + 32B] = _800;
  _801 = MEM[(const limb *)&ftmp4 + 24B];
  _803 = _780 w* _801;
  _804 = _788 w* _792;
  _2 = _803 + _804;
  _806 = MEM[(const limb *)&ftmp2 + 24B];
  _808 = _782 w* _806;
  _809 = _785 w* _797;
  _40 = _2 + _808;
  _811 = _40 + _809;
  MEM[(widelimb *)&tmp + 48B] = _811;
  _812 = _788 w* _801;
  _813 = _792 w* _797;
  _814 = _812 + _813;
  _815 = _785 w* _806;
  _816 = _814 + _815;
  MEM[(widelimb *)&tmp + 64B] = _816;
  _817 = _797 w* _801;
  _818 = _792 w* _806;
  _819 = _817 + _818;
  MEM[(widelimb *)&tmp + 80B] = _819;
  _820 = _801 w* _806;
  MEM[(widelimb *)&tmp + 96B] = _820;
  felem_reduce (&ftmp2, &tmp);

  <bb 13> [local count: 65690009]:
  # ivtmp_1476 = PHI <6(12), ivtmp_1475(13)>
  _821 = MEM[(const limb *)&ftmp2];
  tmp0_822 = _821 * 2;
  _823 = MEM[(const limb *)&ftmp2 + 8B];
  tmp1_824 = _823 * 2;
  _825 = MEM[(const limb *)&ftmp2 + 16B];
  tmp2_826 = _825 * 2;
  _828 = _821 w* _821;
  MEM[(widelimb *)&tmp] = _828;
  _830 = _821 w* tmp1_824;
  MEM[(widelimb *)&tmp + 16B] = _830;
  _832 = _821 w* tmp2_826;
  _834 = _823 w* _823;
  _835 = _832 + _834;
  MEM[(widelimb *)&tmp + 32B] = _835;
  _836 = MEM[(const limb *)&ftmp2 + 24B];
  _839 = _836 w* tmp0_822;
  _840 = tmp2_826 w* _823;
  _841 = _839 + _840;
  MEM[(widelimb *)&tmp + 48B] = _841;
  _842 = tmp1_824 w* _836;
  _844 = _825 w* _825;
  _845 = _842 + _844;
  MEM[(widelimb *)&tmp + 64B] = _845;
  _846 = tmp2_826 w* _836;
  MEM[(widelimb *)&tmp + 80B] = _846;
  _847 = _836 w* _836;
  MEM[(widelimb *)&tmp + 96B] = _847;
  felem_reduce (&ftmp2, &tmp);
  ivtmp_1475 = ivtmp_1476 + 4294967295;
  if (ivtmp_1475 != 0)
    goto <bb 13>; [83.33%]
  else
    goto <bb 14>; [16.67%]

  <bb 14> [local count: 10952167]:
  _916 = MEM[(const limb *)&ftmp2];
  _918 = MEM[(const limb *)&ftmp];
  _920 = _916 w* _918;
  MEM[(widelimb *)&tmp] = _920;
  _921 = MEM[(const limb *)&ftmp + 8B];
  _923 = _916 w* _921;
  _924 = MEM[(const limb *)&ftmp2 + 8B];
  _926 = _918 w* _924;
  _927 = _923 + _926;
  MEM[(widelimb *)&tmp + 16B] = _927;
  _928 = MEM[(const limb *)&ftmp + 16B];
  _930 = _916 w* _928;
  _931 = _921 w* _924;
  _932 = _930 + _931;
  _933 = MEM[(const limb *)&ftmp2 + 16B];
  _935 = _918 w* _933;
  _936 = _932 + _935;
  MEM[(widelimb *)&tmp + 32B] = _936;
  _937 = MEM[(const limb *)&ftmp + 24B];
  _939 = _916 w* _937;
  _940 = _924 w* _928;
  _45 = _939 + _940;
  _942 = MEM[(const limb *)&ftmp2 + 24B];
  _944 = _918 w* _942;
  _945 = _921 w* _933;
  _3 = _45 + _944;
  _947 = _3 + _945;
  MEM[(widelimb *)&tmp + 48B] = _947;
  _948 = _924 w* _937;
  _949 = _928 w* _933;
  _950 = _948 + _949;
  _951 = _921 w* _942;
  _952 = _950 + _951;
  MEM[(widelimb *)&tmp + 64B] = _952;
  _953 = _933 w* _937;
  _954 = _928 w* _942;
  _955 = _953 + _954;
  MEM[(widelimb *)&tmp + 80B] = _955;
  _956 = _937 w* _942;
  MEM[(widelimb *)&tmp + 96B] = _956;
  felem_reduce (&ftmp, &tmp);
  _889 = MEM[(const limb *)&ftmp];
  tmp0_890 = _889 * 2;
  _891 = MEM[(const limb *)&ftmp + 8B];
  tmp1_892 = _891 * 2;
  _893 = MEM[(const limb *)&ftmp + 16B];
  tmp2_894 = _893 * 2;
  _896 = _889 w* _889;
  MEM[(widelimb *)&tmp] = _896;
  _898 = _889 w* tmp1_892;
  MEM[(widelimb *)&tmp + 16B] = _898;
  _900 = _889 w* tmp2_894;
  _902 = _891 w* _891;
  _903 = _900 + _902;
  MEM[(widelimb *)&tmp + 32B] = _903;
  _904 = MEM[(const limb *)&ftmp + 24B];
  _907 = _904 w* tmp0_890;
  _908 = tmp2_894 w* _891;
  _909 = _907 + _908;
  MEM[(widelimb *)&tmp + 48B] = _909;
  _910 = tmp1_892 w* _904;
  _912 = _893 w* _893;
  _913 = _910 + _912;
  MEM[(widelimb *)&tmp + 64B] = _913;
  _914 = tmp2_894 w* _904;
  MEM[(widelimb *)&tmp + 80B] = _914;
  _915 = _904 w* _904;
  MEM[(widelimb *)&tmp + 96B] = _915;
  felem_reduce (&ftmp, &tmp);
  _848 = MEM[(const limb *)&ftmp];
  _850 = *in_16(D);
  _852 = _848 w* _850;
  MEM[(widelimb *)&tmp] = _852;
  _853 = MEM[(const limb *)in_16(D) + 8B];
  _855 = _848 w* _853;
  _856 = MEM[(const limb *)&ftmp + 8B];
  _858 = _850 w* _856;
  _859 = _855 + _858;
  MEM[(widelimb *)&tmp + 16B] = _859;
  _860 = MEM[(const limb *)in_16(D) + 16B];
  _862 = _848 w* _860;
  _863 = _853 w* _856;
  _864 = _862 + _863;
  _865 = MEM[(const limb *)&ftmp + 16B];
  _867 = _850 w* _865;
  _868 = _864 + _867;
  MEM[(widelimb *)&tmp + 32B] = _868;
  _869 = MEM[(const limb *)in_16(D) + 24B];
  _871 = _848 w* _869;
  _872 = _856 w* _860;
  _5 = _871 + _872;
  _874 = MEM[(const limb *)&ftmp + 24B];
  _876 = _850 w* _874;
  _877 = _853 w* _865;
  _54 = _5 + _876;
  _879 = _54 + _877;
  MEM[(widelimb *)&tmp + 48B] = _879;
  _880 = _856 w* _869;
  _881 = _860 w* _865;
  _882 = _880 + _881;
  _883 = _853 w* _874;
  _884 = _882 + _883;
  MEM[(widelimb *)&tmp + 64B] = _884;
  _885 = _865 w* _869;
  _886 = _860 w* _874;
  _887 = _885 + _886;
  MEM[(widelimb *)&tmp + 80B] = _887;
  _888 = _869 w* _874;
  MEM[(widelimb *)&tmp + 96B] = _888;
  felem_reduce (&ftmp, &tmp);

  <bb 15> [local count: 1062789658]:
  # ivtmp_1478 = PHI <97(14), ivtmp_1477(15)>
  _957 = MEM[(const limb *)&ftmp];
  tmp0_958 = _957 * 2;
  _959 = MEM[(const limb *)&ftmp + 8B];
  tmp1_960 = _959 * 2;
  _961 = MEM[(const limb *)&ftmp + 16B];
  tmp2_962 = _961 * 2;
  _964 = _957 w* _957;
  MEM[(widelimb *)&tmp] = _964;
  _966 = _957 w* tmp1_960;
  MEM[(widelimb *)&tmp + 16B] = _966;
  _968 = _957 w* tmp2_962;
  _970 = _959 w* _959;
  _971 = _968 + _970;
  MEM[(widelimb *)&tmp + 32B] = _971;
  _972 = MEM[(const limb *)&ftmp + 24B];
  _975 = _972 w* tmp0_958;
  _976 = tmp2_962 w* _959;
  _977 = _975 + _976;
  MEM[(widelimb *)&tmp + 48B] = _977;
  _978 = tmp1_960 w* _972;
  _980 = _961 w* _961;
  _981 = _978 + _980;
  MEM[(widelimb *)&tmp + 64B] = _981;
  _982 = tmp2_962 w* _972;
  MEM[(widelimb *)&tmp + 80B] = _982;
  _983 = _972 w* _972;
  MEM[(widelimb *)&tmp + 96B] = _983;
  felem_reduce (&ftmp, &tmp);
  ivtmp_1477 = ivtmp_1478 + 4294967295;
  if (ivtmp_1477 != 0)
    goto <bb 15>; [98.97%]
  else
    goto <bb 16>; [1.03%]

  <bb 16> [local count: 10952167]:
  _984 = MEM[(const limb *)&ftmp];
  _986 = MEM[(const limb *)&ftmp3];
  _988 = _984 w* _986;
  MEM[(widelimb *)&tmp] = _988;
  _989 = MEM[(const limb *)&ftmp3 + 8B];
  _991 = _984 w* _989;
  _992 = MEM[(const limb *)&ftmp + 8B];
  _994 = _986 w* _992;
  _995 = _991 + _994;
  MEM[(widelimb *)&tmp + 16B] = _995;
  _996 = MEM[(const limb *)&ftmp3 + 16B];
  _998 = _984 w* _996;
  _999 = _989 w* _992;
  _1000 = _998 + _999;
  _1001 = MEM[(const limb *)&ftmp + 16B];
  _1003 = _986 w* _1001;
  _1004 = _1000 + _1003;
  MEM[(widelimb *)&tmp + 32B] = _1004;
  _1005 = MEM[(const limb *)&ftmp3 + 24B];
  _1007 = _984 w* _1005;
  _1008 = _992 w* _996;
  _59 = _1007 + _1008;
  _1010 = MEM[(const limb *)&ftmp + 24B];
  _1012 = _986 w* _1010;
  _1013 = _989 w* _1001;
  _6 = _59 + _1012;
  _1015 = _6 + _1013;
  MEM[(widelimb *)&tmp + 48B] = _1015;
  _1016 = _992 w* _1005;
  _1017 = _996 w* _1001;
  _1018 = _1016 + _1017;
  _1019 = _989 w* _1010;
  _1020 = _1018 + _1019;
  MEM[(widelimb *)&tmp + 64B] = _1020;
  _1021 = _1001 w* _1005;
  _1022 = _996 w* _1010;
  _1023 = _1021 + _1022;
  MEM[(widelimb *)&tmp + 80B] = _1023;
  _1024 = _1005 w* _1010;
  MEM[(widelimb *)&tmp + 96B] = _1024;
  felem_reduce (out_81(D), &tmp);
  ftmp ={v} {CLOBBER};
  ftmp2 ={v} {CLOBBER};
  ftmp3 ={v} {CLOBBER};
  ftmp4 ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  return;

}



;; Function ec_GFp_nistp224_point_get_affine_coordinates.part.3 (ec_GFp_nistp224_point_get_affine_coordinates.part.3, funcdef_no=442, decl_uid=11103, cgraph_uid=400, symbol_order=531)

ec_GFp_nistp224_point_get_affine_coordinates.part.3 (const struct EC_POINT * point, struct BIGNUM * x, struct BIGNUM * y)
{
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb z1[4];
  limb z2[4];
  limb x_in[4];
  limb y_in[4];
  limb x_out[4];
  limb y_out[4];
  widelimb tmp[7];
  struct BIGNUM * _2;
  int _3;
  struct BIGNUM * _4;
  int _5;
  struct BIGNUM * _6;
  int _7;
  struct BIGNUM * _9;
  struct BIGNUM * _11;
  int _12;
  __int128 unsigned _13;
  __int128 unsigned _23;
  __int128 unsigned _28;
  long unsigned int _42;
  long unsigned int _44;
  __int128 unsigned _46;
  long unsigned int _47;
  __int128 unsigned _49;
  long unsigned int _50;
  __int128 unsigned _52;
  __int128 unsigned _53;
  long unsigned int _54;
  __int128 unsigned _56;
  __int128 unsigned _57;
  __int128 unsigned _58;
  long unsigned int _59;
  __int128 unsigned _61;
  __int128 unsigned _62;
  long unsigned int _63;
  __int128 unsigned _65;
  __int128 unsigned _66;
  long unsigned int _68;
  __int128 unsigned _70;
  __int128 unsigned _71;
  __int128 unsigned _73;
  __int128 unsigned _74;
  __int128 unsigned _75;
  __int128 unsigned _76;
  __int128 unsigned _77;
  __int128 unsigned _78;
  __int128 unsigned _79;
  __int128 unsigned _80;
  __int128 unsigned _81;
  __int128 unsigned _82;
  long unsigned int _83;
  long unsigned int _85;
  long unsigned int _87;
  __int128 unsigned _90;
  __int128 unsigned _92;
  __int128 unsigned _94;
  __int128 unsigned _96;
  __int128 unsigned _97;
  long unsigned int _98;
  __int128 unsigned _101;
  __int128 unsigned _102;
  __int128 unsigned _103;
  __int128 unsigned _104;
  __int128 unsigned _106;
  __int128 unsigned _107;
  __int128 unsigned _108;
  __int128 unsigned _109;
  long unsigned int _110;
  long unsigned int _112;
  __int128 unsigned _114;
  long unsigned int _115;
  __int128 unsigned _117;
  long unsigned int _118;
  __int128 unsigned _120;
  __int128 unsigned _121;
  long unsigned int _122;
  __int128 unsigned _124;
  __int128 unsigned _125;
  __int128 unsigned _126;
  long unsigned int _127;
  __int128 unsigned _129;
  __int128 unsigned _130;
  long unsigned int _131;
  __int128 unsigned _133;
  __int128 unsigned _134;
  long unsigned int _136;
  __int128 unsigned _138;
  __int128 unsigned _139;
  __int128 unsigned _141;
  __int128 unsigned _142;
  __int128 unsigned _143;
  __int128 unsigned _144;
  __int128 unsigned _145;
  __int128 unsigned _146;
  __int128 unsigned _147;
  __int128 unsigned _148;
  __int128 unsigned _149;
  __int128 unsigned _150;
  long unsigned int _151;
  long unsigned int _153;
  __int128 unsigned _155;
  long unsigned int _156;
  __int128 unsigned _158;
  long unsigned int _159;
  __int128 unsigned _161;
  __int128 unsigned _162;
  long unsigned int _163;
  __int128 unsigned _165;
  __int128 unsigned _166;
  __int128 unsigned _167;
  long unsigned int _168;
  __int128 unsigned _170;
  __int128 unsigned _171;
  long unsigned int _172;
  __int128 unsigned _174;
  __int128 unsigned _175;
  long unsigned int _177;
  __int128 unsigned _179;
  __int128 unsigned _180;
  __int128 unsigned _182;
  __int128 unsigned _183;
  __int128 unsigned _184;
  __int128 unsigned _185;
  __int128 unsigned _186;
  __int128 unsigned _187;
  __int128 unsigned _188;
  __int128 unsigned _189;
  __int128 unsigned _190;
  __int128 unsigned _191;
  __int128 unsigned _220;
  __int128 unsigned _222;
  __int128 unsigned _223;

  <bb 2> [local count: 1073741825]:
  _2 = point_1(D)->X;
  _3 = BN_to_felem (&x_in, _2);
  if (_3 == 0)
    goto <bb 3>; [51.12%]
  else
    goto <bb 4>; [48.88%]

  <bb 3> [local count: 948343008]:
  goto <bb 13>; [100.00%]

  <bb 4> [local count: 524845004]:
  _4 = point_1(D)->Y;
  _5 = BN_to_felem (&y_in, _4);
  if (_5 == 0)
    goto <bb 3>; [51.12%]
  else
    goto <bb 5>; [48.88%]

  <bb 5> [local count: 256544238]:
  _6 = point_1(D)->Z;
  _7 = BN_to_felem (&z1, _6);
  if (_7 == 0)
    goto <bb 3>; [51.12%]
  else
    goto <bb 6>; [48.88%]

  <bb 6> [local count: 125398823]:
  felem_inv (&z2, &z1);
  _83 = MEM[(const limb *)&z2];
  tmp0_84 = _83 * 2;
  _85 = MEM[(const limb *)&z2 + 8B];
  tmp1_86 = _85 * 2;
  _87 = MEM[(const limb *)&z2 + 16B];
  tmp2_88 = _87 * 2;
  _90 = _83 w* _83;
  MEM[(widelimb *)&tmp] = _90;
  _92 = _83 w* tmp1_86;
  MEM[(widelimb *)&tmp + 16B] = _92;
  _94 = _83 w* tmp2_88;
  _96 = _85 w* _85;
  _97 = _94 + _96;
  MEM[(widelimb *)&tmp + 32B] = _97;
  _98 = MEM[(const limb *)&z2 + 24B];
  _101 = _98 w* tmp0_84;
  _102 = tmp2_88 w* _85;
  _103 = _101 + _102;
  MEM[(widelimb *)&tmp + 48B] = _103;
  _104 = tmp1_86 w* _98;
  _106 = _87 w* _87;
  _107 = _104 + _106;
  MEM[(widelimb *)&tmp + 64B] = _107;
  _108 = tmp2_88 w* _98;
  MEM[(widelimb *)&tmp + 80B] = _108;
  _109 = _98 w* _98;
  MEM[(widelimb *)&tmp + 96B] = _109;
  felem_reduce (&z1, &tmp);
  _42 = MEM[(const limb *)&x_in];
  _44 = MEM[(const limb *)&z1];
  _46 = _42 w* _44;
  MEM[(widelimb *)&tmp] = _46;
  _47 = MEM[(const limb *)&z1 + 8B];
  _49 = _42 w* _47;
  _50 = MEM[(const limb *)&x_in + 8B];
  _52 = _44 w* _50;
  _53 = _49 + _52;
  MEM[(widelimb *)&tmp + 16B] = _53;
  _54 = MEM[(const limb *)&z1 + 16B];
  _56 = _42 w* _54;
  _57 = _47 w* _50;
  _58 = _56 + _57;
  _59 = MEM[(const limb *)&x_in + 16B];
  _61 = _44 w* _59;
  _62 = _58 + _61;
  MEM[(widelimb *)&tmp + 32B] = _62;
  _63 = MEM[(const limb *)&z1 + 24B];
  _65 = _42 w* _63;
  _66 = _50 w* _54;
  _222 = _65 + _66;
  _68 = MEM[(const limb *)&x_in + 24B];
  _70 = _44 w* _68;
  _71 = _47 w* _59;
  _223 = _70 + _222;
  _73 = _71 + _223;
  MEM[(widelimb *)&tmp + 48B] = _73;
  _74 = _50 w* _63;
  _75 = _54 w* _59;
  _76 = _74 + _75;
  _77 = _47 w* _68;
  _78 = _76 + _77;
  MEM[(widelimb *)&tmp + 64B] = _78;
  _79 = _59 w* _63;
  _80 = _54 w* _68;
  _81 = _79 + _80;
  MEM[(widelimb *)&tmp + 80B] = _81;
  _82 = _63 w* _68;
  MEM[(widelimb *)&tmp + 96B] = _82;
  felem_reduce (&x_in, &tmp);
  felem_contract (&x_out, &x_in);
  if (x_8(D) != 0B)
    goto <bb 7>; [70.00%]
  else
    goto <bb 9>; [30.00%]

  <bb 7> [local count: 87779176]:
  _9 = felem_to_BN (x_8(D), &x_out);
  if (_9 == 0B)
    goto <bb 8>; [9.81%]
  else
    goto <bb 9>; [90.19%]

  <bb 8> [local count: 8611137]:
  ERR_put_error (16, 226, 3, "ecp_nistp224.c", 1350);
  goto <bb 13>; [100.00%]

  <bb 9> [local count: 116787686]:
  _151 = MEM[(const limb *)&z1];
  _153 = MEM[(const limb *)&z2];
  _155 = _151 w* _153;
  MEM[(widelimb *)&tmp] = _155;
  _156 = MEM[(const limb *)&z2 + 8B];
  _158 = _151 w* _156;
  _159 = MEM[(const limb *)&z1 + 8B];
  _161 = _153 w* _159;
  _162 = _158 + _161;
  MEM[(widelimb *)&tmp + 16B] = _162;
  _163 = MEM[(const limb *)&z2 + 16B];
  _165 = _151 w* _163;
  _166 = _156 w* _159;
  _167 = _165 + _166;
  _168 = MEM[(const limb *)&z1 + 16B];
  _170 = _153 w* _168;
  _171 = _167 + _170;
  MEM[(widelimb *)&tmp + 32B] = _171;
  _172 = MEM[(const limb *)&z2 + 24B];
  _174 = _151 w* _172;
  _175 = _159 w* _163;
  _23 = _174 + _175;
  _177 = MEM[(const limb *)&z1 + 24B];
  _179 = _153 w* _177;
  _180 = _156 w* _168;
  _220 = _23 + _179;
  _182 = _180 + _220;
  MEM[(widelimb *)&tmp + 48B] = _182;
  _183 = _159 w* _172;
  _184 = _163 w* _168;
  _185 = _183 + _184;
  _186 = _156 w* _177;
  _187 = _185 + _186;
  MEM[(widelimb *)&tmp + 64B] = _187;
  _188 = _168 w* _172;
  _189 = _163 w* _177;
  _190 = _188 + _189;
  MEM[(widelimb *)&tmp + 80B] = _190;
  _191 = _172 w* _177;
  MEM[(widelimb *)&tmp + 96B] = _191;
  felem_reduce (&z1, &tmp);
  _110 = MEM[(const limb *)&y_in];
  _112 = MEM[(const limb *)&z1];
  _114 = _110 w* _112;
  MEM[(widelimb *)&tmp] = _114;
  _115 = MEM[(const limb *)&z1 + 8B];
  _117 = _110 w* _115;
  _118 = MEM[(const limb *)&y_in + 8B];
  _120 = _112 w* _118;
  _121 = _117 + _120;
  MEM[(widelimb *)&tmp + 16B] = _121;
  _122 = MEM[(const limb *)&z1 + 16B];
  _124 = _110 w* _122;
  _125 = _115 w* _118;
  _126 = _124 + _125;
  _127 = MEM[(const limb *)&y_in + 16B];
  _129 = _112 w* _127;
  _130 = _126 + _129;
  MEM[(widelimb *)&tmp + 32B] = _130;
  _131 = MEM[(const limb *)&z1 + 24B];
  _133 = _110 w* _131;
  _134 = _118 w* _122;
  _28 = _133 + _134;
  _136 = MEM[(const limb *)&y_in + 24B];
  _138 = _112 w* _136;
  _139 = _115 w* _127;
  _13 = _28 + _138;
  _141 = _13 + _139;
  MEM[(widelimb *)&tmp + 48B] = _141;
  _142 = _118 w* _131;
  _143 = _122 w* _127;
  _144 = _142 + _143;
  _145 = _115 w* _136;
  _146 = _144 + _145;
  MEM[(widelimb *)&tmp + 64B] = _146;
  _147 = _127 w* _131;
  _148 = _122 w* _136;
  _149 = _147 + _148;
  MEM[(widelimb *)&tmp + 80B] = _149;
  _150 = _131 w* _136;
  MEM[(widelimb *)&tmp + 96B] = _150;
  felem_reduce (&y_in, &tmp);
  felem_contract (&y_out, &y_in);
  if (y_10(D) != 0B)
    goto <bb 11>; [53.47%]
  else
    goto <bb 10>; [46.53%]

  <bb 10> [local count: 110661697]:
  goto <bb 13>; [100.00%]

  <bb 11> [local count: 62446376]:
  _11 = felem_to_BN (y_10(D), &y_out);
  if (_11 == 0B)
    goto <bb 12>; [9.81%]
  else
    goto <bb 10>; [90.19%]

  <bb 12> [local count: 6125989]:
  ERR_put_error (16, 226, 3, "ecp_nistp224.c", 1362);

  <bb 13> [local count: 1073741824]:
  # _12 = PHI <0(3), 0(8), 0(12), 1(10)>
  z1 ={v} {CLOBBER};
  z2 ={v} {CLOBBER};
  x_in ={v} {CLOBBER};
  y_in ={v} {CLOBBER};
  x_out ={v} {CLOBBER};
  y_out ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  return _12;

}



;; Function ec_GFp_nistp224_point_get_affine_coordinates (ec_GFp_nistp224_point_get_affine_coordinates, funcdef_no=434, decl_uid=10054, cgraph_uid=434, symbol_order=436)

ec_GFp_nistp224_point_get_affine_coordinates (const struct EC_GROUP * group, const struct EC_POINT * point, struct BIGNUM * x, struct BIGNUM * y, struct BN_CTX * ctx)
{
  int _1;
  int _2;
  int _10;

  <bb 2> [local count: 1073741825]:
  _1 = EC_POINT_is_at_infinity (group_5(D), point_6(D));
  if (_1 != 0)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  ERR_put_error (16, 226, 106, "ecp_nistp224.c", 1335);
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 708669601]:
  _10 = ec_GFp_nistp224_point_get_affine_coordinates.part.3 (point_6(D), x_9(D), y_11(D)); [tail call]

  <bb 5> [local count: 1073741825]:
  # _2 = PHI <0(3), _10(4)>
  return _2;

}



;; Function point_double (point_double, funcdef_no=424, decl_uid=10539, cgraph_uid=424, symbol_order=426)

point_double (limb * x_out, limb * y_out, limb * z_out, const limb * x_in, const limb * y_in, const limb * z_in)
{
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb alpha[4];
  limb beta[4];
  limb gamma[4];
  limb delta[4];
  widelimb tmp[7];
  __int128 unsigned _33;
  __int128 unsigned _35;
  __int128 unsigned _37;
  __int128 unsigned _39;
  __int128 unsigned _41;
  __int128 unsigned _43;
  __int128 unsigned _45;
  long unsigned int _46;
  long unsigned int _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _64;
  long unsigned int _65;
  __int128 unsigned _75;
  __int128 unsigned _76;
  __int128 unsigned _78;
  __int128 unsigned _79;
  __int128 unsigned _81;
  __int128 unsigned _82;
  __int128 unsigned _84;
  __int128 unsigned _85;
  long unsigned int _86;
  long unsigned int _87;
  long unsigned int _88;
  long unsigned int _89;
  long unsigned int _90;
  long unsigned int _91;
  long unsigned int _92;
  long unsigned int _93;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int _96;
  long unsigned int _97;
  long unsigned int _98;
  long unsigned int _99;
  long unsigned int _100;
  long unsigned int _101;
  long unsigned int _102;
  long unsigned int _103;
  long unsigned int _104;
  long unsigned int _105;
  long unsigned int _106;
  long unsigned int _107;
  long unsigned int _108;
  long unsigned int _109;
  __int128 unsigned _111;
  __int128 unsigned _115;
  __int128 unsigned _117;
  __int128 unsigned _118;
  __int128 unsigned _119;
  __int128 unsigned _120;
  __int128 unsigned _121;
  __int128 unsigned _122;
  __int128 unsigned _123;
  __int128 unsigned _124;
  __int128 unsigned _125;
  long unsigned int _126;
  long unsigned int _127;
  long unsigned int _128;
  long unsigned int _129;
  long unsigned int _130;
  long unsigned int _131;
  long unsigned int _132;
  long unsigned int _133;
  long unsigned int _134;
  long unsigned int _135;
  long unsigned int _136;
  long unsigned int _137;
  long unsigned int _139;
  long unsigned int _141;
  long unsigned int _143;
  long unsigned int _145;
  long unsigned int _154;
  long unsigned int _155;
  long unsigned int _156;
  long unsigned int _157;
  long unsigned int _158;
  long unsigned int _159;
  long unsigned int _160;
  long unsigned int _161;
  long unsigned int _162;
  long unsigned int _163;
  long unsigned int _164;
  long unsigned int _165;
  __int128 unsigned _167;
  __int128 unsigned _168;
  __int128 unsigned _169;
  __int128 unsigned _170;
  __int128 unsigned _171;
  __int128 unsigned _172;
  __int128 unsigned _174;
  __int128 unsigned _175;
  __int128 unsigned _176;
  __int128 unsigned _177;
  __int128 unsigned _178;
  __int128 unsigned _179;
  __int128 unsigned _180;
  __int128 unsigned _181;
  __int128 unsigned _182;
  __int128 unsigned _183;
  __int128 unsigned _184;
  __int128 unsigned _185;
  __int128 unsigned _194;
  __int128 unsigned _195;
  __int128 unsigned _196;
  __int128 unsigned _197;
  long unsigned int _206;
  long unsigned int _207;
  long unsigned int _208;
  long unsigned int _209;
  __int128 unsigned _211;
  __int128 unsigned _212;
  __int128 unsigned _228;
  __int128 unsigned _230;
  __int128 unsigned _232;
  __int128 unsigned _234;
  __int128 unsigned _236;
  __int128 unsigned _238;
  __int128 unsigned _240;
  long unsigned int _241;
  long unsigned int _243;
  long unsigned int _245;
  __int128 unsigned _248;
  __int128 unsigned _252;
  __int128 unsigned _254;
  __int128 unsigned _255;
  long unsigned int _256;
  __int128 unsigned _259;
  __int128 unsigned _260;
  __int128 unsigned _261;
  __int128 unsigned _262;
  __int128 unsigned _264;
  __int128 unsigned _265;
  __int128 unsigned _267;
  long unsigned int _268;
  __int128 unsigned _272;
  __int128 unsigned _275;
  long unsigned int _276;
  __int128 unsigned _278;
  __int128 unsigned _282;
  __int128 unsigned _283;
  long unsigned int _285;
  __int128 unsigned _287;
  __int128 unsigned _291;
  __int128 unsigned _292;
  long unsigned int _294;
  __int128 unsigned _296;
  __int128 unsigned _297;
  __int128 unsigned _300;
  __int128 unsigned _301;
  __int128 unsigned _303;
  __int128 unsigned _305;
  __int128 unsigned _306;
  __int128 unsigned _308;
  __int128 unsigned _316;
  __int128 unsigned _318;
  __int128 unsigned _320;
  __int128 unsigned _322;
  __int128 unsigned _327;
  __int128 unsigned _328;
  __int128 unsigned _330;
  __int128 unsigned _332;
  __int128 unsigned _333;
  __int128 unsigned _334;
  __int128 unsigned _335;
  long unsigned int _336;
  long unsigned int _338;
  long unsigned int _340;
  __int128 unsigned _343;
  __int128 unsigned _345;
  __int128 unsigned _347;
  __int128 unsigned _349;
  long unsigned int _351;
  __int128 unsigned _354;
  __int128 unsigned _355;
  __int128 unsigned _356;
  __int128 unsigned _357;
  __int128 unsigned _359;
  __int128 unsigned _360;
  __int128 unsigned _361;
  __int128 unsigned _362;
  __int128 unsigned _367;
  __int128 unsigned _370;
  __int128 unsigned _373;
  __int128 unsigned _374;
  __int128 unsigned _377;
  __int128 unsigned _378;
  __int128 unsigned _379;
  __int128 unsigned _382;
  __int128 unsigned _383;
  __int128 unsigned _386;
  __int128 unsigned _387;
  __int128 unsigned _391;
  __int128 unsigned _392;
  __int128 unsigned _394;
  __int128 unsigned _395;
  __int128 unsigned _396;
  __int128 unsigned _397;
  __int128 unsigned _398;
  __int128 unsigned _399;
  __int128 unsigned _400;
  __int128 unsigned _401;
  __int128 unsigned _402;
  __int128 unsigned _403;
  long unsigned int _404;
  long unsigned int _406;
  __int128 unsigned _408;
  long unsigned int _409;
  __int128 unsigned _411;
  long unsigned int _412;
  __int128 unsigned _414;
  __int128 unsigned _415;
  long unsigned int _416;
  __int128 unsigned _418;
  __int128 unsigned _419;
  __int128 unsigned _420;
  long unsigned int _421;
  __int128 unsigned _423;
  __int128 unsigned _424;
  long unsigned int _425;
  __int128 unsigned _427;
  __int128 unsigned _428;
  long unsigned int _430;
  __int128 unsigned _432;
  __int128 unsigned _433;
  __int128 unsigned _435;
  __int128 unsigned _436;
  __int128 unsigned _437;
  __int128 unsigned _438;
  __int128 unsigned _439;
  __int128 unsigned _440;
  __int128 unsigned _441;
  __int128 unsigned _442;
  __int128 unsigned _443;
  __int128 unsigned _444;
  long unsigned int _445;
  long unsigned int _447;
  long unsigned int _449;
  __int128 unsigned _452;
  __int128 unsigned _454;
  __int128 unsigned _456;
  __int128 unsigned _458;
  __int128 unsigned _459;
  long unsigned int _460;
  __int128 unsigned _463;
  __int128 unsigned _464;
  __int128 unsigned _465;
  __int128 unsigned _466;
  __int128 unsigned _468;
  __int128 unsigned _469;
  __int128 unsigned _470;
  __int128 unsigned _471;
  long unsigned int _472;
  long unsigned int _474;
  long unsigned int _476;
  __int128 unsigned _479;
  __int128 unsigned _481;
  __int128 unsigned _483;
  __int128 unsigned _485;
  __int128 unsigned _486;
  long unsigned int _487;
  __int128 unsigned _490;
  __int128 unsigned _491;
  __int128 unsigned _492;
  __int128 unsigned _493;
  __int128 unsigned _495;
  __int128 unsigned _496;
  __int128 unsigned _497;
  __int128 unsigned _498;
  __int128 unsigned _548;
  __int128 unsigned _549;
  __int128 unsigned _550;
  __int128 unsigned _551;
  __int128 unsigned _553;
  __int128 unsigned _554;

  <bb 2> [local count: 1073741825]:
  _162 = *x_in_2(D);
  _163 = MEM[(const limb *)x_in_2(D) + 8B];
  _164 = MEM[(const limb *)x_in_2(D) + 16B];
  _165 = MEM[(const limb *)x_in_2(D) + 24B];
  _472 = *z_in_3(D);
  tmp0_473 = _472 * 2;
  _474 = MEM[(const limb *)z_in_3(D) + 8B];
  tmp1_475 = _474 * 2;
  _476 = MEM[(const limb *)z_in_3(D) + 16B];
  tmp2_477 = _476 * 2;
  _479 = _472 w* _472;
  MEM[(widelimb *)&tmp] = _479;
  _481 = _472 w* tmp1_475;
  MEM[(widelimb *)&tmp + 16B] = _481;
  _483 = _472 w* tmp2_477;
  _485 = _474 w* _474;
  _486 = _483 + _485;
  MEM[(widelimb *)&tmp + 32B] = _486;
  _487 = MEM[(const limb *)z_in_3(D) + 24B];
  _490 = _487 w* tmp0_473;
  _491 = tmp2_477 w* _474;
  _492 = _490 + _491;
  MEM[(widelimb *)&tmp + 48B] = _492;
  _493 = tmp1_475 w* _487;
  _495 = _476 w* _476;
  _496 = _493 + _495;
  MEM[(widelimb *)&tmp + 64B] = _496;
  _497 = tmp2_477 w* _487;
  MEM[(widelimb *)&tmp + 80B] = _497;
  _498 = _487 w* _487;
  MEM[(widelimb *)&tmp + 96B] = _498;
  felem_reduce (&delta, &tmp);
  _445 = *y_in_6(D);
  tmp0_446 = _445 * 2;
  _447 = MEM[(const limb *)y_in_6(D) + 8B];
  tmp1_448 = _447 * 2;
  _449 = MEM[(const limb *)y_in_6(D) + 16B];
  tmp2_450 = _449 * 2;
  _452 = _445 w* _445;
  MEM[(widelimb *)&tmp] = _452;
  _454 = _445 w* tmp1_448;
  MEM[(widelimb *)&tmp + 16B] = _454;
  _456 = _445 w* tmp2_450;
  _458 = _447 w* _447;
  _459 = _456 + _458;
  MEM[(widelimb *)&tmp + 32B] = _459;
  _460 = MEM[(const limb *)y_in_6(D) + 24B];
  _463 = _460 w* tmp0_446;
  _464 = tmp2_450 w* _447;
  _465 = _463 + _464;
  MEM[(widelimb *)&tmp + 48B] = _465;
  _466 = tmp1_448 w* _460;
  _468 = _449 w* _449;
  _469 = _466 + _468;
  MEM[(widelimb *)&tmp + 64B] = _469;
  _470 = tmp2_450 w* _460;
  MEM[(widelimb *)&tmp + 80B] = _470;
  _471 = _460 w* _460;
  MEM[(widelimb *)&tmp + 96B] = _471;
  felem_reduce (&gamma, &tmp);
  _404 = *x_in_2(D);
  _406 = MEM[(const limb *)&gamma];
  _408 = _404 w* _406;
  MEM[(widelimb *)&tmp] = _408;
  _409 = MEM[(const limb *)&gamma + 8B];
  _411 = _404 w* _409;
  _412 = MEM[(const limb *)x_in_2(D) + 8B];
  _414 = _406 w* _412;
  _415 = _411 + _414;
  MEM[(widelimb *)&tmp + 16B] = _415;
  _416 = MEM[(const limb *)&gamma + 16B];
  _418 = _404 w* _416;
  _419 = _409 w* _412;
  _420 = _418 + _419;
  _421 = MEM[(const limb *)x_in_2(D) + 16B];
  _423 = _406 w* _421;
  _424 = _420 + _423;
  MEM[(widelimb *)&tmp + 32B] = _424;
  _425 = MEM[(const limb *)&gamma + 24B];
  _427 = _404 w* _425;
  _428 = _412 w* _416;
  _211 = _427 + _428;
  _430 = MEM[(const limb *)x_in_2(D) + 24B];
  _432 = _406 w* _430;
  _433 = _409 w* _421;
  _212 = _211 + _432;
  _435 = _212 + _433;
  MEM[(widelimb *)&tmp + 48B] = _435;
  _436 = _412 w* _425;
  _437 = _416 w* _421;
  _438 = _436 + _437;
  _439 = _409 w* _430;
  _440 = _438 + _439;
  MEM[(widelimb *)&tmp + 64B] = _440;
  _441 = _421 w* _425;
  _442 = _416 w* _430;
  _443 = _441 + _442;
  MEM[(widelimb *)&tmp + 80B] = _443;
  _444 = _425 w* _430;
  MEM[(widelimb *)&tmp + 96B] = _444;
  felem_reduce (&beta, &tmp);
  _154 = MEM[(const limb *)&delta];
  _209 = 288230376151711748 - _154;
  _155 = _162 + _209;
  _156 = MEM[(const limb *)&delta + 8B];
  _208 = 288225978105200636 - _156;
  _157 = _163 + _208;
  _158 = MEM[(const limb *)&delta + 16B];
  _207 = 288230376151711740 - _158;
  _159 = _164 + _207;
  _160 = MEM[(const limb *)&delta + 24B];
  _206 = 288230376151711740 - _160;
  _161 = _165 + _206;
  _139 = _154 + _162;
  _141 = _156 + _163;
  _143 = _158 + _164;
  _145 = _160 + _165;
  _134 = _139 * 3;
  _135 = _141 * 3;
  _136 = _143 * 3;
  _137 = _145 * 3;
  _367 = _155 w* _134;
  MEM[(widelimb *)&tmp] = _367;
  _370 = _155 w* _135;
  _373 = _134 w* _157;
  _374 = _370 + _373;
  MEM[(widelimb *)&tmp + 16B] = _374;
  _377 = _155 w* _136;
  _378 = _135 w* _157;
  _379 = _377 + _378;
  _382 = _134 w* _159;
  _383 = _379 + _382;
  MEM[(widelimb *)&tmp + 32B] = _383;
  _386 = _155 w* _137;
  _387 = _157 w* _136;
  _553 = _386 + _387;
  _391 = _134 w* _161;
  _392 = _135 w* _159;
  _554 = _391 + _553;
  _394 = _392 + _554;
  MEM[(widelimb *)&tmp + 48B] = _394;
  _395 = _157 w* _137;
  _396 = _136 w* _159;
  _397 = _395 + _396;
  _398 = _135 w* _161;
  _399 = _397 + _398;
  MEM[(widelimb *)&tmp + 64B] = _399;
  _400 = _159 w* _137;
  _401 = _136 w* _161;
  _402 = _400 + _401;
  MEM[(widelimb *)&tmp + 80B] = _402;
  _403 = _137 w* _161;
  MEM[(widelimb *)&tmp + 96B] = _403;
  felem_reduce (&alpha, &tmp);
  _336 = MEM[(const limb *)&alpha];
  tmp0_337 = _336 * 2;
  _338 = MEM[(const limb *)&alpha + 8B];
  tmp1_339 = _338 * 2;
  _340 = MEM[(const limb *)&alpha + 16B];
  tmp2_341 = _340 * 2;
  _343 = _336 w* _336;
  _345 = _336 w* tmp1_339;
  _347 = _336 w* tmp2_341;
  _349 = _338 w* _338;
  _550 = _349 + 18446744073709551360;
  _351 = MEM[(const limb *)&alpha + 24B];
  _354 = _351 w* tmp0_337;
  _355 = tmp2_341 w* _338;
  _356 = _354 + _355;
  _357 = tmp1_339 w* _351;
  _359 = _340 w* _340;
  _360 = _357 + _359;
  MEM[(widelimb *)&tmp + 64B] = _360;
  _361 = tmp2_341 w* _351;
  MEM[(widelimb *)&tmp + 80B] = _361;
  _362 = _351 w* _351;
  MEM[(widelimb *)&tmp + 96B] = _362;
  _130 = MEM[(const limb *)&beta];
  _131 = MEM[(const limb *)&beta + 8B];
  _132 = MEM[(const limb *)&beta + 16B];
  _133 = MEM[(const limb *)&beta + 24B];
  _126 = _130 * 8;
  _127 = _131 * 8;
  _128 = _132 * 8;
  _129 = _133 * 8;
  _111 = _343 + 0x10000000000000100;
  _115 = _347 + _550;
  _117 = _356 + 18446744073709551360;
  _118 = (__int128 unsigned) _126;
  _119 = _111 - _118;
  MEM[(widelimb *)&tmp] = _119;
  _120 = (__int128 unsigned) _127;
  _551 = _345 - _120;
  _121 = _551 + 18446462598732840704;
  MEM[(widelimb *)&tmp + 16B] = _121;
  _122 = (__int128 unsigned) _128;
  _123 = _115 - _122;
  MEM[(widelimb *)&tmp + 32B] = _123;
  _124 = (__int128 unsigned) _129;
  _125 = _117 - _124;
  MEM[(widelimb *)&tmp + 48B] = _125;
  felem_reduce (x_out_14(D), &tmp);
  _98 = MEM[(limb *)&delta];
  _99 = MEM[(const limb *)&gamma];
  _100 = _98 + _99;
  MEM[(limb *)&delta] = _100;
  _101 = MEM[(limb *)&delta + 8B];
  _102 = MEM[(const limb *)&gamma + 8B];
  _103 = _101 + _102;
  MEM[(limb *)&delta + 8B] = _103;
  _104 = MEM[(limb *)&delta + 16B];
  _105 = MEM[(const limb *)&gamma + 16B];
  _106 = _104 + _105;
  MEM[(limb *)&delta + 16B] = _106;
  _107 = MEM[(limb *)&delta + 24B];
  _108 = MEM[(const limb *)&gamma + 24B];
  _109 = _107 + _108;
  MEM[(limb *)&delta + 24B] = _109;
  _94 = *y_in_6(D);
  _95 = MEM[(const limb *)y_in_6(D) + 8B];
  _96 = MEM[(const limb *)y_in_6(D) + 16B];
  _97 = MEM[(const limb *)y_in_6(D) + 24B];
  _86 = *z_in_3(D);
  _87 = _86 + _94;
  _88 = MEM[(const limb *)z_in_3(D) + 8B];
  _89 = _88 + _95;
  _90 = MEM[(const limb *)z_in_3(D) + 16B];
  _91 = _90 + _96;
  _92 = MEM[(const limb *)z_in_3(D) + 24B];
  _93 = _92 + _97;
  tmp0_310 = _87 * 2;
  tmp1_312 = _89 * 2;
  tmp2_314 = _91 * 2;
  _316 = _87 w* _87;
  _318 = _87 w* tmp1_312;
  _320 = _87 w* tmp2_314;
  _322 = _89 w* _89;
  _327 = _93 w* tmp0_310;
  _328 = tmp2_314 w* _89;
  _330 = tmp1_312 w* _93;
  _332 = _91 w* _91;
  _333 = _330 + _332;
  MEM[(widelimb *)&tmp + 64B] = _333;
  _334 = tmp2_314 w* _93;
  MEM[(widelimb *)&tmp + 80B] = _334;
  _335 = _93 w* _93;
  MEM[(widelimb *)&tmp + 96B] = _335;
  _75 = (__int128 unsigned) _100;
  _549 = 0x10000000000000100 - _75;
  _76 = _316 + _549;
  MEM[(widelimb *)&tmp] = _76;
  _78 = (__int128 unsigned) _103;
  _548 = 18446462598732840704 - _78;
  _79 = _318 + _548;
  MEM[(widelimb *)&tmp + 16B] = _79;
  _81 = (__int128 unsigned) _106;
  _196 = 18446744073709551360 - _81;
  _197 = _196 + _322;
  _82 = _197 + _320;
  MEM[(widelimb *)&tmp + 32B] = _82;
  _84 = (__int128 unsigned) _109;
  _194 = 18446744073709551360 - _84;
  _195 = _194 + _327;
  _85 = _195 + _328;
  MEM[(widelimb *)&tmp + 48B] = _85;
  felem_reduce (z_out_17(D), &tmp);
  _58 = MEM[(limb *)&beta];
  _59 = _58 * 4;
  _60 = MEM[(limb *)&beta + 8B];
  _61 = _60 * 4;
  _62 = MEM[(limb *)&beta + 16B];
  _63 = _62 * 4;
  _64 = MEM[(limb *)&beta + 24B];
  _65 = _64 * 4;
  _46 = _59 + 288230376151711748;
  _47 = _61 + 288225978105200636;
  _48 = _63 + 288230376151711740;
  _49 = _65 + 288230376151711740;
  _50 = MEM[(const limb *)x_out_14(D)];
  _51 = _46 - _50;
  MEM[(limb *)&beta] = _51;
  _52 = MEM[(const limb *)x_out_14(D) + 8B];
  _53 = _47 - _52;
  MEM[(limb *)&beta + 8B] = _53;
  _54 = MEM[(const limb *)x_out_14(D) + 16B];
  _55 = _48 - _54;
  MEM[(limb *)&beta + 16B] = _55;
  _56 = MEM[(const limb *)x_out_14(D) + 24B];
  _57 = _49 - _56;
  MEM[(limb *)&beta + 24B] = _57;
  _268 = MEM[(const limb *)&alpha];
  _272 = _268 w* _51;
  _275 = _268 w* _53;
  _276 = MEM[(const limb *)&alpha + 8B];
  _278 = _51 w* _276;
  _282 = _268 w* _55;
  _283 = _53 w* _276;
  _285 = MEM[(const limb *)&alpha + 16B];
  _287 = _51 w* _285;
  _291 = _268 w* _57;
  _292 = _276 w* _55;
  _294 = MEM[(const limb *)&alpha + 24B];
  _296 = _51 w* _294;
  _297 = _53 w* _285;
  _300 = _276 w* _57;
  _301 = _55 w* _285;
  _303 = _53 w* _294;
  _305 = _285 w* _57;
  _306 = _55 w* _294;
  _308 = _57 w* _294;
  _241 = MEM[(const limb *)&gamma];
  tmp0_242 = _241 * 2;
  _243 = MEM[(const limb *)&gamma + 8B];
  tmp1_244 = _243 * 2;
  _245 = MEM[(const limb *)&gamma + 16B];
  tmp2_246 = _245 * 2;
  _248 = _241 w* _241;
  _252 = _241 w* tmp2_246;
  _254 = _243 w* _243;
  _255 = _252 + _254;
  _256 = MEM[(const limb *)&gamma + 24B];
  _259 = _256 w* tmp0_242;
  _260 = tmp2_246 w* _243;
  _261 = _259 + _260;
  _262 = tmp1_244 w* _256;
  _264 = _245 w* _245;
  _265 = _262 + _264;
  _267 = _256 w* _256;
  _33 = _248 * 8;
  _185 = _241 w* tmp1_244;
  _35 = _185 * 8;
  _37 = _255 * 8;
  _39 = _261 * 8;
  _41 = _265 * 8;
  _184 = tmp2_246 w* _256;
  _43 = _184 * 8;
  _45 = _267 * 8;
  _183 = 0x1000000000000000000000000000000 - _33;
  _228 = _183 + _272;
  MEM[(widelimb *)&tmp] = _228;
  _181 = 0xffffffffffffff0000000000000000 - _35;
  _182 = _181 + _275;
  _230 = _182 + _278;
  MEM[(widelimb *)&tmp + 16B] = _230;
  _178 = 0xffffffffffffff0000000000000000 - _37;
  _179 = _178 + _282;
  _180 = _179 + _283;
  _232 = _180 + _287;
  MEM[(widelimb *)&tmp + 32B] = _232;
  _174 = 0x1000000000000000000000000000000 - _39;
  _175 = _174 + _291;
  _176 = _175 + _292;
  _177 = _176 + _296;
  _234 = _177 + _297;
  MEM[(widelimb *)&tmp + 48B] = _234;
  _170 = 0xfffeffffffffff0000000000000000 - _41;
  _171 = _170 + _300;
  _172 = _171 + _301;
  _236 = _172 + _303;
  MEM[(widelimb *)&tmp + 64B] = _236;
  _168 = 0xffffffffffffff0000000000000000 - _43;
  _169 = _168 + _305;
  _238 = _169 + _306;
  MEM[(widelimb *)&tmp + 80B] = _238;
  _167 = 0xffffffffffffff0000000000000000 - _45;
  _240 = _167 + _308;
  MEM[(widelimb *)&tmp + 96B] = _240;
  felem_reduce (y_out_22(D), &tmp);
  tmp ={v} {CLOBBER};
  delta ={v} {CLOBBER};
  gamma ={v} {CLOBBER};
  beta ={v} {CLOBBER};
  alpha ={v} {CLOBBER};
  return;

}



;; Function point_add (point_add, funcdef_no=425, decl_uid=10559, cgraph_uid=425, symbol_order=427)

point_add (limb * x3, limb * y3, limb * z3, const limb * x1, const limb * y1, const limb * z1, const int mixed, const limb * x2, const limb * y2, const limb * z2)
{
  const vector(2) long unsigned int vect__80.153;
  const vector(2) long unsigned int vect__80.152;
  const vector(2) long unsigned int vect__38.147;
  const vector(2) long unsigned int vect__38.146;
  vector(2) long unsigned int vect__206.141;
  const vector(2) long unsigned int vect_tmp_205.140;
  const vector(2) long unsigned int vect__204.139;
  vector(2) long unsigned int vect__203.138;
  const vector(2) long unsigned int vect__201.135;
  vector(2) long unsigned int vect__194.130;
  const vector(2) long unsigned int vect_tmp_193.129;
  const vector(2) long unsigned int vect__192.128;
  const vector(2) long unsigned int vect__189.124;
  vector(2) long unsigned int vect__182.119;
  vector(2) long unsigned int vect_tmp_181.118;
  const vector(2) long unsigned int vect__180.117;
  vector(2) long unsigned int vect__179.116;
  const vector(2) long unsigned int vect__177.113;
  vector(2) long unsigned int vect__171.108;
  vector(2) long unsigned int vect_tmp_170.107;
  const vector(2) long unsigned int vect__169.106;
  const vector(2) long unsigned int vect__166.102;
  vector(2) long unsigned int vect__160.97;
  vector(2) long unsigned int vect_tmp_159.96;
  const vector(2) long unsigned int vect__158.95;
  vector(2) long unsigned int vect__157.94;
  const vector(2) long unsigned int vect__155.91;
  vector(2) long unsigned int vect__149.86;
  vector(2) long unsigned int vect_tmp_148.85;
  const vector(2) long unsigned int vect__147.84;
  const vector(2) long unsigned int vect__144.80;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  limb zero;
  limb two224m96p1;
  limb two225m97p2;
  limb zero;
  limb two224m96p1;
  limb two225m97p2;
  limb zero;
  limb two224m96p1;
  limb two225m97p2;
  limb zero;
  limb two224m96p1;
  limb two225m97p2;
  limb tmp2;
  limb tmp1;
  limb tmp0;
  const limb copy;
  const limb copy;
  widelimb tmp2[7];
  widelimb tmp[7];
  limb z_out[4];
  limb y_out[4];
  limb x_out[4];
  limb ftmp5[4];
  limb ftmp4[4];
  limb ftmp3[4];
  limb ftmp2[4];
  limb ftmp[4];
  long unsigned int _4;
  __int128 unsigned _11;
  __int128 unsigned _13;
  __int128 unsigned _16;
  __int128 unsigned _19;
  __int128 unsigned _22;
  __int128 unsigned _24;
  __int128 unsigned _27;
  __int128 unsigned _30;
  __int128 unsigned _33;
  __int128 unsigned _35;
  __int128 unsigned _37;
  __int128 unsigned _39;
  __int128 unsigned _54;
  __int128 unsigned _56;
  __int128 unsigned _58;
  __int128 unsigned _60;
  __int128 unsigned _62;
  __int128 unsigned _64;
  __int128 unsigned _65;
  __int128 unsigned _67;
  long unsigned int _84;
  long unsigned int _86;
  long unsigned int _88;
  long unsigned int _90;
  long unsigned int _92;
  __int128 unsigned _93;
  __int128 unsigned _94;
  long unsigned int _95;
  __int128 unsigned _96;
  __int128 unsigned _97;
  long unsigned int _98;
  __int128 unsigned _99;
  __int128 unsigned _100;
  long unsigned int _101;
  __int128 unsigned _102;
  __int128 unsigned _103;
  long unsigned int _104;
  long unsigned int _106;
  long unsigned int _108;
  __int128 unsigned _110;
  long unsigned int _112;
  __int128 unsigned _113;
  __int128 unsigned _114;
  long unsigned int _115;
  __int128 unsigned _116;
  __int128 unsigned _117;
  long unsigned int _118;
  __int128 unsigned _119;
  __int128 unsigned _120;
  long unsigned int _121;
  __int128 unsigned _122;
  __int128 unsigned _123;
  __int128 unsigned _124;
  __int128 unsigned _125;
  __int128 unsigned _126;
  __int128 unsigned _140;
  __int128 unsigned _151;
  __int128 unsigned _162;
  __int128 unsigned _185;
  __int128 unsigned _197;
  vector(2) long unsigned int _204;
  long unsigned int _208;
  long unsigned int _209;
  long unsigned int _210;
  long unsigned int _211;
  long unsigned int _212;
  long unsigned int _213;
  long unsigned int _214;
  long unsigned int _215;
  long unsigned int _216;
  long unsigned int _217;
  long unsigned int _218;
  long unsigned int _219;
  long unsigned int _220;
  long unsigned int _221;
  long unsigned int _222;
  long unsigned int _223;
  __int128 unsigned _228;
  __int128 unsigned _229;
  __int128 unsigned _230;
  __int128 unsigned _231;
  __int128 unsigned _232;
  __int128 unsigned _233;
  __int128 unsigned _234;
  __int128 unsigned _235;
  long unsigned int _236;
  long unsigned int _237;
  long unsigned int _238;
  long unsigned int _239;
  long unsigned int _240;
  long unsigned int _241;
  long unsigned int _242;
  long unsigned int _243;
  __int128 unsigned _246;
  __int128 unsigned _248;
  __int128 unsigned _250;
  __int128 unsigned _252;
  __int128 unsigned _253;
  long unsigned int _264;
  long unsigned int _265;
  long unsigned int _266;
  long unsigned int _267;
  __int128 unsigned _268;
  __int128 unsigned _269;
  __int128 unsigned _270;
  __int128 unsigned _271;
  __int128 unsigned _272;
  __int128 unsigned _273;
  long unsigned int _328;
  long unsigned int _330;
  __int128 unsigned _332;
  long unsigned int _333;
  __int128 unsigned _335;
  long unsigned int _336;
  __int128 unsigned _338;
  __int128 unsigned _339;
  long unsigned int _340;
  __int128 unsigned _342;
  __int128 unsigned _343;
  __int128 unsigned _344;
  long unsigned int _345;
  __int128 unsigned _347;
  __int128 unsigned _348;
  long unsigned int _349;
  __int128 unsigned _351;
  __int128 unsigned _352;
  long unsigned int _354;
  __int128 unsigned _356;
  __int128 unsigned _357;
  __int128 unsigned _359;
  __int128 unsigned _360;
  __int128 unsigned _361;
  __int128 unsigned _362;
  __int128 unsigned _363;
  __int128 unsigned _364;
  __int128 unsigned _365;
  __int128 unsigned _366;
  __int128 unsigned _367;
  __int128 unsigned _368;
  long unsigned int _369;
  long unsigned int _371;
  __int128 unsigned _373;
  long unsigned int _374;
  __int128 unsigned _376;
  long unsigned int _377;
  __int128 unsigned _379;
  __int128 unsigned _380;
  long unsigned int _381;
  __int128 unsigned _383;
  __int128 unsigned _384;
  __int128 unsigned _385;
  long unsigned int _386;
  __int128 unsigned _388;
  __int128 unsigned _389;
  long unsigned int _390;
  __int128 unsigned _392;
  __int128 unsigned _393;
  long unsigned int _395;
  __int128 unsigned _397;
  __int128 unsigned _398;
  __int128 unsigned _400;
  __int128 unsigned _401;
  __int128 unsigned _402;
  __int128 unsigned _403;
  __int128 unsigned _404;
  __int128 unsigned _405;
  __int128 unsigned _406;
  __int128 unsigned _407;
  __int128 unsigned _408;
  __int128 unsigned _409;
  long unsigned int _410;
  long unsigned int _412;
  __int128 unsigned _414;
  long unsigned int _415;
  __int128 unsigned _417;
  long unsigned int _418;
  __int128 unsigned _420;
  __int128 unsigned _421;
  long unsigned int _422;
  __int128 unsigned _424;
  __int128 unsigned _425;
  __int128 unsigned _426;
  long unsigned int _427;
  __int128 unsigned _429;
  __int128 unsigned _430;
  long unsigned int _431;
  __int128 unsigned _433;
  __int128 unsigned _434;
  long unsigned int _436;
  __int128 unsigned _438;
  __int128 unsigned _439;
  __int128 unsigned _441;
  __int128 unsigned _442;
  __int128 unsigned _443;
  __int128 unsigned _444;
  __int128 unsigned _445;
  __int128 unsigned _446;
  __int128 unsigned _447;
  __int128 unsigned _448;
  __int128 unsigned _449;
  __int128 unsigned _450;
  long unsigned int _451;
  long unsigned int _453;
  long unsigned int _455;
  __int128 unsigned _458;
  __int128 unsigned _460;
  __int128 unsigned _462;
  __int128 unsigned _464;
  __int128 unsigned _465;
  long unsigned int _466;
  __int128 unsigned _469;
  __int128 unsigned _470;
  __int128 unsigned _471;
  __int128 unsigned _472;
  __int128 unsigned _474;
  __int128 unsigned _475;
  __int128 unsigned _476;
  __int128 unsigned _477;
  long unsigned int _478;
  long unsigned int _479;
  long unsigned int _480;
  long unsigned int _481;
  long unsigned int _482;
  long unsigned int _483;
  long int zero.4_485;
  long int _486;
  unsigned long _487;
  long unsigned int _489;
  long unsigned int _490;
  long unsigned int _491;
  long unsigned int _492;
  long unsigned int _493;
  long unsigned int _494;
  long int two224m96p1.5_496;
  long int _497;
  unsigned long _498;
  long unsigned int _500;
  long unsigned int _501;
  long unsigned int _503;
  long unsigned int _504;
  long int two225m97p2.6_506;
  long int _507;
  unsigned long _508;
  long unsigned int _511;
  long unsigned int _512;
  long unsigned int _513;
  long unsigned int _514;
  long unsigned int _515;
  long unsigned int _516;
  long unsigned int _517;
  long int zero.4_519;
  long int _520;
  unsigned long _521;
  long unsigned int _523;
  long unsigned int _524;
  long unsigned int _525;
  long unsigned int _526;
  long unsigned int _527;
  long unsigned int _528;
  long int two224m96p1.5_530;
  long int _531;
  unsigned long _532;
  long unsigned int _534;
  long unsigned int _535;
  long unsigned int _537;
  long unsigned int _538;
  long int two225m97p2.6_540;
  long int _541;
  unsigned long _542;
  long unsigned int _545;
  long unsigned int _546;
  long unsigned int _547;
  long unsigned int _548;
  long unsigned int _549;
  long unsigned int _550;
  long unsigned int _551;
  long int zero.4_553;
  long int _554;
  unsigned long _555;
  long unsigned int _557;
  long unsigned int _558;
  long unsigned int _559;
  long unsigned int _560;
  long unsigned int _561;
  long unsigned int _562;
  long int two224m96p1.5_564;
  long int _565;
  unsigned long _566;
  long unsigned int _568;
  long unsigned int _569;
  long unsigned int _571;
  long unsigned int _572;
  long int two225m97p2.6_574;
  long int _575;
  unsigned long _576;
  long unsigned int _579;
  long unsigned int _580;
  long unsigned int _581;
  long unsigned int _582;
  long unsigned int _583;
  long unsigned int _584;
  long unsigned int _585;
  long int zero.4_587;
  long int _588;
  unsigned long _589;
  long unsigned int _591;
  long unsigned int _592;
  long unsigned int _593;
  long unsigned int _594;
  long unsigned int _595;
  long unsigned int _596;
  long int two224m96p1.5_598;
  long int _599;
  unsigned long _600;
  long unsigned int _602;
  long unsigned int _603;
  long unsigned int _605;
  long unsigned int _606;
  long int two225m97p2.6_608;
  long int _609;
  unsigned long _610;
  long unsigned int _613;
  long unsigned int _614;
  long unsigned int _616;
  __int128 unsigned _618;
  long unsigned int _619;
  __int128 unsigned _621;
  long unsigned int _622;
  __int128 unsigned _624;
  long unsigned int _626;
  __int128 unsigned _628;
  __int128 unsigned _629;
  long unsigned int _631;
  __int128 unsigned _633;
  long unsigned int _635;
  __int128 unsigned _637;
  __int128 unsigned _638;
  long unsigned int _640;
  __int128 unsigned _642;
  __int128 unsigned _643;
  __int128 unsigned _646;
  __int128 unsigned _647;
  __int128 unsigned _648;
  __int128 unsigned _649;
  __int128 unsigned _650;
  __int128 unsigned _651;
  __int128 unsigned _652;
  __int128 unsigned _653;
  __int128 unsigned _654;
  long unsigned int _655;
  long unsigned int _657;
  __int128 unsigned _659;
  long unsigned int _660;
  __int128 unsigned _662;
  long unsigned int _663;
  __int128 unsigned _665;
  long unsigned int _667;
  __int128 unsigned _669;
  __int128 unsigned _670;
  long unsigned int _672;
  __int128 unsigned _674;
  long unsigned int _676;
  __int128 unsigned _678;
  __int128 unsigned _679;
  long unsigned int _681;
  __int128 unsigned _683;
  __int128 unsigned _684;
  __int128 unsigned _687;
  __int128 unsigned _688;
  __int128 unsigned _689;
  __int128 unsigned _690;
  __int128 unsigned _691;
  __int128 unsigned _692;
  __int128 unsigned _693;
  __int128 unsigned _694;
  __int128 unsigned _695;
  long unsigned int _696;
  long unsigned int _698;
  __int128 unsigned _700;
  long unsigned int _701;
  __int128 unsigned _703;
  long unsigned int _704;
  __int128 unsigned _706;
  __int128 unsigned _707;
  long unsigned int _708;
  __int128 unsigned _710;
  __int128 unsigned _711;
  __int128 unsigned _712;
  long unsigned int _713;
  __int128 unsigned _715;
  __int128 unsigned _716;
  long unsigned int _717;
  __int128 unsigned _719;
  __int128 unsigned _720;
  long unsigned int _722;
  __int128 unsigned _724;
  __int128 unsigned _725;
  __int128 unsigned _727;
  __int128 unsigned _728;
  __int128 unsigned _729;
  __int128 unsigned _730;
  __int128 unsigned _731;
  __int128 unsigned _732;
  __int128 unsigned _733;
  __int128 unsigned _734;
  __int128 unsigned _735;
  __int128 unsigned _736;
  long unsigned int _737;
  long unsigned int _739;
  long unsigned int _741;
  __int128 unsigned _744;
  __int128 unsigned _746;
  __int128 unsigned _748;
  __int128 unsigned _750;
  __int128 unsigned _751;
  long unsigned int _752;
  __int128 unsigned _755;
  __int128 unsigned _756;
  __int128 unsigned _757;
  __int128 unsigned _758;
  __int128 unsigned _760;
  __int128 unsigned _761;
  __int128 unsigned _762;
  __int128 unsigned _763;
  __int128 unsigned _766;
  __int128 unsigned _768;
  __int128 unsigned _769;
  __int128 unsigned _771;
  __int128 unsigned _772;
  __int128 unsigned _774;
  __int128 unsigned _775;
  __int128 unsigned _776;
  __int128 unsigned _778;
  __int128 unsigned _779;
  __int128 unsigned _780;
  __int128 unsigned _783;
  __int128 unsigned _784;
  __int128 unsigned _785;
  __int128 unsigned _787;
  __int128 unsigned _788;
  __int128 unsigned _790;
  __int128 unsigned _792;
  __int128 unsigned _793;
  __int128 unsigned _795;
  __int128 unsigned _796;
  __int128 unsigned _797;
  __int128 unsigned _798;
  __int128 unsigned _799;
  __int128 unsigned _800;
  __int128 unsigned _801;
  __int128 unsigned _802;
  __int128 unsigned _803;
  __int128 unsigned _804;
  vector(2) long unsigned int _805;
  long unsigned int _809;
  __int128 unsigned _813;
  __int128 unsigned _815;
  __int128 unsigned _817;
  __int128 unsigned _819;
  __int128 unsigned _820;
  __int128 unsigned _821;
  __int128 unsigned _822;
  __int128 unsigned _823;
  __int128 unsigned _824;
  __int128 unsigned _825;
  __int128 unsigned _826;
  __int128 unsigned _827;
  __int128 unsigned _828;
  __int128 unsigned _829;
  __int128 unsigned _830;
  __int128 unsigned _831;
  __int128 unsigned _832;
  long unsigned int _833;
  __int128 unsigned _837;
  __int128 unsigned _840;
  long unsigned int _841;
  __int128 unsigned _843;
  __int128 unsigned _847;
  __int128 unsigned _848;
  long unsigned int _850;
  __int128 unsigned _852;
  __int128 unsigned _856;
  __int128 unsigned _857;
  long unsigned int _859;
  __int128 unsigned _861;
  __int128 unsigned _862;
  __int128 unsigned _865;
  __int128 unsigned _866;
  __int128 unsigned _868;
  __int128 unsigned _870;
  __int128 unsigned _871;
  __int128 unsigned _873;
  long unsigned int _874;
  long unsigned int _876;
  long unsigned int _878;
  __int128 unsigned _881;
  __int128 unsigned _883;
  __int128 unsigned _885;
  __int128 unsigned _887;
  long unsigned int _889;
  __int128 unsigned _892;
  __int128 unsigned _893;
  __int128 unsigned _895;
  __int128 unsigned _897;
  __int128 unsigned _898;
  __int128 unsigned _899;
  __int128 unsigned _900;
  long unsigned int _901;
  long unsigned int _903;
  __int128 unsigned _904;
  __int128 unsigned _905;
  long unsigned int _906;
  __int128 unsigned _907;
  __int128 unsigned _908;
  long unsigned int _909;
  __int128 unsigned _911;
  __int128 unsigned _912;
  long unsigned int _913;
  __int128 unsigned _914;
  __int128 unsigned _915;
  __int128 unsigned _916;
  __int128 unsigned _917;
  long unsigned int _918;
  __int128 unsigned _920;
  __int128 unsigned _921;
  long unsigned int _922;
  __int128 unsigned _923;
  __int128 unsigned _924;
  __int128 unsigned _925;
  long unsigned int _927;
  __int128 unsigned _929;
  __int128 unsigned _930;
  __int128 unsigned _932;
  __int128 unsigned _933;
  __int128 unsigned _934;
  __int128 unsigned _935;
  __int128 unsigned _936;
  __int128 unsigned _937;
  __int128 unsigned _938;
  __int128 unsigned _939;
  __int128 unsigned _940;
  __int128 unsigned _941;
  long unsigned int _942;
  long unsigned int _944;
  __int128 unsigned _946;
  long unsigned int _947;
  __int128 unsigned _949;
  long unsigned int _950;
  __int128 unsigned _952;
  __int128 unsigned _953;
  long unsigned int _954;
  __int128 unsigned _956;
  __int128 unsigned _957;
  __int128 unsigned _958;
  long unsigned int _959;
  __int128 unsigned _961;
  __int128 unsigned _962;
  long unsigned int _963;
  __int128 unsigned _965;
  __int128 unsigned _966;
  long unsigned int _968;
  __int128 unsigned _970;
  __int128 unsigned _971;
  __int128 unsigned _973;
  __int128 unsigned _974;
  __int128 unsigned _975;
  __int128 unsigned _976;
  __int128 unsigned _977;
  __int128 unsigned _978;
  __int128 unsigned _979;
  __int128 unsigned _980;
  __int128 unsigned _981;
  __int128 unsigned _982;
  long unsigned int _983;
  long unsigned int _985;
  __int128 unsigned _987;
  long unsigned int _988;
  __int128 unsigned _990;
  long unsigned int _991;
  __int128 unsigned _993;
  __int128 unsigned _994;
  long unsigned int _995;
  __int128 unsigned _997;
  __int128 unsigned _998;
  __int128 unsigned _999;
  long unsigned int _1000;
  __int128 unsigned _1002;
  __int128 unsigned _1003;
  long unsigned int _1004;
  __int128 unsigned _1006;
  __int128 unsigned _1007;
  vector(2) long unsigned int vect_cst__1008;
  long unsigned int _1009;
  __int128 unsigned _1011;
  __int128 unsigned _1012;
  __int128 unsigned _1014;
  __int128 unsigned _1015;
  __int128 unsigned _1016;
  __int128 unsigned _1017;
  __int128 unsigned _1018;
  __int128 unsigned _1019;
  __int128 unsigned _1020;
  __int128 unsigned _1021;
  __int128 unsigned _1022;
  __int128 unsigned _1023;
  __int128 unsigned _1024;
  __int128 unsigned _1026;
  __int128 unsigned _1028;
  __int128 unsigned _1031;
  __int128 unsigned _1033;
  __int128 unsigned _1035;
  __int128 unsigned _1037;
  __int128 unsigned _1038;
  __int128 unsigned _1039;
  __int128 unsigned _1042;
  __int128 unsigned _1043;
  __int128 unsigned _1044;
  __int128 unsigned _1045;
  __int128 unsigned _1047;
  __int128 unsigned _1048;
  __int128 unsigned _1049;
  __int128 unsigned _1050;
  __int128 unsigned _1052;
  __int128 unsigned _1055;
  __int128 unsigned _1058;
  __int128 unsigned _1060;
  __int128 unsigned _1061;
  __int128 unsigned _1062;
  __int128 unsigned _1065;
  __int128 unsigned _1066;
  __int128 unsigned _1067;
  __int128 unsigned _1069;
  __int128 unsigned _1070;
  __int128 unsigned _1071;
  __int128 unsigned _1074;
  __int128 unsigned _1075;
  __int128 unsigned _1078;
  __int128 unsigned _1079;
  __int128 unsigned _1080;
  __int128 unsigned _1082;
  __int128 unsigned _1083;
  __int128 unsigned _1084;
  __int128 unsigned _1085;
  __int128 unsigned _1086;
  __int128 unsigned _1087;
  __int128 unsigned _1088;
  __int128 unsigned _1089;
  __int128 unsigned _1090;
  __int128 unsigned _1091;
  __int128 unsigned _1120;
  __int128 unsigned _1122;
  long unsigned int _1159;
  vector(2) long unsigned int vect_cst__1162;
  __int128 unsigned _1222;
  __int128 unsigned _1224;
  __int128 unsigned _1225;
  __int128 unsigned _1227;
  __int128 unsigned _1228;
  __int128 unsigned _1230;
  __int128 unsigned _1231;
  __int128 unsigned _1233;
  __int128 unsigned _1234;
  __int128 unsigned _1293;
  __int128 unsigned _1294;
  __int128 unsigned _1295;
  __int128 unsigned _1296;
  long unsigned int pretmp_1297;
  long unsigned int prephitmp_1298;
  long unsigned int pretmp_1299;
  long unsigned int pretmp_1301;
  long unsigned int pretmp_1303;
  long unsigned int prephitmp_1304;
  long unsigned int pretmp_1305;
  long unsigned int pretmp_1307;
  long unsigned int prephitmp_1308;
  long unsigned int pretmp_1309;
  long unsigned int pretmp_1311;
  long unsigned int prephitmp_1312;
  __int128 unsigned _1349;
  __int128 unsigned prephitmp_1350;
  __int128 unsigned _1351;
  __int128 unsigned prephitmp_1352;
  __int128 unsigned _1353;
  __int128 unsigned prephitmp_1354;
  __int128 unsigned _1355;
  __int128 unsigned prephitmp_1356;

  <bb 2> [local count: 238927865]:
  if (mixed_8(D) == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 78846195]:
  _451 = *z2_10(D);
  tmp0_452 = _451 * 2;
  _453 = MEM[(const limb *)z2_10(D) + 8B];
  tmp1_454 = _453 * 2;
  _455 = MEM[(const limb *)z2_10(D) + 16B];
  tmp2_456 = _455 * 2;
  _458 = _451 w* _451;
  MEM[(widelimb *)&tmp] = _458;
  _460 = _451 w* tmp1_454;
  MEM[(widelimb *)&tmp + 16B] = _460;
  _462 = _451 w* tmp2_456;
  _464 = _453 w* _453;
  _465 = _462 + _464;
  MEM[(widelimb *)&tmp + 32B] = _465;
  _466 = MEM[(const limb *)z2_10(D) + 24B];
  _469 = _466 w* tmp0_452;
  _470 = tmp2_456 w* _453;
  _471 = _469 + _470;
  MEM[(widelimb *)&tmp + 48B] = _471;
  _472 = tmp1_454 w* _466;
  _474 = _455 w* _455;
  _475 = _472 + _474;
  MEM[(widelimb *)&tmp + 64B] = _475;
  _476 = tmp2_456 w* _466;
  MEM[(widelimb *)&tmp + 80B] = _476;
  _477 = _466 w* _466;
  MEM[(widelimb *)&tmp + 96B] = _477;
  felem_reduce (&ftmp2, &tmp);
  _410 = MEM[(const limb *)&ftmp2];
  _412 = *z2_10(D);
  _414 = _410 w* _412;
  MEM[(widelimb *)&tmp] = _414;
  _415 = MEM[(const limb *)z2_10(D) + 8B];
  _417 = _410 w* _415;
  _418 = MEM[(const limb *)&ftmp2 + 8B];
  _420 = _412 w* _418;
  _421 = _417 + _420;
  MEM[(widelimb *)&tmp + 16B] = _421;
  _422 = MEM[(const limb *)z2_10(D) + 16B];
  _424 = _410 w* _422;
  _425 = _415 w* _418;
  _426 = _424 + _425;
  _427 = MEM[(const limb *)&ftmp2 + 16B];
  _429 = _412 w* _427;
  _430 = _426 + _429;
  MEM[(widelimb *)&tmp + 32B] = _430;
  _431 = MEM[(const limb *)z2_10(D) + 24B];
  _433 = _410 w* _431;
  _434 = _418 w* _422;
  _1233 = _433 + _434;
  _436 = MEM[(const limb *)&ftmp2 + 24B];
  _438 = _412 w* _436;
  _439 = _415 w* _427;
  _1234 = _438 + _1233;
  _441 = _439 + _1234;
  MEM[(widelimb *)&tmp + 48B] = _441;
  _442 = _418 w* _431;
  _443 = _422 w* _427;
  _444 = _442 + _443;
  _445 = _415 w* _436;
  _446 = _444 + _445;
  MEM[(widelimb *)&tmp + 64B] = _446;
  _447 = _427 w* _431;
  _448 = _422 w* _436;
  _449 = _447 + _448;
  MEM[(widelimb *)&tmp + 80B] = _449;
  _450 = _431 w* _436;
  MEM[(widelimb *)&tmp + 96B] = _450;
  felem_reduce (&ftmp4, &tmp);
  _369 = MEM[(const limb *)&ftmp4];
  _371 = *y1_15(D);
  _373 = _369 w* _371;
  MEM[(widelimb *)&tmp2] = _373;
  _374 = MEM[(const limb *)y1_15(D) + 8B];
  _376 = _369 w* _374;
  _377 = MEM[(const limb *)&ftmp4 + 8B];
  _379 = _371 w* _377;
  _380 = _376 + _379;
  MEM[(widelimb *)&tmp2 + 16B] = _380;
  _381 = MEM[(const limb *)y1_15(D) + 16B];
  _383 = _369 w* _381;
  _384 = _374 w* _377;
  _385 = _383 + _384;
  _386 = MEM[(const limb *)&ftmp4 + 16B];
  _388 = _371 w* _386;
  _389 = _385 + _388;
  MEM[(widelimb *)&tmp2 + 32B] = _389;
  _390 = MEM[(const limb *)y1_15(D) + 24B];
  _392 = _369 w* _390;
  _393 = _377 w* _381;
  _1230 = _392 + _393;
  _395 = MEM[(const limb *)&ftmp4 + 24B];
  _397 = _371 w* _395;
  _398 = _374 w* _386;
  _1231 = _397 + _1230;
  _400 = _398 + _1231;
  MEM[(widelimb *)&tmp2 + 48B] = _400;
  _401 = _377 w* _390;
  _402 = _381 w* _386;
  _403 = _401 + _402;
  _404 = _374 w* _395;
  _405 = _403 + _404;
  MEM[(widelimb *)&tmp2 + 64B] = _405;
  _406 = _386 w* _390;
  _407 = _381 w* _395;
  _408 = _406 + _407;
  MEM[(widelimb *)&tmp2 + 80B] = _408;
  _409 = _390 w* _395;
  MEM[(widelimb *)&tmp2 + 96B] = _409;
  felem_reduce (&ftmp4, &tmp2);
  _328 = MEM[(const limb *)&ftmp2];
  _330 = *x1_18(D);
  _332 = _328 w* _330;
  MEM[(widelimb *)&tmp2] = _332;
  _333 = MEM[(const limb *)x1_18(D) + 8B];
  _335 = _328 w* _333;
  _336 = MEM[(const limb *)&ftmp2 + 8B];
  _338 = _330 w* _336;
  _339 = _335 + _338;
  MEM[(widelimb *)&tmp2 + 16B] = _339;
  _340 = MEM[(const limb *)x1_18(D) + 16B];
  _342 = _328 w* _340;
  _343 = _333 w* _336;
  _344 = _342 + _343;
  _345 = MEM[(const limb *)&ftmp2 + 16B];
  _347 = _330 w* _345;
  _348 = _344 + _347;
  MEM[(widelimb *)&tmp2 + 32B] = _348;
  _349 = MEM[(const limb *)x1_18(D) + 24B];
  _351 = _328 w* _349;
  _352 = _336 w* _340;
  _1227 = _351 + _352;
  _354 = MEM[(const limb *)&ftmp2 + 24B];
  _356 = _330 w* _354;
  _357 = _333 w* _345;
  _1228 = _356 + _1227;
  _359 = _357 + _1228;
  MEM[(widelimb *)&tmp2 + 48B] = _359;
  _360 = _336 w* _349;
  _361 = _340 w* _345;
  _362 = _360 + _361;
  _363 = _333 w* _354;
  _364 = _362 + _363;
  MEM[(widelimb *)&tmp2 + 64B] = _364;
  _365 = _345 w* _349;
  _366 = _340 w* _354;
  _367 = _365 + _366;
  MEM[(widelimb *)&tmp2 + 80B] = _367;
  _368 = _349 w* _354;
  MEM[(widelimb *)&tmp2 + 96B] = _368;
  felem_reduce (&ftmp2, &tmp2);
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 160081670]:
  vect__80.152_255 = MEM[(const limb *)y1_15(D)];
  vect__80.153_1258 = MEM[(const limb *)y1_15(D) + 16B];
  MEM[(limb *)&ftmp4] = vect__80.152_255;
  MEM[(limb *)&ftmp4 + 16B] = vect__80.153_1258;
  vect__38.146_1277 = MEM[(const limb *)x1_18(D)];
  vect__38.147_1287 = MEM[(const limb *)x1_18(D) + 16B];
  MEM[(limb *)&ftmp2] = vect__38.146_1277;
  MEM[(limb *)&ftmp2 + 16B] = vect__38.147_1287;

  <bb 5> [local count: 238927865]:
  _737 = *z1_21(D);
  tmp0_738 = _737 * 2;
  _739 = MEM[(const limb *)z1_21(D) + 8B];
  tmp1_740 = _739 * 2;
  _741 = MEM[(const limb *)z1_21(D) + 16B];
  tmp2_742 = _741 * 2;
  _744 = _737 w* _737;
  MEM[(widelimb *)&tmp] = _744;
  _746 = _737 w* tmp1_740;
  MEM[(widelimb *)&tmp + 16B] = _746;
  _748 = _737 w* tmp2_742;
  _750 = _739 w* _739;
  _751 = _748 + _750;
  MEM[(widelimb *)&tmp + 32B] = _751;
  _752 = MEM[(const limb *)z1_21(D) + 24B];
  _755 = _752 w* tmp0_738;
  _756 = tmp2_742 w* _739;
  _757 = _755 + _756;
  MEM[(widelimb *)&tmp + 48B] = _757;
  _758 = tmp1_740 w* _752;
  _760 = _741 w* _741;
  _761 = _758 + _760;
  MEM[(widelimb *)&tmp + 64B] = _761;
  _762 = tmp2_742 w* _752;
  MEM[(widelimb *)&tmp + 80B] = _762;
  _763 = _752 w* _752;
  MEM[(widelimb *)&tmp + 96B] = _763;
  felem_reduce (&ftmp, &tmp);
  _696 = MEM[(const limb *)&ftmp];
  _698 = *z1_21(D);
  _700 = _696 w* _698;
  MEM[(widelimb *)&tmp] = _700;
  _701 = MEM[(const limb *)z1_21(D) + 8B];
  _703 = _696 w* _701;
  _704 = MEM[(const limb *)&ftmp + 8B];
  _706 = _698 w* _704;
  _707 = _703 + _706;
  MEM[(widelimb *)&tmp + 16B] = _707;
  _708 = MEM[(const limb *)z1_21(D) + 16B];
  _710 = _696 w* _708;
  _711 = _701 w* _704;
  _712 = _710 + _711;
  _713 = MEM[(const limb *)&ftmp + 16B];
  _715 = _698 w* _713;
  _716 = _712 + _715;
  MEM[(widelimb *)&tmp + 32B] = _716;
  _717 = MEM[(const limb *)z1_21(D) + 24B];
  _719 = _696 w* _717;
  _720 = _704 w* _708;
  _1224 = _719 + _720;
  _722 = MEM[(const limb *)&ftmp + 24B];
  _724 = _698 w* _722;
  _725 = _701 w* _713;
  _1225 = _724 + _1224;
  _727 = _725 + _1225;
  MEM[(widelimb *)&tmp + 48B] = _727;
  _728 = _704 w* _717;
  _729 = _708 w* _713;
  _730 = _728 + _729;
  _731 = _701 w* _722;
  _732 = _730 + _731;
  MEM[(widelimb *)&tmp + 64B] = _732;
  _733 = _713 w* _717;
  _734 = _708 w* _722;
  _735 = _733 + _734;
  MEM[(widelimb *)&tmp + 80B] = _735;
  _736 = _717 w* _722;
  MEM[(widelimb *)&tmp + 96B] = _736;
  felem_reduce (&ftmp3, &tmp);
  _655 = MEM[(const limb *)&ftmp3];
  _657 = *y2_26(D);
  _659 = _655 w* _657;
  _660 = MEM[(const limb *)y2_26(D) + 8B];
  _662 = _655 w* _660;
  _663 = MEM[(const limb *)&ftmp3 + 8B];
  _665 = _657 w* _663;
  _667 = MEM[(const limb *)y2_26(D) + 16B];
  _669 = _655 w* _667;
  _670 = _660 w* _663;
  _672 = MEM[(const limb *)&ftmp3 + 16B];
  _674 = _657 w* _672;
  _676 = MEM[(const limb *)y2_26(D) + 24B];
  _678 = _655 w* _676;
  _679 = _663 w* _667;
  _681 = MEM[(const limb *)&ftmp3 + 24B];
  _683 = _657 w* _681;
  _684 = _660 w* _672;
  _687 = _663 w* _676;
  _688 = _667 w* _672;
  _689 = _687 + _688;
  _690 = _660 w* _681;
  _691 = _689 + _690;
  MEM[(widelimb *)&tmp + 64B] = _691;
  _692 = _672 w* _676;
  _693 = _667 w* _681;
  _694 = _692 + _693;
  MEM[(widelimb *)&tmp + 80B] = _694;
  _695 = _676 w* _681;
  MEM[(widelimb *)&tmp + 96B] = _695;
  _112 = MEM[(const limb *)&ftmp4];
  _113 = (__int128 unsigned) _112;
  _1222 = 0x10000000000000100 - _113;
  _114 = _659 + _1222;
  MEM[(widelimb *)&tmp] = _114;
  _115 = MEM[(const limb *)&ftmp4 + 8B];
  _116 = (__int128 unsigned) _115;
  _16 = 18446462598732840704 - _116;
  _19 = _16 + _662;
  _117 = _19 + _665;
  MEM[(widelimb *)&tmp + 16B] = _117;
  _118 = MEM[(const limb *)&ftmp4 + 16B];
  _119 = (__int128 unsigned) _118;
  _30 = 18446744073709551360 - _119;
  _11 = _30 + _669;
  _13 = _11 + _670;
  _120 = _13 + _674;
  MEM[(widelimb *)&tmp + 32B] = _120;
  _121 = MEM[(const limb *)&ftmp4 + 24B];
  _122 = (__int128 unsigned) _121;
  _54 = 18446744073709551360 - _122;
  _22 = _54 + _678;
  _24 = _22 + _679;
  _27 = _24 + _683;
  _123 = _27 + _684;
  MEM[(widelimb *)&tmp + 48B] = _123;
  felem_reduce (&ftmp3, &tmp);
  _614 = MEM[(const limb *)&ftmp];
  _616 = *x2_29(D);
  _618 = _614 w* _616;
  _619 = MEM[(const limb *)x2_29(D) + 8B];
  _621 = _614 w* _619;
  _622 = MEM[(const limb *)&ftmp + 8B];
  _624 = _616 w* _622;
  _626 = MEM[(const limb *)x2_29(D) + 16B];
  _628 = _614 w* _626;
  _629 = _619 w* _622;
  _631 = MEM[(const limb *)&ftmp + 16B];
  _633 = _616 w* _631;
  _635 = MEM[(const limb *)x2_29(D) + 24B];
  _637 = _614 w* _635;
  _638 = _622 w* _626;
  _640 = MEM[(const limb *)&ftmp + 24B];
  _642 = _616 w* _640;
  _643 = _619 w* _631;
  _646 = _622 w* _635;
  _647 = _626 w* _631;
  _648 = _646 + _647;
  _649 = _619 w* _640;
  _650 = _648 + _649;
  MEM[(widelimb *)&tmp + 64B] = _650;
  _651 = _631 w* _635;
  _652 = _626 w* _640;
  _653 = _651 + _652;
  MEM[(widelimb *)&tmp + 80B] = _653;
  _654 = _635 w* _640;
  MEM[(widelimb *)&tmp + 96B] = _654;
  _92 = MEM[(const limb *)&ftmp2];
  _93 = (__int128 unsigned) _92;
  _67 = 0x10000000000000100 - _93;
  _94 = _67 + _618;
  MEM[(widelimb *)&tmp] = _94;
  _95 = MEM[(const limb *)&ftmp2 + 8B];
  _96 = (__int128 unsigned) _95;
  _64 = 18446462598732840704 - _96;
  _65 = _64 + _621;
  _97 = _65 + _624;
  MEM[(widelimb *)&tmp + 16B] = _97;
  _98 = MEM[(const limb *)&ftmp2 + 16B];
  _99 = (__int128 unsigned) _98;
  _58 = 18446744073709551360 - _99;
  _60 = _58 + _628;
  _62 = _60 + _629;
  _100 = _62 + _633;
  MEM[(widelimb *)&tmp + 32B] = _100;
  _101 = MEM[(const limb *)&ftmp2 + 24B];
  _102 = (__int128 unsigned) _101;
  _813 = 18446744073709551360 - _102;
  _815 = _637 + _813;
  _817 = _638 + _815;
  _56 = _642 + _817;
  _103 = _56 + _643;
  MEM[(widelimb *)&tmp + 48B] = _103;
  felem_reduce (&ftmp, &tmp);
  _580 = MEM[(const limb *)&ftmp];
  _581 = MEM[(const limb *)&ftmp + 8B];
  _582 = _580 | _581;
  _583 = MEM[(const limb *)&ftmp + 16B];
  _584 = _582 | _583;
  _585 = MEM[(const limb *)&ftmp + 24B];
  zero_586 = _584 | _585;
  zero.4_587 = (long int) zero_586;
  _588 = zero.4_587 + -1;
  _589 = (unsigned long) _588;
  zero_590 = _589 >> 63;
  _591 = _580 ^ 1;
  _592 = _581 ^ 72056494526300160;
  _593 = _591 | _592;
  _594 = _583 ^ 72057594037927935;
  _595 = _593 | _594;
  _596 = _585 ^ 72057594037927935;
  two224m96p1_597 = _595 | _596;
  two224m96p1.5_598 = (long int) two224m96p1_597;
  _599 = two224m96p1.5_598 + -1;
  _600 = (unsigned long) _599;
  two224m96p1_601 = _600 >> 63;
  _602 = _580 ^ 2;
  _603 = _581 ^ 72055395014672384;
  _809 = _594 | _602;
  _605 = _603 | _809;
  _606 = _585 ^ 144115188075855871;
  two225m97p2_607 = _605 | _606;
  two225m97p2.6_608 = (long int) two225m97p2_607;
  _609 = two225m97p2.6_608 + -1;
  _610 = (unsigned long) _609;
  two225m97p2_611 = _610 >> 63;
  _104 = two224m96p1_601 | two225m97p2_611;
  _613 = _104 | zero_590;
  _546 = MEM[(const limb *)&ftmp3];
  _547 = MEM[(const limb *)&ftmp3 + 8B];
  _548 = _546 | _547;
  _549 = MEM[(const limb *)&ftmp3 + 16B];
  _550 = _548 | _549;
  _551 = MEM[(const limb *)&ftmp3 + 24B];
  zero_552 = _550 | _551;
  zero.4_553 = (long int) zero_552;
  _554 = zero.4_553 + -1;
  _555 = (unsigned long) _554;
  zero_556 = _555 >> 63;
  _557 = _546 ^ 1;
  _558 = _547 ^ 72056494526300160;
  _559 = _557 | _558;
  _560 = _549 ^ 72057594037927935;
  _561 = _559 | _560;
  _562 = _551 ^ 72057594037927935;
  two224m96p1_563 = _561 | _562;
  two224m96p1.5_564 = (long int) two224m96p1_563;
  _565 = two224m96p1.5_564 + -1;
  _566 = (unsigned long) _565;
  two224m96p1_567 = _566 >> 63;
  _568 = _546 ^ 2;
  _569 = _547 ^ 72055395014672384;
  _108 = _560 | _568;
  _571 = _108 | _569;
  _572 = _551 ^ 144115188075855871;
  two225m97p2_573 = _571 | _572;
  two225m97p2.6_574 = (long int) two225m97p2_573;
  _575 = two225m97p2.6_574 + -1;
  _576 = (unsigned long) _575;
  two225m97p2_577 = _576 >> 63;
  _84 = two224m96p1_567 | two225m97p2_577;
  _579 = _84 | zero_556;
  _512 = *z1_21(D);
  _513 = MEM[(const limb *)z1_21(D) + 8B];
  _514 = _512 | _513;
  _515 = MEM[(const limb *)z1_21(D) + 16B];
  _516 = _514 | _515;
  _517 = MEM[(const limb *)z1_21(D) + 24B];
  zero_518 = _516 | _517;
  zero.4_519 = (long int) zero_518;
  _520 = zero.4_519 + -1;
  _521 = (unsigned long) _520;
  zero_522 = _521 >> 63;
  _523 = _512 ^ 1;
  _524 = _513 ^ 72056494526300160;
  _525 = _523 | _524;
  _526 = _515 ^ 72057594037927935;
  _527 = _525 | _526;
  _528 = _517 ^ 72057594037927935;
  two224m96p1_529 = _527 | _528;
  two224m96p1.5_530 = (long int) two224m96p1_529;
  _531 = two224m96p1.5_530 + -1;
  _532 = (unsigned long) _531;
  two224m96p1_533 = _532 >> 63;
  _534 = _512 ^ 2;
  _535 = _513 ^ 72055395014672384;
  _88 = _526 | _534;
  _537 = _88 | _535;
  _538 = _517 ^ 144115188075855871;
  two225m97p2_539 = _537 | _538;
  two225m97p2.6_540 = (long int) two225m97p2_539;
  _541 = two225m97p2.6_540 + -1;
  _542 = (unsigned long) _541;
  two225m97p2_543 = _542 >> 63;
  _106 = two224m96p1_533 | two225m97p2_543;
  _545 = _106 | zero_522;
  _478 = *z2_10(D);
  _479 = MEM[(const limb *)z2_10(D) + 8B];
  _480 = _478 | _479;
  _481 = MEM[(const limb *)z2_10(D) + 16B];
  _482 = _480 | _481;
  _483 = MEM[(const limb *)z2_10(D) + 24B];
  zero_484 = _482 | _483;
  zero.4_485 = (long int) zero_484;
  _486 = zero.4_485 + -1;
  _487 = (unsigned long) _486;
  zero_488 = _487 >> 63;
  _489 = _478 ^ 1;
  _490 = _479 ^ 72056494526300160;
  _491 = _489 | _490;
  _492 = _481 ^ 72057594037927935;
  _493 = _491 | _492;
  _494 = _483 ^ 72057594037927935;
  two224m96p1_495 = _493 | _494;
  two224m96p1.5_496 = (long int) two224m96p1_495;
  _497 = two224m96p1.5_496 + -1;
  _498 = (unsigned long) _497;
  two224m96p1_499 = _498 >> 63;
  _500 = _478 ^ 2;
  _501 = _479 ^ 72055395014672384;
  _86 = _492 | _500;
  _503 = _86 | _501;
  _504 = _483 ^ 144115188075855871;
  two225m97p2_505 = _503 | _504;
  two225m97p2.6_506 = (long int) two225m97p2_505;
  _507 = two225m97p2.6_506 + -1;
  _508 = (unsigned long) _507;
  two225m97p2_509 = _508 >> 63;
  _90 = two224m96p1_499 | two225m97p2_509;
  _511 = _90 | zero_488;
  _1159 = _579 & _613;
  if (_1159 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 6> [local count: 119463932]:
  _4 = _511 | _545;
  if (_4 == 0)
    goto <bb 7>; [20.24%]
  else
    goto <bb 8>; [79.76%]

  <bb 7> [local count: 24179500]:
  point_double (x3_40(D), y3_41(D), z3_42(D), x1_18(D), y1_15(D), z1_21(D));
  ftmp ={v} {CLOBBER};
  ftmp2 ={v} {CLOBBER};
  ftmp3 ={v} {CLOBBER};
  ftmp4 ={v} {CLOBBER};
  ftmp5 ={v} {CLOBBER};
  x_out ={v} {CLOBBER};
  y_out ={v} {CLOBBER};
  z_out ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  tmp2 ={v} {CLOBBER};
  goto <bb 12>; [100.00%]

  <bb 8> [local count: 214748365]:
  _1293 = (__int128 unsigned) _512;
  _1294 = (__int128 unsigned) _513;
  _1295 = (__int128 unsigned) _515;
  _1296 = (__int128 unsigned) _517;
  if (mixed_8(D) == 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 9> [local count: 70866960]:
  _768 = _478 w* _512;
  MEM[(widelimb *)&tmp] = _768;
  _771 = _479 w* _512;
  _774 = _478 w* _513;
  _775 = _771 + _774;
  MEM[(widelimb *)&tmp + 16B] = _775;
  _778 = _481 w* _512;
  _779 = _479 w* _513;
  _780 = _778 + _779;
  _783 = _478 w* _515;
  _784 = _780 + _783;
  MEM[(widelimb *)&tmp + 32B] = _784;
  _787 = _483 w* _512;
  _788 = _481 w* _513;
  _33 = _787 + _788;
  _792 = _478 w* _517;
  _793 = _479 w* _515;
  _1120 = _33 + _792;
  _795 = _793 + _1120;
  MEM[(widelimb *)&tmp + 48B] = _795;
  _796 = _483 w* _513;
  _797 = _481 w* _515;
  _798 = _796 + _797;
  _799 = _479 w* _517;
  _800 = _798 + _799;
  MEM[(widelimb *)&tmp + 64B] = _800;
  _801 = _483 w* _515;
  _802 = _481 w* _517;
  _803 = _801 + _802;
  MEM[(widelimb *)&tmp + 80B] = _803;
  _804 = _483 w* _517;
  MEM[(widelimb *)&tmp + 96B] = _804;
  felem_reduce (&ftmp5, &tmp);
  pretmp_1297 = MEM[(const limb *)&ftmp];
  pretmp_1299 = MEM[(const limb *)&ftmp5];
  pretmp_1301 = MEM[(const limb *)&ftmp5 + 8B];
  pretmp_1303 = MEM[(const limb *)&ftmp + 8B];
  pretmp_1305 = MEM[(const limb *)&ftmp5 + 16B];
  pretmp_1307 = MEM[(const limb *)&ftmp + 16B];
  pretmp_1309 = MEM[(const limb *)&ftmp5 + 24B];
  pretmp_1311 = MEM[(const limb *)&ftmp + 24B];
  _1349 = (__int128 unsigned) pretmp_1299;
  _1351 = (__int128 unsigned) pretmp_1301;
  _1353 = (__int128 unsigned) pretmp_1305;
  _1355 = (__int128 unsigned) pretmp_1309;
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 143881405]:
  _204 = {_512, _513};
  _805 = {_515, _517};
  MEM[(limb *)&ftmp5] = _204;
  MEM[(limb *)&ftmp5 + 16B] = _805;

  <bb 11> [local count: 214748371]:
  # prephitmp_1298 = PHI <pretmp_1297(9), _580(10)>
  # prephitmp_1304 = PHI <pretmp_1303(9), _581(10)>
  # prephitmp_1308 = PHI <pretmp_1307(9), _583(10)>
  # prephitmp_1312 = PHI <pretmp_1311(9), _585(10)>
  # prephitmp_1350 = PHI <_1349(9), _1293(10)>
  # prephitmp_1352 = PHI <_1351(9), _1294(10)>
  # prephitmp_1354 = PHI <_1353(9), _1295(10)>
  # prephitmp_1356 = PHI <_1355(9), _1296(10)>
  _1052 = (__int128 unsigned) prephitmp_1298;
  _1055 = _1052 * prephitmp_1350;
  MEM[(widelimb *)&tmp] = _1055;
  _1058 = _1052 * prephitmp_1352;
  _1060 = (__int128 unsigned) prephitmp_1304;
  _1061 = _1060 * prephitmp_1350;
  _1062 = _1058 + _1061;
  MEM[(widelimb *)&tmp + 16B] = _1062;
  _1065 = _1052 * prephitmp_1354;
  _1066 = _1060 * prephitmp_1352;
  _1067 = _1065 + _1066;
  _1069 = (__int128 unsigned) prephitmp_1308;
  _1070 = _1069 * prephitmp_1350;
  _1071 = _1067 + _1070;
  MEM[(widelimb *)&tmp + 32B] = _1071;
  _1074 = _1052 * prephitmp_1356;
  _1075 = _1060 * prephitmp_1354;
  _776 = _1074 + _1075;
  _1078 = (__int128 unsigned) prephitmp_1312;
  _1079 = _1078 * prephitmp_1350;
  _1080 = _1069 * prephitmp_1352;
  _110 = _776 + _1079;
  _1082 = _110 + _1080;
  MEM[(widelimb *)&tmp + 48B] = _1082;
  _1083 = _1060 * prephitmp_1356;
  _1084 = _1069 * prephitmp_1354;
  _1085 = _1083 + _1084;
  _1086 = _1078 * prephitmp_1352;
  _1087 = _1085 + _1086;
  MEM[(widelimb *)&tmp + 64B] = _1087;
  _1088 = _1069 * prephitmp_1356;
  _1089 = _1078 * prephitmp_1354;
  _1090 = _1088 + _1089;
  MEM[(widelimb *)&tmp + 80B] = _1090;
  _1091 = _1078 * prephitmp_1356;
  MEM[(widelimb *)&tmp + 96B] = _1091;
  felem_reduce (&z_out, &tmp);
  _264 = MEM[(const limb *)&ftmp];
  MEM[(limb *)&ftmp5] = _264;
  _265 = MEM[(const limb *)&ftmp + 8B];
  MEM[(limb *)&ftmp5 + 8B] = _265;
  _266 = MEM[(const limb *)&ftmp + 16B];
  MEM[(limb *)&ftmp5 + 16B] = _266;
  _267 = MEM[(const limb *)&ftmp + 24B];
  MEM[(limb *)&ftmp5 + 24B] = _267;
  tmp0_1025 = _264 * 2;
  tmp1_1027 = _265 * 2;
  tmp2_1029 = _266 * 2;
  _1031 = _264 w* _264;
  MEM[(widelimb *)&tmp] = _1031;
  _1033 = _264 w* tmp1_1027;
  MEM[(widelimb *)&tmp + 16B] = _1033;
  _1035 = _264 w* tmp2_1029;
  _1037 = _265 w* _265;
  _1038 = _1035 + _1037;
  MEM[(widelimb *)&tmp + 32B] = _1038;
  _1042 = _267 w* tmp0_1025;
  _1043 = tmp2_1029 w* _265;
  _1044 = _1042 + _1043;
  MEM[(widelimb *)&tmp + 48B] = _1044;
  _1045 = tmp1_1027 w* _267;
  _1047 = _266 w* _266;
  _1048 = _1045 + _1047;
  MEM[(widelimb *)&tmp + 64B] = _1048;
  _1049 = tmp2_1029 w* _267;
  MEM[(widelimb *)&tmp + 80B] = _1049;
  _1050 = _267 w* _267;
  MEM[(widelimb *)&tmp + 96B] = _1050;
  felem_reduce (&ftmp, &tmp);
  _983 = MEM[(const limb *)&ftmp];
  _985 = MEM[(const limb *)&ftmp5];
  _987 = _983 w* _985;
  MEM[(widelimb *)&tmp] = _987;
  _988 = MEM[(const limb *)&ftmp5 + 8B];
  _990 = _983 w* _988;
  _991 = MEM[(const limb *)&ftmp + 8B];
  _993 = _985 w* _991;
  _994 = _990 + _993;
  MEM[(widelimb *)&tmp + 16B] = _994;
  _995 = MEM[(const limb *)&ftmp5 + 16B];
  _997 = _983 w* _995;
  _998 = _988 w* _991;
  _999 = _997 + _998;
  _1000 = MEM[(const limb *)&ftmp + 16B];
  _1002 = _985 w* _1000;
  _1003 = _999 + _1002;
  MEM[(widelimb *)&tmp + 32B] = _1003;
  _1004 = MEM[(const limb *)&ftmp5 + 24B];
  _1006 = _983 w* _1004;
  _1007 = _991 w* _995;
  _772 = _1006 + _1007;
  _1009 = MEM[(const limb *)&ftmp + 24B];
  _1011 = _985 w* _1009;
  _1012 = _988 w* _1000;
  _769 = _772 + _1011;
  _1014 = _769 + _1012;
  MEM[(widelimb *)&tmp + 48B] = _1014;
  _1015 = _991 w* _1004;
  _1016 = _995 w* _1000;
  _1017 = _1015 + _1016;
  _1018 = _988 w* _1009;
  _1019 = _1017 + _1018;
  MEM[(widelimb *)&tmp + 64B] = _1019;
  _1020 = _1000 w* _1004;
  _1021 = _995 w* _1009;
  _1022 = _1020 + _1021;
  MEM[(widelimb *)&tmp + 80B] = _1022;
  _1023 = _1004 w* _1009;
  MEM[(widelimb *)&tmp + 96B] = _1023;
  felem_reduce (&ftmp5, &tmp);
  _942 = MEM[(const limb *)&ftmp2];
  _944 = MEM[(const limb *)&ftmp];
  _946 = _942 w* _944;
  MEM[(widelimb *)&tmp] = _946;
  _947 = MEM[(const limb *)&ftmp + 8B];
  _949 = _942 w* _947;
  _950 = MEM[(const limb *)&ftmp2 + 8B];
  _952 = _944 w* _950;
  _953 = _949 + _952;
  MEM[(widelimb *)&tmp + 16B] = _953;
  _954 = MEM[(const limb *)&ftmp + 16B];
  _956 = _942 w* _954;
  _957 = _947 w* _950;
  _958 = _956 + _957;
  _959 = MEM[(const limb *)&ftmp2 + 16B];
  _961 = _944 w* _959;
  _962 = _958 + _961;
  MEM[(widelimb *)&tmp + 32B] = _962;
  _963 = MEM[(const limb *)&ftmp + 24B];
  _965 = _942 w* _963;
  _966 = _950 w* _954;
  _126 = _965 + _966;
  _968 = MEM[(const limb *)&ftmp2 + 24B];
  _970 = _944 w* _968;
  _971 = _947 w* _959;
  _766 = _126 + _970;
  _973 = _766 + _971;
  MEM[(widelimb *)&tmp + 48B] = _973;
  _974 = _950 w* _963;
  _975 = _954 w* _959;
  _976 = _974 + _975;
  _977 = _947 w* _968;
  _978 = _976 + _977;
  MEM[(widelimb *)&tmp + 64B] = _978;
  _979 = _959 w* _963;
  _980 = _954 w* _968;
  _981 = _979 + _980;
  MEM[(widelimb *)&tmp + 80B] = _981;
  _982 = _963 w* _968;
  MEM[(widelimb *)&tmp + 96B] = _982;
  felem_reduce (&ftmp2, &tmp);
  _901 = MEM[(const limb *)&ftmp4];
  _903 = MEM[(const limb *)&ftmp5];
  _904 = (__int128 unsigned) _903;
  _905 = _901 w* _903;
  MEM[(widelimb *)&tmp] = _905;
  _906 = MEM[(const limb *)&ftmp5 + 8B];
  _907 = (__int128 unsigned) _906;
  _908 = _901 w* _906;
  _909 = MEM[(const limb *)&ftmp4 + 8B];
  _911 = _903 w* _909;
  _912 = _908 + _911;
  MEM[(widelimb *)&tmp + 16B] = _912;
  _913 = MEM[(const limb *)&ftmp5 + 16B];
  _914 = (__int128 unsigned) _913;
  _915 = _901 w* _913;
  _916 = _906 w* _909;
  _917 = _915 + _916;
  _918 = MEM[(const limb *)&ftmp4 + 16B];
  _920 = _903 w* _918;
  _921 = _917 + _920;
  MEM[(widelimb *)&tmp + 32B] = _921;
  _922 = MEM[(const limb *)&ftmp5 + 24B];
  _923 = (__int128 unsigned) _922;
  _924 = _901 w* _922;
  _925 = _909 w* _913;
  _125 = _924 + _925;
  _927 = MEM[(const limb *)&ftmp4 + 24B];
  _929 = _903 w* _927;
  _930 = _906 w* _918;
  _124 = _125 + _929;
  _932 = _124 + _930;
  MEM[(widelimb *)&tmp + 48B] = _932;
  _933 = _909 w* _922;
  _934 = _913 w* _918;
  _935 = _933 + _934;
  _936 = _906 w* _927;
  _937 = _935 + _936;
  MEM[(widelimb *)&tmp + 64B] = _937;
  _938 = _918 w* _922;
  _939 = _913 w* _927;
  _940 = _938 + _939;
  MEM[(widelimb *)&tmp + 80B] = _940;
  _941 = _922 w* _927;
  MEM[(widelimb *)&tmp + 96B] = _941;
  _874 = MEM[(const limb *)&ftmp3];
  tmp0_875 = _874 * 2;
  _876 = MEM[(const limb *)&ftmp3 + 8B];
  tmp1_877 = _876 * 2;
  _878 = MEM[(const limb *)&ftmp3 + 16B];
  tmp2_879 = _878 * 2;
  _881 = _874 w* _874;
  _883 = _874 w* tmp1_877;
  _885 = _874 w* tmp2_879;
  _887 = _876 w* _876;
  _889 = MEM[(const limb *)&ftmp3 + 24B];
  _892 = _889 w* tmp0_875;
  _893 = tmp2_879 w* _876;
  _895 = tmp1_877 w* _889;
  _897 = _878 w* _878;
  _898 = _895 + _897;
  MEM[(widelimb *)&tmp2 + 64B] = _898;
  _899 = tmp2_879 w* _889;
  MEM[(widelimb *)&tmp2 + 80B] = _899;
  _900 = _889 w* _889;
  MEM[(widelimb *)&tmp2 + 96B] = _900;
  _35 = _881 - _904;
  _37 = 0x1fffdfffffffffe00 - _907;
  _270 = _887 - _914;
  _269 = _270 + 0x1fffffffffffffe00;
  _273 = 0x1fffffffffffffe00 - _923;
  _272 = _273 + _892;
  _240 = MEM[(const limb *)&ftmp2];
  _241 = MEM[(const limb *)&ftmp2 + 8B];
  _242 = MEM[(const limb *)&ftmp2 + 16B];
  _243 = MEM[(const limb *)&ftmp2 + 24B];
  _236 = _240 * 2;
  MEM[(limb *)&ftmp5] = _236;
  _237 = _241 * 2;
  MEM[(limb *)&ftmp5 + 8B] = _237;
  _238 = _242 * 2;
  MEM[(limb *)&ftmp5 + 16B] = _238;
  _239 = _243 * 2;
  MEM[(limb *)&ftmp5 + 24B] = _239;
  _39 = _35 + 0x20000000000000200;
  _1122 = _37 + _883;
  _268 = _269 + _885;
  _271 = _272 + _893;
  _228 = (__int128 unsigned) _236;
  _229 = _39 - _228;
  MEM[(widelimb *)&tmp2] = _229;
  _230 = (__int128 unsigned) _237;
  _231 = _1122 - _230;
  MEM[(widelimb *)&tmp2 + 16B] = _231;
  _232 = (__int128 unsigned) _238;
  _233 = _268 - _232;
  MEM[(widelimb *)&tmp2 + 32B] = _233;
  _234 = (__int128 unsigned) _239;
  _235 = _271 - _234;
  MEM[(widelimb *)&tmp2 + 48B] = _235;
  felem_reduce (&x_out, &tmp2);
  _208 = MEM[(limb *)&ftmp2];
  _209 = _208 + 288230376151711748;
  _210 = MEM[(limb *)&ftmp2 + 8B];
  _211 = _210 + 288225978105200636;
  _212 = MEM[(limb *)&ftmp2 + 16B];
  _213 = _212 + 288230376151711740;
  _214 = MEM[(limb *)&ftmp2 + 24B];
  _215 = _214 + 288230376151711740;
  _216 = MEM[(const limb *)&x_out];
  _217 = _209 - _216;
  MEM[(limb *)&ftmp2] = _217;
  _218 = MEM[(const limb *)&x_out + 8B];
  _219 = _211 - _218;
  MEM[(limb *)&ftmp2 + 8B] = _219;
  _220 = MEM[(const limb *)&x_out + 16B];
  _221 = _213 - _220;
  MEM[(limb *)&ftmp2 + 16B] = _221;
  _222 = MEM[(const limb *)&x_out + 24B];
  _223 = _215 - _222;
  MEM[(limb *)&ftmp2 + 24B] = _223;
  _833 = MEM[(const limb *)&ftmp3];
  _837 = _833 w* _217;
  _840 = _833 w* _219;
  _841 = MEM[(const limb *)&ftmp3 + 8B];
  _843 = _217 w* _841;
  _847 = _833 w* _221;
  _848 = _219 w* _841;
  _850 = MEM[(const limb *)&ftmp3 + 16B];
  _852 = _217 w* _850;
  _856 = _833 w* _223;
  _857 = _841 w* _221;
  _859 = MEM[(const limb *)&ftmp3 + 24B];
  _861 = _217 w* _859;
  _862 = _219 w* _850;
  _865 = _841 w* _223;
  _866 = _221 w* _850;
  _868 = _219 w* _859;
  _870 = _850 w* _223;
  _871 = _221 w* _859;
  _873 = _223 w* _859;
  _819 = MEM[(const widelimb *)&tmp];
  _790 = 0x1000000000000000000000000000000 - _819;
  _820 = _790 + _837;
  MEM[(widelimb *)&tmp2] = _820;
  _821 = MEM[(const widelimb *)&tmp + 16B];
  _1039 = 0xffffffffffffff0000000000000000 - _821;
  _1026 = _840 + _1039;
  _822 = _843 + _1026;
  MEM[(widelimb *)&tmp2 + 16B] = _822;
  _823 = MEM[(const widelimb *)&tmp + 32B];
  _253 = 0xffffffffffffff0000000000000000 - _823;
  _250 = _253 + _847;
  _246 = _250 + _848;
  _824 = _246 + _852;
  MEM[(widelimb *)&tmp2 + 32B] = _824;
  _825 = MEM[(const widelimb *)&tmp + 48B];
  _185 = 0x1000000000000000000000000000000 - _825;
  _248 = _185 + _856;
  _197 = _248 + _857;
  _252 = _197 + _861;
  _826 = _252 + _862;
  MEM[(widelimb *)&tmp2 + 48B] = _826;
  _827 = MEM[(const widelimb *)&tmp + 64B];
  _140 = 0xfffeffffffffff0000000000000000 - _827;
  _151 = _140 + _865;
  _162 = _151 + _866;
  _828 = _162 + _868;
  MEM[(widelimb *)&tmp2 + 64B] = _828;
  _829 = MEM[(const widelimb *)&tmp + 80B];
  _1024 = 0xffffffffffffff0000000000000000 - _829;
  _785 = _870 + _1024;
  _830 = _785 + _871;
  MEM[(widelimb *)&tmp2 + 80B] = _830;
  _831 = MEM[(const widelimb *)&tmp + 96B];
  _1028 = 0xffffffffffffff0000000000000000 - _831;
  _832 = _873 + _1028;
  MEM[(widelimb *)&tmp2 + 96B] = _832;
  felem_reduce (&y_out, &tmp2);
  copy_196 = -_545;
  vect_cst__1008 = {copy_196, copy_196};
  vect__201.135_1240 = MEM[(const limb *)x2_29(D)];
  vect__203.138_1256 = MEM[(limb *)&x_out];
  vect__204.139_1272 = vect__201.135_1240 ^ vect__203.138_1256;
  vect_tmp_205.140_1288 = vect_cst__1008 & vect__204.139_1272;
  vect__206.141_298 = vect__203.138_1256 ^ vect_tmp_205.140_1288;
  MEM[(limb *)&x_out] = vect__206.141_298;
  vect__201.135_1107 = MEM[(const limb *)x2_29(D) + 16B];
  vect__203.138_1076 = MEM[(limb *)&x_out + 16B];
  vect__204.139_1013 = vect__203.138_1076 ^ vect__201.135_1107;
  vect_tmp_205.140_972 = vect_cst__1008 & vect__204.139_1013;
  vect__206.141_967 = vect_tmp_205.140_972 ^ vect__203.138_1076;
  MEM[(limb *)&x_out + 16B] = vect__206.141_967;
  copy_184 = -_511;
  vect_cst__1162 = {copy_184, copy_184};
  vect__189.124_161 = MEM[(const limb *)x1_18(D)];
  vect__192.128_141 = vect__189.124_161 ^ vect__206.141_298;
  vect_tmp_193.129_142 = vect__192.128_141 & vect_cst__1162;
  vect__194.130_143 = vect_tmp_193.129_142 ^ vect__206.141_298;
  MEM[(limb *)&x_out] = vect__194.130_143;
  vect__189.124_1170 = MEM[(const limb *)x1_18(D) + 16B];
  vect__192.128_1166 = vect__206.141_967 ^ vect__189.124_1170;
  vect_tmp_193.129_1161 = vect_cst__1162 & vect__192.128_1166;
  vect__194.130_1160 = vect__206.141_967 ^ vect_tmp_193.129_1161;
  MEM[(limb *)&x_out + 16B] = vect__194.130_1160;
  vect__177.113_168 = MEM[(const limb *)y2_26(D)];
  vect__179.116_169 = MEM[(limb *)&y_out];
  vect__180.117_170 = vect__177.113_168 ^ vect__179.116_169;
  vect_tmp_181.118_171 = vect__180.117_170 & vect_cst__1008;
  vect__182.119_172 = vect__179.116_169 ^ vect_tmp_181.118_171;
  MEM[(limb *)&y_out] = vect__182.119_172;
  vect__177.113_1237 = MEM[(const limb *)y2_26(D) + 16B];
  vect__179.116_1232 = MEM[(limb *)&y_out + 16B];
  vect__180.117_1229 = vect__179.116_1232 ^ vect__177.113_1237;
  vect_tmp_181.118_1223 = vect_cst__1008 & vect__180.117_1229;
  vect__182.119_1179 = vect_tmp_181.118_1223 ^ vect__179.116_1232;
  MEM[(limb *)&y_out + 16B] = vect__182.119_1179;
  vect__166.102_175 = MEM[(const limb *)y1_15(D)];
  vect__169.106_177 = vect__182.119_172 ^ vect__166.102_175;
  vect_tmp_170.107_178 = vect__169.106_177 & vect_cst__1162;
  vect__171.108_179 = vect__182.119_172 ^ vect_tmp_170.107_178;
  MEM[(limb *)&y_out] = vect__171.108_179;
  vect__166.102_1253 = MEM[(const limb *)y1_15(D) + 16B];
  vect__169.106_1249 = vect__182.119_1179 ^ vect__166.102_1253;
  vect_tmp_170.107_1247 = vect_cst__1162 & vect__169.106_1249;
  vect__171.108_1246 = vect__182.119_1179 ^ vect_tmp_170.107_1247;
  MEM[(limb *)&y_out + 16B] = vect__171.108_1246;
  vect__155.91_206 = MEM[(const limb *)z2_10(D)];
  vect__157.94_207 = MEM[(limb *)&z_out];
  vect__158.95_1289 = vect__155.91_206 ^ vect__157.94_207;
  vect_tmp_159.96_186 = vect_cst__1008 & vect__158.95_1289;
  vect__160.97_187 = vect_tmp_159.96_186 ^ vect__157.94_207;
  MEM[(limb *)&z_out] = vect__160.97_187;
  vect__155.91_1269 = MEM[(const limb *)z2_10(D) + 16B];
  vect__157.94_1266 = MEM[(limb *)&z_out + 16B];
  vect__158.95_1265 = vect__157.94_1266 ^ vect__155.91_1269;
  vect_tmp_159.96_1263 = vect_cst__1008 & vect__158.95_1265;
  vect__160.97_1262 = vect_tmp_159.96_1263 ^ vect__157.94_1266;
  MEM[(limb *)&z_out + 16B] = vect__160.97_1262;
  vect__144.80_258 = MEM[(const limb *)z1_21(D)];
  vect__147.84_259 = vect__160.97_187 ^ vect__144.80_258;
  vect_tmp_148.85_1292 = vect__147.84_259 & vect_cst__1162;
  vect__149.86_261 = vect__160.97_187 ^ vect_tmp_148.85_1292;
  MEM[(limb *)&z_out] = vect__149.86_261;
  vect__144.80_1285 = MEM[(const limb *)z1_21(D) + 16B];
  vect__147.84_1281 = vect__160.97_1262 ^ vect__144.80_1285;
  vect_tmp_148.85_1279 = vect_cst__1162 & vect__147.84_1281;
  vect__149.86_1278 = vect__160.97_1262 ^ vect_tmp_148.85_1279;
  MEM[(limb *)x3_40(D)] = vect__194.130_143;
  MEM[(limb *)x3_40(D) + 16B] = vect__194.130_1160;
  MEM[(limb *)y3_41(D)] = vect__171.108_179;
  MEM[(limb *)y3_41(D) + 16B] = vect__171.108_1246;
  MEM[(limb *)z3_42(D)] = vect__149.86_261;
  MEM[(limb *)z3_42(D) + 16B] = vect__149.86_1278;
  ftmp ={v} {CLOBBER};
  ftmp2 ={v} {CLOBBER};
  ftmp3 ={v} {CLOBBER};
  ftmp4 ={v} {CLOBBER};
  ftmp5 ={v} {CLOBBER};
  x_out ={v} {CLOBBER};
  y_out ={v} {CLOBBER};
  z_out ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  tmp2 ={v} {CLOBBER};

  <bb 12> [local count: 238927864]:
  return;

}



;; Function batch_mul (batch_mul, funcdef_no=428, decl_uid=10605, cgraph_uid=428, symbol_order=430)

batch_mul (limb * x_out, limb * y_out, limb * z_out, const u8[28] * scalars, const unsigned int num_points, const u8 * g_scalar, const int mixed, const limb[17][3][4] * pre_comp, const limb[16][3][4] * g_pre_comp)
{
  unsigned long ivtmp.292;
  unsigned long ivtmp.287;
  unsigned long ivtmp.285;
  unsigned long ivtmp.280;
  unsigned long ivtmp.274;
  unsigned long ivtmp.271;
  unsigned long ivtmp.267;
  unsigned long ivtmp.262;
  vector(2) long unsigned int vect__316.258;
  const vector(2) long unsigned int vect_tmp_306.257;
  vector(2) long unsigned int vect__296.256;
  vector(2) long unsigned int vect__286.247;
  vector(2) long unsigned int vect__286.246;
  vector(2) long unsigned int vect__286.243;
  vector(2) long unsigned int vect__286.242;
  const vector(2) long unsigned int vect__152.231;
  const vector(2) long unsigned int vect__152.230;
  const vector(2) long unsigned int vect__156.225;
  const vector(2) long unsigned int vect__156.224;
  const vector(2) long unsigned int vect__160.219;
  const vector(2) long unsigned int vect__160.218;
  limb tmp__lsm.211;
  limb tmp__lsm.210;
  limb tmp__lsm.209;
  limb tmp__lsm.208;
  limb tmp__lsm.207;
  limb tmp__lsm.206;
  limb tmp__lsm.205;
  limb tmp__lsm.204;
  limb tmp__lsm.203;
  limb tmp__lsm.202;
  limb tmp__lsm.201;
  limb tmp__lsm.200;
  limb tmp__lsm.199;
  limb tmp__lsm.198;
  limb tmp__lsm.197;
  limb tmp__lsm.196;
  limb tmp__lsm.195;
  limb tmp__lsm.194;
  limb tmp__lsm.193;
  limb tmp__lsm.192;
  limb tmp__lsm.191;
  limb tmp__lsm.190;
  limb tmp__lsm.189;
  limb tmp__lsm.188;
  limb tmp__lsm.187;
  limb tmp__lsm.186;
  limb tmp__lsm.185;
  limb tmp__lsm.184;
  limb tmp__lsm.183;
  limb tmp__lsm.182;
  limb tmp__lsm.181;
  limb tmp__lsm.180;
  limb tmp__lsm.179;
  limb tmp__lsm.178;
  limb tmp__lsm.177;
  limb tmp__lsm.176;
  u64 mask;
  widelimb tmp[7];
  u64 mask;
  u64 mask;
  const limb copy;
  u8 digit;
  u8 sign;
  u64 bits;
  limb tmp[4][4];
  limb nq[3][4];
  int skip;
  int i;
  _Bool _1;
  _Bool _3;
  _Bool _4;
  int _8;
  int _9;
  int _12;
  int _15;
  long unsigned int _18;
  int _22;
  int _23;
  int _26;
  int _29;
  long unsigned int _31;
  int _32;
  int _50;
  unsigned char digit.10_58;
  long unsigned int _59;
  unsigned char sign.11_60;
  long unsigned int _61;
  int _64;
  int _78;
  int _80;
  int _81;
  int _84;
  int _85;
  int _93;
  int _94;
  int _104;
  int _106;
  int _140;
  int _146;
  sizetype _148;
  unsigned int _152;
  unsigned int _153;
  unsigned int _154;
  unsigned int _156;
  unsigned int _157;
  unsigned int _158;
  unsigned int _159;
  unsigned int _160;
  unsigned int _161;
  unsigned int _162;
  unsigned int _163;
  int _167;
  unsigned long _171;
  unsigned int _172;
  const u8 * _173;
  int _185;
  int _189;
  long unsigned int _193;
  long unsigned int _195;
  unsigned int _210;
  sizetype _211;
  const u8 * _212;
  unsigned char _213;
  int _214;
  unsigned int _215;
  int _216;
  char _217;
  char _218;
  unsigned int _220;
  sizetype _221;
  const u8 * _222;
  unsigned char _223;
  int _224;
  unsigned int _225;
  int _226;
  char _227;
  char _228;
  unsigned int _230;
  sizetype _231;
  const u8 * _232;
  unsigned char _233;
  int _234;
  unsigned int _235;
  int _236;
  char _237;
  char _238;
  unsigned int _240;
  sizetype _241;
  const u8 * _242;
  unsigned char _243;
  int _244;
  unsigned int _245;
  int _246;
  char _247;
  char _248;
  long unsigned int _260;
  long unsigned int _262;
  unsigned int _277;
  sizetype _278;
  const u8 * _279;
  unsigned char _280;
  int _281;
  unsigned int _282;
  int _283;
  char _284;
  char _285;
  unsigned int _287;
  sizetype _288;
  const u8 * _289;
  unsigned char _290;
  int _291;
  unsigned int _292;
  int _293;
  char _294;
  char _295;
  unsigned int _297;
  sizetype _298;
  const u8 * _299;
  unsigned char _300;
  int _301;
  unsigned int _302;
  int _303;
  char _304;
  char _305;
  unsigned int _307;
  sizetype _308;
  const u8 * _309;
  unsigned char _310;
  int _311;
  unsigned int _312;
  int _313;
  char _314;
  char _315;
  unsigned int _317;
  sizetype _318;
  unsigned char _320;
  int _321;
  unsigned int _322;
  int _323;
  char _324;
  char _325;
  unsigned int _327;
  sizetype _328;
  unsigned char _330;
  int _331;
  int _333;
  char _334;
  char _335;
  unsigned int _337;
  sizetype _338;
  unsigned char _340;
  int _341;
  int _343;
  char _344;
  char _345;
  unsigned int _347;
  sizetype _348;
  unsigned char _350;
  int _351;
  int _353;
  char _354;
  char _355;
  unsigned int _357;
  sizetype _358;
  unsigned char _360;
  int _361;
  int _363;
  char _364;
  char _365;
  unsigned int _367;
  sizetype _368;
  unsigned char _370;
  int _371;
  unsigned int _372;
  int _373;
  char _374;
  char _375;
  __int128 unsigned _378;
  __int128 unsigned _379;
  __int128 unsigned _381;
  __int128 unsigned _382;
  __int128 unsigned _384;
  __int128 unsigned _385;
  __int128 unsigned _387;
  __int128 unsigned _388;
  long unsigned int _397;
  long unsigned int _399;
  long unsigned int _401;
  int _443;
  int _445;
  int _480;
  long unsigned int _483;
  long unsigned int _484;
  long unsigned int _485;
  int _492;
  long unsigned int _495;
  long unsigned int _496;
  long unsigned int _497;
  unsigned long _506;
  long unsigned int _507;
  long unsigned int _508;
  long unsigned int _509;
  unsigned long _516;
  long unsigned int _519;
  long unsigned int _520;
  long unsigned int _521;
  unsigned long _530;
  long unsigned int _531;
  long unsigned int _532;
  long unsigned int _533;
  unsigned long _542;
  long unsigned int _543;
  long unsigned int _544;
  long unsigned int _545;
  long unsigned int _555;
  long unsigned int _556;
  long unsigned int _557;
  long unsigned int _567;
  long unsigned int _568;
  long unsigned int _569;
  int _576;
  long unsigned int _579;
  long unsigned int _580;
  long unsigned int _581;
  long unsigned int _591;
  long unsigned int _592;
  long unsigned int _593;
  long unsigned int _603;
  long unsigned int _604;
  long unsigned int _605;
  long unsigned int _615;
  long unsigned int _616;
  long unsigned int _617;
  long unsigned int _627;
  long unsigned int _628;
  long unsigned int _629;
  long unsigned int _639;
  long unsigned int _640;
  long unsigned int _641;
  long unsigned int _651;
  long unsigned int _652;
  long unsigned int _653;
  void * _657;
  long unsigned int _663;
  long unsigned int _664;
  long unsigned int _665;
  long unsigned int _675;
  long unsigned int _676;
  long unsigned int _677;
  long unsigned int _687;
  long unsigned int _688;
  long unsigned int _689;
  long unsigned int _699;
  long unsigned int _700;
  long unsigned int _701;
  long unsigned int _711;
  long unsigned int _712;
  long unsigned int _713;
  void * _722;
  long unsigned int _723;
  long unsigned int _724;
  long unsigned int _725;
  sizetype _734;
  long unsigned int _735;
  long unsigned int _736;
  long unsigned int _737;
  long unsigned int _747;
  long unsigned int _748;
  long unsigned int _749;
  void * _756;
  long unsigned int _759;
  long unsigned int _760;
  long unsigned int _761;
  long unsigned int _771;
  long unsigned int _772;
  long unsigned int _773;
  long unsigned int _783;
  long unsigned int _784;
  long unsigned int _785;
  long unsigned int _795;
  long unsigned int _796;
  long unsigned int _797;
  long unsigned int _807;
  long unsigned int _808;
  long unsigned int _809;
  void * _816;
  long unsigned int _819;
  long unsigned int _820;
  long unsigned int _821;
  long unsigned int _831;
  long unsigned int _832;
  long unsigned int _833;
  long unsigned int _843;
  long unsigned int _844;
  long unsigned int _845;
  long unsigned int _855;
  long unsigned int _856;
  long unsigned int _857;
  long unsigned int _867;
  long unsigned int _868;
  long unsigned int _869;
  long unsigned int _879;
  long unsigned int _880;
  long unsigned int _881;
  long unsigned int _891;
  long unsigned int _892;
  long unsigned int _893;
  long unsigned int _903;
  long unsigned int _904;
  long unsigned int _905;
  unsigned int _1375;
  unsigned int _1377;
  unsigned int _1379;
  unsigned int _1381;
  unsigned int _1385;
  unsigned int _1387;
  unsigned int _1389;
  unsigned int _1393;
  unsigned int _1395;
  unsigned int _1397;
  unsigned int _1402;
  unsigned int _1403;
  void * _1417;
  const limb[3][4] * _1418;
  void * _1435;
  vector(2) long unsigned int _1462;
  unsigned int _1483;
  unsigned int _1484;
  unsigned int _1485;
  unsigned int _1486;
  int _1499;
  int _1501;
  int prephitmp_1502;
  long unsigned int _1505;
  long unsigned int _1507;
  int _1508;
  int prephitmp_1509;
  vector(2) long unsigned int _1530;
  vector(2) long unsigned int _1532;
  vector(2) long unsigned int _1534;
  vector(2) long unsigned int _1536;
  vector(2) long unsigned int _1538;
  vector(2) long unsigned int _1540;
  unsigned int _1552;
  unsigned int _1560;
  vector(2) long unsigned int _1577;
  vector(2) long unsigned int _1579;
  vector(2) long unsigned int _1581;
  vector(2) long unsigned int _1589;
  vector(2) long unsigned int _1591;
  vector(2) long unsigned int _1593;
  vector(2) long unsigned int _1606;
  vector(2) long unsigned int _1608;
  vector(2) long unsigned int _1610;
  vector(2) long unsigned int _1612;
  vector(2) long unsigned int _1614;
  vector(2) long unsigned int _1616;
  int _1661;

  <bb 2> [local count: 24299731]:
  _1 = g_scalar_76(D) != 0B;
  __builtin_memset (&nq, 0, 96);
  if (num_points_79(D) != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 12149866]:

  <bb 4> [local count: 24299732]:
  # i_68 = PHI <220(2), 27(3)>
  _172 = num_points_79(D) + 4294967295;
  _171 = (unsigned long) _172;
  _542 = _171 * 1632;
  _530 = (unsigned long) pre_comp_109(D);
  _516 = _530 + 1632;
  _506 = _516 + _542;
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 114196315]:
  if (skip_431 == 0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [100.00%]

  <bb 6> [local count: 64880290]:
  point_double (&nq[0], &nq[1], &nq[2], &nq[0], &nq[1], &nq[2]);

  <bb 7> [local count: 179071159]:
  # skip_612 = PHI <0(6), skip_431(5)>

  <bb 8> [local count: 196606909]:
  # i_126 = PHI <_1661(7), i_68(4)>
  # skip_431 = PHI <skip_612(7), 1(4)>
  _3 = i_126 <= 27;
  _4 = _1 & _3;
  _1661 = i_126 + -1;
  if (_4 != 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 21>; [67.00%]

  <bb 9> [local count: 64880290]:
  _160 = (unsigned int) i_126;
  _1381 = _160 + 196;
  _240 = _1381 >> 3;
  _241 = (sizetype) _240;
  _242 = g_scalar_76(D) + _241;
  _243 = *_242;
  _244 = (int) _243;
  _245 = _1381 & 7;
  _246 = _244 >> _245;
  _247 = (char) _246;
  _248 = _247 & 1;
  _8 = (int) _248;
  _9 = _8 << 3;
  _161 = (unsigned int) i_126;
  _1379 = _161 + 140;
  _230 = _1379 >> 3;
  _231 = (sizetype) _230;
  _232 = g_scalar_76(D) + _231;
  _233 = *_232;
  _234 = (int) _233;
  _235 = _1379 & 7;
  _236 = _234 >> _235;
  _237 = (char) _236;
  _238 = _237 & 1;
  _12 = (int) _238;
  _84 = _12 << 2;
  _106 = _9 | _84;
  _162 = (unsigned int) i_126;
  _1377 = _162 + 84;
  _220 = _1377 >> 3;
  _221 = (sizetype) _220;
  _222 = g_scalar_76(D) + _221;
  _223 = *_222;
  _224 = (int) _223;
  _225 = _1377 & 7;
  _226 = _224 >> _225;
  _227 = (char) _226;
  _228 = _227 & 1;
  _15 = (int) _228;
  _85 = _15 << 1;
  _78 = _85 | _106;
  bits_86 = (u64) _78;
  _163 = (unsigned int) i_126;
  _1375 = _163 + 28;
  _210 = _1375 >> 3;
  _211 = (sizetype) _210;
  _212 = g_scalar_76(D) + _211;
  _213 = *_212;
  _214 = (int) _213;
  _215 = _1375 & 7;
  _216 = _214 >> _215;
  _217 = (char) _216;
  _218 = _217 & 1;
  _18 = (long unsigned int) _218;
  bits_88 = _18 | bits_86;
  _1418 = g_pre_comp_89(D) + 1536;
  ivtmp.292_1419 = (unsigned long) _1418;

  <bb 10> [local count: 524940478]:
  # tmp__lsm.200_71 = PHI <0(9), _773(10)>
  # tmp__lsm.201_92 = PHI <0(9), _785(10)>
  # tmp__lsm.202_419 = PHI <0(9), _797(10)>
  # tmp__lsm.203_417 = PHI <0(9), _809(10)>
  # tmp__lsm.204_83 = PHI <0(9), _821(10)>
  # tmp__lsm.205_19 = PHI <0(9), _833(10)>
  # tmp__lsm.206_54 = PHI <0(9), _845(10)>
  # tmp__lsm.207_57 = PHI <0(9), _857(10)>
  # tmp__lsm.208_166 = PHI <0(9), _869(10)>
  # tmp__lsm.209_151 = PHI <0(9), _881(10)>
  # tmp__lsm.210_149 = PHI <0(9), _893(10)>
  # tmp__lsm.211_147 = PHI <0(9), _905(10)>
  # ivtmp.287_1423 = PHI <0(9), ivtmp.287_1422(10)>
  # ivtmp.292_1421 = PHI <ivtmp.292_1419(9), ivtmp.292_1420(10)>
  mask_190 = bits_88 ^ ivtmp.287_1423;
  _193 = mask_190 >> 2;
  mask_194 = mask_190 | _193;
  _195 = mask_194 >> 1;
  mask_196 = mask_194 | _195;
  mask_197 = mask_196 & 1;
  mask_198 = mask_197 + 18446744073709551615;
  _1417 = (void *) ivtmp.292_1421;
  _771 = MEM[base: _1417, offset: 0B];
  _772 = mask_198 & _771;
  _773 = tmp__lsm.200_71 | _772;
  _783 = MEM[base: _1417, offset: 8B];
  _784 = mask_198 & _783;
  _785 = tmp__lsm.201_92 | _784;
  _795 = MEM[base: _1417, offset: 16B];
  _796 = mask_198 & _795;
  _797 = tmp__lsm.202_419 | _796;
  _807 = MEM[base: _1417, offset: 24B];
  _808 = mask_198 & _807;
  _809 = tmp__lsm.203_417 | _808;
  _819 = MEM[base: _1417, offset: 32B];
  _820 = mask_198 & _819;
  _821 = tmp__lsm.204_83 | _820;
  _831 = MEM[base: _1417, offset: 40B];
  _832 = mask_198 & _831;
  _833 = tmp__lsm.205_19 | _832;
  _843 = MEM[base: _1417, offset: 48B];
  _844 = mask_198 & _843;
  _845 = tmp__lsm.206_54 | _844;
  _855 = MEM[base: _1417, offset: 56B];
  _856 = mask_198 & _855;
  _857 = tmp__lsm.207_57 | _856;
  _867 = MEM[base: _1417, offset: 64B];
  _868 = mask_198 & _867;
  _869 = tmp__lsm.208_166 | _868;
  _879 = MEM[base: _1417, offset: 72B];
  _880 = mask_198 & _879;
  _881 = tmp__lsm.209_151 | _880;
  _891 = MEM[base: _1417, offset: 80B];
  _892 = mask_198 & _891;
  _893 = tmp__lsm.210_149 | _892;
  _903 = MEM[base: _1417, offset: 88B];
  _904 = mask_198 & _903;
  _905 = tmp__lsm.211_147 | _904;
  ivtmp.287_1422 = ivtmp.287_1423 + 1;
  ivtmp.292_1420 = ivtmp.292_1421 + 96;
  if (ivtmp.287_1422 != 16)
    goto <bb 10>; [87.64%]
  else
    goto <bb 11>; [12.36%]

  <bb 11> [local count: 64880290]:
  _1614 = {_893, _905};
  _1616 = {_869, _881};
  _1612 = {_845, _857};
  _1610 = {_821, _833};
  _1608 = {_797, _809};
  _1606 = {_773, _785};
  MEM[(limb *)&tmp] = _1606;
  MEM[(limb *)&tmp + 16B] = _1608;
  MEM[(limb *)&tmp + 32B] = _1610;
  MEM[(limb *)&tmp + 48B] = _1612;
  MEM[(limb *)&tmp + 64B] = _1616;
  MEM[(limb *)&tmp + 80B] = _1614;
  if (skip_431 == 0)
    goto <bb 12>; [33.00%]
  else
    goto <bb 13>; [67.00%]

  <bb 12> [local count: 21410487]:
  point_add (&nq[0], &nq[1], &nq[2], &nq[0], &nq[1], &nq[2], 1, &tmp[0], &tmp[1], &tmp[2]);
  goto <bb 14>; [100.00%]

  <bb 13> [local count: 43469782]:
  MEM[(char * {ref-all})&nq] = MEM[(char * {ref-all})&tmp];

  <bb 14> [local count: 64880290]:
  _1560 = (unsigned int) i_126;
  _1389 = _1560 + 168;
  _307 = _1389 >> 3;
  _308 = (sizetype) _307;
  _309 = g_scalar_76(D) + _308;
  _310 = *_309;
  _311 = (int) _310;
  _312 = _1389 & 7;
  _313 = _311 >> _312;
  _314 = (char) _313;
  _315 = _314 & 1;
  _22 = (int) _315;
  _23 = _22 << 3;
  _156 = (unsigned int) i_126;
  _1387 = _156 + 112;
  _297 = _1387 >> 3;
  _298 = (sizetype) _297;
  _299 = g_scalar_76(D) + _298;
  _300 = *_299;
  _301 = (int) _300;
  _302 = _1387 & 7;
  _303 = _301 >> _302;
  _304 = (char) _303;
  _305 = _304 & 1;
  _26 = (int) _305;
  _93 = _26 << 2;
  _81 = _23 | _93;
  _157 = (unsigned int) i_126;
  _1385 = _157 + 56;
  _287 = _1385 >> 3;
  _288 = (sizetype) _287;
  _289 = g_scalar_76(D) + _288;
  _290 = *_289;
  _291 = (int) _290;
  _292 = _1385 & 7;
  _293 = _291 >> _292;
  _294 = (char) _293;
  _295 = _294 & 1;
  _29 = (int) _295;
  _94 = _29 << 1;
  _80 = _81 | _94;
  bits_95 = (u64) _80;
  _158 = (unsigned int) i_126;
  _277 = _158 >> 3;
  _278 = (sizetype) _277;
  _279 = g_scalar_76(D) + _278;
  _280 = *_279;
  _281 = (int) _280;
  _282 = _158 & 7;
  _283 = _281 >> _282;
  _284 = (char) _283;
  _285 = _284 & 1;
  _31 = (long unsigned int) _285;
  bits_97 = _31 | bits_95;
  ivtmp.285_1436 = (unsigned long) g_pre_comp_89(D);

  <bb 15> [local count: 524940478]:
  # tmp__lsm.188_430 = PHI <0(14), _629(15)>
  # tmp__lsm.189_446 = PHI <0(14), _641(15)>
  # tmp__lsm.190_866 = PHI <0(14), _653(15)>
  # tmp__lsm.191_854 = PHI <0(14), _665(15)>
  # tmp__lsm.192_842 = PHI <0(14), _677(15)>
  # tmp__lsm.193_830 = PHI <0(14), _689(15)>
  # tmp__lsm.194_806 = PHI <0(14), _701(15)>
  # tmp__lsm.195_818 = PHI <0(14), _713(15)>
  # tmp__lsm.196_192 = PHI <0(14), _725(15)>
  # tmp__lsm.197_63 = PHI <0(14), _737(15)>
  # tmp__lsm.198_75 = PHI <0(14), _749(15)>
  # tmp__lsm.199_421 = PHI <0(14), _761(15)>
  # ivtmp.280_1450 = PHI <0(14), ivtmp.280_1449(15)>
  # ivtmp.285_1448 = PHI <ivtmp.285_1436(14), ivtmp.285_1447(15)>
  mask_257 = bits_97 ^ ivtmp.280_1450;
  _260 = mask_257 >> 2;
  mask_261 = mask_257 | _260;
  _262 = mask_261 >> 1;
  mask_263 = mask_261 | _262;
  mask_264 = mask_263 & 1;
  mask_265 = mask_264 + 18446744073709551615;
  _1435 = (void *) ivtmp.285_1448;
  _627 = MEM[base: _1435, offset: 0B];
  _628 = mask_265 & _627;
  _629 = tmp__lsm.188_430 | _628;
  _639 = MEM[base: _1435, offset: 8B];
  _640 = mask_265 & _639;
  _641 = tmp__lsm.189_446 | _640;
  _651 = MEM[base: _1435, offset: 16B];
  _652 = mask_265 & _651;
  _653 = _652 | tmp__lsm.190_866;
  _663 = MEM[base: _1435, offset: 24B];
  _664 = mask_265 & _663;
  _665 = _664 | tmp__lsm.191_854;
  _675 = MEM[base: _1435, offset: 32B];
  _676 = mask_265 & _675;
  _677 = _676 | tmp__lsm.192_842;
  _687 = MEM[base: _1435, offset: 40B];
  _688 = mask_265 & _687;
  _689 = _688 | tmp__lsm.193_830;
  _699 = MEM[base: _1435, offset: 48B];
  _700 = mask_265 & _699;
  _701 = _700 | tmp__lsm.194_806;
  _711 = MEM[base: _1435, offset: 56B];
  _712 = mask_265 & _711;
  _713 = _712 | tmp__lsm.195_818;
  _723 = MEM[base: _1435, offset: 64B];
  _724 = mask_265 & _723;
  _725 = tmp__lsm.196_192 | _724;
  _735 = MEM[base: _1435, offset: 72B];
  _736 = mask_265 & _735;
  _737 = tmp__lsm.197_63 | _736;
  _747 = MEM[base: _1435, offset: 80B];
  _748 = mask_265 & _747;
  _749 = tmp__lsm.198_75 | _748;
  _759 = MEM[base: _1435, offset: 88B];
  _760 = mask_265 & _759;
  _761 = tmp__lsm.199_421 | _760;
  ivtmp.280_1449 = ivtmp.280_1450 + 1;
  ivtmp.285_1447 = ivtmp.285_1448 + 96;
  if (ivtmp.280_1449 != 16)
    goto <bb 15>; [87.64%]
  else
    goto <bb 16>; [12.36%]

  <bb 16> [local count: 64880290]:
  _1593 = {_749, _761};
  _1591 = {_725, _737};
  _1589 = {_701, _713};
  _1581 = {_677, _689};
  _1579 = {_653, _665};
  _1577 = {_629, _641};
  MEM[(limb *)&tmp] = _1577;
  MEM[(limb *)&tmp + 16B] = _1579;
  MEM[(limb *)&tmp + 32B] = _1581;
  MEM[(limb *)&tmp + 48B] = _1589;
  MEM[(limb *)&tmp + 64B] = _1591;
  MEM[(limb *)&tmp + 80B] = _1593;
  point_add (&nq[0], &nq[1], &nq[2], &nq[0], &nq[1], &nq[2], 1, &tmp[0], &tmp[1], &tmp[2]);
  if (num_points_79(D) != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 17> [local count: 32440145]:
  _64 = i_126 % 5;
  if (_64 == 0)
    goto <bb 23>; [27.00%]
  else
    goto <bb 18>; [73.00%]

  <bb 18> [local count: 23681306]:
  if (_1661 >= 0)
    goto <bb 6>; [87.37%]
  else
    goto <bb 19>; [12.63%]

  <bb 19> [local count: 24299732]:
  vect__160.218_1564 = MEM[(const limb *)&nq];
  vect__160.219_1562 = MEM[(const limb *)&nq + 16B];
  MEM[(limb *)x_out_116(D)] = vect__160.218_1564;
  MEM[(limb *)x_out_116(D) + 16B] = vect__160.219_1562;
  vect__156.224_1556 = MEM[(const limb *)&nq + 32B];
  vect__156.225_1554 = MEM[(const limb *)&nq + 48B];
  MEM[(limb *)y_out_117(D)] = vect__156.224_1556;
  MEM[(limb *)y_out_117(D) + 16B] = vect__156.225_1554;
  vect__152.230_1548 = MEM[(const limb *)&nq + 64B];
  vect__152.231_1546 = MEM[(const limb *)&nq + 80B];
  MEM[(limb *)z_out_118(D)] = vect__152.230_1548;
  MEM[(limb *)z_out_118(D) + 16B] = vect__152.231_1546;
  nq ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  sign ={v} {CLOBBER};
  digit ={v} {CLOBBER};
  return;

  <bb 20> [local count: 32440145]:
  if (_1661 != -1)
    goto <bb 6>; [89.00%]
  else
    goto <bb 19>; [11.00%]

  <bb 21> [local count: 131726619]:
  if (num_points_79(D) != 0)
    goto <bb 22>; [50.00%]
  else
    goto <bb 33>; [50.00%]

  <bb 22> [local count: 65863309]:
  _32 = i_126 % 5;
  if (_32 == 0)
    goto <bb 23>; [27.00%]
  else
    goto <bb 33>; [73.00%]

  <bb 23> [local count: 23622320]:
  # skip_24 = PHI <_64(17), skip_431(22)>
  _1403 = (unsigned int) _1661;
  _159 = (unsigned int) i_126;
  _1402 = _159 + 4;
  _317 = _1402 >> 3;
  _318 = (sizetype) _317;
  _1552 = (unsigned int) i_126;
  _1397 = _1552 + 3;
  _327 = _1397 >> 3;
  _328 = (sizetype) _327;
  _152 = (unsigned int) i_126;
  _1395 = _152 + 2;
  _337 = _1395 >> 3;
  _338 = (sizetype) _337;
  _153 = (unsigned int) i_126;
  _1393 = _153 + 1;
  _347 = _1393 >> 3;
  _348 = (sizetype) _347;
  _154 = (unsigned int) i_126;
  _357 = _154 >> 3;
  _358 = (sizetype) _357;
  _367 = _1403 >> 3;
  _368 = (sizetype) _367;
  _1483 = _154 & 7;
  _1484 = _1397 & 7;
  _1485 = _1395 & 7;
  _1486 = _1393 & 7;
  _173 = scalars_100(D) + _338;
  ivtmp.274_175 = (unsigned long) _173;

  <bb 24> [local count: 214748415]:
  # skip_469 = PHI <skip_24(23), 0(32)>
  # ivtmp.271_180 = PHI <_530(23), ivtmp.271_179(32)>
  # ivtmp.274_177 = PHI <ivtmp.274_175(23), ivtmp.274_176(32)>
  if (_1402 == 224)
    goto <bb 34>; [34.00%]
  else
    goto <bb 25>; [66.00%]

  <bb 25> [local count: 141733950]:
  _148 = ivtmp.274_177 - _338;
  _816 = (void *) _148;
  _320 = MEM[base: _816, index: _318, offset: 0B];
  _321 = (int) _320;
  _322 = _1402 & 7;
  _323 = _321 >> _322;
  _324 = (char) _323;
  _325 = _324 & 1;
  _1499 = (int) _325;
  _1501 = _1499 << 5;
  goto <bb 34>; [100.00%]

  <bb 26> [local count: 141733950]:
  _370 = MEM[base: _722, index: _368, offset: 0B];
  _371 = (int) _370;
  _372 = _1403 & 7;
  _373 = _371 >> _372;
  _374 = (char) _373;
  _375 = _374 & 1;
  _1505 = (long unsigned int) _375;
  bits_105 = (u64) _167;
  _1507 = bits_105 | _1505;
  _1508 = (int) _1507;

  <bb 27> [local count: 214748415]:
  # prephitmp_1509 = PHI <_1508(26), _167(34)>
  ec_GFp_nistp_recode_scalar_bits (&sign, &digit, prephitmp_1509);
  digit.10_58 = digit;
  _59 = (long unsigned int) digit.10_58;

  <bb 28> [local count: 1737509919]:
  # tmp__lsm.176_377 = PHI <0(27), _485(28)>
  # tmp__lsm.177_380 = PHI <0(27), _497(28)>
  # tmp__lsm.178_383 = PHI <0(27), _509(28)>
  # tmp__lsm.179_386 = PHI <0(27), _521(28)>
  # tmp__lsm.180_504 = PHI <0(27), _533(28)>
  # tmp__lsm.181_390 = PHI <0(27), _545(28)>
  # tmp__lsm.182_144 = PHI <0(27), _557(28)>
  # tmp__lsm.183_600 = PHI <0(27), _569(28)>
  # tmp__lsm.184_391 = PHI <0(27), _581(28)>
  # tmp__lsm.185_67 = PHI <0(27), _593(28)>
  # tmp__lsm.186_73 = PHI <0(27), _605(28)>
  # tmp__lsm.187_123 = PHI <0(27), _617(28)>
  # ivtmp.262_474 = PHI <0(27), ivtmp.262_461(28)>
  # ivtmp.267_90 = PHI <ivtmp.271_180(27), ivtmp.267_219(28)>
  mask_396 = _59 ^ ivtmp.262_474;
  _397 = mask_396 >> 4;
  mask_398 = mask_396 | _397;
  _399 = mask_398 >> 2;
  mask_400 = mask_398 | _399;
  _401 = mask_400 >> 1;
  mask_402 = mask_400 | _401;
  mask_403 = mask_402 & 1;
  mask_404 = mask_403 + 18446744073709551615;
  _657 = (void *) ivtmp.267_90;
  _483 = MEM[base: _657, offset: 0B];
  _484 = mask_404 & _483;
  _485 = tmp__lsm.176_377 | _484;
  _495 = MEM[base: _657, offset: 8B];
  _496 = mask_404 & _495;
  _497 = tmp__lsm.177_380 | _496;
  _507 = MEM[base: _657, offset: 16B];
  _508 = mask_404 & _507;
  _509 = tmp__lsm.178_383 | _508;
  _519 = MEM[base: _657, offset: 24B];
  _520 = mask_404 & _519;
  _521 = tmp__lsm.179_386 | _520;
  _531 = MEM[base: _657, offset: 32B];
  _532 = mask_404 & _531;
  _533 = tmp__lsm.180_504 | _532;
  _543 = MEM[base: _657, offset: 40B];
  _544 = mask_404 & _543;
  _545 = tmp__lsm.181_390 | _544;
  _555 = MEM[base: _657, offset: 48B];
  _556 = mask_404 & _555;
  _557 = tmp__lsm.182_144 | _556;
  _567 = MEM[base: _657, offset: 56B];
  _568 = mask_404 & _567;
  _569 = _568 | tmp__lsm.183_600;
  _579 = MEM[base: _657, offset: 64B];
  _580 = mask_404 & _579;
  _581 = tmp__lsm.184_391 | _580;
  _591 = MEM[base: _657, offset: 72B];
  _592 = mask_404 & _591;
  _593 = tmp__lsm.185_67 | _592;
  _603 = MEM[base: _657, offset: 80B];
  _604 = mask_404 & _603;
  _605 = tmp__lsm.186_73 | _604;
  _615 = MEM[base: _657, offset: 88B];
  _616 = mask_404 & _615;
  _617 = tmp__lsm.187_123 | _616;
  ivtmp.262_461 = ivtmp.262_474 + 1;
  ivtmp.267_219 = ivtmp.267_90 + 96;
  if (ivtmp.262_461 != 17)
    goto <bb 28>; [87.64%]
  else
    goto <bb 29>; [12.36%]

  <bb 29> [local count: 214748419]:
  _1540 = {_605, _617};
  _1538 = {_581, _593};
  _1536 = {_557, _569};
  _1534 = {_533, _545};
  _1532 = {_509, _521};
  _1530 = {_485, _497};
  MEM[(limb *)&tmp] = _1530;
  MEM[(limb *)&tmp + 16B] = _1532;
  MEM[(limb *)&tmp + 32B] = _1534;
  MEM[(limb *)&tmp + 48B] = _1536;
  MEM[(limb *)&tmp + 64B] = _1538;
  MEM[(limb *)&tmp + 80B] = _1540;
  MEM[(widelimb[7] *)&tmp + 64B] = {};
  _378 = (__int128 unsigned) _533;
  _379 = 0x10000000000000100 - _378;
  MEM[(widelimb *)&tmp] = _379;
  _381 = (__int128 unsigned) _545;
  _382 = 18446462598732840704 - _381;
  MEM[(widelimb *)&tmp + 16B] = _382;
  _384 = (__int128 unsigned) _557;
  _385 = 18446744073709551360 - _384;
  MEM[(widelimb *)&tmp + 32B] = _385;
  _387 = (__int128 unsigned) _569;
  _388 = 18446744073709551360 - _387;
  MEM[(widelimb *)&tmp + 48B] = _388;
  felem_reduce (&tmp[3], &tmp);
  tmp ={v} {CLOBBER};
  sign.11_60 = sign;
  _61 = (long unsigned int) sign.11_60;
  copy_128 = -_61;
  vect__286.242_1498 = MEM[(limb *)&tmp + 32B];
  vect__286.243_1496 = MEM[(limb *)&tmp + 48B];
  vect__286.246_1490 = MEM[(limb *)&tmp + 96B];
  vect__286.247_1488 = MEM[(limb *)&tmp + 112B];
  vect__296.256_1464 = vect__286.246_1490 ^ vect__286.242_1498;
  vect__296.256_1463 = vect__286.247_1488 ^ vect__286.243_1496;
  _1462 = {copy_128, copy_128};
  vect_tmp_306.257_1458 = _1462 & vect__296.256_1464;
  vect_tmp_306.257_1457 = _1462 & vect__296.256_1463;
  vect__316.258_1456 = vect_tmp_306.257_1458 ^ vect__286.242_1498;
  vect__316.258_1455 = vect_tmp_306.257_1457 ^ vect__286.243_1496;
  MEM[(limb *)&tmp + 32B] = vect__316.258_1456;
  MEM[(limb *)&tmp + 48B] = vect__316.258_1455;
  if (skip_469 == 0)
    goto <bb 30>; [33.00%]
  else
    goto <bb 31>; [67.00%]

  <bb 30> [local count: 70866975]:
  point_add (&nq[0], &nq[1], &nq[2], &nq[0], &nq[1], &nq[2], mixed_112(D), &tmp[0], &tmp[1], &tmp[2]);
  goto <bb 32>; [100.00%]

  <bb 31> [local count: 143881440]:
  MEM[(char * {ref-all})&nq] = MEM[(char * {ref-all})&tmp];

  <bb 32> [local count: 214748416]:
  ivtmp.271_179 = ivtmp.271_180 + 1632;
  ivtmp.274_176 = ivtmp.274_177 + 28;
  if (ivtmp.271_179 != _506)
    goto <bb 24>; [89.00%]
  else
    goto <bb 35>; [11.00%]

  <bb 33> [local count: 115899681]:
  if (_1661 >= 0)
    goto <bb 5>; [98.53%]
  else
    goto <bb 19>; [1.47%]

  <bb 34> [local count: 214748415]:
  # prephitmp_1502 = PHI <_1501(25), 0(24)>
  _734 = ivtmp.274_177 - _338;
  _722 = (void *) _734;
  _330 = MEM[base: _722, index: _328, offset: 0B];
  _331 = (int) _330;
  _333 = _331 >> _1484;
  _334 = (char) _333;
  _335 = _334 & 1;
  _480 = (int) _335;
  _492 = _480 << 4;
  _756 = (void *) ivtmp.274_177;
  _340 = MEM[base: _756, offset: 0B];
  _341 = (int) _340;
  _343 = _341 >> _1485;
  _344 = (char) _343;
  _345 = _344 & 1;
  _443 = (int) _345;
  _140 = _443 << 3;
  _350 = MEM[base: _722, index: _348, offset: 0B];
  _351 = (int) _350;
  _353 = _351 >> _1486;
  _354 = (char) _353;
  _355 = _354 & 1;
  _146 = (int) _355;
  _445 = _146 << 2;
  _576 = _445 | _492;
  _185 = _140 | _576;
  _360 = MEM[base: _722, index: _358, offset: 0B];
  _361 = (int) _360;
  _363 = _361 >> _1483;
  _364 = (char) _363;
  _365 = _364 & 1;
  _50 = (int) _365;
  _104 = _50 << 1;
  _189 = _104 | _185;
  _167 = _189 | prephitmp_1502;
  if (_1403 > 223)
    goto <bb 27>; [34.00%]
  else
    goto <bb 26>; [66.00%]

  <bb 35> [local count: 23622326]:
  if (_1661 >= 0)
    goto <bb 6>; [32.62%]
  else
    goto <bb 19>; [67.38%]

}



;; Function ec_GFp_nistp224_points_mul (ec_GFp_nistp224_points_mul, funcdef_no=436, decl_uid=10070, cgraph_uid=436, symbol_order=438)

ec_GFp_nistp224_points_mul (const struct EC_GROUP * group, struct EC_POINT * r, const struct BIGNUM * scalar, size_t num, const struct EC_POINT * * points, const struct BIGNUM * * scalars, struct BN_CTX * ctx)
{
  unsigned long ivtmp.337;
  unsigned int ivtmp.335;
  unsigned long ivtmp.324;
  unsigned long ivtmp.316;
  unsigned int ivtmp.314;
  const struct BIGNUM * p_scalar;
  const struct EC_POINT * p;
  struct EC_POINT * generator;
  const limb[16][3][4] * g_pre_comp;
  struct NISTP224_PRE_COMP * pre;
  limb z_out[4];
  limb y_out[4];
  limb x_out[4];
  limb z_in[4];
  limb y_in[4];
  limb x_in[4];
  size_t num_points;
  unsigned int num_bytes;
  u8 tmp[28];
  limb[4] * tmp_felems;
  limb[17][3][4] * pre_comp;
  u8[28] * secrets;
  u8 g_secret[28];
  struct BIGNUM * tmp_scalar;
  struct BIGNUM * z;
  struct BIGNUM * y;
  struct BIGNUM * x;
  int mixed;
  unsigned int i;
  int j;
  int ret;
  const limb[4] * _1;
  struct BIGNUM * _2;
  const limb[4] * _3;
  struct BIGNUM * _4;
  const limb[4] * _5;
  struct BIGNUM * _6;
  int _7;
  struct EC_POINT * _8;
  int _9;
  long unsigned int _12;
  long unsigned int _13;
  _Bool _14;
  _Bool _15;
  _Bool _16;
  long unsigned int _20;
  const struct EC_POINT * * _21;
  const struct BIGNUM * * _22;
  _Bool _23;
  _Bool _24;
  _Bool _25;
  int _26;
  int _27;
  struct BIGNUM * _28;
  int _29;
  int _30;
  int _31;
  long unsigned int _32;
  struct BIGNUM * _33;
  int _34;
  struct BIGNUM * _35;
  int _36;
  struct BIGNUM * _37;
  int _38;
  long unsigned int _39;
  limb[17][3][4] * _40;
  limb[4] * _41;
  limb[4] * _42;
  limb[4] * _43;
  int _44;
  int _52;
  limb[4] * _53;
  limb[4] * _54;
  limb[4] * _55;
  long unsigned int _59;
  long unsigned int _60;
  _Bool _61;
  _Bool _63;
  int _64;
  int _65;
  struct BIGNUM * _66;
  int _67;
  int _68;
  int _69;
  unsigned int _70;
  unsigned int _71;
  struct BIGNUM * _72;
  struct BIGNUM * _73;
  struct BIGNUM * _74;
  _Bool _105;
  long unsigned int _142;
  _Bool _143;
  sizetype _205;
  const u8 * _206;
  unsigned char _209;
  long unsigned int _211;
  long unsigned int _212;
  long unsigned int _213;
  long unsigned int _214;
  long unsigned int _215;
  long unsigned int _216;
  long unsigned int _217;
  long unsigned int _218;
  long unsigned int _219;
  long unsigned int _220;
  long unsigned int _221;
  long unsigned int _222;
  sizetype _226;
  const u8 * _227;
  unsigned char _230;
  sizetype _250;
  _Bool _258;
  sizetype _259;
  sizetype _266;
  sizetype _269;
  void * _341;
  unsigned int _345;
  u8 * _346;
  _Bool prephitmp_350;
  long unsigned int _351;
  long unsigned int _352;
  limb[4] * _356;
  unsigned long _357;
  limb[4] * _358;
  unsigned long _359;
  limb[4] * _360;
  unsigned long _361;
  unsigned int _362;
  limb[17][3][4] * _367;
  unsigned long _368;
  limb[17][3][4] * _369;
  unsigned long _376;
  limb[17][3][4] * _377;
  void * _381;
  limb[17][3][4] * _388;

  <bb 2> [local count: 127978197]:
  BN_CTX_start (ctx_117(D));
  x_120 = BN_CTX_get (ctx_117(D));
  y_122 = BN_CTX_get (ctx_117(D));
  z_124 = BN_CTX_get (ctx_117(D));
  tmp_scalar_126 = BN_CTX_get (ctx_117(D));
  if (tmp_scalar_126 == 0B)
    goto <bb 3>; [18.09%]
  else
    goto <bb 4>; [81.91%]

  <bb 3> [local count: 45862013]:
  goto <bb 60>; [100.00%]

  <bb 4> [local count: 104826941]:
  if (scalar_127(D) != 0B)
    goto <bb 5>; [70.00%]
  else
    goto <bb 64>; [30.00%]

  <bb 5> [local count: 73378859]:
  pre_129 = group_128(D)->pre_comp.nistp224;
  if (pre_129 != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 7>; [30.00%]

  <bb 6> [local count: 51365201]:
  g_pre_comp_130 = &pre_129->g_pre_comp;

  <bb 7> [local count: 73378859]:
  # g_pre_comp_91 = PHI <g_pre_comp_130(6), &gmul[0](5)>
  generator_132 = EC_POINT_new (group_128(D));
  if (generator_132 == 0B)
    goto <bb 3>; [30.95%]
  else
    goto <bb 8>; [69.05%]

  <bb 8> [local count: 50668102]:
  _1 = &*g_pre_comp_91[1][0];
  _2 = felem_to_BN (x_120, _1);
  if (_2 == 0B)
    goto <bb 9>; [18.09%]
  else
    goto <bb 10>; [81.91%]

  <bb 9> [local count: 30880238]:
  ERR_put_error (16, 228, 3, "ecp_nistp224.c", 1450);
  goto <bb 60>; [100.00%]

  <bb 10> [local count: 41502242]:
  _3 = &*g_pre_comp_91[1][1];
  _4 = felem_to_BN (y_122, _3);
  if (_4 == 0B)
    goto <bb 9>; [30.95%]
  else
    goto <bb 11>; [69.05%]

  <bb 11> [local count: 28657298]:
  _5 = &*g_pre_comp_91[1][2];
  _6 = felem_to_BN (z_124, _5);
  if (_6 == 0B)
    goto <bb 9>; [30.95%]
  else
    goto <bb 12>; [69.05%]

  <bb 12> [local count: 19787864]:
  _7 = EC_POINT_set_Jprojective_coordinates_GFp (group_128(D), generator_132, x_120, y_122, z_124, ctx_117(D));
  if (_7 == 0)
    goto <bb 60>; [51.12%]
  else
    goto <bb 13>; [48.88%]

  <bb 13> [local count: 9672308]:
  _8 = group_128(D)->generator;
  _9 = EC_POINT_cmp (group_128(D), generator_132, _8, ctx_117(D));
  if (_9 == 0)
    goto <bb 63>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 4836154]:
  num_points_138 = num_115(D) + 1;
  goto <bb 64>; [100.00%]

  <bb 15> [local count: 20560195]:
  # num_points_314 = PHI <num_115(D)(63), num_points_267(64)>
  # g_pre_comp_317 = PHI <g_pre_comp_91(63), g_pre_comp_277(64)>
  # generator_319 = PHI <generator_132(63), generator_278(64)>
  # prephitmp_350 = PHI <1(63), 0(64)>
  _351 = num_points_314 * 28;
  _352 = num_points_314 * 1632;
  if (num_points_314 > 2)
    goto <bb 62>; [50.00%]
  else
    goto <bb 61>; [50.00%]

  <bb 16> [local count: 8199406]:
  if (tmp_felems_145 == 0B)
    goto <bb 18>; [68.00%]
  else
    goto <bb 17>; [32.00%]

  <bb 17> [local count: 10823216]:
  # tmp_felems_308 = PHI <tmp_felems_145(16), 0B(61)>
  # mixed_327 = PHI <1(16), 0(61)>
  # secrets_328 = PHI <secrets_293(16), secrets_286(61)>
  # pre_comp_330 = PHI <pre_comp_296(16), pre_comp_289(61)>
  goto <bb 19>; [100.00%]

  <bb 18> [local count: 9736979]:
  # tmp_felems_309 = PHI <tmp_felems_145(16), 0B(61), tmp_felems_145(62)>
  # secrets_329 = PHI <secrets_293(16), secrets_286(61), secrets_293(62)>
  # pre_comp_331 = PHI <pre_comp_296(16), pre_comp_289(61), pre_comp_296(62)>
  ERR_put_error (16, 228, 65, "ecp_nistp224.c", 1483);
  goto <bb 60>; [100.00%]

  <bb 19> [local count: 221087120]:
  # _142 = PHI <0(17), _59(23)>
  # i_141 = PHI <0(17), i_166(23)>
  if (num_115(D) == _142)
    goto <bb 20>; [20.24%]
  else
    goto <bb 21>; [79.76%]

  <bb 20> [local count: 44748033]:
  p_147 = EC_GROUP_get0_generator (group_128(D));
  goto <bb 22>; [100.00%]

  <bb 21> [local count: 176339087]:
  _20 = _142 * 8;
  _21 = points_148(D) + _20;
  p_149 = *_21;
  _22 = scalars_150(D) + _20;
  p_scalar_151 = *_22;

  <bb 22> [local count: 221087120]:
  # p_95 = PHI <p_147(20), p_149(21)>
  # p_scalar_96 = PHI <scalar_127(D)(20), p_scalar_151(21)>
  _23 = p_scalar_96 != 0B;
  _24 = p_95 != 0B;
  _25 = _23 & _24;
  if (_25 != 0)
    goto <bb 24>; [33.00%]
  else
    goto <bb 23>; [67.00%]

  <bb 23> [local count: 215237239]:
  i_166 = i_141 + 1;
  _59 = (long unsigned int) i_166;
  if (_59 < num_points_314)
    goto <bb 19>; [97.80%]
  else
    goto <bb 41>; [2.20%]

  <bb 24> [local count: 72958750]:
  _26 = BN_num_bits (p_scalar_96);
  if (_26 > 224)
    goto <bb 25>; [27.00%]
  else
    goto <bb 26>; [73.00%]

  <bb 25> [local count: 55382987]:
  _28 = group_128(D)->order;
  _29 = BN_nnmod (tmp_scalar_126, p_scalar_96, _28, ctx_117(D));
  if (_29 == 0)
    goto <bb 27>; [2.20%]
  else
    goto <bb 28>; [97.80%]

  <bb 26> [local count: 53259887]:
  _27 = BN_is_negative (p_scalar_96);
  if (_27 != 0)
    goto <bb 25>; [67.00%]
  else
    goto <bb 29>; [33.00%]

  <bb 27> [local count: 1218426]:
  ERR_put_error (16, 228, 3, "ecp_nistp224.c", 1512);
  goto <bb 60>; [100.00%]

  <bb 28> [local count: 54164561]:
  _30 = BN_bn2bin (tmp_scalar_126, &tmp);
  num_bytes_159 = (unsigned int) _30;
  goto <bb 30>; [100.00%]

  <bb 29> [local count: 17575763]:
  _31 = BN_bn2bin (p_scalar_96, &tmp);
  num_bytes_155 = (unsigned int) _31;

  <bb 30> [local count: 71740324]:
  # num_bytes_87 = PHI <num_bytes_159(28), num_bytes_155(29)>
  _32 = _142 * 28;
  if (num_bytes_87 != 0)
    goto <bb 32>; [89.00%]
  else
    goto <bb 31>; [11.00%]

  <bb 31> [local count: 71740324]:
  _33 = p_95->X;
  _34 = BN_to_felem (&x_out, _33);
  if (_34 == 0)
    goto <bb 60>; [2.20%]
  else
    goto <bb 34>; [97.80%]

  <bb 32> [local count: 63848888]:
  _362 = num_bytes_87 + 4294967295;
  _346 = secrets_328 + _32;
  ivtmp.337_347 = (unsigned long) _346;

  <bb 33> [local count: 580444436]:
  # ivtmp.335_355 = PHI <_362(32), ivtmp.335_354(33)>
  # ivtmp.337_349 = PHI <ivtmp.337_347(32), ivtmp.337_348(33)>
  _205 = (sizetype) ivtmp.335_355;
  _206 = &tmp + _205;
  _209 = *_206;
  _341 = (void *) ivtmp.337_349;
  MEM[base: _341, offset: 0B] = _209;
  ivtmp.335_354 = ivtmp.335_355 + 4294967295;
  ivtmp.337_348 = ivtmp.337_349 + 1;
  if (ivtmp.335_354 != 4294967295)
    goto <bb 33>; [89.00%]
  else
    goto <bb 31>; [11.00%]

  <bb 34> [local count: 70162036]:
  _35 = p_95->Y;
  _36 = BN_to_felem (&y_out, _35);
  if (_36 == 0)
    goto <bb 60>; [2.20%]
  else
    goto <bb 35>; [97.80%]

  <bb 35> [local count: 68618472]:
  _37 = p_95->Z;
  _38 = BN_to_felem (&z_out, _37);
  if (_38 == 0)
    goto <bb 60>; [2.20%]
  else
    goto <bb 36>; [97.80%]

  <bb 36> [local count: 67108865]:
  _39 = _142 * 1632;
  _40 = pre_comp_330 + _39;
  _41 = &*_40[1][0];
  _219 = MEM[(const limb *)&x_out];
  MEM[(limb *)_40 + 96B] = _219;
  _220 = MEM[(const limb *)&x_out + 8B];
  MEM[(limb *)_40 + 104B] = _220;
  _221 = MEM[(const limb *)&x_out + 16B];
  MEM[(limb *)_40 + 112B] = _221;
  _222 = MEM[(const limb *)&x_out + 24B];
  MEM[(limb *)_40 + 120B] = _222;
  _42 = &*_40[1][1];
  _215 = MEM[(const limb *)&y_out];
  MEM[(limb *)_40 + 128B] = _215;
  _216 = MEM[(const limb *)&y_out + 8B];
  MEM[(limb *)_40 + 136B] = _216;
  _217 = MEM[(const limb *)&y_out + 16B];
  MEM[(limb *)_40 + 144B] = _217;
  _218 = MEM[(const limb *)&y_out + 24B];
  MEM[(limb *)_40 + 152B] = _218;
  _43 = &*_40[1][2];
  _211 = MEM[(const limb *)&z_out];
  MEM[(limb *)_40 + 160B] = _211;
  _212 = MEM[(const limb *)&z_out + 8B];
  MEM[(limb *)_40 + 168B] = _212;
  _213 = MEM[(const limb *)&z_out + 16B];
  MEM[(limb *)_40 + 176B] = _213;
  _214 = MEM[(const limb *)&z_out + 24B];
  MEM[(limb *)_40 + 184B] = _214;
  _377 = _40 + 192;
  ivtmp.324_378 = (unsigned long) _377;

  <bb 37> [local count: 1006632960]:
  # j_299 = PHI <2(36), j_165(40)>
  # ivtmp.324_380 = PHI <ivtmp.324_378(36), ivtmp.324_379(40)>
  _44 = j_299 & 1;
  _368 = ivtmp.324_380 + 64;
  _367 = (limb[17][3][4] *) _368;
  _376 = ivtmp.324_380 + 32;
  _369 = (limb[17][3][4] *) _376;
  _388 = (limb[17][3][4] *) ivtmp.324_380;
  if (_44 != 0)
    goto <bb 38>; [50.00%]
  else
    goto <bb 39>; [50.00%]

  <bb 38> [local count: 503316480]:
  _357 = ivtmp.324_380 + 18446744073709551584;
  _356 = (limb[4] *) _357;
  _359 = ivtmp.324_380 + 18446744073709551552;
  _358 = (limb[4] *) _359;
  _361 = ivtmp.324_380 + 18446744073709551520;
  _360 = (limb[4] *) _361;
  point_add (_388, _369, _367, _41, _42, _43, 0, _360, _358, _356);
  goto <bb 40>; [100.00%]

  <bb 39> [local count: 503316480]:
  _52 = j_299 >> 1;
  _266 = (sizetype) _52;
  _259 = _266 * 96;
  _250 = _259 + 64;
  _53 = _40 + _250;
  _269 = _259 + 32;
  _54 = _40 + _269;
  _55 = _40 + _259;
  point_double (_388, _369, _367, _55, _54, _53);

  <bb 40> [local count: 1006632960]:
  j_165 = j_299 + 1;
  ivtmp.324_379 = ivtmp.324_380 + 96;
  if (j_165 != 17)
    goto <bb 37>; [93.33%]
  else
    goto <bb 23>; [6.67%]

  <bb 41> [local count: 4973330]:
  if (mixed_327 != 0)
    goto <bb 42>; [33.00%]
  else
    goto <bb 43>; [67.00%]

  <bb 42> [local count: 1641199]:
  _60 = num_points_314 * 17;
  ec_GFp_nistp_points_make_affine_internal (_60, pre_comp_330, 32, tmp_felems_308, felem_one, felem_is_zero_int, felem_assign, felem_square_reduce, felem_mul_reduce, felem_inv, felem_contract);

  <bb 43> [local count: 7930608]:
  # mixed_79 = PHI <mixed_327(42), mixed_327(41)>
  _61 = scalar_127(D) != 0B;
  _63 = _61 & prephitmp_350;
  if (_63 != 0)
    goto <bb 44>; [100.00%]
  else
    goto <bb 54>; [0.00%]

  <bb 44> [local count: 12766763]:
  # mixed_274 = PHI <mixed_79(43), _9(63)>
  # secrets_272 = PHI <secrets_328(43), 0B(63)>
  # pre_comp_305 = PHI <pre_comp_330(43), 0B(63)>
  # tmp_felems_310 = PHI <tmp_felems_308(43), 0B(63)>
  # num_points_315 = PHI <num_points_314(43), num_115(D)(63)>
  # g_pre_comp_318 = PHI <g_pre_comp_317(43), g_pre_comp_91(63)>
  # generator_320 = PHI <generator_319(43), generator_132(63)>
  __builtin_memset (&g_secret, 0, 28);
  _64 = BN_num_bits (scalar_127(D));
  if (_64 > 224)
    goto <bb 45>; [50.00%]
  else
    goto <bb 46>; [50.00%]

  <bb 45> [local count: 10660247]:
  _66 = group_128(D)->order;
  _67 = BN_nnmod (tmp_scalar_126, scalar_127(D), _66, ctx_117(D));
  if (_67 == 0)
    goto <bb 47>; [34.00%]
  else
    goto <bb 48>; [66.00%]

  <bb 46> [local count: 6383381]:
  _65 = BN_is_negative (scalar_127(D));
  if (_65 != 0)
    goto <bb 45>; [67.00%]
  else
    goto <bb 49>; [33.00%]

  <bb 47> [local count: 3624484]:
  ERR_put_error (16, 228, 3, "ecp_nistp224.c", 1558);
  goto <bb 60>; [100.00%]

  <bb 48> [local count: 7035763]:
  _68 = BN_bn2bin (tmp_scalar_126, &tmp);
  num_bytes_176 = (unsigned int) _68;
  goto <bb 50>; [100.00%]

  <bb 49> [local count: 2106516]:
  _69 = BN_bn2bin (scalar_127(D), &tmp);
  num_bytes_172 = (unsigned int) _69;

  <bb 50> [local count: 9142279]:
  # num_bytes_88 = PHI <num_bytes_176(48), num_bytes_172(49)>
  if (num_bytes_88 != 0)
    goto <bb 52>; [89.00%]
  else
    goto <bb 51>; [11.00%]

  <bb 51> [local count: 9142279]:
  _70 = (unsigned int) num_points_315;
  batch_mul (&x_out, &y_out, &z_out, secrets_272, _70, &g_secret, mixed_274, pre_comp_305, g_pre_comp_318);
  goto <bb 55>; [100.00%]

  <bb 52> [local count: 8136628]:
  _345 = num_bytes_88 + 4294967295;
  ivtmp.316_97 = (unsigned long) &g_secret;

  <bb 53> [local count: 73969345]:
  # ivtmp.314_273 = PHI <_345(52), ivtmp.314_109(53)>
  # ivtmp.316_101 = PHI <ivtmp.316_97(52), ivtmp.316_106(53)>
  _226 = (sizetype) ivtmp.314_273;
  _227 = &tmp + _226;
  _230 = *_227;
  _381 = (void *) ivtmp.316_101;
  MEM[base: _381, offset: 0B] = _230;
  ivtmp.314_109 = ivtmp.314_273 + 4294967295;
  ivtmp.316_106 = ivtmp.316_101 + 1;
  if (ivtmp.314_109 != 4294967295)
    goto <bb 53>; [89.00%]
  else
    goto <bb 51>; [11.00%]

  <bb 54> [local count: 12766763]:
  # mixed_271 = PHI <mixed_79(43), 0(64)>
  # secrets_270 = PHI <secrets_328(43), 0B(64)>
  # pre_comp_306 = PHI <pre_comp_330(43), 0B(64)>
  # tmp_felems_311 = PHI <tmp_felems_308(43), 0B(64)>
  # num_points_316 = PHI <num_points_314(43), num_points_267(64)>
  # generator_321 = PHI <generator_319(43), generator_278(64)>
  _71 = (unsigned int) num_points_316;
  batch_mul (&x_out, &y_out, &z_out, secrets_270, _71, 0B, mixed_271, pre_comp_306, 0B);

  <bb 55> [local count: 21909041]:
  # secrets_304 = PHI <secrets_272(51), secrets_270(54)>
  # pre_comp_307 = PHI <pre_comp_305(51), pre_comp_306(54)>
  # tmp_felems_312 = PHI <tmp_felems_310(51), tmp_felems_311(54)>
  # generator_322 = PHI <generator_320(51), generator_321(54)>
  felem_contract (&x_in, &x_out);
  felem_contract (&y_in, &y_out);
  felem_contract (&z_in, &z_out);
  _72 = felem_to_BN (x_120, &x_in);
  if (_72 == 0B)
    goto <bb 56>; [18.09%]
  else
    goto <bb 57>; [81.91%]

  <bb 56> [local count: 13352709]:
  ERR_put_error (16, 228, 3, "ecp_nistp224.c", 1581);
  goto <bb 60>; [100.00%]

  <bb 57> [local count: 17945696]:
  _73 = felem_to_BN (y_122, &y_in);
  if (_73 == 0B)
    goto <bb 56>; [30.95%]
  else
    goto <bb 58>; [69.05%]

  <bb 58> [local count: 12391503]:
  _74 = felem_to_BN (z_124, &z_in);
  if (_74 == 0B)
    goto <bb 56>; [30.95%]
  else
    goto <bb 59>; [69.05%]

  <bb 59> [local count: 8556333]:
  ret_187 = EC_POINT_set_Jprojective_coordinates_GFp (group_128(D), r_185(D), x_120, y_122, z_124, ctx_117(D));

  <bb 60> [local count: 127978195]:
  # ret_75 = PHI <_7(12), _36(34), 0(9), 0(3), 0(18), _29(27), _34(31), _67(47), 0(56), ret_187(59), _38(35)>
  # secrets_81 = PHI <0B(12), secrets_328(34), 0B(9), 0B(3), secrets_329(18), secrets_328(27), secrets_328(31), secrets_272(47), secrets_304(56), secrets_304(59), secrets_328(35)>
  # pre_comp_83 = PHI <0B(12), pre_comp_330(34), 0B(9), 0B(3), pre_comp_331(18), pre_comp_330(27), pre_comp_330(31), pre_comp_305(47), pre_comp_307(56), pre_comp_307(59), pre_comp_330(35)>
  # tmp_felems_86 = PHI <0B(12), tmp_felems_308(34), 0B(9), 0B(3), tmp_felems_309(18), tmp_felems_308(27), tmp_felems_308(31), tmp_felems_310(47), tmp_felems_312(56), tmp_felems_312(59), tmp_felems_308(35)>
  # generator_94 = PHI <generator_132(12), generator_319(34), generator_132(9), 0B(3), generator_319(18), generator_319(27), generator_319(31), generator_320(47), generator_322(56), generator_322(59), generator_319(35)>
err:
  BN_CTX_end (ctx_117(D));
  EC_POINT_free (generator_94);
  CRYPTO_free (secrets_81, "ecp_nistp224.c", 1589);
  CRYPTO_free (pre_comp_83, "ecp_nistp224.c", 1590);
  CRYPTO_free (tmp_felems_86, "ecp_nistp224.c", 1591);
  g_secret ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  x_in ={v} {CLOBBER};
  y_in ={v} {CLOBBER};
  z_in ={v} {CLOBBER};
  x_out ={v} {CLOBBER};
  y_out ={v} {CLOBBER};
  z_out ={v} {CLOBBER};
  return ret_75;

  <bb 61> [local count: 10280098]:
  secrets_286 = CRYPTO_zalloc (_351, "ecp_nistp224.c", 1476);
  pre_comp_289 = CRYPTO_zalloc (_352, "ecp_nistp224.c", 1477);
  _143 = secrets_286 == 0B;
  _105 = pre_comp_289 == 0B;
  _258 = _105 | _143;
  if (_258 != 0)
    goto <bb 18>; [20.24%]
  else
    goto <bb 17>; [79.76%]

  <bb 62> [local count: 10280097]:
  secrets_293 = CRYPTO_zalloc (_351, "ecp_nistp224.c", 1476);
  pre_comp_296 = CRYPTO_zalloc (_352, "ecp_nistp224.c", 1477);
  _12 = num_points_314 * 544;
  _13 = _12 + 32;
  tmp_felems_145 = CRYPTO_malloc (_13, "ecp_nistp224.c", 1480);
  _14 = secrets_293 == 0B;
  _15 = pre_comp_296 == 0B;
  _16 = _14 | _15;
  if (_16 != 0)
    goto <bb 18>; [20.24%]
  else
    goto <bb 16>; [79.76%]

  <bb 63> [local count: 4836154]:
  if (num_115(D) != 0)
    goto <bb 15>; [0.00%]
  else
    goto <bb 44>; [100.00%]

  <bb 64> [local count: 36284236]:
  # num_points_267 = PHI <num_points_138(14), num_115(D)(4)>
  # g_pre_comp_277 = PHI <g_pre_comp_91(14), 0B(4)>
  # generator_278 = PHI <generator_132(14), 0B(4)>
  if (num_points_267 != 0)
    goto <bb 15>; [64.81%]
  else
    goto <bb 54>; [35.19%]

}



;; Function felem_neg (felem_neg, funcdef_no=419, decl_uid=10479, cgraph_uid=419, symbol_order=421)

__attribute__((used))
felem_neg (limb * out, const limb * in)
{
  long unsigned int _7;
  __int128 unsigned _8;
  long unsigned int _10;
  __int128 unsigned _11;
  long unsigned int _13;
  __int128 unsigned _14;
  long unsigned int _16;
  __int128 unsigned _17;
  __int128 unsigned _18;
  __int128 unsigned _22;
  __int128 unsigned _23;
  __int128 unsigned _25;
  __int128 unsigned _28;
  __int128 unsigned _51;
  __int128 unsigned _52;
  __int128 unsigned _53;
  __int128 unsigned _54;
  __int128 unsigned _55;
  __int128 unsigned _58;
  __int128 unsigned _61;
  __int128 unsigned _62;
  __int128 unsigned _63;
  long unsigned int _64;
  long unsigned int _65;
  __int128 unsigned _66;
  __int128 unsigned _67;
  long unsigned int _68;
  long unsigned int _69;
  __int128 unsigned _70;
  __int128 unsigned _71;
  long unsigned int _72;
  long unsigned int _73;
  long unsigned int _74;

  <bb 2> [local count: 1073741825]:
  _7 = *in_3(D);
  _8 = (__int128 unsigned) _7;
  _10 = MEM[(const limb *)in_3(D) + 8B];
  _11 = (__int128 unsigned) _10;
  _13 = MEM[(const limb *)in_3(D) + 16B];
  _14 = (__int128 unsigned) _13;
  _16 = MEM[(const limb *)in_3(D) + 24B];
  _17 = (__int128 unsigned) _16;
  _18 = 18446744073709551360 - _17;
  _23 = 0x80000000000000010000000000008100 - _8;
  _22 = 0x7fffffffffffff80ff7effffffffff00 - _11;
  _28 = 0x7fffffffffffff80ffffffffffffff00 - _14;
  _51 = _28 >> 56;
  _52 = _18 + _51;
  _53 = _28 & 72057594037927935;
  _54 = _52 >> 56;
  _55 = _52 & 72057594037927935;
  _58 = _54 << 40;
  _25 = _22 + _58;
  _61 = _23 - _54;
  _62 = _61 >> 56;
  _63 = _25 + _62;
  _64 = (long unsigned int) _61;
  _65 = _64 & 72057594037927935;
  *out_4(D) = _65;
  _66 = _63 >> 56;
  _67 = _53 + _66;
  _68 = (long unsigned int) _63;
  _69 = _68 & 72057594037927935;
  MEM[(limb *)out_4(D) + 8B] = _69;
  _70 = _67 >> 56;
  _71 = _55 + _70;
  _72 = (long unsigned int) _67;
  _73 = _72 & 72057594037927935;
  MEM[(limb *)out_4(D) + 16B] = _73;
  _74 = (long unsigned int) _71;
  MEM[(limb *)out_4(D) + 24B] = _74;
  return;

}



;; Function EC_nistp224_pre_comp_dup (EC_nistp224_pre_comp_dup, funcdef_no=430, decl_uid=9671, cgraph_uid=430, symbol_order=432)

EC_nistp224_pre_comp_dup (struct NISTP224_PRE_COMP * p)
{
  atomic CRYPTO_REF_COUNT * _1;

  <bb 2> [local count: 1073741825]:
  if (p_3(D) != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> [local count: 574129753]:
  _1 = &p_3(D)->references;
  __atomic_fetch_add_4 (_1, 1, 0);

  <bb 4> [local count: 1073741825]:
  return p_3(D);

}



;; Function EC_nistp224_pre_comp_free (EC_nistp224_pre_comp_free, funcdef_no=431, decl_uid=9685, cgraph_uid=431, symbol_order=433)

EC_nistp224_pre_comp_free (struct NISTP224_PRE_COMP * p)
{
  atomic CRYPTO_REF_COUNT * _2;
  unsigned int _10;
  int _11;
  int _12;
  CRYPTO_RWLOCK * _13;

  <bb 2> [local count: 1073741825]:
  if (p_5(D) == 0B)
    goto <bb 3>; [30.95%]
  else
    goto <bb 4>; [69.05%]

  <bb 3> [local count: 777767468]:
  goto <bb 8>; [100.00%]

  <bb 4> [local count: 741418730]:
  _2 = &p_5(D)->references;
  _10 = __atomic_fetch_sub_4 (_2, 1, 0);
  _11 = (int) _10;
  _12 = _11 + -1;
  if (_12 == 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 244668181]:
  __atomic_thread_fence (2);
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 496750549]:
  if (_12 > 0)
    goto <bb 3>; [89.67%]
  else
    goto <bb 7>; [10.33%]

  <bb 7> [local count: 295974357]:
  _13 = p_5(D)->lock;
  CRYPTO_THREAD_lock_free (_13);
  CRYPTO_free (p_5(D), "ecp_nistp224.c", 1272); [tail call]

  <bb 8> [local count: 1073741825]:
  return;

}



;; Function ec_GFp_nistp224_precompute_mult (ec_GFp_nistp224_precompute_mult, funcdef_no=437, decl_uid=10073, cgraph_uid=437, symbol_order=439)

ec_GFp_nistp224_precompute_mult (struct EC_GROUP * group, struct BN_CTX * ctx)
{
  unsigned long ivtmp.389;
  unsigned long ivtmp.348;
  struct NISTP224_PRE_COMP * ret;
  limb tmp_felems[32][4];
  struct EC_POINT * generator;
  struct BIGNUM * y;
  struct BIGNUM * x;
  struct BN_CTX * new_ctx;
  int i;
  struct NISTP224_PRE_COMP * pre;
  int ret;
  struct EC_POINT * _1;
  int _2;
  struct EC_POINT * _3;
  int _4;
  limb[2][16][3][4] * _5;
  struct EC_POINT * _6;
  struct BIGNUM * _7;
  limb[4] * _8;
  int _9;
  struct EC_POINT * _10;
  struct BIGNUM * _11;
  limb[4] * _12;
  int _13;
  struct EC_POINT * _14;
  struct BIGNUM * _15;
  limb[4] * _16;
  int _17;
  limb[4] * _18;
  limb[4] * _19;
  limb[4] * _20;
  limb[4] * _21;
  limb[4] * _22;
  limb[4] * _23;
  sizetype _24;
  int _25;
  limb[4] * _26;
  limb[4] * _27;
  limb[4] * _28;
  limb[4] * _61;
  sizetype _65;
  sizetype _66;
  int _72;
  sizetype _76;
  sizetype _77;
  sizetype _79;
  sizetype _80;
  sizetype _128;
  atomic CRYPTO_REF_COUNT * _133;
  CRYPTO_RWLOCK * _134;
  sizetype _167;
  sizetype _168;
  sizetype _170;
  unsigned long _269;
  limb[4] * _270;
  unsigned long _271;
  limb[4] * _272;
  unsigned long _273;
  limb[4] * _274;
  unsigned long _275;
  limb[4] * _276;
  unsigned long _277;
  limb[4] * _278;
  unsigned long _279;
  limb[4] * _280;
  unsigned long _281;
  limb[4] * _282;
  unsigned long _283;
  limb[4] * _284;
  unsigned long _285;
  limb[4] * _286;
  unsigned long _287;
  limb[4] * _288;
  unsigned long _289;
  limb[4] * _290;
  unsigned long _291;
  limb[4] * _292;
  unsigned long _293;
  limb[4] * _294;
  unsigned long _295;
  limb[4] * _296;
  unsigned long _297;
  limb[4] * _298;
  unsigned long _299;
  limb[4] * _300;
  unsigned long _301;
  struct NISTP224_PRE_COMP * _302;
  unsigned long _303;
  unsigned long _304;
  limb[4] * _311;
  unsigned long _312;
  limb[4] * _313;
  unsigned long _314;
  limb[4] * _315;
  unsigned long _316;
  limb[4] * _317;
  unsigned long _318;
  limb[4] * _319;
  unsigned long _328;
  limb[4] * _329;
  unsigned long _356;
  limb[4] * _358;
  unsigned long _359;
  limb[4] * _360;
  unsigned long _361;
  limb[4] * _362;
  unsigned long _363;
  limb[4] * _364;
  unsigned long _365;
  unsigned long _366;
  limb[4] * _368;
  unsigned long _369;
  unsigned long _370;
  limb[4] * _371;
  unsigned long _372;
  unsigned int ivtmp_374;
  unsigned int ivtmp_375;
  unsigned int ivtmp_376;
  unsigned int ivtmp_377;
  unsigned int ivtmp_378;
  unsigned int ivtmp_379;
  limb[4] * _383;

  <bb 2> [local count: 1073741825]:
  EC_pre_comp_free (group_85(D));
  if (ctx_87(D) == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 322122547]:
  new_ctx_89 = BN_CTX_new ();
  if (new_ctx_89 == 0B)
    goto <bb 31>; [18.09%]
  else
    goto <bb 4>; [81.91%]

  <bb 4> [local count: 1015469856]:
  # ctx_62 = PHI <ctx_87(D)(2), new_ctx_89(3)>
  # new_ctx_70 = PHI <0B(2), new_ctx_89(3)>
  BN_CTX_start (ctx_62);
  x_92 = BN_CTX_get (ctx_62);
  y_94 = BN_CTX_get (ctx_62);
  if (y_94 == 0B)
    goto <bb 5>; [18.09%]
  else
    goto <bb 6>; [81.91%]

  <bb 5> [local count: 618889384]:
  goto <bb 30>; [100.00%]

  <bb 6> [local count: 831771359]:
  _1 = group_85(D)->generator;
  if (_1 == 0B)
    goto <bb 5>; [30.95%]
  else
    goto <bb 7>; [69.05%]

  <bb 7> [local count: 574338123]:
  generator_96 = EC_POINT_new (group_85(D));
  if (generator_96 == 0B)
    goto <bb 5>; [30.95%]
  else
    goto <bb 8>; [69.05%]

  <bb 8> [local count: 396580474]:
  BN_bin2bn (&nistp224_curve_params[3], 28, x_92);
  BN_bin2bn (&nistp224_curve_params[4], 28, y_94);
  _2 = EC_POINT_set_affine_coordinates (group_85(D), generator_96, x_92, y_94, ctx_62);
  if (_2 == 0)
    goto <bb 30>; [51.12%]
  else
    goto <bb 9>; [48.88%]

  <bb 9> [local count: 193848536]:
  ret_132 = CRYPTO_zalloc (3088, "ecp_nistp224.c", 1232);
  if (ret_132 == 0B)
    goto <bb 10>; [8.27%]
  else
    goto <bb 11>; [91.73%]

  <bb 10> [local count: 16031274]:
  ERR_put_error (16, 227, 65, "ecp_nistp224.c", 1235);
  goto <bb 30>; [100.00%]

  <bb 11> [local count: 177817262]:
  _133 = &ret_132->references;
  __atomic_store_4 (_133, 1, 5);
  _134 = CRYPTO_THREAD_lock_new ();
  ret_132->lock = _134;
  if (_134 == 0B)
    goto <bb 12>; [4.25%]
  else
    goto <bb 13>; [95.75%]

  <bb 12> [local count: 7557234]:
  ERR_put_error (16, 227, 65, "ecp_nistp224.c", 1243);
  CRYPTO_free (ret_132, "ecp_nistp224.c", 1244);
  goto <bb 30>; [100.00%]

  <bb 13> [local count: 170260027]:
  _3 = group_85(D)->generator;
  _4 = EC_POINT_cmp (group_85(D), generator_96, _3, ctx_62);
  if (_4 == 0)
    goto <bb 14>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 14> [local count: 45509821]:
  _5 = &ret_132->g_pre_comp;
  __builtin_memcpy (_5, &gmul, 3072);
  goto <bb 29>; [100.00%]

  <bb 15> [local count: 88342593]:
  _6 = group_85(D)->generator;
  _7 = _6->X;
  _8 = &ret_132->g_pre_comp[0][1][0];
  _9 = BN_to_felem (_8, _7);
  if (_9 == 0)
    goto <bb 30>; [51.12%]
  else
    goto <bb 16>; [48.88%]

  <bb 16> [local count: 43181859]:
  _10 = group_85(D)->generator;
  _11 = _10->Y;
  _12 = &ret_132->g_pre_comp[0][1][1];
  _13 = BN_to_felem (_12, _11);
  if (_13 == 0)
    goto <bb 30>; [51.12%]
  else
    goto <bb 17>; [48.88%]

  <bb 17> [local count: 21107293]:
  _14 = group_85(D)->generator;
  _15 = _14->Z;
  _16 = &ret_132->g_pre_comp[0][1][2];
  _17 = BN_to_felem (_16, _15);
  if (_17 == 0)
    goto <bb 30>; [34.00%]
  else
    goto <bb 18>; [66.00%]

  <bb 18> [local count: 27861627]:
  # i_172 = PHI <1(17), i_112(24)>
  # ivtmp_375 = PHI <4(17), ivtmp_374(24)>
  _24 = (sizetype) i_172;
  _170 = _24 * 96;
  _66 = _170 + 64;
  _18 = ret_132 + _66;
  _65 = _170 + 32;
  _19 = ret_132 + _65;
  _20 = ret_132 + _170;
  _168 = _170 + 1600;
  _21 = ret_132 + _168;
  _167 = _170 + 1568;
  _22 = ret_132 + _167;
  _80 = _170 + 1536;
  _23 = ret_132 + _80;
  point_double (_23, _22, _21, _20, _19, _18);

  <bb 19> [local count: 752576102]:
  # ivtmp_377 = PHI <27(18), ivtmp_376(19)>
  point_double (_23, _22, _21, _23, _22, _21);
  ivtmp_376 = ivtmp_377 + 4294967295;
  if (ivtmp_376 != 0)
    goto <bb 19>; [96.30%]
  else
    goto <bb 20>; [3.70%]

  <bb 20> [local count: 27861627]:
  if (i_172 == 8)
    goto <bb 21>; [25.00%]
  else
    goto <bb 22>; [75.00%]

  <bb 21> [local count: 13930814]:
  _304 = (unsigned long) ret_132;
  ivtmp.389_305 = _304 + 1632;
  _365 = _304 + 4704;
  goto <bb 25>; [100.00%]

  <bb 22> [local count: 20896220]:
  _25 = i_172 * 2;
  _79 = (sizetype) _25;
  _77 = _79 * 96;
  _76 = _77 + 64;
  _26 = ret_132 + _76;
  _128 = _77 + 32;
  _27 = ret_132 + _128;
  _28 = _20 + _170;
  point_double (_28, _27, _26, _23, _22, _21);

  <bb 23> [local count: 564432079]:
  # ivtmp_379 = PHI <27(22), ivtmp_378(23)>
  point_double (_28, _27, _26, _28, _27, _26);
  ivtmp_378 = ivtmp_379 + 4294967295;
  if (ivtmp_378 != 0)
    goto <bb 23>; [96.30%]
  else
    goto <bb 24>; [3.70%]

  <bb 24> [local count: 20896221]:
  i_112 = i_172 << 1;
  ivtmp_374 = ivtmp_375 + 4294967295;
  if (ivtmp_374 != 0)
    goto <bb 18>; [66.67%]
  else
    goto <bb 21>; [33.33%]

  <bb 25> [local count: 27865807]:
  # ivtmp.389_307 = PHI <ivtmp.389_305(21), ivtmp.389_306(27)>
  _303 = ivtmp.389_307 + 18446744073709549984;
  _302 = (struct NISTP224_PRE_COMP *) _303;
  __builtin_memset (_302, 0, 96);
  _285 = ivtmp.389_307 + 18446744073709550240;
  _284 = (limb[4] *) _285;
  _287 = ivtmp.389_307 + 18446744073709550208;
  _286 = (limb[4] *) _287;
  _289 = ivtmp.389_307 + 18446744073709550176;
  _288 = (limb[4] *) _289;
  _291 = ivtmp.389_307 + 18446744073709550432;
  _290 = (limb[4] *) _291;
  _293 = ivtmp.389_307 + 18446744073709550400;
  _292 = (limb[4] *) _293;
  _295 = ivtmp.389_307 + 18446744073709550368;
  _294 = (limb[4] *) _295;
  _297 = ivtmp.389_307 + 18446744073709550624;
  _296 = (limb[4] *) _297;
  _299 = ivtmp.389_307 + 18446744073709550592;
  _298 = (limb[4] *) _299;
  _301 = ivtmp.389_307 + 18446744073709550560;
  _300 = (limb[4] *) _301;
  point_add (_300, _298, _296, _294, _292, _290, 0, _288, _286, _284);
  _273 = ivtmp.389_307 + 18446744073709550816;
  _272 = (limb[4] *) _273;
  _275 = ivtmp.389_307 + 18446744073709550784;
  _274 = (limb[4] *) _275;
  _277 = ivtmp.389_307 + 18446744073709550752;
  _276 = (limb[4] *) _277;
  _279 = ivtmp.389_307 + 18446744073709551008;
  _278 = (limb[4] *) _279;
  _281 = ivtmp.389_307 + 18446744073709550976;
  _280 = (limb[4] *) _281;
  _283 = ivtmp.389_307 + 18446744073709550944;
  _282 = (limb[4] *) _283;
  point_add (_282, _280, _278, _276, _274, _272, 0, _288, _286, _284);
  _359 = ivtmp.389_307 + 18446744073709551200;
  _368 = (limb[4] *) _359;
  _269 = ivtmp.389_307 + 18446744073709551168;
  _383 = (limb[4] *) _269;
  _271 = ivtmp.389_307 + 18446744073709551136;
  _270 = (limb[4] *) _271;
  point_add (_270, _383, _368, _276, _274, _272, 0, _294, _292, _290);
  _361 = ivtmp.389_307 + 18446744073709551392;
  _362 = (limb[4] *) _361;
  _369 = ivtmp.389_307 + 18446744073709551360;
  _360 = (limb[4] *) _369;
  _370 = ivtmp.389_307 + 18446744073709551328;
  _371 = (limb[4] *) _370;
  point_add (_371, _360, _362, _270, _383, _368, 0, _288, _286, _284);
  _356 = ivtmp.389_307 + 18446744073709550144;
  _358 = (limb[4] *) _356;
  _328 = ivtmp.389_307 + 18446744073709550112;
  _329 = (limb[4] *) _328;
  _363 = ivtmp.389_307 + 18446744073709550080;
  _364 = (limb[4] *) _363;
  _366 = ivtmp.389_307 + 18446744073709550272;

  <bb 26> [local count: 195060646]:
  # ivtmp.348_175 = PHI <_366(25), ivtmp.348_174(26)>
  _312 = ivtmp.348_175 + 18446744073709551584;
  _311 = (limb[4] *) _312;
  _314 = ivtmp.348_175 + 18446744073709551552;
  _313 = (limb[4] *) _314;
  _316 = ivtmp.348_175 + 18446744073709551520;
  _315 = (limb[4] *) _316;
  _318 = ivtmp.348_175 + 64;
  _317 = (limb[4] *) _318;
  _372 = ivtmp.348_175 + 32;
  _319 = (limb[4] *) _372;
  _61 = (limb[4] *) ivtmp.348_175;
  point_add (_61, _319, _317, _315, _313, _311, 0, _364, _329, _358);
  ivtmp.348_174 = ivtmp.348_175 + 192;
  if (ivtmp.348_174 != ivtmp.389_307)
    goto <bb 26>; [85.71%]
  else
    goto <bb 27>; [14.29%]

  <bb 27> [local count: 27865807]:
  ivtmp.389_306 = ivtmp.389_307 + 1536;
  if (ivtmp.389_306 != _365)
    goto <bb 25>; [50.01%]
  else
    goto <bb 28>; [49.99%]

  <bb 28> [local count: 13930813]:
  ec_GFp_nistp_points_make_affine_internal (31, _8, 32, &tmp_felems, felem_one, felem_is_zero_int, felem_assign, felem_square_reduce, felem_mul_reduce, felem_inv, felem_contract);

  <bb 29> [local count: 59440634]:
done:
  group_85(D)->pre_comp_type = 1;
  group_85(D)->pre_comp.nistp224 = ret_132;

  <bb 30> [local count: 1015469855]:
  # ret_63 = PHI <0(10), _2(8), 0(12), _9(15), 0(5), _13(16), 1(29), _17(17)>
  # pre_64 = PHI <ret_132(10), 0B(8), 0B(12), ret_132(15), 0B(5), ret_132(16), 0B(29), ret_132(17)>
  # generator_71 = PHI <generator_96(10), generator_96(8), generator_96(12), generator_96(15), 0B(5), generator_96(16), generator_96(29), generator_96(17)>
err:
  BN_CTX_end (ctx_62);
  EC_POINT_free (generator_71);
  BN_CTX_free (new_ctx_70);
  EC_nistp224_pre_comp_free (pre_64);

  <bb 31> [local count: 1073741824]:
  # _72 = PHI <ret_63(30), 0(3)>
  tmp_felems ={v} {CLOBBER};
  return _72;

}


