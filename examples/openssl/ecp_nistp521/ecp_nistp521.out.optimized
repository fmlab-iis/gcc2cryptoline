
;; Function felem_one (felem_one, funcdef_no=406, decl_uid=10436, cgraph_uid=406, symbol_order=409)

felem_one (limb * out)
{
  <bb 2> [local count: 1073741825]:
  MEM[(limb *)out_2(D)] = { 1, 0 };
  MEM[(limb *)out_2(D) + 16B] = { 0, 0 };
  MEM[(limb *)out_2(D) + 32B] = { 0, 0 };
  MEM[(limb *)out_2(D) + 48B] = { 0, 0 };
  MEM[(limb *)out_2(D) + 64B] = 0;
  return;

}



;; Function felem_assign (felem_assign, funcdef_no=407, decl_uid=10440, cgraph_uid=407, symbol_order=410)

felem_assign (limb * out, const limb * in)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> [local count: 1073741825]:
  _1 = *in_11(D);
  *out_12(D) = _1;
  _2 = MEM[(const limb *)in_11(D) + 8B];
  MEM[(limb *)out_12(D) + 8B] = _2;
  _3 = MEM[(const limb *)in_11(D) + 16B];
  MEM[(limb *)out_12(D) + 16B] = _3;
  _4 = MEM[(const limb *)in_11(D) + 24B];
  MEM[(limb *)out_12(D) + 24B] = _4;
  _5 = MEM[(const limb *)in_11(D) + 32B];
  MEM[(limb *)out_12(D) + 32B] = _5;
  _6 = MEM[(const limb *)in_11(D) + 40B];
  MEM[(limb *)out_12(D) + 40B] = _6;
  _7 = MEM[(const limb *)in_11(D) + 48B];
  MEM[(limb *)out_12(D) + 48B] = _7;
  _8 = MEM[(const limb *)in_11(D) + 56B];
  MEM[(limb *)out_12(D) + 56B] = _8;
  _9 = MEM[(const limb *)in_11(D) + 64B];
  MEM[(limb *)out_12(D) + 64B] = _9;
  return;

}



;; Function felem_is_zero (felem_is_zero, funcdef_no=422, decl_uid=10546, cgraph_uid=422, symbol_order=427)

felem_is_zero (const limb * in)
{
  limb is_p;
  limb is_zero;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _25;
  long unsigned int _26;
  signed long is_zero.3_28;
  signed long _29;
  long unsigned int _37;
  signed long is_p.4_38;
  signed long _39;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int _72;
  long unsigned int _73;
  long unsigned int _74;
  long unsigned int _75;
  long unsigned int _76;
  long unsigned int _77;
  long unsigned int _78;
  long unsigned int _79;
  long unsigned int _82;
  long unsigned int _85;
  long unsigned int _88;
  long unsigned int _91;
  long unsigned int _94;
  long unsigned int _97;
  long unsigned int _100;
  long unsigned int _101;

  <bb 2> [local count: 1073741825]:
  _64 = *in_41(D);
  _65 = MEM[(const limb *)in_41(D) + 8B];
  _66 = MEM[(const limb *)in_41(D) + 16B];
  _67 = MEM[(const limb *)in_41(D) + 24B];
  _68 = MEM[(const limb *)in_41(D) + 32B];
  _69 = MEM[(const limb *)in_41(D) + 40B];
  _70 = MEM[(const limb *)in_41(D) + 48B];
  _71 = MEM[(const limb *)in_41(D) + 56B];
  _72 = MEM[(const limb *)in_41(D) + 64B];
  _1 = _72 >> 57;
  _2 = _1 + _64;
  _3 = _72 & 144115188075855871;
  _4 = _2 >> 58;
  _5 = _4 + _65;
  _7 = _5 >> 58;
  _8 = _7 + _66;
  _10 = _8 >> 58;
  _11 = _10 + _67;
  _13 = _11 >> 58;
  _14 = _13 + _68;
  _16 = _14 >> 58;
  _17 = _16 + _69;
  _19 = _17 >> 58;
  _20 = _19 + _70;
  _22 = _20 >> 58;
  _23 = _22 + _71;
  _25 = _23 >> 58;
  _26 = _3 + _25;
  _73 = _2 | _5;
  _74 = _8 | _73;
  _75 = _11 | _74;
  _76 = _14 | _75;
  _77 = _17 | _76;
  _78 = _20 | _77;
  _79 = _23 | _78;
  is_zero_48 = _79 & 288230376151711743;
  is_zero_49 = _26 | is_zero_48;
  is_zero_50 = is_zero_49 + 18446744073709551615;
  is_zero.3_28 = (signed long) is_zero_50;
  _29 = is_zero.3_28 >> 63;
  is_zero_51 = (limb) _29;
  _82 = _2 & _5;
  _85 = _8 & _82;
  _88 = _11 & _85;
  _91 = _14 & _88;
  _94 = _17 & _91;
  _97 = _20 & _94;
  _100 = _23 & _97;
  _101 = ~_100;
  is_p_59 = _101 & 288230376151711743;
  _37 = _26 ^ 144115188075855871;
  is_p_60 = _37 | is_p_59;
  is_p_61 = is_p_60 + 18446744073709551615;
  is_p.4_38 = (signed long) is_p_61;
  _39 = is_p.4_38 >> 63;
  is_p_62 = (limb) _39;
  is_zero_63 = is_zero_51 | is_p_62;
  return is_zero_63;

}



;; Function felem_contract (felem_contract, funcdef_no=424, decl_uid=10556, cgraph_uid=424, symbol_order=429)

felem_contract (limb * out, const limb * in)
{
  limb sign;
  limb is_greater;
  limb is_p;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  signed long is_p.1_42;
  signed long _43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  long unsigned int _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  signed long is_greater.2_59;
  signed long _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _68;
  long unsigned int _69;
  long unsigned int _70;
  long unsigned int _71;
  signed long _72;
  signed long _73;
  long unsigned int _74;
  long unsigned int _75;
  long unsigned int _76;
  long unsigned int _77;
  signed long _78;
  signed long _79;
  long unsigned int _80;
  long unsigned int _81;
  long unsigned int _82;
  long unsigned int _83;
  signed long _84;
  signed long _85;
  long unsigned int _86;
  long unsigned int _87;
  long unsigned int _88;
  long unsigned int _89;
  signed long _90;
  signed long _91;
  long unsigned int _92;
  long unsigned int _93;
  long unsigned int _94;
  long unsigned int _95;
  signed long _96;
  signed long _97;
  long unsigned int _98;
  long unsigned int _99;
  long unsigned int _100;
  signed long _102;
  signed long _103;
  long unsigned int _104;
  long unsigned int _105;
  long unsigned int _106;
  long unsigned int _107;
  signed long _108;
  signed long _109;
  long unsigned int _110;
  long unsigned int _111;
  long unsigned int _112;
  long unsigned int _113;
  signed long _114;
  signed long _115;
  long unsigned int _116;
  long unsigned int _117;
  long unsigned int _118;
  long unsigned int _119;
  signed long _120;
  signed long _121;
  long unsigned int _122;
  long unsigned int _123;
  long unsigned int _124;
  long unsigned int _125;
  signed long _126;
  signed long _127;
  long unsigned int _128;
  long unsigned int _129;
  long unsigned int _130;
  long unsigned int _131;
  signed long _132;
  signed long _133;
  long unsigned int _134;
  long unsigned int _135;
  long unsigned int _136;
  long unsigned int _137;
  long unsigned int _146;
  long unsigned int _147;
  long unsigned int _187;
  long unsigned int _188;
  long unsigned int _189;
  long unsigned int _190;
  long unsigned int _191;
  long unsigned int _192;
  long unsigned int _193;
  long unsigned int _194;
  long unsigned int _195;
  long unsigned int _206;
  long unsigned int _209;
  long unsigned int _212;
  long unsigned int _215;
  long unsigned int _218;
  long unsigned int _219;
  long unsigned int _220;
  long unsigned int _221;
  long unsigned int _222;
  long unsigned int _223;
  long unsigned int _224;
  long unsigned int _225;
  long unsigned int _226;

  <bb 2> [local count: 1073741825]:
  _187 = *in_140(D);
  *out_139(D) = _187;
  _188 = MEM[(const limb *)in_140(D) + 8B];
  MEM[(limb *)out_139(D) + 8B] = _188;
  _189 = MEM[(const limb *)in_140(D) + 16B];
  MEM[(limb *)out_139(D) + 16B] = _189;
  _190 = MEM[(const limb *)in_140(D) + 24B];
  MEM[(limb *)out_139(D) + 24B] = _190;
  _191 = MEM[(const limb *)in_140(D) + 32B];
  MEM[(limb *)out_139(D) + 32B] = _191;
  _192 = MEM[(const limb *)in_140(D) + 40B];
  MEM[(limb *)out_139(D) + 40B] = _192;
  _193 = MEM[(const limb *)in_140(D) + 48B];
  MEM[(limb *)out_139(D) + 48B] = _193;
  _194 = MEM[(const limb *)in_140(D) + 56B];
  MEM[(limb *)out_139(D) + 56B] = _194;
  _195 = MEM[(const limb *)in_140(D) + 64B];
  _1 = _195 >> 57;
  _2 = _1 + _187;
  _3 = _195 & 144115188075855871;
  _4 = _2 >> 58;
  _5 = _4 + _188;
  _7 = _5 >> 58;
  _8 = _7 + _189;
  _10 = _8 >> 58;
  _11 = _10 + _190;
  _13 = _11 >> 58;
  _14 = _13 + _191;
  _16 = _14 >> 58;
  _17 = _16 + _192;
  _19 = _17 >> 58;
  _20 = _19 + _193;
  _22 = _20 >> 58;
  _23 = _22 + _194;
  _25 = _23 >> 58;
  _26 = _3 + _25;
  _206 = _2 & _5;
  _209 = _8 & _206;
  _212 = _11 & _209;
  _215 = _14 & _212;
  _218 = _17 & _215;
  _221 = _20 & _218;
  _224 = _23 & _221;
  _225 = ~_224;
  is_p_148 = _225 & 288230376151711743;
  _35 = _26 ^ 144115188075855871;
  is_p_149 = _35 | is_p_148;
  is_p_150 = is_p_149 + 18446744073709551615;
  _36 = is_p_150 << 32;
  is_p_151 = _36 & is_p_150;
  _37 = is_p_151 << 16;
  is_p_152 = _37 & is_p_151;
  _38 = is_p_152 << 8;
  is_p_153 = _38 & is_p_152;
  _39 = is_p_153 << 4;
  is_p_154 = _39 & is_p_153;
  _40 = is_p_154 << 2;
  is_p_155 = _40 & is_p_154;
  _41 = is_p_155 << 1;
  is_p_156 = _41 & is_p_155;
  is_p.1_42 = (signed long) is_p_156;
  _43 = is_p.1_42 >> 63;
  is_p_157 = (limb) _43;
  is_p_158 = ~is_p_157;
  _226 = _2 & is_p_158;
  _34 = _5 & is_p_158;
  _223 = _8 & is_p_158;
  _147 = _11 & is_p_158;
  _222 = _14 & is_p_158;
  _33 = _17 & is_p_158;
  _220 = _20 & is_p_158;
  _146 = _23 & is_p_158;
  _44 = _226 & 288230376151711743;
  _45 = _34 & 288230376151711743;
  _46 = _223 & 288230376151711743;
  _47 = _147 & 288230376151711743;
  _48 = _222 & 288230376151711743;
  _49 = _33 & 288230376151711743;
  _50 = _220 & 288230376151711743;
  _51 = _146 & 288230376151711743;
  _52 = _26 & is_p_158;
  is_greater_159 = _52 >> 57;
  _53 = is_greater_159 << 32;
  is_greater_160 = _53 | is_greater_159;
  _54 = is_greater_160 << 16;
  is_greater_161 = _54 | is_greater_160;
  _55 = is_greater_161 << 8;
  is_greater_162 = _55 | is_greater_161;
  _56 = is_greater_162 << 4;
  is_greater_163 = _56 | is_greater_162;
  _57 = is_greater_163 << 2;
  is_greater_164 = _57 | is_greater_163;
  _58 = is_greater_164 << 1;
  is_greater_165 = _58 | is_greater_164;
  is_greater.2_59 = (signed long) is_greater_165;
  _60 = is_greater.2_59 >> 63;
  is_greater_166 = (limb) _60;
  _61 = is_greater_166 & 288230376151711743;
  _62 = _44 - _61;
  _63 = _45 - _61;
  _64 = _46 - _61;
  _65 = _47 - _61;
  _66 = _48 - _61;
  _32 = _49 - _61;
  _68 = _50 - _61;
  _69 = _51 - _61;
  _70 = is_greater_166 & 144115188075855871;
  _71 = _52 - _70;
  _72 = (signed long) _62;
  _73 = _72 >> 63;
  sign_167 = (limb) _73;
  _74 = sign_167 & 288230376151711744;
  _75 = _62 + _74;
  *out_139(D) = _75;
  _76 = sign_167 & 1;
  _77 = _63 - _76;
  _78 = (signed long) _77;
  _79 = _78 >> 63;
  sign_169 = (limb) _79;
  _80 = sign_169 & 288230376151711744;
  _81 = _77 + _80;
  MEM[(limb *)out_139(D) + 8B] = _81;
  _82 = sign_169 & 1;
  _83 = _64 - _82;
  _84 = (signed long) _83;
  _85 = _84 >> 63;
  sign_171 = (limb) _85;
  _86 = sign_171 & 288230376151711744;
  _87 = _83 + _86;
  MEM[(limb *)out_139(D) + 16B] = _87;
  _88 = sign_171 & 1;
  _89 = _65 - _88;
  _90 = (signed long) _89;
  _91 = _90 >> 63;
  sign_173 = (limb) _91;
  _92 = sign_173 & 288230376151711744;
  _93 = _89 + _92;
  MEM[(limb *)out_139(D) + 24B] = _93;
  _94 = sign_173 & 1;
  _95 = _66 - _94;
  _96 = (signed long) _95;
  _97 = _96 >> 63;
  sign_175 = (limb) _97;
  _98 = sign_175 & 288230376151711744;
  _99 = _95 + _98;
  MEM[(limb *)out_139(D) + 32B] = _99;
  _100 = sign_175 & 1;
  _102 = (signed long) _75;
  _103 = _102 >> 63;
  sign_177 = (limb) _103;
  _104 = sign_177 & 288230376151711744;
  _219 = _32 + _104;
  _105 = _219 - _100;
  _106 = sign_177 & 1;
  _107 = _68 - _106;
  _108 = (signed long) _107;
  _109 = _108 >> 63;
  sign_178 = (limb) _109;
  _110 = sign_178 & 288230376151711744;
  _111 = _107 + _110;
  _112 = sign_178 & 1;
  _113 = _69 - _112;
  _114 = (signed long) _113;
  _115 = _114 >> 63;
  sign_179 = (limb) _115;
  _116 = sign_179 & 288230376151711744;
  _117 = _113 + _116;
  _118 = sign_179 & 1;
  _119 = _71 - _118;
  _120 = (signed long) _105;
  _121 = _120 >> 63;
  sign_180 = (limb) _121;
  _122 = sign_180 & 288230376151711744;
  _123 = _105 + _122;
  MEM[(limb *)out_139(D) + 40B] = _123;
  _124 = sign_180 & 1;
  _125 = _111 - _124;
  _126 = (signed long) _125;
  _127 = _126 >> 63;
  sign_182 = (limb) _127;
  _128 = sign_182 & 288230376151711744;
  _129 = _125 + _128;
  MEM[(limb *)out_139(D) + 48B] = _129;
  _130 = sign_182 & 1;
  _131 = _117 - _130;
  _132 = (signed long) _131;
  _133 = _132 >> 63;
  sign_184 = (limb) _133;
  _134 = sign_184 & 288230376151711744;
  _135 = _131 + _134;
  MEM[(limb *)out_139(D) + 56B] = _135;
  _136 = sign_184 & 1;
  _137 = _119 - _136;
  MEM[(limb *)out_139(D) + 64B] = _137;
  return;

}



;; Function ec_GFp_nistp521_have_precompute_mult (ec_GFp_nistp521_have_precompute_mult, funcdef_no=441, decl_uid=10190, cgraph_uid=441, symbol_order=447)

ec_GFp_nistp521_have_precompute_mult (const struct EC_GROUP * group)
{
  <unnamed type> _1;
  struct NISTP521_PRE_COMP * _2;
  int iftmp.8_3;
  _Bool _6;
  int _7;

  <bb 2> [local count: 1073741825]:
  _1 = group_5(D)->pre_comp_type;
  if (_1 == 3)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  _2 = group_5(D)->pre_comp.nistp521;
  _6 = _2 != 0B;
  _7 = (int) _6;

  <bb 4> [local count: 1073741825]:
  # iftmp.8_3 = PHI <_7(3), 0(2)>
  return iftmp.8_3;

}



;; Function ec_GFp_nistp521_group_init (ec_GFp_nistp521_group_init, funcdef_no=435, decl_uid=10157, cgraph_uid=435, symbol_order=441)

ec_GFp_nistp521_group_init (struct EC_GROUP * group)
{
  int ret;

  <bb 2> [local count: 1073741825]:
  ret_4 = ec_GFp_simple_group_init (group_2(D));
  group_2(D)->a_is_minus3 = 1;
  return ret_4;

}



;; Function ec_GFp_nistp521_group_set_curve (ec_GFp_nistp521_group_set_curve, funcdef_no=436, decl_uid=10163, cgraph_uid=436, symbol_order=442)

ec_GFp_nistp521_group_set_curve (struct EC_GROUP * group, const struct BIGNUM * p, const struct BIGNUM * a, const struct BIGNUM * b, struct BN_CTX * ctx)
{
  struct BIGNUM * curve_b;
  struct BIGNUM * curve_a;
  struct BIGNUM * curve_p;
  struct BN_CTX * new_ctx;
  int ret;
  int _1;
  int _2;
  int _3;
  int _7;

  <bb 2> [local count: 1073741825]:
  if (ctx_12(D) == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 322122547]:
  new_ctx_15 = BN_CTX_new ();
  if (new_ctx_15 == 0B)
    goto <bb 11>; [18.09%]
  else
    goto <bb 4>; [81.91%]

  <bb 4> [local count: 1015469856]:
  # ctx_4 = PHI <ctx_12(D)(2), new_ctx_15(3)>
  # new_ctx_6 = PHI <0B(2), new_ctx_15(3)>
  BN_CTX_start (ctx_4);
  curve_p_18 = BN_CTX_get (ctx_4);
  curve_a_20 = BN_CTX_get (ctx_4);
  curve_b_22 = BN_CTX_get (ctx_4);
  if (curve_b_22 == 0B)
    goto <bb 10>; [30.95%]
  else
    goto <bb 5>; [69.05%]

  <bb 5> [local count: 701181935]:
  BN_bin2bn (&nistp521_curve_params[0], 66, curve_p_18);
  BN_bin2bn (&nistp521_curve_params[1], 66, curve_a_20);
  BN_bin2bn (&nistp521_curve_params[2], 66, curve_b_22);
  _1 = BN_cmp (curve_p_18, p_26(D));
  if (_1 != 0)
    goto <bb 6>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 6> [local count: 590612006]:
  ERR_put_error (16, 233, 145, "ecp_nistp521.c", 1776);
  goto <bb 10>; [100.00%]

  <bb 7> [local count: 462780077]:
  _2 = BN_cmp (curve_a_20, a_28(D));
  if (_2 != 0)
    goto <bb 6>; [51.12%]
  else
    goto <bb 8>; [48.88%]

  <bb 8> [local count: 226206902]:
  _3 = BN_cmp (curve_b_22, b_30(D));
  if (_3 != 0)
    goto <bb 6>; [51.12%]
  else
    goto <bb 9>; [48.88%]

  <bb 9> [local count: 110569933]:
  group_32(D)->field_mod_func = BN_nist_mod_521;
  ret_35 = ec_GFp_simple_group_set_curve (group_32(D), p_26(D), a_28(D), b_30(D), ctx_4);

  <bb 10> [local count: 1015469855]:
  # ret_5 = PHI <ret_35(9), 0(6), 0(4)>
err:
  BN_CTX_end (ctx_4);
  BN_CTX_free (new_ctx_6);

  <bb 11> [local count: 1073741824]:
  # _7 = PHI <ret_5(10), 0(3)>
  return _7;

}



;; Function felem_to_BN (felem_to_BN, funcdef_no=405, decl_uid=10431, cgraph_uid=405, symbol_order=408)

felem_to_BN (struct BIGNUM * out, const limb * in)
{
  unsigned long ivtmp.48;
  unsigned long ivtmp.46;
  u8 b_out[66];
  u8 b_in[66];
  struct BIGNUM * _6;
  unsigned char _15;
  void * _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  unsigned long _61;
  void * _63;

  <bb 2> [local count: 118111601]:
  __builtin_memset (&MEM[(void *)&b_in + 8B], 0, 58);
  _20 = *in_2(D);
  MEM[(limb *)&b_in] = _20;
  _21 = MEM[(limb *)&b_in + 7B];
  _22 = MEM[(const limb *)in_2(D) + 8B];
  _23 = _22 << 2;
  _24 = _21 | _23;
  MEM[(limb *)&b_in + 7B] = _24;
  _25 = MEM[(limb *)&b_in + 14B];
  _26 = MEM[(const limb *)in_2(D) + 16B];
  _27 = _26 << 4;
  _28 = _25 | _27;
  MEM[(limb *)&b_in + 14B] = _28;
  _29 = MEM[(limb *)&b_in + 21B];
  _30 = MEM[(const limb *)in_2(D) + 24B];
  _31 = _30 << 6;
  _32 = _29 | _31;
  MEM[(limb *)&b_in + 21B] = _32;
  _33 = MEM[(const limb *)in_2(D) + 32B];
  MEM[(limb *)&b_in + 29B] = _33;
  _34 = MEM[(limb *)&b_in + 36B];
  _35 = MEM[(const limb *)in_2(D) + 40B];
  _36 = _35 << 2;
  _37 = _34 | _36;
  MEM[(limb *)&b_in + 36B] = _37;
  _38 = MEM[(limb *)&b_in + 43B];
  _39 = MEM[(const limb *)in_2(D) + 48B];
  _40 = _39 << 4;
  _41 = _38 | _40;
  MEM[(limb *)&b_in + 43B] = _41;
  _42 = MEM[(limb *)&b_in + 50B];
  _43 = MEM[(const limb *)in_2(D) + 56B];
  _44 = _43 << 6;
  _45 = _42 | _44;
  MEM[(limb *)&b_in + 50B] = _45;
  _46 = MEM[(const limb *)in_2(D) + 64B];
  MEM[(limb *)&b_in + 58B] = _46;
  ivtmp.46_17 = (unsigned long) &MEM[(void *)&b_in + 65B];
  ivtmp.48_62 = (unsigned long) &b_out;
  _61 = (unsigned long) &b_in;

  <bb 3> [local count: 955630224]:
  # ivtmp.46_58 = PHI <ivtmp.46_17(2), ivtmp.46_57(3)>
  # ivtmp.48_3 = PHI <ivtmp.48_62(2), ivtmp.48_64(3)>
  _63 = (void *) ivtmp.46_58;
  _15 = MEM[base: _63, offset: 0B];
  _19 = (void *) ivtmp.48_3;
  MEM[base: _19, offset: 0B] = _15;
  ivtmp.46_57 = ivtmp.46_58 + 18446744073709551615;
  ivtmp.48_64 = ivtmp.48_3 + 1;
  if (ivtmp.46_58 != _61)
    goto <bb 3>; [87.64%]
  else
    goto <bb 4>; [12.36%]

  <bb 4> [local count: 118111601]:
  _6 = BN_bin2bn (&b_out, 66, out_4(D));
  b_in ={v} {CLOBBER};
  b_out ={v} {CLOBBER};
  return _6;

}



;; Function BN_to_felem (BN_to_felem, funcdef_no=404, decl_uid=10424, cgraph_uid=404, symbol_order=407)

BN_to_felem (limb * out, const struct BIGNUM * bn)
{
  unsigned long ivtmp.58;
  unsigned int ivtmp.56;
  unsigned int num_bytes;
  u8 b_out[66];
  u8 b_in[66];
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  sizetype _24;
  const u8 * _25;
  unsigned char _28;
  void * _55;
  vector(2) long unsigned int _80;
  vector(2) long unsigned int _82;
  unsigned int _84;
  vector(2) long unsigned int _89;
  vector(2) long unsigned int _91;
  long unsigned int pretmp_92;
  long unsigned int _94;
  long unsigned int prephitmp_95;
  long unsigned int pretmp_96;
  long unsigned int _98;
  long unsigned int _100;
  long unsigned int prephitmp_101;
  long unsigned int pretmp_102;
  long unsigned int _104;
  long unsigned int _106;
  long unsigned int prephitmp_107;
  long unsigned int pretmp_108;
  long unsigned int _110;
  long unsigned int prephitmp_111;
  long unsigned int pretmp_112;
  long unsigned int _114;
  long unsigned int prephitmp_115;
  long unsigned int pretmp_116;
  long unsigned int _118;
  long unsigned int _120;
  long unsigned int prephitmp_121;
  long unsigned int pretmp_122;
  long unsigned int _124;
  long unsigned int _126;
  long unsigned int prephitmp_127;
  long unsigned int pretmp_128;
  long unsigned int _130;
  long unsigned int prephitmp_131;
  long unsigned int pretmp_132;
  long unsigned int _134;
  long unsigned int prephitmp_135;

  <bb 2> [local count: 271146926]:
  __builtin_memset (&b_out, 0, 66);
  _1 = BN_num_bits (bn_9(D));
  _2 = _1 + 7;
  _3 = _2 / 8;
  num_bytes_11 = (unsigned int) _3;
  if (num_bytes_11 > 66)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 92189955]:
  ERR_put_error (16, 224, 144, "ecp_nistp521.c", 191);
  goto <bb 11>; [100.00%]

  <bb 4> [local count: 178956971]:
  _4 = BN_is_negative (bn_9(D));
  if (_4 != 0)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [local count: 60845370]:
  ERR_put_error (16, 224, 144, "ecp_nistp521.c", 195);
  goto <bb 11>; [100.00%]

  <bb 6> [local count: 118111601]:
  _5 = BN_bn2bin (bn_9(D), &b_in);
  num_bytes_16 = (unsigned int) _5;
  if (num_bytes_16 != 0)
    goto <bb 7>; [89.00%]
  else
    goto <bb 10>; [11.00%]

  <bb 7> [local count: 105119325]:
  _84 = num_bytes_16 + 4294967295;
  ivtmp.58_56 = (unsigned long) &b_out;

  <bb 8> [local count: 955630223]:
  # ivtmp.56_62 = PHI <_84(7), ivtmp.56_61(8)>
  # ivtmp.58_58 = PHI <ivtmp.58_56(7), ivtmp.58_57(8)>
  _24 = (sizetype) ivtmp.56_62;
  _25 = &b_in + _24;
  _28 = *_25;
  _55 = (void *) ivtmp.58_58;
  MEM[base: _55, offset: 0B] = _28;
  ivtmp.56_61 = ivtmp.56_62 + 4294967295;
  ivtmp.58_57 = ivtmp.58_58 + 1;
  if (ivtmp.56_61 != 4294967295)
    goto <bb 8>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 105119324]:
  pretmp_92 = MEM[(limb *)&b_out];
  _94 = pretmp_92 & 288230376151711743;
  pretmp_96 = MEM[(limb *)&b_out + 7B];
  _98 = pretmp_96 >> 2;
  _100 = _98 & 288230376151711743;
  pretmp_102 = MEM[(limb *)&b_out + 14B];
  _104 = pretmp_102 >> 4;
  _106 = _104 & 288230376151711743;
  pretmp_108 = MEM[(limb *)&b_out + 21B];
  _110 = pretmp_108 >> 6;
  pretmp_112 = MEM[(limb *)&b_out + 29B];
  _114 = pretmp_112 & 288230376151711743;
  pretmp_116 = MEM[(limb *)&b_out + 36B];
  _118 = pretmp_116 >> 2;
  _120 = _118 & 288230376151711743;
  pretmp_122 = MEM[(limb *)&b_out + 43B];
  _124 = pretmp_122 >> 4;
  _126 = _124 & 288230376151711743;
  pretmp_128 = MEM[(limb *)&b_out + 50B];
  _130 = pretmp_128 >> 6;
  pretmp_132 = MEM[(limb *)&b_out + 58B];
  _134 = pretmp_132 & 144115188075855871;

  <bb 10> [local count: 118111601]:
  # prephitmp_95 = PHI <_94(9), 0(6)>
  # prephitmp_101 = PHI <_100(9), 0(6)>
  # prephitmp_107 = PHI <_106(9), 0(6)>
  # prephitmp_111 = PHI <_110(9), 0(6)>
  # prephitmp_115 = PHI <_114(9), 0(6)>
  # prephitmp_121 = PHI <_120(9), 0(6)>
  # prephitmp_127 = PHI <_126(9), 0(6)>
  # prephitmp_131 = PHI <_130(9), 0(6)>
  # prephitmp_135 = PHI <_134(9), 0(6)>
  _91 = {prephitmp_127, prephitmp_131};
  _89 = {prephitmp_115, prephitmp_121};
  _82 = {prephitmp_107, prephitmp_111};
  _80 = {prephitmp_95, prephitmp_101};
  MEM[(limb *)out_17(D)] = _80;
  MEM[(limb *)out_17(D) + 16B] = _82;
  MEM[(limb *)out_17(D) + 32B] = _89;
  MEM[(limb *)out_17(D) + 48B] = _91;
  MEM[(limb *)out_17(D) + 64B] = prephitmp_135;

  <bb 11> [local count: 271146926]:
  # _6 = PHI <0(3), 0(5), 1(10)>
  b_in ={v} {CLOBBER};
  b_out ={v} {CLOBBER};
  return _6;

}



;; Function felem_is_zero_int (felem_is_zero_int, funcdef_no=423, decl_uid=10552, cgraph_uid=423, symbol_order=428)

felem_is_zero_int (const void * in)
{
  limb is_p;
  limb is_zero;
  long unsigned int _1;
  int _2;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _36;
  long unsigned int _37;
  long unsigned int _39;
  long unsigned int _40;
  signed long is_zero.3_51;
  signed long _52;
  long unsigned int _69;
  signed long is_p.4_72;
  signed long _73;
  long unsigned int _76;
  long unsigned int _77;
  long unsigned int _78;
  long unsigned int _79;
  long unsigned int _80;
  long unsigned int _81;
  long unsigned int _84;
  long unsigned int _87;
  long unsigned int _90;
  long unsigned int _93;
  long unsigned int _96;
  long unsigned int _99;
  long unsigned int _102;
  long unsigned int _103;

  <bb 2> [local count: 1073741825]:
  _6 = MEM[(const limb *)in_4(D)];
  _7 = MEM[(const limb *)in_4(D) + 8B];
  _8 = MEM[(const limb *)in_4(D) + 16B];
  _9 = MEM[(const limb *)in_4(D) + 24B];
  _10 = MEM[(const limb *)in_4(D) + 32B];
  _11 = MEM[(const limb *)in_4(D) + 40B];
  _12 = MEM[(const limb *)in_4(D) + 48B];
  _13 = MEM[(const limb *)in_4(D) + 56B];
  _14 = MEM[(const limb *)in_4(D) + 64B];
  _15 = _14 >> 57;
  _16 = _6 + _15;
  _17 = _14 & 144115188075855871;
  _18 = _16 >> 58;
  _19 = _7 + _18;
  _21 = _19 >> 58;
  _22 = _8 + _21;
  _24 = _22 >> 58;
  _25 = _9 + _24;
  _27 = _25 >> 58;
  _28 = _10 + _27;
  _30 = _28 >> 58;
  _31 = _11 + _30;
  _33 = _31 >> 58;
  _34 = _12 + _33;
  _36 = _34 >> 58;
  _37 = _13 + _36;
  _39 = _37 >> 58;
  _40 = _17 + _39;
  _76 = _16 | _19;
  _1 = _22 | _76;
  _77 = _1 | _25;
  _78 = _28 | _77;
  _79 = _31 | _78;
  _80 = _34 | _79;
  _81 = _37 | _80;
  is_zero_48 = _81 & 288230376151711743;
  is_zero_49 = _40 | is_zero_48;
  is_zero_50 = is_zero_49 + 18446744073709551615;
  is_zero.3_51 = (signed long) is_zero_50;
  _52 = is_zero.3_51 >> 63;
  is_zero_53 = (limb) _52;
  _84 = _16 & _19;
  _87 = _22 & _84;
  _90 = _25 & _87;
  _93 = _28 & _90;
  _96 = _31 & _93;
  _99 = _34 & _96;
  _102 = _37 & _99;
  _103 = ~_102;
  is_p_68 = _103 & 288230376151711743;
  _69 = _40 ^ 144115188075855871;
  is_p_70 = is_p_68 | _69;
  is_p_71 = is_p_70 + 18446744073709551615;
  is_p.4_72 = (signed long) is_p_71;
  _73 = is_p.4_72 >> 63;
  is_p_74 = (limb) _73;
  is_zero_75 = is_zero_53 | is_p_74;
  _2 = (int) is_zero_75;
  _5 = _2 & 1;
  return _5;

}



;; Function felem_sum64 (felem_sum64, funcdef_no=408, decl_uid=10444, cgraph_uid=408, symbol_order=411)

__attribute__((used))
felem_sum64 (limb * out, const limb * in)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;

  <bb 2> [local count: 1073741825]:
  _1 = *out_29(D);
  _2 = *in_30(D);
  _3 = _1 + _2;
  *out_29(D) = _3;
  _4 = MEM[(limb *)out_29(D) + 8B];
  _5 = MEM[(const limb *)in_30(D) + 8B];
  _6 = _4 + _5;
  MEM[(limb *)out_29(D) + 8B] = _6;
  _7 = MEM[(limb *)out_29(D) + 16B];
  _8 = MEM[(const limb *)in_30(D) + 16B];
  _9 = _7 + _8;
  MEM[(limb *)out_29(D) + 16B] = _9;
  _10 = MEM[(limb *)out_29(D) + 24B];
  _11 = MEM[(const limb *)in_30(D) + 24B];
  _12 = _10 + _11;
  MEM[(limb *)out_29(D) + 24B] = _12;
  _13 = MEM[(limb *)out_29(D) + 32B];
  _14 = MEM[(const limb *)in_30(D) + 32B];
  _15 = _13 + _14;
  MEM[(limb *)out_29(D) + 32B] = _15;
  _16 = MEM[(limb *)out_29(D) + 40B];
  _17 = MEM[(const limb *)in_30(D) + 40B];
  _18 = _16 + _17;
  MEM[(limb *)out_29(D) + 40B] = _18;
  _19 = MEM[(limb *)out_29(D) + 48B];
  _20 = MEM[(const limb *)in_30(D) + 48B];
  _21 = _19 + _20;
  MEM[(limb *)out_29(D) + 48B] = _21;
  _22 = MEM[(limb *)out_29(D) + 56B];
  _23 = MEM[(const limb *)in_30(D) + 56B];
  _24 = _22 + _23;
  MEM[(limb *)out_29(D) + 56B] = _24;
  _25 = MEM[(limb *)out_29(D) + 64B];
  _26 = MEM[(const limb *)in_30(D) + 64B];
  _27 = _25 + _26;
  MEM[(limb *)out_29(D) + 64B] = _27;
  return;

}



;; Function felem_scalar (felem_scalar, funcdef_no=409, decl_uid=10449, cgraph_uid=409, symbol_order=412)

__attribute__((used))
felem_scalar (limb * out, const limb * in, limb scalar)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;

  <bb 2> [local count: 1073741825]:
  _1 = *in_20(D);
  _2 = _1 * scalar_21(D);
  *out_22(D) = _2;
  _3 = MEM[(const limb *)in_20(D) + 8B];
  _4 = _3 * scalar_21(D);
  MEM[(limb *)out_22(D) + 8B] = _4;
  _5 = MEM[(const limb *)in_20(D) + 16B];
  _6 = _5 * scalar_21(D);
  MEM[(limb *)out_22(D) + 16B] = _6;
  _7 = MEM[(const limb *)in_20(D) + 24B];
  _8 = _7 * scalar_21(D);
  MEM[(limb *)out_22(D) + 24B] = _8;
  _9 = MEM[(const limb *)in_20(D) + 32B];
  _10 = _9 * scalar_21(D);
  MEM[(limb *)out_22(D) + 32B] = _10;
  _11 = MEM[(const limb *)in_20(D) + 40B];
  _12 = _11 * scalar_21(D);
  MEM[(limb *)out_22(D) + 40B] = _12;
  _13 = MEM[(const limb *)in_20(D) + 48B];
  _14 = _13 * scalar_21(D);
  MEM[(limb *)out_22(D) + 48B] = _14;
  _15 = MEM[(const limb *)in_20(D) + 56B];
  _16 = _15 * scalar_21(D);
  MEM[(limb *)out_22(D) + 56B] = _16;
  _17 = MEM[(const limb *)in_20(D) + 64B];
  _18 = _17 * scalar_21(D);
  MEM[(limb *)out_22(D) + 64B] = _18;
  return;

}



;; Function felem_scalar64 (felem_scalar64, funcdef_no=410, decl_uid=10453, cgraph_uid=410, symbol_order=413)

__attribute__((used))
felem_scalar64 (limb * out, limb scalar)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;

  <bb 2> [local count: 1073741825]:
  _1 = *out_20(D);
  _2 = _1 * scalar_21(D);
  *out_20(D) = _2;
  _3 = MEM[(limb *)out_20(D) + 8B];
  _4 = _3 * scalar_21(D);
  MEM[(limb *)out_20(D) + 8B] = _4;
  _5 = MEM[(limb *)out_20(D) + 16B];
  _6 = _5 * scalar_21(D);
  MEM[(limb *)out_20(D) + 16B] = _6;
  _7 = MEM[(limb *)out_20(D) + 24B];
  _8 = _7 * scalar_21(D);
  MEM[(limb *)out_20(D) + 24B] = _8;
  _9 = MEM[(limb *)out_20(D) + 32B];
  _10 = _9 * scalar_21(D);
  MEM[(limb *)out_20(D) + 32B] = _10;
  _11 = MEM[(limb *)out_20(D) + 40B];
  _12 = _11 * scalar_21(D);
  MEM[(limb *)out_20(D) + 40B] = _12;
  _13 = MEM[(limb *)out_20(D) + 48B];
  _14 = _13 * scalar_21(D);
  MEM[(limb *)out_20(D) + 48B] = _14;
  _15 = MEM[(limb *)out_20(D) + 56B];
  _16 = _15 * scalar_21(D);
  MEM[(limb *)out_20(D) + 56B] = _16;
  _17 = MEM[(limb *)out_20(D) + 64B];
  _18 = _17 * scalar_21(D);
  MEM[(limb *)out_20(D) + 64B] = _18;
  return;

}



;; Function felem_scalar128 (felem_scalar128, funcdef_no=411, decl_uid=10457, cgraph_uid=411, symbol_order=414)

__attribute__((used))
felem_scalar128 (uint128_t * out, limb scalar)
{
  __int128 unsigned _1;
  __int128 unsigned _2;
  __int128 unsigned _3;
  __int128 unsigned _4;
  __int128 unsigned _5;
  __int128 unsigned _6;
  __int128 unsigned _7;
  __int128 unsigned _8;
  __int128 unsigned _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  __int128 unsigned _12;
  __int128 unsigned _13;
  __int128 unsigned _14;
  __int128 unsigned _15;
  __int128 unsigned _16;
  __int128 unsigned _17;
  __int128 unsigned _18;
  __int128 unsigned _19;

  <bb 2> [local count: 1073741825]:
  _1 = *out_21(D);
  _2 = (__int128 unsigned) scalar_22(D);
  _3 = _1 * _2;
  *out_21(D) = _3;
  _4 = MEM[(uint128_t *)out_21(D) + 16B];
  _5 = _2 * _4;
  MEM[(uint128_t *)out_21(D) + 16B] = _5;
  _6 = MEM[(uint128_t *)out_21(D) + 32B];
  _7 = _2 * _6;
  MEM[(uint128_t *)out_21(D) + 32B] = _7;
  _8 = MEM[(uint128_t *)out_21(D) + 48B];
  _9 = _2 * _8;
  MEM[(uint128_t *)out_21(D) + 48B] = _9;
  _10 = MEM[(uint128_t *)out_21(D) + 64B];
  _11 = _2 * _10;
  MEM[(uint128_t *)out_21(D) + 64B] = _11;
  _12 = MEM[(uint128_t *)out_21(D) + 80B];
  _13 = _2 * _12;
  MEM[(uint128_t *)out_21(D) + 80B] = _13;
  _14 = MEM[(uint128_t *)out_21(D) + 96B];
  _15 = _2 * _14;
  MEM[(uint128_t *)out_21(D) + 96B] = _15;
  _16 = MEM[(uint128_t *)out_21(D) + 112B];
  _17 = _2 * _16;
  MEM[(uint128_t *)out_21(D) + 112B] = _17;
  _18 = MEM[(uint128_t *)out_21(D) + 128B];
  _19 = _2 * _18;
  MEM[(uint128_t *)out_21(D) + 128B] = _19;
  return;

}



;; Function felem_neg (felem_neg, funcdef_no=412, decl_uid=10461, cgraph_uid=412, symbol_order=415)

__attribute__((used))
felem_neg (limb * out, const limb * in)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;

  <bb 2> [local count: 1073741825]:
  _1 = *in_20(D);
  _2 = 4611686018427387872 - _1;
  *out_21(D) = _2;
  _3 = MEM[(const limb *)in_20(D) + 8B];
  _4 = 4611686018427387888 - _3;
  MEM[(limb *)out_21(D) + 8B] = _4;
  _5 = MEM[(const limb *)in_20(D) + 16B];
  _6 = 4611686018427387888 - _5;
  MEM[(limb *)out_21(D) + 16B] = _6;
  _7 = MEM[(const limb *)in_20(D) + 24B];
  _8 = 4611686018427387888 - _7;
  MEM[(limb *)out_21(D) + 24B] = _8;
  _9 = MEM[(const limb *)in_20(D) + 32B];
  _10 = 4611686018427387888 - _9;
  MEM[(limb *)out_21(D) + 32B] = _10;
  _11 = MEM[(const limb *)in_20(D) + 40B];
  _12 = 4611686018427387888 - _11;
  MEM[(limb *)out_21(D) + 40B] = _12;
  _13 = MEM[(const limb *)in_20(D) + 48B];
  _14 = 4611686018427387888 - _13;
  MEM[(limb *)out_21(D) + 48B] = _14;
  _15 = MEM[(const limb *)in_20(D) + 56B];
  _16 = 4611686018427387888 - _15;
  MEM[(limb *)out_21(D) + 56B] = _16;
  _17 = MEM[(const limb *)in_20(D) + 64B];
  _18 = 4611686018427387888 - _17;
  MEM[(limb *)out_21(D) + 64B] = _18;
  return;

}



;; Function felem_diff64 (felem_diff64, funcdef_no=413, decl_uid=10467, cgraph_uid=413, symbol_order=416)

__attribute__((used))
felem_diff64 (limb * out, const limb * in)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;

  <bb 2> [local count: 1073741825]:
  _1 = *out_38(D);
  _2 = *in_39(D);
  _3 = _1 - _2;
  _4 = _3 + 4611686018427387872;
  *out_38(D) = _4;
  _5 = MEM[(limb *)out_38(D) + 8B];
  _6 = MEM[(const limb *)in_39(D) + 8B];
  _7 = _5 - _6;
  _8 = _7 + 4611686018427387888;
  MEM[(limb *)out_38(D) + 8B] = _8;
  _9 = MEM[(limb *)out_38(D) + 16B];
  _10 = MEM[(const limb *)in_39(D) + 16B];
  _11 = _9 - _10;
  _12 = _11 + 4611686018427387888;
  MEM[(limb *)out_38(D) + 16B] = _12;
  _13 = MEM[(limb *)out_38(D) + 24B];
  _14 = MEM[(const limb *)in_39(D) + 24B];
  _15 = _13 - _14;
  _16 = _15 + 4611686018427387888;
  MEM[(limb *)out_38(D) + 24B] = _16;
  _17 = MEM[(limb *)out_38(D) + 32B];
  _18 = MEM[(const limb *)in_39(D) + 32B];
  _19 = _17 - _18;
  _20 = _19 + 4611686018427387888;
  MEM[(limb *)out_38(D) + 32B] = _20;
  _21 = MEM[(limb *)out_38(D) + 40B];
  _22 = MEM[(const limb *)in_39(D) + 40B];
  _23 = _21 - _22;
  _24 = _23 + 4611686018427387888;
  MEM[(limb *)out_38(D) + 40B] = _24;
  _25 = MEM[(limb *)out_38(D) + 48B];
  _26 = MEM[(const limb *)in_39(D) + 48B];
  _27 = _25 - _26;
  _28 = _27 + 4611686018427387888;
  MEM[(limb *)out_38(D) + 48B] = _28;
  _29 = MEM[(limb *)out_38(D) + 56B];
  _30 = MEM[(const limb *)in_39(D) + 56B];
  _31 = _29 - _30;
  _32 = _31 + 4611686018427387888;
  MEM[(limb *)out_38(D) + 56B] = _32;
  _33 = MEM[(limb *)out_38(D) + 64B];
  _34 = MEM[(const limb *)in_39(D) + 64B];
  _35 = _33 - _34;
  _36 = _35 + 4611686018427387888;
  MEM[(limb *)out_38(D) + 64B] = _36;
  return;

}



;; Function felem_diff_128_64 (felem_diff_128_64, funcdef_no=414, decl_uid=10473, cgraph_uid=414, symbol_order=417)

__attribute__((used))
felem_diff_128_64 (uint128_t * out, const limb * in)
{
  __int128 unsigned _1;
  long unsigned int _2;
  long unsigned int _3;
  __int128 unsigned _4;
  __int128 unsigned _5;
  __int128 unsigned _6;
  long unsigned int _7;
  long unsigned int _8;
  __int128 unsigned _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  long unsigned int _12;
  long unsigned int _13;
  __int128 unsigned _14;
  __int128 unsigned _15;
  __int128 unsigned _16;
  long unsigned int _17;
  long unsigned int _18;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _21;
  long unsigned int _22;
  long unsigned int _23;
  __int128 unsigned _24;
  __int128 unsigned _25;
  __int128 unsigned _26;
  long unsigned int _27;
  long unsigned int _28;
  __int128 unsigned _29;
  __int128 unsigned _30;
  __int128 unsigned _31;
  long unsigned int _32;
  long unsigned int _33;
  __int128 unsigned _34;
  __int128 unsigned _35;
  __int128 unsigned _36;
  long unsigned int _37;
  long unsigned int _38;
  __int128 unsigned _39;
  __int128 unsigned _40;
  __int128 unsigned _41;
  long unsigned int _42;
  long unsigned int _43;
  __int128 unsigned _44;
  __int128 unsigned _45;

  <bb 2> [local count: 1073741825]:
  _1 = *out_47(D);
  _2 = *in_48(D);
  _3 = 9223372036854775744 - _2;
  _4 = (__int128 unsigned) _3;
  _5 = _1 + _4;
  *out_47(D) = _5;
  _6 = MEM[(uint128_t *)out_47(D) + 16B];
  _7 = MEM[(const limb *)in_48(D) + 8B];
  _8 = 9223372036854775776 - _7;
  _9 = (__int128 unsigned) _8;
  _10 = _6 + _9;
  MEM[(uint128_t *)out_47(D) + 16B] = _10;
  _11 = MEM[(uint128_t *)out_47(D) + 32B];
  _12 = MEM[(const limb *)in_48(D) + 16B];
  _13 = 9223372036854775776 - _12;
  _14 = (__int128 unsigned) _13;
  _15 = _11 + _14;
  MEM[(uint128_t *)out_47(D) + 32B] = _15;
  _16 = MEM[(uint128_t *)out_47(D) + 48B];
  _17 = MEM[(const limb *)in_48(D) + 24B];
  _18 = 9223372036854775776 - _17;
  _19 = (__int128 unsigned) _18;
  _20 = _16 + _19;
  MEM[(uint128_t *)out_47(D) + 48B] = _20;
  _21 = MEM[(uint128_t *)out_47(D) + 64B];
  _22 = MEM[(const limb *)in_48(D) + 32B];
  _23 = 9223372036854775776 - _22;
  _24 = (__int128 unsigned) _23;
  _25 = _21 + _24;
  MEM[(uint128_t *)out_47(D) + 64B] = _25;
  _26 = MEM[(uint128_t *)out_47(D) + 80B];
  _27 = MEM[(const limb *)in_48(D) + 40B];
  _28 = 9223372036854775776 - _27;
  _29 = (__int128 unsigned) _28;
  _30 = _26 + _29;
  MEM[(uint128_t *)out_47(D) + 80B] = _30;
  _31 = MEM[(uint128_t *)out_47(D) + 96B];
  _32 = MEM[(const limb *)in_48(D) + 48B];
  _33 = 9223372036854775776 - _32;
  _34 = (__int128 unsigned) _33;
  _35 = _31 + _34;
  MEM[(uint128_t *)out_47(D) + 96B] = _35;
  _36 = MEM[(uint128_t *)out_47(D) + 112B];
  _37 = MEM[(const limb *)in_48(D) + 56B];
  _38 = 9223372036854775776 - _37;
  _39 = (__int128 unsigned) _38;
  _40 = _36 + _39;
  MEM[(uint128_t *)out_47(D) + 112B] = _40;
  _41 = MEM[(uint128_t *)out_47(D) + 128B];
  _42 = MEM[(const limb *)in_48(D) + 64B];
  _43 = 9223372036854775776 - _42;
  _44 = (__int128 unsigned) _43;
  _45 = _41 + _44;
  MEM[(uint128_t *)out_47(D) + 128B] = _45;
  return;

}



;; Function felem_diff128 (felem_diff128, funcdef_no=415, decl_uid=10479, cgraph_uid=415, symbol_order=418)

__attribute__((used))
felem_diff128 (uint128_t * out, const uint128_t * in)
{
  __int128 unsigned _1;
  __int128 unsigned _2;
  __int128 unsigned _3;
  __int128 unsigned _4;
  __int128 unsigned _5;
  __int128 unsigned _6;
  __int128 unsigned _7;
  __int128 unsigned _8;
  __int128 unsigned _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  __int128 unsigned _12;
  __int128 unsigned _13;
  __int128 unsigned _14;
  __int128 unsigned _15;
  __int128 unsigned _16;
  __int128 unsigned _17;
  __int128 unsigned _18;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _21;
  __int128 unsigned _22;
  __int128 unsigned _23;
  __int128 unsigned _24;
  __int128 unsigned _25;
  __int128 unsigned _26;
  __int128 unsigned _27;
  __int128 unsigned _28;
  __int128 unsigned _29;
  __int128 unsigned _30;
  __int128 unsigned _31;
  __int128 unsigned _32;
  __int128 unsigned _33;
  __int128 unsigned _34;
  __int128 unsigned _35;
  __int128 unsigned _36;

  <bb 2> [local count: 1073741825]:
  _1 = *out_38(D);
  _2 = *in_39(D);
  _3 = _1 - _2;
  _4 = _3 + 0x7fffffffffffffc00000000000000000;
  *out_38(D) = _4;
  _5 = MEM[(uint128_t *)out_38(D) + 16B];
  _6 = MEM[(const uint128_t *)in_39(D) + 16B];
  _7 = _5 - _6;
  _8 = _7 + 0x7fffffffffffffe00000000000000000;
  MEM[(uint128_t *)out_38(D) + 16B] = _8;
  _9 = MEM[(uint128_t *)out_38(D) + 32B];
  _10 = MEM[(const uint128_t *)in_39(D) + 32B];
  _11 = _9 - _10;
  _12 = _11 + 0x7fffffffffffffe00000000000000000;
  MEM[(uint128_t *)out_38(D) + 32B] = _12;
  _13 = MEM[(uint128_t *)out_38(D) + 48B];
  _14 = MEM[(const uint128_t *)in_39(D) + 48B];
  _15 = _13 - _14;
  _16 = _15 + 0x7fffffffffffffe00000000000000000;
  MEM[(uint128_t *)out_38(D) + 48B] = _16;
  _17 = MEM[(uint128_t *)out_38(D) + 64B];
  _18 = MEM[(const uint128_t *)in_39(D) + 64B];
  _19 = _17 - _18;
  _20 = _19 + 0x7fffffffffffffe00000000000000000;
  MEM[(uint128_t *)out_38(D) + 64B] = _20;
  _21 = MEM[(uint128_t *)out_38(D) + 80B];
  _22 = MEM[(const uint128_t *)in_39(D) + 80B];
  _23 = _21 - _22;
  _24 = _23 + 0x7fffffffffffffe00000000000000000;
  MEM[(uint128_t *)out_38(D) + 80B] = _24;
  _25 = MEM[(uint128_t *)out_38(D) + 96B];
  _26 = MEM[(const uint128_t *)in_39(D) + 96B];
  _27 = _25 - _26;
  _28 = _27 + 0x7fffffffffffffe00000000000000000;
  MEM[(uint128_t *)out_38(D) + 96B] = _28;
  _29 = MEM[(uint128_t *)out_38(D) + 112B];
  _30 = MEM[(const uint128_t *)in_39(D) + 112B];
  _31 = _29 - _30;
  _32 = _31 + 0x7fffffffffffffe00000000000000000;
  MEM[(uint128_t *)out_38(D) + 112B] = _32;
  _33 = MEM[(uint128_t *)out_38(D) + 128B];
  _34 = MEM[(const uint128_t *)in_39(D) + 128B];
  _35 = _33 - _34;
  _36 = _35 + 0x7fffffffffffffe00000000000000000;
  MEM[(uint128_t *)out_38(D) + 128B] = _36;
  return;

}



;; Function felem_square (felem_square, funcdef_no=416, decl_uid=10485, cgraph_uid=416, symbol_order=419)

__attribute__((used))
felem_square (uint128_t * out, const limb * in)
{
  __int128 unsigned _2;
  __int128 unsigned _4;
  __int128 unsigned _6;
  __int128 unsigned _8;
  __int128 unsigned _11;
  __int128 unsigned _12;
  __int128 unsigned _15;
  __int128 unsigned _16;
  __int128 unsigned _17;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _22;
  __int128 unsigned _23;
  __int128 unsigned _25;
  __int128 unsigned _28;
  __int128 unsigned _29;
  __int128 unsigned _30;
  __int128 unsigned _32;
  __int128 unsigned _33;
  __int128 unsigned _35;
  __int128 unsigned _37;
  __int128 unsigned _38;
  __int128 unsigned _40;
  __int128 unsigned _41;
  __int128 unsigned _43;
  __int128 unsigned _45;
  __int128 unsigned _46;
  __int128 unsigned _47;
  __int128 unsigned _48;
  __int128 unsigned _49;
  __int128 unsigned _53;
  __int128 unsigned _54;
  __int128 unsigned _56;
  __int128 unsigned _58;
  __int128 unsigned _59;
  __int128 unsigned _61;
  __int128 unsigned _63;
  __int128 unsigned _66;
  __int128 unsigned _67;
  __int128 unsigned _68;
  __int128 unsigned _71;
  __int128 unsigned _72;
  __int128 unsigned _75;
  __int128 unsigned _76;
  __int128 unsigned _77;
  __int128 unsigned _79;
  __int128 unsigned _81;
  __int128 unsigned _82;
  __int128 unsigned _83;
  __int128 unsigned _86;
  __int128 unsigned _88;
  __int128 unsigned _89;
  __int128 unsigned _90;
  __int128 unsigned _92;
  __int128 unsigned _93;
  __int128 unsigned _95;
  __int128 unsigned _97;
  __int128 unsigned _98;
  __int128 unsigned _99;
  __int128 unsigned _101;
  __int128 unsigned _102;
  long unsigned int _115;
  long unsigned int _116;
  long unsigned int _117;
  long unsigned int _118;
  long unsigned int _119;
  long unsigned int _120;
  long unsigned int _121;
  long unsigned int _122;
  long unsigned int _123;
  long unsigned int _124;
  long unsigned int _125;
  long unsigned int _126;
  long unsigned int _127;
  long unsigned int _128;
  long unsigned int _129;
  long unsigned int _130;
  long unsigned int _131;
  long unsigned int _132;
  long unsigned int _133;
  long unsigned int _134;
  long unsigned int _135;
  __int128 unsigned _136;
  __int128 unsigned _138;
  __int128 unsigned _140;
  __int128 unsigned _142;
  __int128 unsigned _143;
  __int128 unsigned _144;
  __int128 unsigned _146;
  __int128 unsigned _149;
  __int128 unsigned _150;
  __int128 unsigned _151;
  __int128 unsigned _154;
  __int128 unsigned _155;
  __int128 unsigned _156;
  __int128 unsigned _158;
  __int128 unsigned _159;
  __int128 unsigned _160;
  __int128 unsigned _162;
  __int128 unsigned _163;
  __int128 unsigned _165;
  __int128 unsigned _166;

  <bb 2> [local count: 1073741825]:
  _119 = *in_104(D);
  _120 = MEM[(const limb *)in_104(D) + 8B];
  _121 = _120 * 2;
  _122 = MEM[(const limb *)in_104(D) + 16B];
  _123 = _122 * 2;
  _124 = MEM[(const limb *)in_104(D) + 24B];
  _125 = _124 * 2;
  _126 = MEM[(const limb *)in_104(D) + 32B];
  _127 = _126 * 2;
  _128 = MEM[(const limb *)in_104(D) + 40B];
  _129 = _128 * 2;
  _130 = MEM[(const limb *)in_104(D) + 48B];
  _131 = _130 * 2;
  _132 = MEM[(const limb *)in_104(D) + 56B];
  _133 = _132 * 2;
  _134 = MEM[(const limb *)in_104(D) + 64B];
  _135 = _134 * 2;
  _115 = _128 * 4;
  _116 = _130 * 4;
  _117 = _132 * 4;
  _118 = _134 * 4;
  _2 = _119 w* _119;
  _4 = _119 w* _121;
  _6 = _119 w* _123;
  _8 = _120 w* _120;
  _11 = _119 w* _125;
  _12 = _123 w* _120;
  _149 = _11 + _12;
  _15 = _119 w* _127;
  _16 = _120 w* _125;
  _17 = _15 + _16;
  _19 = _122 w* _122;
  _20 = _17 + _19;
  _22 = _119 w* _129;
  _23 = _120 w* _127;
  _142 = _22 + _23;
  _25 = _125 w* _122;
  _143 = _25 + _142;
  _28 = _119 w* _131;
  _29 = _120 w* _129;
  _30 = _28 + _29;
  _32 = _124 w* _124;
  _33 = _127 w* _122;
  _140 = _30 + _32;
  _35 = _33 + _140;
  _37 = _119 w* _133;
  _38 = _120 w* _131;
  _136 = _37 + _38;
  _40 = _127 w* _124;
  _41 = _122 w* _129;
  _138 = _40 + _136;
  _43 = _41 + _138;
  _45 = _119 w* _135;
  _46 = _120 w* _133;
  _47 = _45 + _46;
  _48 = _129 w* _124;
  _49 = _122 w* _131;
  _53 = _126 w* _126;
  _165 = _47 + _53;
  _166 = _48 + _165;
  _54 = _49 + _166;
  MEM[(uint128_t *)out_105(D) + 128B] = _54;
  _56 = _120 w* _118;
  _58 = _122 w* _117;
  _59 = _56 + _58;
  _61 = _126 w* _115;
  _63 = _124 w* _116;
  _162 = _2 + _59;
  _163 = _61 + _162;
  _66 = _63 + _163;
  *out_105(D) = _66;
  _67 = _122 w* _118;
  _68 = _124 w* _117;
  _158 = _4 + _67;
  _71 = _129 w* _128;
  _72 = _126 w* _116;
  _159 = _68 + _158;
  _160 = _71 + _159;
  _75 = _72 + _160;
  MEM[(uint128_t *)out_105(D) + 16B] = _75;
  _76 = _124 w* _118;
  _154 = _6 + _76;
  _77 = _126 w* _117;
  _79 = _116 w* _128;
  _155 = _8 + _154;
  _156 = _77 + _155;
  _81 = _79 + _156;
  MEM[(uint128_t *)out_105(D) + 32B] = _81;
  _82 = _126 w* _118;
  _83 = _117 w* _128;
  _86 = _131 w* _130;
  _150 = _82 + _149;
  _151 = _83 + _150;
  _88 = _86 + _151;
  MEM[(uint128_t *)out_105(D) + 48B] = _88;
  _89 = _118 w* _128;
  _90 = _117 w* _130;
  _146 = _20 + _89;
  _92 = _90 + _146;
  MEM[(uint128_t *)out_105(D) + 64B] = _92;
  _93 = _118 w* _130;
  _95 = _133 w* _132;
  _144 = _93 + _143;
  _97 = _95 + _144;
  MEM[(uint128_t *)out_105(D) + 80B] = _97;
  _98 = _118 w* _132;
  _99 = _35 + _98;
  MEM[(uint128_t *)out_105(D) + 96B] = _99;
  _101 = _135 w* _134;
  _102 = _43 + _101;
  MEM[(uint128_t *)out_105(D) + 112B] = _102;
  return;

}



;; Function felem_square_reduce (felem_square_reduce, funcdef_no=419, decl_uid=10504, cgraph_uid=419, symbol_order=423)

__attribute__((used))
felem_square_reduce (limb * out, const limb * in)
{
  u64 overflow1;
  u64 overflow2;
  uint128_t tmp[9];
  long unsigned int _5;
  __int128 unsigned _7;
  long unsigned int _8;
  long unsigned int _9;
  __int128 unsigned _10;
  long unsigned int _11;
  long unsigned int _12;
  __int128 unsigned _13;
  long unsigned int _14;
  long unsigned int _15;
  __int128 unsigned _16;
  long unsigned int _17;
  long unsigned int _18;
  __int128 unsigned _19;
  long unsigned int _20;
  long unsigned int _21;
  __int128 unsigned _22;
  long unsigned int _23;
  long unsigned int _24;
  __int128 unsigned _25;
  long unsigned int _26;
  long unsigned int _27;
  __int128 unsigned _28;
  long unsigned int _29;
  long unsigned int _30;
  __int128 unsigned _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  __int128 unsigned _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _43;
  long unsigned int _44;
  __int128 unsigned _45;
  long unsigned int _46;
  long unsigned int _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _52;
  long unsigned int _53;
  __int128 unsigned _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _61;
  long unsigned int _62;
  __int128 unsigned _63;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _70;
  long unsigned int _71;
  __int128 unsigned _72;
  long unsigned int _73;
  long unsigned int _74;
  long unsigned int _75;
  long unsigned int _76;
  long unsigned int _77;
  long unsigned int _79;
  long unsigned int _80;
  __int128 unsigned _81;
  long unsigned int _82;
  long unsigned int _83;
  long unsigned int _84;
  long unsigned int _85;
  long unsigned int _86;
  long unsigned int _88;
  long unsigned int _89;
  __int128 unsigned _90;
  long unsigned int _91;
  long unsigned int _92;
  long unsigned int _93;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int _97;
  long unsigned int _98;
  __int128 unsigned _99;
  long unsigned int _100;
  long unsigned int _101;
  long unsigned int _102;
  long unsigned int _103;
  long unsigned int _105;
  __int128 unsigned _107;
  long unsigned int _108;
  long unsigned int _109;
  long unsigned int _110;
  long unsigned int _115;
  long unsigned int _116;
  long unsigned int _117;
  long unsigned int _118;
  long unsigned int _119;
  long unsigned int _129;
  long unsigned int _130;
  long unsigned int _131;
  long unsigned int _132;
  long unsigned int _133;
  long unsigned int _134;

  <bb 2> [local count: 1073741825]:
  felem_square (&tmp, in_2(D));
  _7 = MEM[(const uint128_t *)&tmp];
  _8 = (long unsigned int) _7;
  _9 = _8 & 288230376151711743;
  _10 = MEM[(const uint128_t *)&tmp + 16B];
  _11 = (long unsigned int) _10;
  _12 = _11 & 288230376151711743;
  _13 = MEM[(const uint128_t *)&tmp + 32B];
  _14 = (long unsigned int) _13;
  _15 = _14 & 288230376151711743;
  _16 = MEM[(const uint128_t *)&tmp + 48B];
  _17 = (long unsigned int) _16;
  _18 = _17 & 288230376151711743;
  _19 = MEM[(const uint128_t *)&tmp + 64B];
  _20 = (long unsigned int) _19;
  _21 = _20 & 288230376151711743;
  _22 = MEM[(const uint128_t *)&tmp + 80B];
  _23 = (long unsigned int) _22;
  _24 = _23 & 288230376151711743;
  _25 = MEM[(const uint128_t *)&tmp + 96B];
  _26 = (long unsigned int) _25;
  _27 = _26 & 288230376151711743;
  _28 = MEM[(const uint128_t *)&tmp + 112B];
  _29 = (long unsigned int) _28;
  _30 = _29 & 288230376151711743;
  _31 = MEM[(const uint128_t *)&tmp + 128B];
  _32 = (long unsigned int) _31;
  _33 = _32 & 288230376151711743;
  _34 = _8 >> 58;
  _35 = _12 + _34;
  _36 = _7 >> 64;
  _37 = (long unsigned int) _36;
  _38 = _37 << 6;
  _39 = _38 & 288230376151711680;
  _40 = _35 + _39;
  _41 = _37 >> 52;
  _43 = _11 >> 58;
  _134 = _15 + _43;
  _44 = _41 + _134;
  _45 = _10 >> 64;
  _46 = (long unsigned int) _45;
  _47 = _46 << 6;
  _48 = _47 & 288230376151711680;
  _49 = _44 + _48;
  MEM[(limb *)out_4(D) + 16B] = _49;
  _50 = _46 >> 52;
  _52 = _14 >> 58;
  _133 = _18 + _52;
  _53 = _50 + _133;
  _54 = _13 >> 64;
  _55 = (long unsigned int) _54;
  _56 = _55 << 6;
  _57 = _56 & 288230376151711680;
  _58 = _53 + _57;
  MEM[(limb *)out_4(D) + 24B] = _58;
  _59 = _55 >> 52;
  _61 = _17 >> 58;
  _132 = _21 + _61;
  _62 = _59 + _132;
  _63 = _16 >> 64;
  _64 = (long unsigned int) _63;
  _65 = _64 << 6;
  _66 = _65 & 288230376151711680;
  _67 = _62 + _66;
  MEM[(limb *)out_4(D) + 32B] = _67;
  _68 = _64 >> 52;
  _70 = _20 >> 58;
  _131 = _24 + _70;
  _71 = _68 + _131;
  _72 = _19 >> 64;
  _73 = (long unsigned int) _72;
  _74 = _73 << 6;
  _75 = _74 & 288230376151711680;
  _76 = _71 + _75;
  MEM[(limb *)out_4(D) + 40B] = _76;
  _77 = _73 >> 52;
  _79 = _23 >> 58;
  _130 = _27 + _79;
  _80 = _77 + _130;
  _81 = _22 >> 64;
  _82 = (long unsigned int) _81;
  _83 = _82 << 6;
  _84 = _83 & 288230376151711680;
  _85 = _80 + _84;
  MEM[(limb *)out_4(D) + 48B] = _85;
  _86 = _82 >> 52;
  _88 = _26 >> 58;
  _129 = _30 + _88;
  _89 = _86 + _129;
  _90 = _25 >> 64;
  _91 = (long unsigned int) _90;
  _92 = _91 << 6;
  _93 = _92 & 288230376151711680;
  _94 = _89 + _93;
  MEM[(limb *)out_4(D) + 56B] = _94;
  _95 = _91 >> 52;
  _97 = _29 >> 58;
  _5 = _33 + _97;
  _98 = _5 + _95;
  _99 = _28 >> 64;
  _100 = (long unsigned int) _99;
  _101 = _100 << 6;
  _102 = _101 & 288230376151711680;
  _103 = _98 + _102;
  MEM[(limb *)out_4(D) + 64B] = _103;
  overflow1_104 = _100 >> 52;
  _105 = _32 >> 58;
  overflow1_106 = overflow1_104 + _105;
  _107 = _31 >> 64;
  _108 = (long unsigned int) _107;
  _109 = _108 << 6;
  _110 = _109 & 288230376151711680;
  overflow1_111 = overflow1_106 + _110;
  overflow2_112 = _108 >> 52;
  overflow1_113 = overflow1_111 << 1;
  overflow2_114 = overflow2_112 << 1;
  _115 = _9 + overflow1_113;
  _116 = _40 + overflow2_114;
  _117 = _115 >> 58;
  _118 = _116 + _117;
  MEM[(limb *)out_4(D) + 8B] = _118;
  _119 = _115 & 288230376151711743;
  *out_4(D) = _119;
  tmp ={v} {CLOBBER};
  return;

}



;; Function felem_mul (felem_mul, funcdef_no=417, decl_uid=10492, cgraph_uid=417, symbol_order=420)

__attribute__((used))
felem_mul (uint128_t * out, const limb * in1, const limb * in2)
{
  long unsigned int _1;
  __int128 unsigned _4;
  __int128 unsigned _6;
  long unsigned int _7;
  __int128 unsigned _9;
  __int128 unsigned _12;
  __int128 unsigned _13;
  long unsigned int _15;
  __int128 unsigned _17;
  __int128 unsigned _20;
  __int128 unsigned _21;
  long unsigned int _23;
  __int128 unsigned _25;
  __int128 unsigned _26;
  __int128 unsigned _30;
  __int128 unsigned _31;
  __int128 unsigned _33;
  __int128 unsigned _34;
  long unsigned int _37;
  __int128 unsigned _39;
  __int128 unsigned _42;
  __int128 unsigned _43;
  __int128 unsigned _45;
  __int128 unsigned _46;
  long unsigned int _49;
  __int128 unsigned _51;
  __int128 unsigned _52;
  __int128 unsigned _56;
  __int128 unsigned _57;
  __int128 unsigned _59;
  __int128 unsigned _60;
  __int128 unsigned _63;
  __int128 unsigned _64;
  long unsigned int _67;
  __int128 unsigned _69;
  __int128 unsigned _72;
  __int128 unsigned _73;
  __int128 unsigned _75;
  __int128 unsigned _76;
  __int128 unsigned _79;
  __int128 unsigned _80;
  long unsigned int _83;
  __int128 unsigned _85;
  __int128 unsigned _86;
  __int128 unsigned _88;
  __int128 unsigned _90;
  __int128 unsigned _91;
  __int128 unsigned _93;
  __int128 unsigned _94;
  __int128 unsigned _97;
  __int128 unsigned _98;
  __int128 unsigned _101;
  __int128 unsigned _102;
  __int128 unsigned _104;
  long unsigned int _105;
  __int128 unsigned _107;
  __int128 unsigned _108;
  __int128 unsigned _110;
  __int128 unsigned _112;
  __int128 unsigned _113;
  __int128 unsigned _115;
  __int128 unsigned _117;
  __int128 unsigned _121;
  __int128 unsigned _123;
  __int128 unsigned _127;
  __int128 unsigned _129;
  __int128 unsigned _132;
  __int128 unsigned _133;
  __int128 unsigned _134;
  __int128 unsigned _136;
  __int128 unsigned _137;
  __int128 unsigned _140;
  __int128 unsigned _141;
  __int128 unsigned _144;
  __int128 unsigned _146;
  __int128 unsigned _147;
  __int128 unsigned _148;
  __int128 unsigned _150;
  __int128 unsigned _151;
  __int128 unsigned _154;
  __int128 unsigned _155;
  __int128 unsigned _158;
  __int128 unsigned _159;
  __int128 unsigned _160;
  __int128 unsigned _162;
  __int128 unsigned _163;
  __int128 unsigned _166;
  __int128 unsigned _168;
  __int128 unsigned _169;
  __int128 unsigned _170;
  __int128 unsigned _172;
  __int128 unsigned _173;
  __int128 unsigned _176;
  __int128 unsigned _177;
  __int128 unsigned _178;
  __int128 unsigned _180;
  __int128 unsigned _182;
  __int128 unsigned _183;
  __int128 unsigned _184;
  __int128 unsigned _186;
  __int128 unsigned _187;
  __int128 unsigned _188;
  long unsigned int _202;
  long unsigned int _203;
  long unsigned int _204;
  long unsigned int _205;
  long unsigned int _206;
  long unsigned int _207;
  long unsigned int _208;
  long unsigned int _209;
  long unsigned int _210;
  long unsigned int _211;
  long unsigned int _212;
  long unsigned int _213;
  long unsigned int _214;
  long unsigned int _215;
  long unsigned int _216;
  long unsigned int _217;
  long unsigned int _218;
  __int128 unsigned _222;
  __int128 unsigned _223;
  __int128 unsigned _224;
  __int128 unsigned _225;
  __int128 unsigned _226;
  __int128 unsigned _227;
  __int128 unsigned _231;
  __int128 unsigned _232;
  __int128 unsigned _233;
  __int128 unsigned _234;
  __int128 unsigned _235;
  __int128 unsigned _236;
  __int128 unsigned _237;
  __int128 unsigned _242;
  __int128 unsigned _243;
  __int128 unsigned _244;
  __int128 unsigned _245;
  __int128 unsigned _246;
  __int128 unsigned _247;
  __int128 unsigned _248;
  __int128 unsigned _253;
  __int128 unsigned _254;
  __int128 unsigned _255;
  __int128 unsigned _256;
  __int128 unsigned _257;
  __int128 unsigned _258;
  __int128 unsigned _259;
  __int128 unsigned _265;
  __int128 unsigned _266;
  __int128 unsigned _267;
  __int128 unsigned _268;
  __int128 unsigned _269;
  __int128 unsigned _270;
  __int128 unsigned _271;
  __int128 unsigned _277;
  __int128 unsigned _278;
  __int128 unsigned _279;
  __int128 unsigned _280;
  __int128 unsigned _281;
  __int128 unsigned _282;
  __int128 unsigned _283;
  __int128 unsigned _290;
  __int128 unsigned _291;
  __int128 unsigned _292;
  __int128 unsigned _293;
  __int128 unsigned _294;
  __int128 unsigned _295;
  __int128 unsigned _296;
  __int128 unsigned _300;
  __int128 unsigned _301;
  __int128 unsigned _302;
  __int128 unsigned _303;
  __int128 unsigned _304;
  __int128 unsigned _305;
  __int128 unsigned _309;
  __int128 unsigned _310;
  __int128 unsigned _311;
  __int128 unsigned _312;
  __int128 unsigned _313;
  __int128 unsigned _314;

  <bb 2> [local count: 1073741825]:
  _202 = *in2_190(D);
  _203 = MEM[(const limb *)in2_190(D) + 8B];
  _204 = _203 * 2;
  _205 = MEM[(const limb *)in2_190(D) + 16B];
  _206 = _205 * 2;
  _207 = MEM[(const limb *)in2_190(D) + 24B];
  _208 = _207 * 2;
  _209 = MEM[(const limb *)in2_190(D) + 32B];
  _210 = _209 * 2;
  _211 = MEM[(const limb *)in2_190(D) + 40B];
  _212 = _211 * 2;
  _213 = MEM[(const limb *)in2_190(D) + 48B];
  _214 = _213 * 2;
  _215 = MEM[(const limb *)in2_190(D) + 56B];
  _216 = _215 * 2;
  _217 = MEM[(const limb *)in2_190(D) + 64B];
  _218 = _217 * 2;
  _1 = *in1_191(D);
  _4 = _1 w* _202;
  _6 = _1 w* _203;
  _7 = MEM[(const limb *)in1_191(D) + 8B];
  _9 = _202 w* _7;
  _290 = _6 + _9;
  _12 = _1 w* _205;
  _13 = _203 w* _7;
  _277 = _12 + _13;
  _15 = MEM[(const limb *)in1_191(D) + 16B];
  _17 = _202 w* _15;
  _278 = _17 + _277;
  _20 = _1 w* _207;
  _21 = _7 w* _205;
  _265 = _20 + _21;
  _23 = MEM[(const limb *)in1_191(D) + 24B];
  _25 = _202 w* _23;
  _26 = _203 w* _15;
  _266 = _25 + _265;
  _267 = _26 + _266;
  _30 = _1 w* _209;
  _31 = _7 w* _207;
  _253 = _30 + _31;
  _33 = _203 w* _23;
  _34 = _205 w* _15;
  _254 = _33 + _253;
  _255 = _34 + _254;
  _37 = MEM[(const limb *)in1_191(D) + 32B];
  _39 = _202 w* _37;
  _256 = _39 + _255;
  _42 = _1 w* _211;
  _43 = _7 w* _209;
  _242 = _42 + _43;
  _45 = _205 w* _23;
  _46 = _15 w* _207;
  _243 = _45 + _242;
  _244 = _46 + _243;
  _49 = MEM[(const limb *)in1_191(D) + 40B];
  _51 = _202 w* _49;
  _52 = _203 w* _37;
  _245 = _51 + _244;
  _246 = _52 + _245;
  _56 = _1 w* _213;
  _57 = _7 w* _211;
  _231 = _56 + _57;
  _59 = _207 w* _23;
  _60 = _15 w* _209;
  _232 = _59 + _231;
  _233 = _60 + _232;
  _63 = _203 w* _49;
  _64 = _205 w* _37;
  _234 = _63 + _233;
  _235 = _64 + _234;
  _67 = MEM[(const limb *)in1_191(D) + 48B];
  _69 = _202 w* _67;
  _236 = _69 + _235;
  _72 = _1 w* _215;
  _73 = _7 w* _213;
  _222 = _72 + _73;
  _75 = _23 w* _209;
  _76 = _15 w* _211;
  _223 = _75 + _222;
  _224 = _76 + _223;
  _79 = _205 w* _49;
  _80 = _207 w* _37;
  _225 = _79 + _224;
  _226 = _80 + _225;
  _83 = MEM[(const limb *)in1_191(D) + 56B];
  _85 = _202 w* _83;
  _86 = _203 w* _67;
  _227 = _85 + _226;
  _88 = _86 + _227;
  _90 = _1 w* _217;
  _91 = _7 w* _215;
  _309 = _90 + _91;
  _93 = _23 w* _211;
  _94 = _15 w* _213;
  _310 = _93 + _309;
  _311 = _94 + _310;
  _97 = _207 w* _49;
  _98 = _209 w* _37;
  _312 = _97 + _311;
  _313 = _98 + _312;
  _101 = _203 w* _83;
  _102 = _205 w* _67;
  _314 = _101 + _313;
  _104 = _102 + _314;
  _105 = MEM[(const limb *)in1_191(D) + 64B];
  _107 = _202 w* _105;
  _108 = _104 + _107;
  MEM[(uint128_t *)out_192(D) + 128B] = _108;
  _110 = _7 w* _218;
  _112 = _15 w* _216;
  _113 = _110 + _112;
  _115 = _37 w* _212;
  _117 = _23 w* _214;
  _300 = _4 + _113;
  _301 = _115 + _300;
  _121 = _67 w* _208;
  _123 = _49 w* _210;
  _302 = _117 + _301;
  _303 = _121 + _302;
  _127 = _105 w* _204;
  _129 = _83 w* _206;
  _304 = _123 + _303;
  _305 = _127 + _304;
  _132 = _129 + _305;
  *out_192(D) = _132;
  _133 = _15 w* _218;
  _134 = _23 w* _216;
  _136 = _49 w* _212;
  _137 = _37 w* _214;
  _140 = _83 w* _208;
  _141 = _67 w* _210;
  _144 = _105 w* _206;
  _291 = _133 + _290;
  _292 = _134 + _291;
  _293 = _136 + _292;
  _294 = _137 + _293;
  _295 = _140 + _294;
  _296 = _141 + _295;
  _146 = _144 + _296;
  MEM[(uint128_t *)out_192(D) + 16B] = _146;
  _147 = _23 w* _218;
  _148 = _37 w* _216;
  _150 = _67 w* _212;
  _151 = _49 w* _214;
  _154 = _105 w* _208;
  _155 = _83 w* _210;
  _279 = _147 + _278;
  _280 = _148 + _279;
  _281 = _150 + _280;
  _282 = _151 + _281;
  _283 = _154 + _282;
  _158 = _155 + _283;
  MEM[(uint128_t *)out_192(D) + 32B] = _158;
  _159 = _37 w* _218;
  _160 = _49 w* _216;
  _162 = _83 w* _212;
  _163 = _67 w* _214;
  _166 = _105 w* _210;
  _268 = _159 + _267;
  _269 = _160 + _268;
  _270 = _162 + _269;
  _271 = _163 + _270;
  _168 = _166 + _271;
  MEM[(uint128_t *)out_192(D) + 48B] = _168;
  _169 = _49 w* _218;
  _170 = _67 w* _216;
  _172 = _105 w* _212;
  _173 = _83 w* _214;
  _257 = _169 + _256;
  _258 = _170 + _257;
  _259 = _172 + _258;
  _176 = _173 + _259;
  MEM[(uint128_t *)out_192(D) + 64B] = _176;
  _177 = _67 w* _218;
  _178 = _83 w* _216;
  _180 = _105 w* _214;
  _247 = _177 + _246;
  _248 = _178 + _247;
  _182 = _180 + _248;
  MEM[(uint128_t *)out_192(D) + 80B] = _182;
  _183 = _83 w* _218;
  _184 = _105 w* _216;
  _237 = _183 + _236;
  _186 = _184 + _237;
  MEM[(uint128_t *)out_192(D) + 96B] = _186;
  _187 = _105 w* _218;
  _188 = _88 + _187;
  MEM[(uint128_t *)out_192(D) + 112B] = _188;
  return;

}



;; Function felem_mul_reduce (felem_mul_reduce, funcdef_no=420, decl_uid=10510, cgraph_uid=420, symbol_order=424)

__attribute__((used))
felem_mul_reduce (limb * out, const limb * in1, const limb * in2)
{
  u64 overflow1;
  u64 overflow2;
  uint128_t tmp[9];
  long unsigned int _6;
  __int128 unsigned _8;
  long unsigned int _9;
  long unsigned int _10;
  __int128 unsigned _11;
  long unsigned int _12;
  long unsigned int _13;
  __int128 unsigned _14;
  long unsigned int _15;
  long unsigned int _16;
  __int128 unsigned _17;
  long unsigned int _18;
  long unsigned int _19;
  __int128 unsigned _20;
  long unsigned int _21;
  long unsigned int _22;
  __int128 unsigned _23;
  long unsigned int _24;
  long unsigned int _25;
  __int128 unsigned _26;
  long unsigned int _27;
  long unsigned int _28;
  __int128 unsigned _29;
  long unsigned int _30;
  long unsigned int _31;
  __int128 unsigned _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _36;
  __int128 unsigned _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _44;
  long unsigned int _45;
  __int128 unsigned _46;
  long unsigned int _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _53;
  long unsigned int _54;
  __int128 unsigned _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _62;
  long unsigned int _63;
  __int128 unsigned _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _69;
  long unsigned int _71;
  long unsigned int _72;
  __int128 unsigned _73;
  long unsigned int _74;
  long unsigned int _75;
  long unsigned int _76;
  long unsigned int _77;
  long unsigned int _78;
  long unsigned int _80;
  long unsigned int _81;
  __int128 unsigned _82;
  long unsigned int _83;
  long unsigned int _84;
  long unsigned int _85;
  long unsigned int _86;
  long unsigned int _87;
  long unsigned int _89;
  long unsigned int _90;
  __int128 unsigned _91;
  long unsigned int _92;
  long unsigned int _93;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int _96;
  long unsigned int _98;
  long unsigned int _99;
  __int128 unsigned _100;
  long unsigned int _101;
  long unsigned int _102;
  long unsigned int _103;
  long unsigned int _104;
  long unsigned int _106;
  __int128 unsigned _108;
  long unsigned int _109;
  long unsigned int _110;
  long unsigned int _111;
  long unsigned int _116;
  long unsigned int _117;
  long unsigned int _118;
  long unsigned int _119;
  long unsigned int _120;
  long unsigned int _130;
  long unsigned int _131;
  long unsigned int _132;
  long unsigned int _133;
  long unsigned int _134;
  long unsigned int _135;

  <bb 2> [local count: 1073741825]:
  felem_mul (&tmp, in1_2(D), in2_3(D));
  _8 = MEM[(const uint128_t *)&tmp];
  _9 = (long unsigned int) _8;
  _10 = _9 & 288230376151711743;
  _11 = MEM[(const uint128_t *)&tmp + 16B];
  _12 = (long unsigned int) _11;
  _13 = _12 & 288230376151711743;
  _14 = MEM[(const uint128_t *)&tmp + 32B];
  _15 = (long unsigned int) _14;
  _16 = _15 & 288230376151711743;
  _17 = MEM[(const uint128_t *)&tmp + 48B];
  _18 = (long unsigned int) _17;
  _19 = _18 & 288230376151711743;
  _20 = MEM[(const uint128_t *)&tmp + 64B];
  _21 = (long unsigned int) _20;
  _22 = _21 & 288230376151711743;
  _23 = MEM[(const uint128_t *)&tmp + 80B];
  _24 = (long unsigned int) _23;
  _25 = _24 & 288230376151711743;
  _26 = MEM[(const uint128_t *)&tmp + 96B];
  _27 = (long unsigned int) _26;
  _28 = _27 & 288230376151711743;
  _29 = MEM[(const uint128_t *)&tmp + 112B];
  _30 = (long unsigned int) _29;
  _31 = _30 & 288230376151711743;
  _32 = MEM[(const uint128_t *)&tmp + 128B];
  _33 = (long unsigned int) _32;
  _34 = _33 & 288230376151711743;
  _35 = _9 >> 58;
  _36 = _13 + _35;
  _37 = _8 >> 64;
  _38 = (long unsigned int) _37;
  _39 = _38 << 6;
  _40 = _39 & 288230376151711680;
  _41 = _36 + _40;
  _42 = _38 >> 52;
  _44 = _12 >> 58;
  _135 = _16 + _44;
  _45 = _42 + _135;
  _46 = _11 >> 64;
  _47 = (long unsigned int) _46;
  _48 = _47 << 6;
  _49 = _48 & 288230376151711680;
  _50 = _45 + _49;
  MEM[(limb *)out_5(D) + 16B] = _50;
  _51 = _47 >> 52;
  _53 = _15 >> 58;
  _134 = _19 + _53;
  _54 = _51 + _134;
  _55 = _14 >> 64;
  _56 = (long unsigned int) _55;
  _57 = _56 << 6;
  _58 = _57 & 288230376151711680;
  _59 = _54 + _58;
  MEM[(limb *)out_5(D) + 24B] = _59;
  _60 = _56 >> 52;
  _62 = _18 >> 58;
  _133 = _22 + _62;
  _63 = _60 + _133;
  _64 = _17 >> 64;
  _65 = (long unsigned int) _64;
  _66 = _65 << 6;
  _67 = _66 & 288230376151711680;
  _68 = _63 + _67;
  MEM[(limb *)out_5(D) + 32B] = _68;
  _69 = _65 >> 52;
  _71 = _21 >> 58;
  _132 = _25 + _71;
  _72 = _69 + _132;
  _73 = _20 >> 64;
  _74 = (long unsigned int) _73;
  _75 = _74 << 6;
  _76 = _75 & 288230376151711680;
  _77 = _72 + _76;
  MEM[(limb *)out_5(D) + 40B] = _77;
  _78 = _74 >> 52;
  _80 = _24 >> 58;
  _131 = _28 + _80;
  _81 = _78 + _131;
  _82 = _23 >> 64;
  _83 = (long unsigned int) _82;
  _84 = _83 << 6;
  _85 = _84 & 288230376151711680;
  _86 = _81 + _85;
  MEM[(limb *)out_5(D) + 48B] = _86;
  _87 = _83 >> 52;
  _89 = _27 >> 58;
  _130 = _31 + _89;
  _90 = _87 + _130;
  _91 = _26 >> 64;
  _92 = (long unsigned int) _91;
  _93 = _92 << 6;
  _94 = _93 & 288230376151711680;
  _95 = _90 + _94;
  MEM[(limb *)out_5(D) + 56B] = _95;
  _96 = _92 >> 52;
  _98 = _30 >> 58;
  _6 = _34 + _98;
  _99 = _6 + _96;
  _100 = _29 >> 64;
  _101 = (long unsigned int) _100;
  _102 = _101 << 6;
  _103 = _102 & 288230376151711680;
  _104 = _99 + _103;
  MEM[(limb *)out_5(D) + 64B] = _104;
  overflow1_105 = _101 >> 52;
  _106 = _33 >> 58;
  overflow1_107 = overflow1_105 + _106;
  _108 = _32 >> 64;
  _109 = (long unsigned int) _108;
  _110 = _109 << 6;
  _111 = _110 & 288230376151711680;
  overflow1_112 = overflow1_107 + _111;
  overflow2_113 = _109 >> 52;
  overflow1_114 = overflow1_112 << 1;
  overflow2_115 = overflow2_113 << 1;
  _116 = _10 + overflow1_114;
  _117 = _41 + overflow2_115;
  _118 = _116 >> 58;
  _119 = _117 + _118;
  MEM[(limb *)out_5(D) + 8B] = _119;
  _120 = _116 & 288230376151711743;
  *out_5(D) = _120;
  tmp ={v} {CLOBBER};
  return;

}



;; Function felem_reduce (felem_reduce, funcdef_no=418, decl_uid=10498, cgraph_uid=418, symbol_order=422)

__attribute__((used))
felem_reduce (limb * out, const uint128_t * in)
{
  u64 overflow2;
  u64 overflow1;
  __int128 unsigned _1;
  long unsigned int _2;
  long unsigned int _3;
  __int128 unsigned _4;
  long unsigned int _5;
  long unsigned int _6;
  __int128 unsigned _7;
  long unsigned int _8;
  long unsigned int _9;
  __int128 unsigned _10;
  long unsigned int _11;
  long unsigned int _12;
  __int128 unsigned _13;
  long unsigned int _14;
  long unsigned int _15;
  __int128 unsigned _16;
  long unsigned int _17;
  long unsigned int _18;
  __int128 unsigned _19;
  long unsigned int _20;
  long unsigned int _21;
  __int128 unsigned _22;
  long unsigned int _23;
  long unsigned int _24;
  __int128 unsigned _25;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  __int128 unsigned _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int _37;
  long unsigned int _38;
  __int128 unsigned _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _46;
  long unsigned int _47;
  __int128 unsigned _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _55;
  long unsigned int _56;
  __int128 unsigned _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _64;
  long unsigned int _65;
  __int128 unsigned _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int _73;
  long unsigned int _74;
  __int128 unsigned _75;
  long unsigned int _76;
  long unsigned int _77;
  long unsigned int _78;
  long unsigned int _79;
  long unsigned int _80;
  long unsigned int _82;
  long unsigned int _83;
  __int128 unsigned _84;
  long unsigned int _85;
  long unsigned int _86;
  long unsigned int _87;
  long unsigned int _88;
  long unsigned int _89;
  long unsigned int _91;
  long unsigned int _92;
  __int128 unsigned _93;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int _96;
  long unsigned int _97;
  long unsigned int _98;
  __int128 unsigned _99;
  long unsigned int _100;
  long unsigned int _101;
  long unsigned int _102;
  long unsigned int _103;
  long unsigned int _104;
  long unsigned int _105;
  long unsigned int _106;
  long unsigned int _107;
  long unsigned int _126;
  long unsigned int _127;
  long unsigned int _128;
  long unsigned int _129;
  long unsigned int _130;
  long unsigned int _131;
  long unsigned int _132;

  <bb 2> [local count: 1073741825]:
  _1 = *in_109(D);
  _2 = (long unsigned int) _1;
  _3 = _2 & 288230376151711743;
  _4 = MEM[(const uint128_t *)in_109(D) + 16B];
  _5 = (long unsigned int) _4;
  _6 = _5 & 288230376151711743;
  _7 = MEM[(const uint128_t *)in_109(D) + 32B];
  _8 = (long unsigned int) _7;
  _9 = _8 & 288230376151711743;
  _10 = MEM[(const uint128_t *)in_109(D) + 48B];
  _11 = (long unsigned int) _10;
  _12 = _11 & 288230376151711743;
  _13 = MEM[(const uint128_t *)in_109(D) + 64B];
  _14 = (long unsigned int) _13;
  _15 = _14 & 288230376151711743;
  _16 = MEM[(const uint128_t *)in_109(D) + 80B];
  _17 = (long unsigned int) _16;
  _18 = _17 & 288230376151711743;
  _19 = MEM[(const uint128_t *)in_109(D) + 96B];
  _20 = (long unsigned int) _19;
  _21 = _20 & 288230376151711743;
  _22 = MEM[(const uint128_t *)in_109(D) + 112B];
  _23 = (long unsigned int) _22;
  _24 = _23 & 288230376151711743;
  _25 = MEM[(const uint128_t *)in_109(D) + 128B];
  _26 = (long unsigned int) _25;
  _27 = _26 & 288230376151711743;
  _28 = _2 >> 58;
  _29 = _6 + _28;
  _30 = _1 >> 64;
  _31 = (long unsigned int) _30;
  _32 = _31 << 6;
  _33 = _32 & 288230376151711680;
  _34 = _29 + _33;
  _35 = _31 >> 52;
  _37 = _5 >> 58;
  _132 = _9 + _37;
  _38 = _35 + _132;
  _39 = _4 >> 64;
  _40 = (long unsigned int) _39;
  _41 = _40 << 6;
  _42 = _41 & 288230376151711680;
  _43 = _38 + _42;
  MEM[(limb *)out_110(D) + 16B] = _43;
  _44 = _40 >> 52;
  _46 = _8 >> 58;
  _131 = _12 + _46;
  _47 = _44 + _131;
  _48 = _7 >> 64;
  _49 = (long unsigned int) _48;
  _50 = _49 << 6;
  _51 = _50 & 288230376151711680;
  _52 = _47 + _51;
  MEM[(limb *)out_110(D) + 24B] = _52;
  _53 = _49 >> 52;
  _55 = _11 >> 58;
  _130 = _15 + _55;
  _56 = _53 + _130;
  _57 = _10 >> 64;
  _58 = (long unsigned int) _57;
  _59 = _58 << 6;
  _60 = _59 & 288230376151711680;
  _61 = _56 + _60;
  MEM[(limb *)out_110(D) + 32B] = _61;
  _62 = _58 >> 52;
  _64 = _14 >> 58;
  _129 = _18 + _64;
  _65 = _62 + _129;
  _66 = _13 >> 64;
  _67 = (long unsigned int) _66;
  _68 = _67 << 6;
  _69 = _68 & 288230376151711680;
  _70 = _65 + _69;
  MEM[(limb *)out_110(D) + 40B] = _70;
  _71 = _67 >> 52;
  _73 = _17 >> 58;
  _128 = _21 + _73;
  _74 = _71 + _128;
  _75 = _16 >> 64;
  _76 = (long unsigned int) _75;
  _77 = _76 << 6;
  _78 = _77 & 288230376151711680;
  _79 = _74 + _78;
  MEM[(limb *)out_110(D) + 48B] = _79;
  _80 = _76 >> 52;
  _82 = _20 >> 58;
  _126 = _24 + _82;
  _83 = _80 + _126;
  _84 = _19 >> 64;
  _85 = (long unsigned int) _84;
  _86 = _85 << 6;
  _87 = _86 & 288230376151711680;
  _88 = _83 + _87;
  MEM[(limb *)out_110(D) + 56B] = _88;
  _89 = _85 >> 52;
  _91 = _23 >> 58;
  _127 = _27 + _91;
  _92 = _89 + _127;
  _93 = _22 >> 64;
  _94 = (long unsigned int) _93;
  _95 = _94 << 6;
  _96 = _95 & 288230376151711680;
  _97 = _92 + _96;
  MEM[(limb *)out_110(D) + 64B] = _97;
  overflow1_118 = _94 >> 52;
  _98 = _26 >> 58;
  overflow1_119 = _98 + overflow1_118;
  _99 = _25 >> 64;
  _100 = (long unsigned int) _99;
  _101 = _100 << 6;
  _102 = _101 & 288230376151711680;
  overflow1_120 = _102 + overflow1_119;
  overflow2_121 = _100 >> 52;
  overflow1_122 = overflow1_120 << 1;
  overflow2_123 = overflow2_121 << 1;
  _103 = _3 + overflow1_122;
  _104 = _34 + overflow2_123;
  _105 = _103 >> 58;
  _106 = _104 + _105;
  MEM[(limb *)out_110(D) + 8B] = _106;
  _107 = _103 & 288230376151711743;
  *out_110(D) = _107;
  return;

}



;; Function felem_inv (felem_inv, funcdef_no=421, decl_uid=10515, cgraph_uid=421, symbol_order=425)

felem_inv (limb * out, const limb * in)
{
  const vector(2) long unsigned int vect__162.128;
  const vector(2) long unsigned int vect__162.127;
  const vector(2) long unsigned int vect__162.126;
  const vector(2) long unsigned int vect__162.125;
  const vector(2) long unsigned int vect__153.120;
  const vector(2) long unsigned int vect__153.119;
  const vector(2) long unsigned int vect__153.118;
  const vector(2) long unsigned int vect__153.117;
  const vector(2) long unsigned int vect__144.112;
  const vector(2) long unsigned int vect__144.111;
  const vector(2) long unsigned int vect__144.110;
  const vector(2) long unsigned int vect__144.109;
  const vector(2) long unsigned int vect__135.104;
  const vector(2) long unsigned int vect__135.103;
  const vector(2) long unsigned int vect__135.102;
  const vector(2) long unsigned int vect__135.101;
  const vector(2) long unsigned int vect__126.96;
  const vector(2) long unsigned int vect__126.95;
  const vector(2) long unsigned int vect__126.94;
  const vector(2) long unsigned int vect__126.93;
  const vector(2) long unsigned int vect__90.88;
  const vector(2) long unsigned int vect__90.87;
  const vector(2) long unsigned int vect__90.86;
  const vector(2) long unsigned int vect__90.85;
  const vector(2) long unsigned int vect__99.80;
  const vector(2) long unsigned int vect__99.79;
  const vector(2) long unsigned int vect__99.78;
  const vector(2) long unsigned int vect__99.77;
  const vector(2) long unsigned int vect__108.72;
  const vector(2) long unsigned int vect__108.71;
  const vector(2) long unsigned int vect__108.70;
  const vector(2) long unsigned int vect__108.69;
  const vector(2) long unsigned int vect__117.64;
  const vector(2) long unsigned int vect__117.63;
  const vector(2) long unsigned int vect__117.62;
  const vector(2) long unsigned int vect__117.61;
  uint128_t tmp[9];
  limb ftmp4[9];
  limb ftmp3[9];
  limb ftmp2[9];
  limb ftmp[9];
  unsigned int ivtmp_1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_7;
  long unsigned int _98;
  long unsigned int _107;
  long unsigned int _116;
  long unsigned int _125;
  long unsigned int _134;
  long unsigned int _143;
  long unsigned int _152;
  long unsigned int _161;
  long unsigned int _170;
  unsigned int ivtmp_259;
  unsigned int ivtmp_261;
  unsigned int ivtmp_263;
  unsigned int ivtmp_265;
  unsigned int ivtmp_267;
  unsigned int ivtmp_269;
  unsigned int ivtmp_271;

  <bb 2> [local count: 10737418]:
  felem_square (&tmp, in_16(D));
  felem_reduce (&ftmp, &tmp);
  felem_mul (&tmp, in_16(D), &ftmp);
  felem_reduce (&ftmp, &tmp);
  vect__117.61_279 = MEM[(const limb *)&ftmp];
  vect__117.62_277 = MEM[(const limb *)&ftmp + 16B];
  vect__117.63_275 = MEM[(const limb *)&ftmp + 32B];
  vect__117.64_273 = MEM[(const limb *)&ftmp + 48B];
  MEM[(limb *)&ftmp2] = vect__117.61_279;
  MEM[(limb *)&ftmp2 + 16B] = vect__117.62_277;
  MEM[(limb *)&ftmp2 + 32B] = vect__117.63_275;
  MEM[(limb *)&ftmp2 + 48B] = vect__117.64_273;
  _125 = MEM[(const limb *)&ftmp + 64B];
  MEM[(limb *)&ftmp2 + 64B] = _125;
  felem_square (&tmp, &ftmp);
  felem_reduce (&ftmp, &tmp);
  felem_mul (&tmp, in_16(D), &ftmp);
  felem_reduce (&ftmp, &tmp);
  felem_square (&tmp, &ftmp);
  felem_reduce (&ftmp, &tmp);
  felem_square (&tmp, &ftmp2);
  felem_reduce (&ftmp3, &tmp);
  felem_square (&tmp, &ftmp3);
  felem_reduce (&ftmp3, &tmp);
  felem_mul (&tmp, &ftmp3, &ftmp2);
  felem_reduce (&ftmp3, &tmp);
  vect__108.69_270 = MEM[(const limb *)&ftmp3];
  vect__108.70_266 = MEM[(const limb *)&ftmp3 + 16B];
  vect__108.71_262 = MEM[(const limb *)&ftmp3 + 32B];
  vect__108.72_14 = MEM[(const limb *)&ftmp3 + 48B];
  MEM[(limb *)&ftmp2] = vect__108.69_270;
  MEM[(limb *)&ftmp2 + 16B] = vect__108.70_266;
  MEM[(limb *)&ftmp2 + 32B] = vect__108.71_262;
  MEM[(limb *)&ftmp2 + 48B] = vect__108.72_14;
  _116 = MEM[(const limb *)&ftmp3 + 64B];
  MEM[(limb *)&ftmp2 + 64B] = _116;
  felem_square (&tmp, &ftmp3);
  felem_reduce (&ftmp3, &tmp);
  felem_square (&tmp, &ftmp3);
  felem_reduce (&ftmp3, &tmp);
  felem_square (&tmp, &ftmp3);
  felem_reduce (&ftmp3, &tmp);
  felem_square (&tmp, &ftmp3);
  felem_reduce (&ftmp3, &tmp);
  vect__99.77_256 = MEM[(const limb *)&ftmp3];
  vect__99.78_254 = MEM[(const limb *)&ftmp3 + 16B];
  vect__99.79_252 = MEM[(const limb *)&ftmp3 + 32B];
  vect__99.80_288 = MEM[(const limb *)&ftmp3 + 48B];
  MEM[(limb *)&ftmp4] = vect__99.77_256;
  MEM[(limb *)&ftmp4 + 16B] = vect__99.78_254;
  MEM[(limb *)&ftmp4 + 32B] = vect__99.79_252;
  MEM[(limb *)&ftmp4 + 48B] = vect__99.80_288;
  _107 = MEM[(const limb *)&ftmp3 + 64B];
  MEM[(limb *)&ftmp4 + 64B] = _107;
  felem_mul (&tmp, &ftmp3, &ftmp);
  felem_reduce (&ftmp4, &tmp);
  felem_square (&tmp, &ftmp4);
  felem_reduce (&ftmp4, &tmp);
  felem_mul (&tmp, &ftmp3, &ftmp2);
  felem_reduce (&ftmp3, &tmp);
  vect__90.85_297 = MEM[(const limb *)&ftmp3];
  vect__90.86_299 = MEM[(const limb *)&ftmp3 + 16B];
  vect__90.87_301 = MEM[(const limb *)&ftmp3 + 32B];
  vect__90.88_303 = MEM[(const limb *)&ftmp3 + 48B];
  MEM[(limb *)&ftmp2] = vect__90.85_297;
  MEM[(limb *)&ftmp2 + 16B] = vect__90.86_299;
  MEM[(limb *)&ftmp2 + 32B] = vect__90.87_301;
  MEM[(limb *)&ftmp2 + 48B] = vect__90.88_303;
  _98 = MEM[(const limb *)&ftmp3 + 64B];
  MEM[(limb *)&ftmp2 + 64B] = _98;

  <bb 3> [local count: 85909011]:
  # ivtmp_1 = PHI <8(2), ivtmp_271(3)>
  felem_square (&tmp, &ftmp3);
  felem_reduce (&ftmp3, &tmp);
  ivtmp_271 = ivtmp_1 + 4294967295;
  if (ivtmp_271 != 0)
    goto <bb 3>; [87.50%]
  else
    goto <bb 4>; [12.50%]

  <bb 4> [local count: 10737418]:
  felem_mul (&tmp, &ftmp3, &ftmp2);
  felem_reduce (&ftmp3, &tmp);
  vect__126.93_312 = MEM[(const limb *)&ftmp3];
  vect__126.94_314 = MEM[(const limb *)&ftmp3 + 16B];
  vect__126.95_316 = MEM[(const limb *)&ftmp3 + 32B];
  vect__126.96_318 = MEM[(const limb *)&ftmp3 + 48B];
  MEM[(limb *)&ftmp2] = vect__126.93_312;
  MEM[(limb *)&ftmp2 + 16B] = vect__126.94_314;
  MEM[(limb *)&ftmp2 + 32B] = vect__126.95_316;
  MEM[(limb *)&ftmp2 + 48B] = vect__126.96_318;
  _134 = MEM[(const limb *)&ftmp3 + 64B];
  MEM[(limb *)&ftmp2 + 64B] = _134;

  <bb 5> [local count: 171871737]:
  # ivtmp_2 = PHI <16(4), ivtmp_269(5)>
  felem_square (&tmp, &ftmp3);
  felem_reduce (&ftmp3, &tmp);
  ivtmp_269 = ivtmp_2 + 4294967295;
  if (ivtmp_269 != 0)
    goto <bb 5>; [93.75%]
  else
    goto <bb 6>; [6.25%]

  <bb 6> [local count: 10737418]:
  felem_mul (&tmp, &ftmp3, &ftmp2);
  felem_reduce (&ftmp3, &tmp);
  vect__135.101_327 = MEM[(const limb *)&ftmp3];
  vect__135.102_329 = MEM[(const limb *)&ftmp3 + 16B];
  vect__135.103_331 = MEM[(const limb *)&ftmp3 + 32B];
  vect__135.104_333 = MEM[(const limb *)&ftmp3 + 48B];
  MEM[(limb *)&ftmp2] = vect__135.101_327;
  MEM[(limb *)&ftmp2 + 16B] = vect__135.102_329;
  MEM[(limb *)&ftmp2 + 32B] = vect__135.103_331;
  MEM[(limb *)&ftmp2 + 48B] = vect__135.104_333;
  _143 = MEM[(const limb *)&ftmp3 + 64B];
  MEM[(limb *)&ftmp2 + 64B] = _143;

  <bb 7> [local count: 343632825]:
  # ivtmp_3 = PHI <32(6), ivtmp_267(7)>
  felem_square (&tmp, &ftmp3);
  felem_reduce (&ftmp3, &tmp);
  ivtmp_267 = ivtmp_3 + 4294967295;
  if (ivtmp_267 != 0)
    goto <bb 7>; [96.88%]
  else
    goto <bb 8>; [3.12%]

  <bb 8> [local count: 10737418]:
  felem_mul (&tmp, &ftmp3, &ftmp2);
  felem_reduce (&ftmp3, &tmp);
  vect__144.109_342 = MEM[(const limb *)&ftmp3];
  vect__144.110_344 = MEM[(const limb *)&ftmp3 + 16B];
  vect__144.111_346 = MEM[(const limb *)&ftmp3 + 32B];
  vect__144.112_348 = MEM[(const limb *)&ftmp3 + 48B];
  MEM[(limb *)&ftmp2] = vect__144.109_342;
  MEM[(limb *)&ftmp2 + 16B] = vect__144.110_344;
  MEM[(limb *)&ftmp2 + 32B] = vect__144.111_346;
  MEM[(limb *)&ftmp2 + 48B] = vect__144.112_348;
  _152 = MEM[(const limb *)&ftmp3 + 64B];
  MEM[(limb *)&ftmp2 + 64B] = _152;

  <bb 9> [local count: 686497503]:
  # ivtmp_4 = PHI <64(8), ivtmp_265(9)>
  felem_square (&tmp, &ftmp3);
  felem_reduce (&ftmp3, &tmp);
  ivtmp_265 = ivtmp_4 + 4294967295;
  if (ivtmp_265 != 0)
    goto <bb 9>; [98.44%]
  else
    goto <bb 10>; [1.56%]

  <bb 10> [local count: 10737418]:
  felem_mul (&tmp, &ftmp3, &ftmp2);
  felem_reduce (&ftmp3, &tmp);
  vect__153.117_357 = MEM[(const limb *)&ftmp3];
  vect__153.118_359 = MEM[(const limb *)&ftmp3 + 16B];
  vect__153.119_361 = MEM[(const limb *)&ftmp3 + 32B];
  vect__153.120_363 = MEM[(const limb *)&ftmp3 + 48B];
  MEM[(limb *)&ftmp2] = vect__153.117_357;
  MEM[(limb *)&ftmp2 + 16B] = vect__153.118_359;
  MEM[(limb *)&ftmp2 + 32B] = vect__153.119_361;
  MEM[(limb *)&ftmp2 + 48B] = vect__153.120_363;
  _161 = MEM[(const limb *)&ftmp3 + 64B];
  MEM[(limb *)&ftmp2 + 64B] = _161;

  <bb 11> [local count: 1063004383]:
  # ivtmp_6 = PHI <128(10), ivtmp_5(11)>
  felem_square (&tmp, &ftmp3);
  felem_reduce (&ftmp3, &tmp);
  ivtmp_5 = ivtmp_6 + 4294967295;
  if (ivtmp_5 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 12>; [1.01%]

  <bb 12> [local count: 10737418]:
  felem_mul (&tmp, &ftmp3, &ftmp2);
  felem_reduce (&ftmp3, &tmp);
  vect__162.125_372 = MEM[(const limb *)&ftmp3];
  vect__162.126_374 = MEM[(const limb *)&ftmp3 + 16B];
  vect__162.127_376 = MEM[(const limb *)&ftmp3 + 32B];
  vect__162.128_378 = MEM[(const limb *)&ftmp3 + 48B];
  MEM[(limb *)&ftmp2] = vect__162.125_372;
  MEM[(limb *)&ftmp2 + 16B] = vect__162.126_374;
  MEM[(limb *)&ftmp2 + 32B] = vect__162.127_376;
  MEM[(limb *)&ftmp2 + 48B] = vect__162.128_378;
  _170 = MEM[(const limb *)&ftmp3 + 64B];
  MEM[(limb *)&ftmp2 + 64B] = _170;

  <bb 13> [local count: 1063004407]:
  # ivtmp_259 = PHI <256(12), ivtmp_7(13)>
  felem_square (&tmp, &ftmp3);
  felem_reduce (&ftmp3, &tmp);
  ivtmp_7 = ivtmp_259 + 4294967295;
  if (ivtmp_7 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 14>; [1.01%]

  <bb 14> [local count: 10737418]:
  felem_mul (&tmp, &ftmp3, &ftmp2);
  felem_reduce (&ftmp3, &tmp);

  <bb 15> [local count: 96636765]:
  # ivtmp_263 = PHI <9(14), ivtmp_261(15)>
  felem_square (&tmp, &ftmp3);
  felem_reduce (&ftmp3, &tmp);
  ivtmp_261 = ivtmp_263 + 4294967295;
  if (ivtmp_261 != 0)
    goto <bb 15>; [88.89%]
  else
    goto <bb 16>; [11.11%]

  <bb 16> [local count: 10737418]:
  felem_mul (&tmp, &ftmp3, &ftmp4);
  felem_reduce (&ftmp3, &tmp);
  felem_mul (&tmp, &ftmp3, in_16(D));
  felem_reduce (out_83(D), &tmp);
  ftmp ={v} {CLOBBER};
  ftmp2 ={v} {CLOBBER};
  ftmp3 ={v} {CLOBBER};
  ftmp4 ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  return;

}



;; Function ec_GFp_nistp521_point_get_affine_coordinates.part.2 (ec_GFp_nistp521_point_get_affine_coordinates.part.2, funcdef_no=444, decl_uid=11191, cgraph_uid=4, symbol_order=549)

ec_GFp_nistp521_point_get_affine_coordinates.part.2 (const struct EC_POINT * point, struct BIGNUM * x, struct BIGNUM * y)
{
  limb z1[9];
  limb z2[9];
  limb x_in[9];
  limb y_in[9];
  limb x_out[9];
  limb y_out[9];
  uint128_t tmp[9];
  struct BIGNUM * _2;
  int _3;
  struct BIGNUM * _4;
  int _5;
  struct BIGNUM * _6;
  int _7;
  struct BIGNUM * _9;
  struct BIGNUM * _11;
  int _12;

  <bb 2> [local count: 1073741825]:
  _2 = point_1(D)->X;
  _3 = BN_to_felem (&x_in, _2);
  if (_3 == 0)
    goto <bb 3>; [51.12%]
  else
    goto <bb 4>; [48.88%]

  <bb 3> [local count: 948343008]:
  goto <bb 13>; [100.00%]

  <bb 4> [local count: 524845004]:
  _4 = point_1(D)->Y;
  _5 = BN_to_felem (&y_in, _4);
  if (_5 == 0)
    goto <bb 3>; [51.12%]
  else
    goto <bb 5>; [48.88%]

  <bb 5> [local count: 256544238]:
  _6 = point_1(D)->Z;
  _7 = BN_to_felem (&z1, _6);
  if (_7 == 0)
    goto <bb 3>; [51.12%]
  else
    goto <bb 6>; [48.88%]

  <bb 6> [local count: 125398823]:
  felem_inv (&z2, &z1);
  felem_square (&tmp, &z2);
  felem_reduce (&z1, &tmp);
  felem_mul (&tmp, &x_in, &z1);
  felem_reduce (&x_in, &tmp);
  felem_contract (&x_out, &x_in);
  if (x_8(D) != 0B)
    goto <bb 7>; [70.00%]
  else
    goto <bb 9>; [30.00%]

  <bb 7> [local count: 87779176]:
  _9 = felem_to_BN (x_8(D), &x_out);
  if (_9 == 0B)
    goto <bb 8>; [9.81%]
  else
    goto <bb 9>; [90.19%]

  <bb 8> [local count: 8611137]:
  ERR_put_error (16, 235, 3, "ecp_nistp521.c", 1816);
  goto <bb 13>; [100.00%]

  <bb 9> [local count: 116787686]:
  felem_mul (&tmp, &z1, &z2);
  felem_reduce (&z1, &tmp);
  felem_mul (&tmp, &y_in, &z1);
  felem_reduce (&y_in, &tmp);
  felem_contract (&y_out, &y_in);
  if (y_10(D) != 0B)
    goto <bb 11>; [53.47%]
  else
    goto <bb 10>; [46.53%]

  <bb 10> [local count: 110661697]:
  goto <bb 13>; [100.00%]

  <bb 11> [local count: 62446376]:
  _11 = felem_to_BN (y_10(D), &y_out);
  if (_11 == 0B)
    goto <bb 12>; [9.81%]
  else
    goto <bb 10>; [90.19%]

  <bb 12> [local count: 6125989]:
  ERR_put_error (16, 235, 3, "ecp_nistp521.c", 1828);

  <bb 13> [local count: 1073741824]:
  # _12 = PHI <0(3), 0(8), 0(12), 1(10)>
  z1 ={v} {CLOBBER};
  z2 ={v} {CLOBBER};
  x_in ={v} {CLOBBER};
  y_in ={v} {CLOBBER};
  x_out ={v} {CLOBBER};
  y_out ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  return _12;

}



;; Function ec_GFp_nistp521_point_get_affine_coordinates (ec_GFp_nistp521_point_get_affine_coordinates, funcdef_no=437, decl_uid=10169, cgraph_uid=437, symbol_order=443)

ec_GFp_nistp521_point_get_affine_coordinates (const struct EC_GROUP * group, const struct EC_POINT * point, struct BIGNUM * x, struct BIGNUM * y, struct BN_CTX * ctx)
{
  int _1;
  int _2;
  int _10;

  <bb 2> [local count: 1073741825]:
  _1 = EC_POINT_is_at_infinity (group_5(D), point_6(D));
  if (_1 != 0)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072220]:
  ERR_put_error (16, 235, 106, "ecp_nistp521.c", 1801);
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 708669601]:
  _10 = ec_GFp_nistp521_point_get_affine_coordinates.part.2 (point_6(D), x_9(D), y_11(D)); [tail call]

  <bb 5> [local count: 1073741825]:
  # _2 = PHI <0(3), _10(4)>
  return _2;

}



;; Function point_double (point_double, funcdef_no=425, decl_uid=10568, cgraph_uid=425, symbol_order=430)

point_double (limb * x_out, limb * y_out, limb * z_out, const limb * x_in, const limb * y_in, const limb * z_in)
{
  const vector(2) long unsigned int vect__262.203;
  const vector(2) long unsigned int vect__261.202;
  const vector(2) long unsigned int vect__261.201;
  const vector(2) long unsigned int vect__261.200;
  const vector(2) long unsigned int vect__261.199;
  const vector(2) long unsigned int vect__43.196;
  const vector(2) long unsigned int vect__43.195;
  const vector(2) long unsigned int vect__43.194;
  const vector(2) long unsigned int vect__43.193;
  vector(2) long unsigned int vect__289.188;
  const vector(2) long unsigned int vect__288.187;
  const vector(2) long unsigned int vect__288.186;
  const vector(2) long unsigned int vect__288.185;
  const vector(2) long unsigned int vect__288.184;
  vector(2) long unsigned int vect__287.181;
  vector(2) long unsigned int vect__287.180;
  vector(2) long unsigned int vect__287.179;
  vector(2) long unsigned int vect__287.178;
  const vector(2) long unsigned int vect__61.171;
  const vector(2) long unsigned int vect__61.170;
  const vector(2) long unsigned int vect__61.169;
  const vector(2) long unsigned int vect__61.168;
  limb ftmp2[9];
  limb ftmp[9];
  limb alpha[9];
  limb beta[9];
  limb gamma[9];
  limb delta[9];
  uint128_t tmp2[9];
  uint128_t tmp[9];
  long unsigned int _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _69;
  __int128 unsigned _106;
  __int128 unsigned _109;
  __int128 unsigned _110;
  __int128 unsigned _113;
  __int128 unsigned _114;
  __int128 unsigned _117;
  __int128 unsigned _118;
  __int128 unsigned _121;
  __int128 unsigned _122;
  __int128 unsigned _125;
  __int128 unsigned _126;
  __int128 unsigned _129;
  __int128 unsigned _130;
  __int128 unsigned _133;
  __int128 unsigned _134;
  __int128 unsigned _137;
  __int128 unsigned _138;
  __int128 unsigned _141;
  __int128 unsigned _142;
  __int128 unsigned _144;
  __int128 unsigned _145;
  __int128 unsigned _146;
  __int128 unsigned _147;
  __int128 unsigned _148;
  __int128 unsigned _149;
  __int128 unsigned _150;
  __int128 unsigned _151;
  __int128 unsigned _152;
  __int128 unsigned _153;
  __int128 unsigned _154;
  __int128 unsigned _155;
  __int128 unsigned _156;
  __int128 unsigned _157;
  __int128 unsigned _158;
  __int128 unsigned _159;
  __int128 unsigned _160;
  long unsigned int _162;
  long unsigned int _164;
  long unsigned int _166;
  long unsigned int _168;
  long unsigned int _170;
  long unsigned int _172;
  long unsigned int _174;
  long unsigned int _176;
  long unsigned int _178;
  long unsigned int _180;
  long unsigned int _182;
  long unsigned int _184;
  long unsigned int _186;
  long unsigned int _188;
  long unsigned int _190;
  long unsigned int _192;
  long unsigned int _194;
  long unsigned int _196;
  long unsigned int _197;
  long unsigned int _198;
  long unsigned int _199;
  long unsigned int _200;
  long unsigned int _201;
  long unsigned int _202;
  long unsigned int _203;
  long unsigned int _204;
  long unsigned int _205;
  long unsigned int _206;
  long unsigned int _207;
  long unsigned int _208;
  long unsigned int _209;
  long unsigned int _210;
  long unsigned int _211;
  long unsigned int _212;
  long unsigned int _213;
  long unsigned int _214;
  __int128 unsigned _215;
  long unsigned int _216;
  long unsigned int _217;
  __int128 unsigned _218;
  __int128 unsigned _219;
  __int128 unsigned _220;
  long unsigned int _221;
  long unsigned int _222;
  __int128 unsigned _223;
  __int128 unsigned _224;
  __int128 unsigned _225;
  long unsigned int _226;
  long unsigned int _227;
  __int128 unsigned _228;
  __int128 unsigned _229;
  __int128 unsigned _230;
  long unsigned int _231;
  long unsigned int _232;
  __int128 unsigned _233;
  __int128 unsigned _234;
  __int128 unsigned _235;
  long unsigned int _236;
  long unsigned int _237;
  __int128 unsigned _238;
  __int128 unsigned _239;
  __int128 unsigned _240;
  long unsigned int _241;
  long unsigned int _242;
  __int128 unsigned _243;
  __int128 unsigned _244;
  __int128 unsigned _245;
  long unsigned int _246;
  long unsigned int _247;
  __int128 unsigned _248;
  __int128 unsigned _249;
  __int128 unsigned _250;
  long unsigned int _251;
  long unsigned int _252;
  __int128 unsigned _253;
  __int128 unsigned _254;
  __int128 unsigned _255;
  long unsigned int _256;
  long unsigned int _257;
  __int128 unsigned _258;
  __int128 unsigned _259;
  long unsigned int _285;
  long unsigned int _286;
  long unsigned int _311;
  long unsigned int _312;
  long unsigned int _313;
  __int128 unsigned _314;
  long unsigned int _316;
  __int128 unsigned _317;
  __int128 unsigned _318;
  __int128 unsigned _319;
  long unsigned int _321;
  __int128 unsigned _322;
  __int128 unsigned _323;
  __int128 unsigned _324;
  long unsigned int _326;
  __int128 unsigned _327;
  __int128 unsigned _328;
  __int128 unsigned _329;
  long unsigned int _331;
  __int128 unsigned _332;
  __int128 unsigned _333;
  __int128 unsigned _334;
  long unsigned int _336;
  __int128 unsigned _337;
  __int128 unsigned _338;
  __int128 unsigned _339;
  long unsigned int _341;
  __int128 unsigned _342;
  __int128 unsigned _343;
  __int128 unsigned _344;
  long unsigned int _346;
  __int128 unsigned _347;
  __int128 unsigned _348;
  __int128 unsigned _349;
  long unsigned int _351;
  __int128 unsigned _352;
  __int128 unsigned _353;
  __int128 unsigned _354;
  long unsigned int _356;
  __int128 unsigned _357;
  __int128 unsigned _358;
  long unsigned int _360;
  long unsigned int _362;
  long unsigned int _364;
  long unsigned int _366;
  long unsigned int _368;
  long unsigned int _370;
  long unsigned int _372;
  long unsigned int _374;
  long unsigned int _376;
  long unsigned int _377;
  long unsigned int _378;
  long unsigned int _379;
  long unsigned int _380;
  long unsigned int _381;
  long unsigned int _382;
  long unsigned int _383;
  long unsigned int _384;
  long unsigned int _385;
  long unsigned int _386;
  long unsigned int _387;
  long unsigned int _388;
  long unsigned int _389;
  long unsigned int _390;
  long unsigned int _391;
  long unsigned int _392;
  long unsigned int _393;
  long unsigned int _394;
  long unsigned int _395;
  long unsigned int _396;
  long unsigned int _397;
  long unsigned int _398;
  long unsigned int _399;
  long unsigned int _400;
  long unsigned int _401;
  long unsigned int _402;
  long unsigned int _403;
  long unsigned int _404;
  long unsigned int _405;
  long unsigned int _406;
  long unsigned int _407;
  long unsigned int _408;
  long unsigned int _409;
  long unsigned int _410;
  long unsigned int _411;
  long unsigned int _412;
  long unsigned int _413;
  long unsigned int _414;
  long unsigned int _415;
  long unsigned int _416;
  long unsigned int _417;
  long unsigned int _418;
  long unsigned int _419;
  long unsigned int _420;
  long unsigned int _421;
  long unsigned int _422;
  long unsigned int _423;
  long unsigned int _425;
  long unsigned int _426;
  long unsigned int _427;
  long unsigned int _429;
  long unsigned int _430;
  long unsigned int _431;
  long unsigned int _433;
  long unsigned int _434;
  long unsigned int _435;
  long unsigned int _437;
  long unsigned int _438;
  long unsigned int _439;
  long unsigned int _441;
  long unsigned int _442;
  long unsigned int _443;
  long unsigned int _445;
  long unsigned int _446;
  long unsigned int _447;
  long unsigned int _449;
  long unsigned int _450;
  long unsigned int _451;
  long unsigned int _453;
  long unsigned int _454;
  long unsigned int _455;
  long unsigned int _457;
  __int128 unsigned _530;
  __int128 unsigned _531;
  __int128 unsigned _532;
  __int128 unsigned _533;
  __int128 unsigned _534;
  __int128 unsigned _535;
  __int128 unsigned _536;
  __int128 unsigned _537;
  __int128 unsigned _538;

  <bb 2> [local count: 1073741825]:
  vect__61.168_468 = MEM[(const limb *)x_in_2(D)];
  vect__61.169_470 = MEM[(const limb *)x_in_2(D) + 16B];
  vect__61.170_472 = MEM[(const limb *)x_in_2(D) + 32B];
  vect__61.171_474 = MEM[(const limb *)x_in_2(D) + 48B];
  MEM[(limb *)&ftmp] = vect__61.168_468;
  MEM[(limb *)&ftmp + 16B] = vect__61.169_470;
  MEM[(limb *)&ftmp + 32B] = vect__61.170_472;
  MEM[(limb *)&ftmp + 48B] = vect__61.171_474;
  _69 = MEM[(const limb *)x_in_2(D) + 64B];
  MEM[(limb *)&ftmp + 64B] = _69;
  MEM[(limb *)&ftmp2] = vect__61.168_468;
  MEM[(limb *)&ftmp2 + 16B] = vect__61.169_470;
  MEM[(limb *)&ftmp2 + 32B] = vect__61.170_472;
  MEM[(limb *)&ftmp2 + 48B] = vect__61.171_474;
  MEM[(limb *)&ftmp2 + 64B] = _69;
  felem_square (&tmp, z_in_3(D));
  felem_reduce (&delta, &tmp);
  felem_square (&tmp, y_in_6(D));
  felem_reduce (&gamma, &tmp);
  felem_mul (&tmp, x_in_2(D), &gamma);
  felem_reduce (&beta, &tmp);
  _422 = MEM[(limb *)&ftmp];
  _423 = MEM[(const limb *)&delta];
  _393 = _422 + 4611686018427387872;
  _425 = _393 - _423;
  MEM[(limb *)&ftmp] = _425;
  _426 = MEM[(limb *)&ftmp + 8B];
  _427 = MEM[(const limb *)&delta + 8B];
  _391 = _426 + 4611686018427387888;
  _429 = _391 - _427;
  MEM[(limb *)&ftmp + 8B] = _429;
  _430 = MEM[(limb *)&ftmp + 16B];
  _431 = MEM[(const limb *)&delta + 16B];
  _389 = _430 + 4611686018427387888;
  _433 = _389 - _431;
  MEM[(limb *)&ftmp + 16B] = _433;
  _434 = MEM[(limb *)&ftmp + 24B];
  _435 = MEM[(const limb *)&delta + 24B];
  _387 = _434 + 4611686018427387888;
  _437 = _387 - _435;
  MEM[(limb *)&ftmp + 24B] = _437;
  _438 = MEM[(limb *)&ftmp + 32B];
  _439 = MEM[(const limb *)&delta + 32B];
  _385 = _438 + 4611686018427387888;
  _441 = _385 - _439;
  MEM[(limb *)&ftmp + 32B] = _441;
  _442 = MEM[(limb *)&ftmp + 40B];
  _443 = MEM[(const limb *)&delta + 40B];
  _383 = _442 + 4611686018427387888;
  _445 = _383 - _443;
  MEM[(limb *)&ftmp + 40B] = _445;
  _446 = MEM[(limb *)&ftmp + 48B];
  _447 = MEM[(const limb *)&delta + 48B];
  _381 = _446 + 4611686018427387888;
  _449 = _381 - _447;
  MEM[(limb *)&ftmp + 48B] = _449;
  _450 = MEM[(limb *)&ftmp + 56B];
  _451 = MEM[(const limb *)&delta + 56B];
  _379 = _450 + 4611686018427387888;
  _453 = _379 - _451;
  MEM[(limb *)&ftmp + 56B] = _453;
  _454 = MEM[(limb *)&ftmp + 64B];
  _455 = MEM[(const limb *)&delta + 64B];
  _377 = _454 + 4611686018427387888;
  _457 = _377 - _455;
  MEM[(limb *)&ftmp + 64B] = _457;
  _395 = MEM[(limb *)&ftmp2];
  _397 = _395 + _423;
  _398 = MEM[(limb *)&ftmp2 + 8B];
  _400 = _398 + _427;
  _401 = MEM[(limb *)&ftmp2 + 16B];
  _403 = _401 + _431;
  _404 = MEM[(limb *)&ftmp2 + 24B];
  _406 = _404 + _435;
  _407 = MEM[(limb *)&ftmp2 + 32B];
  _409 = _407 + _439;
  _410 = MEM[(limb *)&ftmp2 + 40B];
  _412 = _410 + _443;
  _413 = MEM[(limb *)&ftmp2 + 48B];
  _415 = _413 + _447;
  _416 = MEM[(limb *)&ftmp2 + 56B];
  _418 = _416 + _451;
  _419 = MEM[(limb *)&ftmp2 + 64B];
  _421 = _419 + _455;
  _378 = _397 * 3;
  MEM[(limb *)&ftmp2] = _378;
  _380 = _400 * 3;
  MEM[(limb *)&ftmp2 + 8B] = _380;
  _382 = _403 * 3;
  MEM[(limb *)&ftmp2 + 16B] = _382;
  _384 = _406 * 3;
  MEM[(limb *)&ftmp2 + 24B] = _384;
  _386 = _409 * 3;
  MEM[(limb *)&ftmp2 + 32B] = _386;
  _388 = _412 * 3;
  MEM[(limb *)&ftmp2 + 40B] = _388;
  _390 = _415 * 3;
  MEM[(limb *)&ftmp2 + 48B] = _390;
  _392 = _418 * 3;
  MEM[(limb *)&ftmp2 + 56B] = _392;
  _394 = _421 * 3;
  MEM[(limb *)&ftmp2 + 64B] = _394;
  felem_mul (&tmp, &ftmp, &ftmp2);
  felem_reduce (&alpha, &tmp);
  felem_square (&tmp, &alpha);
  _52 = MEM[(const limb *)&beta];
  _53 = MEM[(const limb *)&beta + 8B];
  _54 = MEM[(const limb *)&beta + 16B];
  _55 = MEM[(const limb *)&beta + 24B];
  _56 = MEM[(const limb *)&beta + 32B];
  _57 = MEM[(const limb *)&beta + 40B];
  _58 = MEM[(const limb *)&beta + 48B];
  _59 = MEM[(const limb *)&beta + 56B];
  _60 = MEM[(const limb *)&beta + 64B];
  _360 = _52 * 8;
  MEM[(limb *)&ftmp] = _360;
  _362 = _53 * 8;
  MEM[(limb *)&ftmp + 8B] = _362;
  _364 = _54 * 8;
  MEM[(limb *)&ftmp + 16B] = _364;
  _366 = _55 * 8;
  MEM[(limb *)&ftmp + 24B] = _366;
  _368 = _56 * 8;
  MEM[(limb *)&ftmp + 32B] = _368;
  _370 = _57 * 8;
  MEM[(limb *)&ftmp + 40B] = _370;
  _372 = _58 * 8;
  MEM[(limb *)&ftmp + 48B] = _372;
  _374 = _59 * 8;
  MEM[(limb *)&ftmp + 56B] = _374;
  _376 = _60 * 8;
  MEM[(limb *)&ftmp + 64B] = _376;
  _314 = MEM[(uint128_t *)&tmp];
  _316 = 9223372036854775744 - _360;
  _317 = (__int128 unsigned) _316;
  _318 = _314 + _317;
  MEM[(uint128_t *)&tmp] = _318;
  _319 = MEM[(uint128_t *)&tmp + 16B];
  _321 = 9223372036854775776 - _362;
  _322 = (__int128 unsigned) _321;
  _323 = _319 + _322;
  MEM[(uint128_t *)&tmp + 16B] = _323;
  _324 = MEM[(uint128_t *)&tmp + 32B];
  _326 = 9223372036854775776 - _364;
  _327 = (__int128 unsigned) _326;
  _328 = _324 + _327;
  MEM[(uint128_t *)&tmp + 32B] = _328;
  _329 = MEM[(uint128_t *)&tmp + 48B];
  _331 = 9223372036854775776 - _366;
  _332 = (__int128 unsigned) _331;
  _333 = _329 + _332;
  MEM[(uint128_t *)&tmp + 48B] = _333;
  _334 = MEM[(uint128_t *)&tmp + 64B];
  _336 = 9223372036854775776 - _368;
  _337 = (__int128 unsigned) _336;
  _338 = _334 + _337;
  MEM[(uint128_t *)&tmp + 64B] = _338;
  _339 = MEM[(uint128_t *)&tmp + 80B];
  _341 = 9223372036854775776 - _370;
  _342 = (__int128 unsigned) _341;
  _343 = _339 + _342;
  MEM[(uint128_t *)&tmp + 80B] = _343;
  _344 = MEM[(uint128_t *)&tmp + 96B];
  _346 = 9223372036854775776 - _372;
  _347 = (__int128 unsigned) _346;
  _348 = _344 + _347;
  MEM[(uint128_t *)&tmp + 96B] = _348;
  _349 = MEM[(uint128_t *)&tmp + 112B];
  _351 = 9223372036854775776 - _374;
  _352 = (__int128 unsigned) _351;
  _353 = _349 + _352;
  MEM[(uint128_t *)&tmp + 112B] = _353;
  _354 = MEM[(uint128_t *)&tmp + 128B];
  _356 = 9223372036854775776 - _376;
  _357 = (__int128 unsigned) _356;
  _358 = _354 + _357;
  MEM[(uint128_t *)&tmp + 128B] = _358;
  felem_reduce (x_out_19(D), &tmp);
  vect__287.178_102 = MEM[(limb *)&delta];
  vect__287.179_104 = MEM[(limb *)&delta + 16B];
  vect__287.180_424 = MEM[(limb *)&delta + 32B];
  vect__287.181_432 = MEM[(limb *)&delta + 48B];
  vect__288.184_440 = MEM[(const limb *)&gamma];
  vect__288.185_448 = MEM[(const limb *)&gamma + 16B];
  vect__288.186_456 = MEM[(const limb *)&gamma + 32B];
  vect__288.187_167 = MEM[(const limb *)&gamma + 48B];
  vect__289.188_175 = vect__287.178_102 + vect__288.184_440;
  vect__289.188_179 = vect__287.179_104 + vect__288.185_448;
  vect__289.188_183 = vect__287.180_424 + vect__288.186_456;
  vect__289.188_187 = vect__288.187_167 + vect__287.181_432;
  MEM[(limb *)&delta] = vect__289.188_175;
  MEM[(limb *)&delta + 16B] = vect__289.188_179;
  MEM[(limb *)&delta + 32B] = vect__289.188_183;
  MEM[(limb *)&delta + 48B] = vect__289.188_187;
  _311 = MEM[(limb *)&delta + 64B];
  _312 = MEM[(const limb *)&gamma + 64B];
  _313 = _311 + _312;
  MEM[(limb *)&delta + 64B] = _313;
  vect__43.193_132 = MEM[(const limb *)y_in_6(D)];
  vect__43.194_140 = MEM[(const limb *)y_in_6(D) + 16B];
  vect__43.195_361 = MEM[(const limb *)y_in_6(D) + 32B];
  vect__43.196_365 = MEM[(const limb *)y_in_6(D) + 48B];
  _51 = MEM[(const limb *)y_in_6(D) + 64B];
  vect__261.199_371 = MEM[(const limb *)z_in_3(D)];
  vect__261.200_375 = MEM[(const limb *)z_in_3(D) + 16B];
  vect__261.201_320 = MEM[(const limb *)z_in_3(D) + 32B];
  vect__261.202_330 = MEM[(const limb *)z_in_3(D) + 48B];
  vect__262.203_340 = vect__43.193_132 + vect__261.199_371;
  vect__262.203_345 = vect__43.194_140 + vect__261.200_375;
  vect__262.203_350 = vect__261.201_320 + vect__43.195_361;
  vect__262.203_355 = vect__261.202_330 + vect__43.196_365;
  MEM[(limb *)&ftmp] = vect__262.203_340;
  MEM[(limb *)&ftmp + 16B] = vect__262.203_345;
  MEM[(limb *)&ftmp + 32B] = vect__262.203_350;
  MEM[(limb *)&ftmp + 48B] = vect__262.203_355;
  _285 = MEM[(const limb *)z_in_3(D) + 64B];
  _286 = _51 + _285;
  MEM[(limb *)&ftmp + 64B] = _286;
  felem_square (&tmp, &ftmp);
  _215 = MEM[(uint128_t *)&tmp];
  _216 = MEM[(const limb *)&delta];
  _217 = 9223372036854775744 - _216;
  _218 = (__int128 unsigned) _217;
  _219 = _215 + _218;
  MEM[(uint128_t *)&tmp] = _219;
  _220 = MEM[(uint128_t *)&tmp + 16B];
  _221 = MEM[(const limb *)&delta + 8B];
  _222 = 9223372036854775776 - _221;
  _223 = (__int128 unsigned) _222;
  _224 = _220 + _223;
  MEM[(uint128_t *)&tmp + 16B] = _224;
  _225 = MEM[(uint128_t *)&tmp + 32B];
  _226 = MEM[(const limb *)&delta + 16B];
  _227 = 9223372036854775776 - _226;
  _228 = (__int128 unsigned) _227;
  _229 = _225 + _228;
  MEM[(uint128_t *)&tmp + 32B] = _229;
  _230 = MEM[(uint128_t *)&tmp + 48B];
  _231 = MEM[(const limb *)&delta + 24B];
  _232 = 9223372036854775776 - _231;
  _233 = (__int128 unsigned) _232;
  _234 = _230 + _233;
  MEM[(uint128_t *)&tmp + 48B] = _234;
  _235 = MEM[(uint128_t *)&tmp + 64B];
  _236 = MEM[(const limb *)&delta + 32B];
  _237 = 9223372036854775776 - _236;
  _238 = (__int128 unsigned) _237;
  _239 = _235 + _238;
  MEM[(uint128_t *)&tmp + 64B] = _239;
  _240 = MEM[(uint128_t *)&tmp + 80B];
  _241 = MEM[(const limb *)&delta + 40B];
  _242 = 9223372036854775776 - _241;
  _243 = (__int128 unsigned) _242;
  _244 = _240 + _243;
  MEM[(uint128_t *)&tmp + 80B] = _244;
  _245 = MEM[(uint128_t *)&tmp + 96B];
  _246 = MEM[(const limb *)&delta + 48B];
  _247 = 9223372036854775776 - _246;
  _248 = (__int128 unsigned) _247;
  _249 = _245 + _248;
  MEM[(uint128_t *)&tmp + 96B] = _249;
  _250 = MEM[(uint128_t *)&tmp + 112B];
  _251 = MEM[(const limb *)&delta + 56B];
  _252 = 9223372036854775776 - _251;
  _253 = (__int128 unsigned) _252;
  _254 = _250 + _253;
  MEM[(uint128_t *)&tmp + 112B] = _254;
  _255 = MEM[(uint128_t *)&tmp + 128B];
  _256 = MEM[(const limb *)&delta + 64B];
  _257 = 9223372036854775776 - _256;
  _258 = (__int128 unsigned) _257;
  _259 = _255 + _258;
  MEM[(uint128_t *)&tmp + 128B] = _259;
  felem_reduce (z_out_25(D), &tmp);
  _197 = MEM[(limb *)&beta];
  _198 = _197 * 4;
  _199 = MEM[(limb *)&beta + 8B];
  _200 = _199 * 4;
  _201 = MEM[(limb *)&beta + 16B];
  _202 = _201 * 4;
  _203 = MEM[(limb *)&beta + 24B];
  _204 = _203 * 4;
  _205 = MEM[(limb *)&beta + 32B];
  _206 = _205 * 4;
  _207 = MEM[(limb *)&beta + 40B];
  _208 = _207 * 4;
  _209 = MEM[(limb *)&beta + 48B];
  _210 = _209 * 4;
  _211 = MEM[(limb *)&beta + 56B];
  _212 = _211 * 4;
  _213 = MEM[(limb *)&beta + 64B];
  _214 = _213 * 4;
  _162 = MEM[(const limb *)x_out_19(D)];
  _420 = _198 + 4611686018427387872;
  _164 = _420 - _162;
  MEM[(limb *)&beta] = _164;
  _166 = MEM[(const limb *)x_out_19(D) + 8B];
  _417 = _200 + 4611686018427387888;
  _168 = _417 - _166;
  MEM[(limb *)&beta + 8B] = _168;
  _170 = MEM[(const limb *)x_out_19(D) + 16B];
  _414 = _202 + 4611686018427387888;
  _172 = _414 - _170;
  MEM[(limb *)&beta + 16B] = _172;
  _174 = MEM[(const limb *)x_out_19(D) + 24B];
  _411 = _204 + 4611686018427387888;
  _176 = _411 - _174;
  MEM[(limb *)&beta + 24B] = _176;
  _178 = MEM[(const limb *)x_out_19(D) + 32B];
  _408 = _206 + 4611686018427387888;
  _180 = _408 - _178;
  MEM[(limb *)&beta + 32B] = _180;
  _182 = MEM[(const limb *)x_out_19(D) + 40B];
  _396 = _208 + 4611686018427387888;
  _184 = _396 - _182;
  MEM[(limb *)&beta + 40B] = _184;
  _186 = MEM[(const limb *)x_out_19(D) + 48B];
  _402 = _210 + 4611686018427387888;
  _188 = _402 - _186;
  MEM[(limb *)&beta + 48B] = _188;
  _190 = MEM[(const limb *)x_out_19(D) + 56B];
  _399 = _212 + 4611686018427387888;
  _192 = _399 - _190;
  MEM[(limb *)&beta + 56B] = _192;
  _194 = MEM[(const limb *)x_out_19(D) + 64B];
  _405 = _214 + 4611686018427387888;
  _196 = _405 - _194;
  MEM[(limb *)&beta + 64B] = _196;
  felem_mul (&tmp, &alpha, &beta);
  felem_square (&tmp2, &gamma);
  _142 = MEM[(uint128_t *)&tmp2];
  _144 = _142 * 8;
  MEM[(uint128_t *)&tmp2] = _144;
  _145 = MEM[(uint128_t *)&tmp2 + 16B];
  _146 = _145 * 8;
  MEM[(uint128_t *)&tmp2 + 16B] = _146;
  _147 = MEM[(uint128_t *)&tmp2 + 32B];
  _148 = _147 * 8;
  MEM[(uint128_t *)&tmp2 + 32B] = _148;
  _149 = MEM[(uint128_t *)&tmp2 + 48B];
  _150 = _149 * 8;
  MEM[(uint128_t *)&tmp2 + 48B] = _150;
  _151 = MEM[(uint128_t *)&tmp2 + 64B];
  _152 = _151 * 8;
  MEM[(uint128_t *)&tmp2 + 64B] = _152;
  _153 = MEM[(uint128_t *)&tmp2 + 80B];
  _154 = _153 * 8;
  MEM[(uint128_t *)&tmp2 + 80B] = _154;
  _155 = MEM[(uint128_t *)&tmp2 + 96B];
  _156 = _155 * 8;
  MEM[(uint128_t *)&tmp2 + 96B] = _156;
  _157 = MEM[(uint128_t *)&tmp2 + 112B];
  _158 = _157 * 8;
  MEM[(uint128_t *)&tmp2 + 112B] = _158;
  _159 = MEM[(uint128_t *)&tmp2 + 128B];
  _160 = _159 * 8;
  MEM[(uint128_t *)&tmp2 + 128B] = _160;
  _106 = MEM[(uint128_t *)&tmp];
  _538 = _106 + 0x7fffffffffffffc00000000000000000;
  _109 = _538 - _144;
  MEM[(uint128_t *)&tmp] = _109;
  _110 = MEM[(uint128_t *)&tmp + 16B];
  _537 = _110 + 0x7fffffffffffffe00000000000000000;
  _113 = _537 - _146;
  MEM[(uint128_t *)&tmp + 16B] = _113;
  _114 = MEM[(uint128_t *)&tmp + 32B];
  _536 = _114 + 0x7fffffffffffffe00000000000000000;
  _117 = _536 - _148;
  MEM[(uint128_t *)&tmp + 32B] = _117;
  _118 = MEM[(uint128_t *)&tmp + 48B];
  _535 = _118 + 0x7fffffffffffffe00000000000000000;
  _121 = _535 - _150;
  MEM[(uint128_t *)&tmp + 48B] = _121;
  _122 = MEM[(uint128_t *)&tmp + 64B];
  _534 = _122 + 0x7fffffffffffffe00000000000000000;
  _125 = _534 - _152;
  MEM[(uint128_t *)&tmp + 64B] = _125;
  _126 = MEM[(uint128_t *)&tmp + 80B];
  _533 = _126 + 0x7fffffffffffffe00000000000000000;
  _129 = _533 - _154;
  MEM[(uint128_t *)&tmp + 80B] = _129;
  _130 = MEM[(uint128_t *)&tmp + 96B];
  _532 = _130 + 0x7fffffffffffffe00000000000000000;
  _133 = _532 - _156;
  MEM[(uint128_t *)&tmp + 96B] = _133;
  _134 = MEM[(uint128_t *)&tmp + 112B];
  _531 = _134 + 0x7fffffffffffffe00000000000000000;
  _137 = _531 - _158;
  MEM[(uint128_t *)&tmp + 112B] = _137;
  _138 = MEM[(uint128_t *)&tmp + 128B];
  _530 = _138 + 0x7fffffffffffffe00000000000000000;
  _141 = _530 - _160;
  MEM[(uint128_t *)&tmp + 128B] = _141;
  felem_reduce (y_out_33(D), &tmp);
  tmp ={v} {CLOBBER};
  tmp2 ={v} {CLOBBER};
  delta ={v} {CLOBBER};
  gamma ={v} {CLOBBER};
  beta ={v} {CLOBBER};
  alpha ={v} {CLOBBER};
  ftmp ={v} {CLOBBER};
  ftmp2 ={v} {CLOBBER};
  return;

}



;; Function point_add (point_add, funcdef_no=427, decl_uid=10598, cgraph_uid=427, symbol_order=432)

point_add (limb * x3, limb * y3, limb * z3, const limb * x1, const limb * y1, const limb * z1, const int mixed, const limb * x2, const limb * y2, const limb * z2)
{
  vector(2) long unsigned int vect__621.337;
  const vector(2) long unsigned int vect__619.336;
  const vector(2) long unsigned int vect__619.335;
  const vector(2) long unsigned int vect__619.334;
  const vector(2) long unsigned int vect__619.333;
  vector(2) long unsigned int vect__797.330;
  vector(2) long unsigned int vect__618.329;
  vector(2) long unsigned int vect__618.328;
  vector(2) long unsigned int vect__618.327;
  vector(2) long unsigned int vect__618.326;
  const vector(2) long unsigned int vect__98.321;
  const vector(2) long unsigned int vect__98.320;
  const vector(2) long unsigned int vect__98.319;
  const vector(2) long unsigned int vect__98.318;
  const vector(2) long unsigned int vect__108.313;
  const vector(2) long unsigned int vect__107.312;
  const vector(2) long unsigned int vect__107.311;
  const vector(2) long unsigned int vect__107.310;
  const vector(2) long unsigned int vect__107.309;
  const vector(2) long unsigned int vect__125.304;
  const vector(2) long unsigned int vect__125.303;
  const vector(2) long unsigned int vect__125.302;
  const vector(2) long unsigned int vect__125.301;
  const vector(2) long unsigned int vect__430.296;
  const vector(2) long unsigned int vect__429.295;
  const vector(2) long unsigned int vect__429.294;
  const vector(2) long unsigned int vect__429.293;
  const vector(2) long unsigned int vect__429.292;
  const vector(2) long unsigned int vect__46.289;
  const vector(2) long unsigned int vect__46.288;
  const vector(2) long unsigned int vect__46.287;
  const vector(2) long unsigned int vect__46.286;
  vector(2) long unsigned int vect__225.281;
  vector(2) long unsigned int vect_tmp_224.280;
  const vector(2) long unsigned int vect__223.279;
  vector(2) long unsigned int vect__222.278;
  const vector(2) long unsigned int vect__220.275;
  vector(2) long unsigned int vect__214.268;
  vector(2) long unsigned int vect_tmp_213.267;
  const vector(2) long unsigned int vect__212.266;
  const vector(2) long unsigned int vect__209.262;
  vector(2) long unsigned int vect__203.255;
  vector(2) long unsigned int vect_tmp_202.254;
  const vector(2) long unsigned int vect__201.253;
  vector(2) long unsigned int vect__200.252;
  const vector(2) long unsigned int vect__198.249;
  vector(2) long unsigned int vect__192.242;
  vector(2) long unsigned int vect_tmp_191.241;
  const vector(2) long unsigned int vect__190.240;
  const vector(2) long unsigned int vect__187.236;
  vector(2) long unsigned int vect__181.229;
  vector(2) long unsigned int vect_tmp_180.228;
  const vector(2) long unsigned int vect__179.227;
  vector(2) long unsigned int vect__178.226;
  const vector(2) long unsigned int vect__176.223;
  vector(2) long unsigned int vect__170.216;
  vector(2) long unsigned int vect_tmp_169.215;
  const vector(2) long unsigned int vect__168.214;
  const vector(2) long unsigned int vect__165.210;
  const limb tmp;
  const limb tmp;
  const limb tmp;
  const limb tmp;
  const limb tmp;
  const limb tmp;
  limb z2_is_zero;
  limb z1_is_zero;
  limb y_equal;
  limb x_equal;
  uint128_t tmp2[9];
  uint128_t tmp[9];
  limb z_out[9];
  limb y_out[9];
  limb x_out[9];
  limb ftmp6[9];
  limb ftmp5[9];
  limb ftmp4[9];
  limb ftmp3[9];
  limb ftmp2[9];
  limb ftmp[9];
  _Bool _1;
  _Bool _2;
  _Bool _3;
  long unsigned int _4;
  long unsigned int _97;
  long unsigned int _106;
  long unsigned int _123;
  long unsigned int _124;
  long unsigned int _133;
  long unsigned int _134;
  long unsigned int _135;
  long unsigned int _136;
  long unsigned int _137;
  long unsigned int _138;
  long unsigned int _139;
  long unsigned int _140;
  long unsigned int _141;
  long unsigned int _143;
  long unsigned int _144;
  long unsigned int _145;
  long unsigned int _146;
  long unsigned int _147;
  long unsigned int _148;
  long unsigned int _149;
  long unsigned int _150;
  long unsigned int _152;
  long unsigned int _153;
  long unsigned int _154;
  long unsigned int _155;
  long unsigned int _156;
  long unsigned int _157;
  long unsigned int _158;
  long unsigned int _159;
  __int128 unsigned _161;
  __int128 unsigned _172;
  __int128 unsigned _183;
  __int128 unsigned _194;
  long unsigned int _227;
  long unsigned int _228;
  long unsigned int _229;
  long unsigned int _230;
  long unsigned int _231;
  long unsigned int _232;
  long unsigned int _233;
  long unsigned int _234;
  long unsigned int _235;
  long unsigned int _236;
  long unsigned int _237;
  long unsigned int _238;
  long unsigned int _239;
  long unsigned int _240;
  long unsigned int _241;
  long unsigned int _242;
  long unsigned int _243;
  long unsigned int _244;
  __int128 unsigned _251;
  __int128 unsigned _252;
  __int128 unsigned _253;
  __int128 unsigned _254;
  __int128 unsigned _255;
  __int128 unsigned _256;
  __int128 unsigned _257;
  __int128 unsigned _258;
  __int128 unsigned _259;
  long unsigned int _339;
  long unsigned int _340;
  __int128 unsigned _341;
  __int128 unsigned _342;
  long unsigned int _344;
  long unsigned int _345;
  __int128 unsigned _346;
  __int128 unsigned _347;
  long unsigned int _349;
  long unsigned int _350;
  __int128 unsigned _351;
  __int128 unsigned _352;
  long unsigned int _354;
  long unsigned int _355;
  __int128 unsigned _356;
  __int128 unsigned _357;
  long unsigned int _359;
  long unsigned int _360;
  __int128 unsigned _361;
  __int128 unsigned _362;
  long unsigned int _363;
  long unsigned int _364;
  long unsigned int _365;
  __int128 unsigned _366;
  __int128 unsigned _367;
  long unsigned int _369;
  long unsigned int _370;
  __int128 unsigned _371;
  __int128 unsigned _372;
  long unsigned int _374;
  long unsigned int _375;
  __int128 unsigned _376;
  __int128 unsigned _377;
  long unsigned int _378;
  long unsigned int _379;
  long unsigned int _380;
  __int128 unsigned _381;
  __int128 unsigned _382;
  __int128 unsigned _383;
  long unsigned int _384;
  long unsigned int _385;
  __int128 unsigned _386;
  long unsigned int _387;
  __int128 unsigned _388;
  long unsigned int _389;
  long unsigned int _390;
  __int128 unsigned _391;
  __int128 unsigned _393;
  long unsigned int _394;
  long unsigned int _395;
  __int128 unsigned _396;
  long unsigned int _397;
  __int128 unsigned _398;
  long unsigned int _399;
  long unsigned int _400;
  __int128 unsigned _401;
  __int128 unsigned _403;
  long unsigned int _404;
  long unsigned int _405;
  __int128 unsigned _406;
  __int128 unsigned _408;
  long unsigned int _409;
  long unsigned int _410;
  __int128 unsigned _411;
  __int128 unsigned _413;
  long unsigned int _414;
  long unsigned int _415;
  __int128 unsigned _416;
  __int128 unsigned _418;
  long unsigned int _419;
  long unsigned int _420;
  __int128 unsigned _421;
  __int128 unsigned _423;
  long unsigned int _424;
  long unsigned int _425;
  __int128 unsigned _426;
  long unsigned int _453;
  long unsigned int _454;
  long unsigned int _455;
  long unsigned int _456;
  long unsigned int _457;
  long unsigned int _458;
  long unsigned int _459;
  long unsigned int _460;
  long unsigned int _461;
  long unsigned int _462;
  long unsigned int _463;
  long unsigned int _464;
  long unsigned int _465;
  long unsigned int _466;
  long unsigned int _467;
  long unsigned int _468;
  long unsigned int _469;
  long unsigned int _470;
  long unsigned int _471;
  long unsigned int _472;
  __int128 unsigned _473;
  long unsigned int _474;
  long unsigned int _475;
  __int128 unsigned _476;
  __int128 unsigned _477;
  __int128 unsigned _478;
  long unsigned int _479;
  long unsigned int _480;
  __int128 unsigned _481;
  __int128 unsigned _482;
  __int128 unsigned _483;
  long unsigned int _484;
  long unsigned int _485;
  __int128 unsigned _486;
  __int128 unsigned _487;
  __int128 unsigned _488;
  long unsigned int _489;
  long unsigned int _490;
  __int128 unsigned _491;
  __int128 unsigned _492;
  __int128 unsigned _493;
  long unsigned int _494;
  long unsigned int _495;
  __int128 unsigned _496;
  __int128 unsigned _497;
  __int128 unsigned _498;
  long unsigned int _499;
  long unsigned int _500;
  __int128 unsigned _501;
  __int128 unsigned _502;
  __int128 unsigned _503;
  long unsigned int _504;
  long unsigned int _505;
  __int128 unsigned _506;
  __int128 unsigned _507;
  __int128 unsigned _508;
  long unsigned int _509;
  long unsigned int _510;
  __int128 unsigned _511;
  __int128 unsigned _512;
  __int128 unsigned _513;
  long unsigned int _514;
  long unsigned int _515;
  __int128 unsigned _516;
  __int128 unsigned _517;
  __int128 unsigned _518;
  long unsigned int _519;
  long unsigned int _520;
  __int128 unsigned _521;
  __int128 unsigned _522;
  __int128 unsigned _523;
  long unsigned int _524;
  long unsigned int _525;
  __int128 unsigned _526;
  __int128 unsigned _527;
  __int128 unsigned _528;
  long unsigned int _529;
  long unsigned int _530;
  __int128 unsigned _531;
  __int128 unsigned _532;
  __int128 unsigned _533;
  long unsigned int _534;
  long unsigned int _535;
  __int128 unsigned _536;
  __int128 unsigned _537;
  __int128 unsigned _538;
  long unsigned int _539;
  long unsigned int _540;
  __int128 unsigned _541;
  __int128 unsigned _542;
  __int128 unsigned _543;
  long unsigned int _544;
  long unsigned int _545;
  __int128 unsigned _546;
  __int128 unsigned _547;
  __int128 unsigned _548;
  long unsigned int _549;
  long unsigned int _550;
  __int128 unsigned _551;
  __int128 unsigned _552;
  __int128 unsigned _553;
  long unsigned int _554;
  long unsigned int _555;
  __int128 unsigned _556;
  __int128 unsigned _557;
  __int128 unsigned _558;
  long unsigned int _559;
  long unsigned int _560;
  __int128 unsigned _561;
  __int128 unsigned _562;
  __int128 unsigned _563;
  __int128 unsigned _566;
  __int128 unsigned _567;
  __int128 unsigned _570;
  __int128 unsigned _571;
  __int128 unsigned _574;
  __int128 unsigned _575;
  __int128 unsigned _578;
  __int128 unsigned _579;
  __int128 unsigned _582;
  __int128 unsigned _583;
  __int128 unsigned _586;
  __int128 unsigned _587;
  __int128 unsigned _590;
  __int128 unsigned _591;
  __int128 unsigned _594;
  __int128 unsigned _595;
  __int128 unsigned _598;
  __int128 unsigned _599;
  __int128 unsigned _601;
  __int128 unsigned _602;
  __int128 unsigned _603;
  __int128 unsigned _604;
  __int128 unsigned _605;
  __int128 unsigned _606;
  __int128 unsigned _607;
  __int128 unsigned _608;
  __int128 unsigned _609;
  __int128 unsigned _610;
  __int128 unsigned _611;
  __int128 unsigned _612;
  __int128 unsigned _613;
  __int128 unsigned _614;
  __int128 unsigned _615;
  __int128 unsigned _616;
  __int128 unsigned _617;
  long unsigned int _628;
  long unsigned int _636;
  long unsigned int _648;
  long unsigned int _650;
  long unsigned int _651;
  long unsigned int _653;
  long unsigned int _656;
  __int128 unsigned _657;
  __int128 unsigned _658;
  long unsigned int _661;
  __int128 unsigned _662;
  __int128 unsigned _663;
  long unsigned int _666;
  __int128 unsigned _667;
  __int128 unsigned _668;
  long unsigned int _671;
  __int128 unsigned _672;
  __int128 unsigned _673;
  long unsigned int _676;
  __int128 unsigned _677;
  __int128 unsigned _678;
  long unsigned int _680;
  long unsigned int _681;
  __int128 unsigned _682;
  __int128 unsigned _683;
  long unsigned int _686;
  __int128 unsigned _687;
  __int128 unsigned _688;
  long unsigned int _691;
  __int128 unsigned _692;
  __int128 unsigned _693;
  long unsigned int _695;
  long unsigned int _696;
  __int128 unsigned _697;
  __int128 unsigned _698;
  long unsigned int _700;
  __int128 unsigned _701;
  long unsigned int _702;
  long unsigned int _704;
  long unsigned int _706;
  long unsigned int _708;
  long unsigned int _710;
  long unsigned int _712;
  long unsigned int _714;
  long unsigned int _716;
  __int128 unsigned _717;
  long unsigned int _718;
  long unsigned int _719;
  __int128 unsigned _720;
  __int128 unsigned _721;
  __int128 unsigned _722;
  long unsigned int _723;
  long unsigned int _724;
  __int128 unsigned _725;
  __int128 unsigned _726;
  __int128 unsigned _727;
  long unsigned int _728;
  long unsigned int _729;
  __int128 unsigned _730;
  __int128 unsigned _731;
  __int128 unsigned _732;
  long unsigned int _733;
  long unsigned int _734;
  __int128 unsigned _735;
  __int128 unsigned _736;
  __int128 unsigned _737;
  long unsigned int _738;
  long unsigned int _739;
  __int128 unsigned _740;
  __int128 unsigned _741;
  __int128 unsigned _742;
  long unsigned int _743;
  long unsigned int _744;
  __int128 unsigned _745;
  __int128 unsigned _746;
  __int128 unsigned _747;
  long unsigned int _748;
  long unsigned int _749;
  __int128 unsigned _750;
  __int128 unsigned _751;
  __int128 unsigned _752;
  long unsigned int _753;
  long unsigned int _754;
  __int128 unsigned _755;
  __int128 unsigned _756;
  __int128 unsigned _757;
  long unsigned int _758;
  long unsigned int _759;
  __int128 unsigned _760;
  __int128 unsigned _761;
  long unsigned int _762;
  long unsigned int _763;
  long unsigned int _765;
  __int128 unsigned _766;
  long unsigned int _767;
  long unsigned int _769;
  __int128 unsigned _770;
  long unsigned int _771;
  long unsigned int _773;
  __int128 unsigned _774;
  long unsigned int _775;
  long unsigned int _777;
  __int128 unsigned _778;
  long unsigned int _779;
  long unsigned int _789;
  long unsigned int _903;
  long unsigned int _905;
  long unsigned int _906;
  long unsigned int _908;
  long unsigned int _936;
  long unsigned int _939;
  long unsigned int _941;
  vector(2) long unsigned int vect_cst__953;
  long unsigned int _969;
  long unsigned int _971;
  long unsigned int _972;
  long unsigned int _974;
  vector(2) long unsigned int vect_cst__986;

  <bb 2> [local count: 124219313]:
  z1_is_zero_10 = felem_is_zero (z1_8(D));
  z2_is_zero_13 = felem_is_zero (z2_11(D));
  felem_square (&tmp, z1_8(D));
  felem_reduce (&ftmp, &tmp);
  if (mixed_16(D) == 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 40992373]:
  felem_square (&tmp, z2_11(D));
  felem_reduce (&ftmp2, &tmp);
  felem_mul (&tmp, x1_19(D), &ftmp2);
  felem_reduce (&ftmp3, &tmp);
  vect__46.286_703 = MEM[(const limb *)z1_8(D)];
  vect__46.287_446 = MEM[(const limb *)z1_8(D) + 16B];
  vect__46.288_585 = MEM[(const limb *)z1_8(D) + 32B];
  vect__46.289_670 = MEM[(const limb *)z1_8(D) + 48B];
  _97 = MEM[(const limb *)z1_8(D) + 64B];
  vect__429.292_225 = MEM[(const limb *)z2_11(D)];
  vect__429.293_223 = MEM[(const limb *)z2_11(D) + 16B];
  vect__429.294_844 = MEM[(const limb *)z2_11(D) + 32B];
  vect__429.295_929 = MEM[(const limb *)z2_11(D) + 48B];
  vect__430.296_434 = vect__429.292_225 + vect__46.286_703;
  vect__430.296_709 = vect__429.293_223 + vect__46.287_446;
  vect__430.296_897 = vect__46.288_585 + vect__429.294_844;
  vect__430.296_597 = vect__46.289_670 + vect__429.295_929;
  MEM[(limb *)&ftmp5] = vect__430.296_434;
  MEM[(limb *)&ftmp5 + 16B] = vect__430.296_709;
  MEM[(limb *)&ftmp5 + 32B] = vect__430.296_897;
  MEM[(limb *)&ftmp5 + 48B] = vect__430.296_597;
  _453 = MEM[(const limb *)z2_11(D) + 64B];
  _454 = _97 + _453;
  MEM[(limb *)&ftmp5 + 64B] = _454;
  felem_square (&tmp, &ftmp5);
  _383 = MEM[(uint128_t *)&tmp];
  _384 = MEM[(const limb *)&ftmp];
  _385 = 9223372036854775744 - _384;
  _386 = (__int128 unsigned) _385;
  _388 = MEM[(uint128_t *)&tmp + 16B];
  _389 = MEM[(const limb *)&ftmp + 8B];
  _390 = 9223372036854775776 - _389;
  _391 = (__int128 unsigned) _390;
  _393 = MEM[(uint128_t *)&tmp + 32B];
  _394 = MEM[(const limb *)&ftmp + 16B];
  _395 = 9223372036854775776 - _394;
  _396 = (__int128 unsigned) _395;
  _398 = MEM[(uint128_t *)&tmp + 48B];
  _399 = MEM[(const limb *)&ftmp + 24B];
  _400 = 9223372036854775776 - _399;
  _401 = (__int128 unsigned) _400;
  _403 = MEM[(uint128_t *)&tmp + 64B];
  _404 = MEM[(const limb *)&ftmp + 32B];
  _405 = 9223372036854775776 - _404;
  _406 = (__int128 unsigned) _405;
  _408 = MEM[(uint128_t *)&tmp + 80B];
  _409 = MEM[(const limb *)&ftmp + 40B];
  _410 = 9223372036854775776 - _409;
  _411 = (__int128 unsigned) _410;
  _413 = MEM[(uint128_t *)&tmp + 96B];
  _414 = MEM[(const limb *)&ftmp + 48B];
  _415 = 9223372036854775776 - _414;
  _416 = (__int128 unsigned) _415;
  _418 = MEM[(uint128_t *)&tmp + 112B];
  _419 = MEM[(const limb *)&ftmp + 56B];
  _420 = 9223372036854775776 - _419;
  _421 = (__int128 unsigned) _420;
  _423 = MEM[(uint128_t *)&tmp + 128B];
  _424 = MEM[(const limb *)&ftmp + 64B];
  _425 = 9223372036854775776 - _424;
  _426 = (__int128 unsigned) _425;
  _339 = MEM[(const limb *)&ftmp2];
  _340 = 9223372036854775744 - _339;
  _341 = (__int128 unsigned) _340;
  _194 = _341 + _386;
  _342 = _194 + _383;
  MEM[(uint128_t *)&tmp] = _342;
  _344 = MEM[(const limb *)&ftmp2 + 8B];
  _345 = 9223372036854775776 - _344;
  _346 = (__int128 unsigned) _345;
  _183 = _346 + _391;
  _347 = _183 + _388;
  MEM[(uint128_t *)&tmp + 16B] = _347;
  _349 = MEM[(const limb *)&ftmp2 + 16B];
  _350 = 9223372036854775776 - _349;
  _351 = (__int128 unsigned) _350;
  _172 = _351 + _396;
  _352 = _172 + _393;
  MEM[(uint128_t *)&tmp + 32B] = _352;
  _354 = MEM[(const limb *)&ftmp2 + 24B];
  _355 = 9223372036854775776 - _354;
  _356 = (__int128 unsigned) _355;
  _161 = _356 + _401;
  _357 = _161 + _398;
  MEM[(uint128_t *)&tmp + 48B] = _357;
  _359 = MEM[(const limb *)&ftmp2 + 32B];
  _360 = 9223372036854775776 - _359;
  _361 = (__int128 unsigned) _360;
  _766 = _361 + _406;
  _362 = _403 + _766;
  MEM[(uint128_t *)&tmp + 64B] = _362;
  _364 = MEM[(const limb *)&ftmp2 + 40B];
  _365 = 9223372036854775776 - _364;
  _366 = (__int128 unsigned) _365;
  _770 = _366 + _411;
  _367 = _408 + _770;
  MEM[(uint128_t *)&tmp + 80B] = _367;
  _369 = MEM[(const limb *)&ftmp2 + 48B];
  _370 = 9223372036854775776 - _369;
  _371 = (__int128 unsigned) _370;
  _774 = _371 + _416;
  _372 = _413 + _774;
  MEM[(uint128_t *)&tmp + 96B] = _372;
  _374 = MEM[(const limb *)&ftmp2 + 56B];
  _375 = 9223372036854775776 - _374;
  _376 = (__int128 unsigned) _375;
  _778 = _376 + _421;
  _377 = _418 + _778;
  MEM[(uint128_t *)&tmp + 112B] = _377;
  _379 = MEM[(const limb *)&ftmp2 + 64B];
  _380 = 9223372036854775776 - _379;
  _381 = (__int128 unsigned) _380;
  _701 = _381 + _426;
  _382 = _423 + _701;
  MEM[(uint128_t *)&tmp + 128B] = _382;
  felem_reduce (&ftmp5, &tmp);
  felem_mul (&tmp, &ftmp2, z2_11(D));
  felem_reduce (&ftmp2, &tmp);
  felem_mul (&tmp, y1_29(D), &ftmp2);
  felem_reduce (&ftmp6, &tmp);
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 83226940]:
  vect__125.301_669 = MEM[(const limb *)x1_19(D)];
  vect__125.302_849 = MEM[(const limb *)x1_19(D) + 16B];
  vect__125.303_181 = MEM[(const limb *)x1_19(D) + 32B];
  vect__125.304_191 = MEM[(const limb *)x1_19(D) + 48B];
  MEM[(limb *)&ftmp3] = vect__125.301_669;
  MEM[(limb *)&ftmp3 + 16B] = vect__125.302_849;
  MEM[(limb *)&ftmp3 + 32B] = vect__125.303_181;
  MEM[(limb *)&ftmp3 + 48B] = vect__125.304_191;
  _133 = MEM[(const limb *)x1_19(D) + 64B];
  MEM[(limb *)&ftmp3 + 64B] = _133;
  vect__107.309_79 = MEM[(const limb *)z1_8(D)];
  vect__107.310_205 = MEM[(const limb *)z1_8(D) + 16B];
  vect__107.311_72 = MEM[(const limb *)z1_8(D) + 32B];
  vect__107.312_592 = MEM[(const limb *)z1_8(D) + 48B];
  vect__108.313_1012 = vect__107.309_79 * { 2, 2 };
  vect__108.313_1001 = vect__107.310_205 * { 2, 2 };
  vect__108.313_1000 = vect__107.311_72 * { 2, 2 };
  vect__108.313_999 = vect__107.312_592 * { 2, 2 };
  MEM[(limb *)&ftmp5] = vect__108.313_1012;
  MEM[(limb *)&ftmp5 + 16B] = vect__108.313_1001;
  MEM[(limb *)&ftmp5 + 32B] = vect__108.313_1000;
  MEM[(limb *)&ftmp5 + 48B] = vect__108.313_999;
  _123 = MEM[(const limb *)z1_8(D) + 64B];
  _124 = _123 * 2;
  MEM[(limb *)&ftmp5 + 64B] = _124;
  vect__98.318_898 = MEM[(const limb *)y1_29(D)];
  vect__98.319_926 = MEM[(const limb *)y1_29(D) + 16B];
  vect__98.320_916 = MEM[(const limb *)y1_29(D) + 32B];
  vect__98.321_664 = MEM[(const limb *)y1_29(D) + 48B];
  MEM[(limb *)&ftmp6] = vect__98.318_898;
  MEM[(limb *)&ftmp6 + 16B] = vect__98.319_926;
  MEM[(limb *)&ftmp6 + 32B] = vect__98.320_916;
  MEM[(limb *)&ftmp6 + 48B] = vect__98.321_664;
  _106 = MEM[(const limb *)y1_29(D) + 64B];
  MEM[(limb *)&ftmp6 + 64B] = _106;

  <bb 5> [local count: 124219313]:
  felem_mul (&tmp, x2_32(D), &ftmp);
  _518 = MEM[(uint128_t *)&tmp];
  _519 = MEM[(const limb *)&ftmp3];
  _520 = 9223372036854775744 - _519;
  _521 = (__int128 unsigned) _520;
  _522 = _518 + _521;
  MEM[(uint128_t *)&tmp] = _522;
  _523 = MEM[(uint128_t *)&tmp + 16B];
  _524 = MEM[(const limb *)&ftmp3 + 8B];
  _525 = 9223372036854775776 - _524;
  _526 = (__int128 unsigned) _525;
  _527 = _523 + _526;
  MEM[(uint128_t *)&tmp + 16B] = _527;
  _528 = MEM[(uint128_t *)&tmp + 32B];
  _529 = MEM[(const limb *)&ftmp3 + 16B];
  _530 = 9223372036854775776 - _529;
  _531 = (__int128 unsigned) _530;
  _532 = _528 + _531;
  MEM[(uint128_t *)&tmp + 32B] = _532;
  _533 = MEM[(uint128_t *)&tmp + 48B];
  _534 = MEM[(const limb *)&ftmp3 + 24B];
  _535 = 9223372036854775776 - _534;
  _536 = (__int128 unsigned) _535;
  _537 = _533 + _536;
  MEM[(uint128_t *)&tmp + 48B] = _537;
  _538 = MEM[(uint128_t *)&tmp + 64B];
  _539 = MEM[(const limb *)&ftmp3 + 32B];
  _540 = 9223372036854775776 - _539;
  _541 = (__int128 unsigned) _540;
  _542 = _538 + _541;
  MEM[(uint128_t *)&tmp + 64B] = _542;
  _543 = MEM[(uint128_t *)&tmp + 80B];
  _544 = MEM[(const limb *)&ftmp3 + 40B];
  _545 = 9223372036854775776 - _544;
  _546 = (__int128 unsigned) _545;
  _547 = _543 + _546;
  MEM[(uint128_t *)&tmp + 80B] = _547;
  _548 = MEM[(uint128_t *)&tmp + 96B];
  _549 = MEM[(const limb *)&ftmp3 + 48B];
  _550 = 9223372036854775776 - _549;
  _551 = (__int128 unsigned) _550;
  _552 = _548 + _551;
  MEM[(uint128_t *)&tmp + 96B] = _552;
  _553 = MEM[(uint128_t *)&tmp + 112B];
  _554 = MEM[(const limb *)&ftmp3 + 56B];
  _555 = 9223372036854775776 - _554;
  _556 = (__int128 unsigned) _555;
  _557 = _553 + _556;
  MEM[(uint128_t *)&tmp + 112B] = _557;
  _558 = MEM[(uint128_t *)&tmp + 128B];
  _559 = MEM[(const limb *)&ftmp3 + 64B];
  _560 = 9223372036854775776 - _559;
  _561 = (__int128 unsigned) _560;
  _562 = _558 + _561;
  MEM[(uint128_t *)&tmp + 128B] = _562;
  felem_reduce (&ftmp4, &tmp);
  x_equal_37 = felem_is_zero (&ftmp4);
  felem_mul (&tmp, &ftmp5, &ftmp4);
  felem_reduce (&z_out, &tmp);
  felem_mul (&tmp, &ftmp, z1_8(D));
  felem_reduce (&ftmp, &tmp);
  felem_mul (&tmp, y2_42(D), &ftmp);
  _473 = MEM[(uint128_t *)&tmp];
  _474 = MEM[(const limb *)&ftmp6];
  _475 = 9223372036854775744 - _474;
  _476 = (__int128 unsigned) _475;
  _477 = _473 + _476;
  MEM[(uint128_t *)&tmp] = _477;
  _478 = MEM[(uint128_t *)&tmp + 16B];
  _479 = MEM[(const limb *)&ftmp6 + 8B];
  _480 = 9223372036854775776 - _479;
  _481 = (__int128 unsigned) _480;
  _482 = _478 + _481;
  MEM[(uint128_t *)&tmp + 16B] = _482;
  _483 = MEM[(uint128_t *)&tmp + 32B];
  _484 = MEM[(const limb *)&ftmp6 + 16B];
  _485 = 9223372036854775776 - _484;
  _486 = (__int128 unsigned) _485;
  _487 = _483 + _486;
  MEM[(uint128_t *)&tmp + 32B] = _487;
  _488 = MEM[(uint128_t *)&tmp + 48B];
  _489 = MEM[(const limb *)&ftmp6 + 24B];
  _490 = 9223372036854775776 - _489;
  _491 = (__int128 unsigned) _490;
  _492 = _488 + _491;
  MEM[(uint128_t *)&tmp + 48B] = _492;
  _493 = MEM[(uint128_t *)&tmp + 64B];
  _494 = MEM[(const limb *)&ftmp6 + 32B];
  _495 = 9223372036854775776 - _494;
  _496 = (__int128 unsigned) _495;
  _497 = _493 + _496;
  MEM[(uint128_t *)&tmp + 64B] = _497;
  _498 = MEM[(uint128_t *)&tmp + 80B];
  _499 = MEM[(const limb *)&ftmp6 + 40B];
  _500 = 9223372036854775776 - _499;
  _501 = (__int128 unsigned) _500;
  _502 = _498 + _501;
  MEM[(uint128_t *)&tmp + 80B] = _502;
  _503 = MEM[(uint128_t *)&tmp + 96B];
  _504 = MEM[(const limb *)&ftmp6 + 48B];
  _505 = 9223372036854775776 - _504;
  _506 = (__int128 unsigned) _505;
  _507 = _503 + _506;
  MEM[(uint128_t *)&tmp + 96B] = _507;
  _508 = MEM[(uint128_t *)&tmp + 112B];
  _509 = MEM[(const limb *)&ftmp6 + 56B];
  _510 = 9223372036854775776 - _509;
  _511 = (__int128 unsigned) _510;
  _512 = _508 + _511;
  MEM[(uint128_t *)&tmp + 112B] = _512;
  _513 = MEM[(uint128_t *)&tmp + 128B];
  _514 = MEM[(const limb *)&ftmp6 + 64B];
  _515 = 9223372036854775776 - _514;
  _516 = (__int128 unsigned) _515;
  _517 = _513 + _516;
  MEM[(uint128_t *)&tmp + 128B] = _517;
  felem_reduce (&ftmp5, &tmp);
  y_equal_47 = felem_is_zero (&ftmp5);
  _455 = MEM[(limb *)&ftmp5];
  _456 = _455 * 2;
  MEM[(limb *)&ftmp5] = _456;
  _457 = MEM[(limb *)&ftmp5 + 8B];
  _458 = _457 * 2;
  MEM[(limb *)&ftmp5 + 8B] = _458;
  _459 = MEM[(limb *)&ftmp5 + 16B];
  _460 = _459 * 2;
  MEM[(limb *)&ftmp5 + 16B] = _460;
  _461 = MEM[(limb *)&ftmp5 + 24B];
  _462 = _461 * 2;
  MEM[(limb *)&ftmp5 + 24B] = _462;
  _463 = MEM[(limb *)&ftmp5 + 32B];
  _464 = _463 * 2;
  MEM[(limb *)&ftmp5 + 32B] = _464;
  _465 = MEM[(limb *)&ftmp5 + 40B];
  _466 = _465 * 2;
  MEM[(limb *)&ftmp5 + 40B] = _466;
  _467 = MEM[(limb *)&ftmp5 + 48B];
  _468 = _467 * 2;
  MEM[(limb *)&ftmp5 + 48B] = _468;
  _469 = MEM[(limb *)&ftmp5 + 56B];
  _470 = _469 * 2;
  MEM[(limb *)&ftmp5 + 56B] = _470;
  _471 = MEM[(limb *)&ftmp5 + 64B];
  _472 = _471 * 2;
  MEM[(limb *)&ftmp5 + 64B] = _472;
  _1 = x_equal_37 != 0;
  _2 = y_equal_47 != 0;
  _3 = _1 & _2;
  if (_3 != 0)
    goto <bb 6>; [67.00%]
  else
    goto <bb 8>; [33.00%]

  <bb 6> [local count: 83226940]:
  _4 = z1_is_zero_10 | z2_is_zero_13;
  if (_4 == 0)
    goto <bb 7>; [20.24%]
  else
    goto <bb 8>; [79.76%]

  <bb 7> [local count: 16845133]:
  point_double (x3_49(D), y3_50(D), z3_51(D), x1_19(D), y1_29(D), z1_8(D));
  ftmp ={v} {CLOBBER};
  ftmp2 ={v} {CLOBBER};
  ftmp3 ={v} {CLOBBER};
  ftmp4 ={v} {CLOBBER};
  ftmp5 ={v} {CLOBBER};
  ftmp6 ={v} {CLOBBER};
  x_out ={v} {CLOBBER};
  y_out ={v} {CLOBBER};
  z_out ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  tmp2 ={v} {CLOBBER};
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 966367641]:
  _236 = MEM[(const limb *)&ftmp4];
  _237 = MEM[(const limb *)&ftmp4 + 8B];
  _238 = MEM[(const limb *)&ftmp4 + 16B];
  _239 = MEM[(const limb *)&ftmp4 + 24B];
  _240 = MEM[(const limb *)&ftmp4 + 32B];
  _241 = MEM[(const limb *)&ftmp4 + 40B];
  _242 = MEM[(const limb *)&ftmp4 + 48B];
  _243 = MEM[(const limb *)&ftmp4 + 56B];
  _244 = MEM[(const limb *)&ftmp4 + 64B];
  _763 = _236 * 2;
  MEM[(limb *)&ftmp] = _763;
  _765 = _237 * 2;
  MEM[(limb *)&ftmp + 8B] = _765;
  _767 = _238 * 2;
  MEM[(limb *)&ftmp + 16B] = _767;
  _769 = _239 * 2;
  MEM[(limb *)&ftmp + 24B] = _769;
  _771 = _240 * 2;
  MEM[(limb *)&ftmp + 32B] = _771;
  _773 = _241 * 2;
  MEM[(limb *)&ftmp + 40B] = _773;
  _775 = _242 * 2;
  MEM[(limb *)&ftmp + 48B] = _775;
  _777 = _243 * 2;
  MEM[(limb *)&ftmp + 56B] = _777;
  _779 = _244 * 2;
  MEM[(limb *)&ftmp + 64B] = _779;
  felem_square (&tmp, &ftmp);
  felem_reduce (&ftmp, &tmp);
  felem_mul (&tmp, &ftmp4, &ftmp);
  felem_reduce (&ftmp2, &tmp);
  felem_mul (&tmp, &ftmp3, &ftmp);
  felem_reduce (&ftmp4, &tmp);
  felem_square (&tmp, &ftmp5);
  _717 = MEM[(uint128_t *)&tmp];
  _718 = MEM[(const limb *)&ftmp2];
  _719 = 9223372036854775744 - _718;
  _720 = (__int128 unsigned) _719;
  _721 = _717 + _720;
  _722 = MEM[(uint128_t *)&tmp + 16B];
  _723 = MEM[(const limb *)&ftmp2 + 8B];
  _724 = 9223372036854775776 - _723;
  _725 = (__int128 unsigned) _724;
  _726 = _722 + _725;
  _727 = MEM[(uint128_t *)&tmp + 32B];
  _728 = MEM[(const limb *)&ftmp2 + 16B];
  _729 = 9223372036854775776 - _728;
  _730 = (__int128 unsigned) _729;
  _731 = _727 + _730;
  _732 = MEM[(uint128_t *)&tmp + 48B];
  _733 = MEM[(const limb *)&ftmp2 + 24B];
  _734 = 9223372036854775776 - _733;
  _735 = (__int128 unsigned) _734;
  _736 = _732 + _735;
  _737 = MEM[(uint128_t *)&tmp + 64B];
  _738 = MEM[(const limb *)&ftmp2 + 32B];
  _739 = 9223372036854775776 - _738;
  _740 = (__int128 unsigned) _739;
  _741 = _737 + _740;
  _742 = MEM[(uint128_t *)&tmp + 80B];
  _743 = MEM[(const limb *)&ftmp2 + 40B];
  _744 = 9223372036854775776 - _743;
  _745 = (__int128 unsigned) _744;
  _746 = _742 + _745;
  _747 = MEM[(uint128_t *)&tmp + 96B];
  _748 = MEM[(const limb *)&ftmp2 + 48B];
  _749 = 9223372036854775776 - _748;
  _750 = (__int128 unsigned) _749;
  _751 = _747 + _750;
  _752 = MEM[(uint128_t *)&tmp + 112B];
  _753 = MEM[(const limb *)&ftmp2 + 56B];
  _754 = 9223372036854775776 - _753;
  _755 = (__int128 unsigned) _754;
  _756 = _752 + _755;
  _757 = MEM[(uint128_t *)&tmp + 128B];
  _758 = MEM[(const limb *)&ftmp2 + 64B];
  _759 = 9223372036854775776 - _758;
  _760 = (__int128 unsigned) _759;
  _761 = _757 + _760;
  _227 = MEM[(const limb *)&ftmp4];
  MEM[(limb *)&ftmp3] = _227;
  _228 = MEM[(const limb *)&ftmp4 + 8B];
  MEM[(limb *)&ftmp3 + 8B] = _228;
  _229 = MEM[(const limb *)&ftmp4 + 16B];
  MEM[(limb *)&ftmp3 + 16B] = _229;
  _230 = MEM[(const limb *)&ftmp4 + 24B];
  MEM[(limb *)&ftmp3 + 24B] = _230;
  _231 = MEM[(const limb *)&ftmp4 + 32B];
  MEM[(limb *)&ftmp3 + 32B] = _231;
  _232 = MEM[(const limb *)&ftmp4 + 40B];
  MEM[(limb *)&ftmp3 + 40B] = _232;
  _233 = MEM[(const limb *)&ftmp4 + 48B];
  MEM[(limb *)&ftmp3 + 48B] = _233;
  _234 = MEM[(const limb *)&ftmp4 + 56B];
  MEM[(limb *)&ftmp3 + 56B] = _234;
  _235 = MEM[(const limb *)&ftmp4 + 64B];
  MEM[(limb *)&ftmp3 + 64B] = _235;
  _700 = _227 * 2;
  MEM[(limb *)&ftmp4] = _700;
  _702 = _228 * 2;
  MEM[(limb *)&ftmp4 + 8B] = _702;
  _704 = _229 * 2;
  MEM[(limb *)&ftmp4 + 16B] = _704;
  _706 = _230 * 2;
  MEM[(limb *)&ftmp4 + 24B] = _706;
  _708 = _231 * 2;
  MEM[(limb *)&ftmp4 + 32B] = _708;
  _710 = _232 * 2;
  MEM[(limb *)&ftmp4 + 40B] = _710;
  _712 = _233 * 2;
  MEM[(limb *)&ftmp4 + 48B] = _712;
  _714 = _234 * 2;
  MEM[(limb *)&ftmp4 + 56B] = _714;
  _716 = _235 * 2;
  MEM[(limb *)&ftmp4 + 64B] = _716;
  _656 = 9223372036854775744 - _700;
  _657 = (__int128 unsigned) _656;
  _658 = _657 + _721;
  MEM[(uint128_t *)&tmp] = _658;
  _661 = 9223372036854775776 - _702;
  _662 = (__int128 unsigned) _661;
  _663 = _662 + _726;
  MEM[(uint128_t *)&tmp + 16B] = _663;
  _666 = 9223372036854775776 - _704;
  _667 = (__int128 unsigned) _666;
  _668 = _667 + _731;
  MEM[(uint128_t *)&tmp + 32B] = _668;
  _671 = 9223372036854775776 - _706;
  _672 = (__int128 unsigned) _671;
  _673 = _672 + _736;
  MEM[(uint128_t *)&tmp + 48B] = _673;
  _676 = 9223372036854775776 - _708;
  _677 = (__int128 unsigned) _676;
  _678 = _677 + _741;
  MEM[(uint128_t *)&tmp + 64B] = _678;
  _681 = 9223372036854775776 - _710;
  _682 = (__int128 unsigned) _681;
  _683 = _682 + _746;
  MEM[(uint128_t *)&tmp + 80B] = _683;
  _686 = 9223372036854775776 - _712;
  _687 = (__int128 unsigned) _686;
  _688 = _687 + _751;
  MEM[(uint128_t *)&tmp + 96B] = _688;
  _691 = 9223372036854775776 - _714;
  _692 = (__int128 unsigned) _691;
  _693 = _692 + _756;
  MEM[(uint128_t *)&tmp + 112B] = _693;
  _696 = 9223372036854775776 - _716;
  _697 = (__int128 unsigned) _696;
  _698 = _697 + _761;
  MEM[(uint128_t *)&tmp + 128B] = _698;
  felem_reduce (&x_out, &tmp);
  vect__618.326_1043 = MEM[(limb *)&ftmp3];
  vect__618.327_1031 = MEM[(limb *)&ftmp3 + 16B];
  vect__618.328_1029 = MEM[(limb *)&ftmp3 + 32B];
  vect__618.329_1027 = MEM[(limb *)&ftmp3 + 48B];
  vect__619.333_1105 = MEM[(const limb *)&x_out];
  vect__619.334_1103 = MEM[(const limb *)&x_out + 16B];
  vect__619.335_1091 = MEM[(const limb *)&x_out + 32B];
  vect__619.336_1089 = MEM[(const limb *)&x_out + 48B];
  vect__797.330_949 = vect__618.326_1043 + { 4611686018427387872, 4611686018427387888 };
  vect__797.330_946 = vect__618.327_1031 + { 4611686018427387888, 4611686018427387888 };
  vect__797.330_660 = vect__618.328_1029 + { 4611686018427387888, 4611686018427387888 };
  vect__797.330_1106 = vect__618.329_1027 + { 4611686018427387888, 4611686018427387888 };
  vect__621.337_1087 = vect__797.330_949 - vect__619.333_1105;
  vect__621.337_1076 = vect__797.330_946 - vect__619.334_1103;
  vect__621.337_1075 = vect__797.330_660 - vect__619.335_1091;
  vect__621.337_1074 = vect__797.330_1106 - vect__619.336_1089;
  MEM[(limb *)&ftmp3] = vect__621.337_1087;
  MEM[(limb *)&ftmp3 + 16B] = vect__621.337_1076;
  MEM[(limb *)&ftmp3 + 32B] = vect__621.337_1075;
  MEM[(limb *)&ftmp3 + 48B] = vect__621.337_1074;
  _650 = MEM[(limb *)&ftmp3 + 64B];
  _651 = MEM[(const limb *)&x_out + 64B];
  _789 = _650 + 4611686018427387888;
  _653 = _789 - _651;
  MEM[(limb *)&ftmp3 + 64B] = _653;
  felem_mul (&tmp, &ftmp5, &ftmp3);
  felem_mul (&tmp2, &ftmp6, &ftmp2);
  _599 = MEM[(uint128_t *)&tmp2];
  _601 = _599 * 2;
  MEM[(uint128_t *)&tmp2] = _601;
  _602 = MEM[(uint128_t *)&tmp2 + 16B];
  _603 = _602 * 2;
  MEM[(uint128_t *)&tmp2 + 16B] = _603;
  _604 = MEM[(uint128_t *)&tmp2 + 32B];
  _605 = _604 * 2;
  MEM[(uint128_t *)&tmp2 + 32B] = _605;
  _606 = MEM[(uint128_t *)&tmp2 + 48B];
  _607 = _606 * 2;
  MEM[(uint128_t *)&tmp2 + 48B] = _607;
  _608 = MEM[(uint128_t *)&tmp2 + 64B];
  _609 = _608 * 2;
  MEM[(uint128_t *)&tmp2 + 64B] = _609;
  _610 = MEM[(uint128_t *)&tmp2 + 80B];
  _611 = _610 * 2;
  MEM[(uint128_t *)&tmp2 + 80B] = _611;
  _612 = MEM[(uint128_t *)&tmp2 + 96B];
  _613 = _612 * 2;
  MEM[(uint128_t *)&tmp2 + 96B] = _613;
  _614 = MEM[(uint128_t *)&tmp2 + 112B];
  _615 = _614 * 2;
  MEM[(uint128_t *)&tmp2 + 112B] = _615;
  _616 = MEM[(uint128_t *)&tmp2 + 128B];
  _617 = _616 * 2;
  MEM[(uint128_t *)&tmp2 + 128B] = _617;
  _563 = MEM[(uint128_t *)&tmp];
  _259 = _563 + 0x7fffffffffffffc00000000000000000;
  _566 = _259 - _601;
  MEM[(uint128_t *)&tmp] = _566;
  _567 = MEM[(uint128_t *)&tmp + 16B];
  _258 = _567 + 0x7fffffffffffffe00000000000000000;
  _570 = _258 - _603;
  MEM[(uint128_t *)&tmp + 16B] = _570;
  _571 = MEM[(uint128_t *)&tmp + 32B];
  _257 = _571 + 0x7fffffffffffffe00000000000000000;
  _574 = _257 - _605;
  MEM[(uint128_t *)&tmp + 32B] = _574;
  _575 = MEM[(uint128_t *)&tmp + 48B];
  _256 = _575 + 0x7fffffffffffffe00000000000000000;
  _578 = _256 - _607;
  MEM[(uint128_t *)&tmp + 48B] = _578;
  _579 = MEM[(uint128_t *)&tmp + 64B];
  _255 = _579 + 0x7fffffffffffffe00000000000000000;
  _582 = _255 - _609;
  MEM[(uint128_t *)&tmp + 64B] = _582;
  _583 = MEM[(uint128_t *)&tmp + 80B];
  _254 = _583 + 0x7fffffffffffffe00000000000000000;
  _586 = _254 - _611;
  MEM[(uint128_t *)&tmp + 80B] = _586;
  _587 = MEM[(uint128_t *)&tmp + 96B];
  _253 = _587 + 0x7fffffffffffffe00000000000000000;
  _590 = _253 - _613;
  MEM[(uint128_t *)&tmp + 96B] = _590;
  _591 = MEM[(uint128_t *)&tmp + 112B];
  _252 = _591 + 0x7fffffffffffffe00000000000000000;
  _594 = _252 - _615;
  MEM[(uint128_t *)&tmp + 112B] = _594;
  _595 = MEM[(uint128_t *)&tmp + 128B];
  _251 = _595 + 0x7fffffffffffffe00000000000000000;
  _598 = _251 - _617;
  MEM[(uint128_t *)&tmp + 128B] = _598;
  felem_reduce (&y_out, &tmp);
  vect_cst__986 = {z1_is_zero_10, z1_is_zero_10};
  vect__220.275_1122 = MEM[(const limb *)x2_32(D)];
  vect__222.278_1123 = MEM[(limb *)&x_out];
  vect__223.279_1124 = vect__220.275_1122 ^ vect__222.278_1123;
  vect_tmp_224.280_1125 = vect_cst__986 & vect__223.279_1124;
  vect__225.281_1126 = vect__222.278_1123 ^ vect_tmp_224.280_1125;
  vect__220.275_1137 = MEM[(const limb *)x2_32(D) + 16B];
  vect__222.278_1138 = MEM[(limb *)&x_out + 16B];
  vect__223.279_1139 = vect__220.275_1137 ^ vect__222.278_1138;
  vect_tmp_224.280_1140 = vect_cst__986 & vect__223.279_1139;
  vect__225.281_1141 = vect__222.278_1138 ^ vect_tmp_224.280_1140;
  vect__220.275_1152 = MEM[(const limb *)x2_32(D) + 32B];
  vect__222.278_1153 = MEM[(limb *)&x_out + 32B];
  vect__223.279_1154 = vect__220.275_1152 ^ vect__222.278_1153;
  vect_tmp_224.280_1155 = vect_cst__986 & vect__223.279_1154;
  vect__225.281_1156 = vect__222.278_1153 ^ vect_tmp_224.280_1155;
  vect__220.275_981 = MEM[(const limb *)x2_32(D) + 48B];
  vect__222.278_984 = MEM[(limb *)&x_out + 48B];
  vect__223.279_985 = vect__220.275_981 ^ vect__222.278_984;
  vect_tmp_224.280_987 = vect__223.279_985 & vect_cst__986;
  vect__225.281_988 = vect__222.278_984 ^ vect_tmp_224.280_987;
  _969 = MEM[(const limb *)x2_32(D) + 64B];
  _971 = MEM[(limb *)&x_out + 64B];
  _972 = _969 ^ _971;
  tmp_973 = z1_is_zero_10 & _972;
  _974 = _971 ^ tmp_973;
  vect_cst__953 = {z2_is_zero_13, z2_is_zero_13};
  vect__209.262_1077 = MEM[(const limb *)x1_19(D)];
  vect__212.266_1079 = vect__209.262_1077 ^ vect__225.281_1126;
  vect_tmp_213.267_1080 = vect_cst__953 & vect__212.266_1079;
  vect__214.268_1081 = vect_tmp_213.267_1080 ^ vect__225.281_1126;
  MEM[(limb *)&x_out] = vect__214.268_1081;
  vect__209.262_1092 = MEM[(const limb *)x1_19(D) + 16B];
  vect__212.266_1094 = vect__209.262_1092 ^ vect__225.281_1141;
  vect_tmp_213.267_1095 = vect_cst__953 & vect__212.266_1094;
  vect__214.268_1096 = vect_tmp_213.267_1095 ^ vect__225.281_1141;
  MEM[(limb *)&x_out + 16B] = vect__214.268_1096;
  vect__209.262_1107 = MEM[(const limb *)x1_19(D) + 32B];
  vect__212.266_1109 = vect__209.262_1107 ^ vect__225.281_1156;
  vect_tmp_213.267_1110 = vect_cst__953 & vect__212.266_1109;
  vect__214.268_1111 = vect_tmp_213.267_1110 ^ vect__225.281_1156;
  MEM[(limb *)&x_out + 32B] = vect__214.268_1111;
  vect__209.262_948 = MEM[(const limb *)x1_19(D) + 48B];
  vect__212.266_952 = vect__209.262_948 ^ vect__225.281_988;
  vect_tmp_213.267_954 = vect__212.266_952 & vect_cst__953;
  vect__214.268_955 = vect_tmp_213.267_954 ^ vect__225.281_988;
  MEM[(limb *)&x_out + 48B] = vect__214.268_955;
  _936 = MEM[(const limb *)x1_19(D) + 64B];
  _939 = _936 ^ _974;
  tmp_940 = z2_is_zero_13 & _939;
  _941 = tmp_940 ^ _974;
  vect__198.249_1032 = MEM[(const limb *)y2_42(D)];
  vect__200.252_1033 = MEM[(limb *)&y_out];
  vect__201.253_1034 = vect__198.249_1032 ^ vect__200.252_1033;
  vect_tmp_202.254_1035 = vect_cst__986 & vect__201.253_1034;
  vect__203.255_1036 = vect__200.252_1033 ^ vect_tmp_202.254_1035;
  vect__198.249_1047 = MEM[(const limb *)y2_42(D) + 16B];
  vect__200.252_1048 = MEM[(limb *)&y_out + 16B];
  vect__201.253_1049 = vect__198.249_1047 ^ vect__200.252_1048;
  vect_tmp_202.254_1050 = vect_cst__986 & vect__201.253_1049;
  vect__203.255_1051 = vect__200.252_1048 ^ vect_tmp_202.254_1050;
  vect__198.249_1062 = MEM[(const limb *)y2_42(D) + 32B];
  vect__200.252_1063 = MEM[(limb *)&y_out + 32B];
  vect__201.253_1064 = vect__198.249_1062 ^ vect__200.252_1063;
  vect_tmp_202.254_1065 = vect_cst__986 & vect__201.253_1064;
  vect__203.255_1066 = vect__200.252_1063 ^ vect_tmp_202.254_1065;
  vect__198.249_915 = MEM[(const limb *)y2_42(D) + 48B];
  vect__200.252_918 = MEM[(limb *)&y_out + 48B];
  vect__201.253_919 = vect__198.249_915 ^ vect__200.252_918;
  vect_tmp_202.254_921 = vect__201.253_919 & vect_cst__986;
  vect__203.255_922 = vect__200.252_918 ^ vect_tmp_202.254_921;
  _903 = MEM[(const limb *)y2_42(D) + 64B];
  _905 = MEM[(limb *)&y_out + 64B];
  _906 = _903 ^ _905;
  tmp_907 = z1_is_zero_10 & _906;
  _908 = _905 ^ tmp_907;
  vect__187.236_768 = MEM[(const limb *)y1_29(D)];
  vect__190.240_279 = vect__187.236_768 ^ vect__203.255_1036;
  vect_tmp_191.241_280 = vect__190.240_279 & vect_cst__953;
  vect__192.242_281 = vect_tmp_191.241_280 ^ vect__203.255_1036;
  MEM[(limb *)&y_out] = vect__192.242_281;
  vect__187.236_1002 = MEM[(const limb *)y1_29(D) + 16B];
  vect__190.240_1004 = vect__187.236_1002 ^ vect__203.255_1051;
  vect_tmp_191.241_1005 = vect_cst__953 & vect__190.240_1004;
  vect__192.242_1006 = vect_tmp_191.241_1005 ^ vect__203.255_1051;
  MEM[(limb *)&y_out + 16B] = vect__192.242_1006;
  vect__187.236_1017 = MEM[(const limb *)y1_29(D) + 32B];
  vect__190.240_1019 = vect__187.236_1017 ^ vect__203.255_1066;
  vect_tmp_191.241_1020 = vect_cst__953 & vect__190.240_1019;
  vect__192.242_1021 = vect_tmp_191.241_1020 ^ vect__203.255_1066;
  MEM[(limb *)&y_out + 32B] = vect__192.242_1021;
  vect__187.236_580 = MEM[(const limb *)y1_29(D) + 48B];
  vect__190.240_440 = vect__187.236_580 ^ vect__203.255_922;
  vect_tmp_191.241_76 = vect__190.240_440 & vect_cst__953;
  vect__192.242_64 = vect_tmp_191.241_76 ^ vect__203.255_922;
  MEM[(limb *)&y_out + 48B] = vect__192.242_64;
  _762 = MEM[(const limb *)y1_29(D) + 64B];
  _695 = _762 ^ _908;
  tmp_694 = z2_is_zero_13 & _695;
  _680 = tmp_694 ^ _908;
  vect__176.223_199 = MEM[(const limb *)z2_11(D)];
  vect__178.226_200 = MEM[(limb *)&z_out];
  vect__179.227_201 = vect__176.223_199 ^ vect__178.226_200;
  vect_tmp_180.228_202 = vect__179.227_201 & vect_cst__986;
  vect__181.229_203 = vect__178.226_200 ^ vect_tmp_180.228_202;
  vect__176.223_192 = MEM[(const limb *)z2_11(D) + 16B];
  vect__178.226_193 = MEM[(limb *)&z_out + 16B];
  vect__179.227_847 = vect__176.223_192 ^ vect__178.226_193;
  vect_tmp_180.228_173 = vect__179.227_847 & vect_cst__986;
  vect__181.229_174 = vect_tmp_180.228_173 ^ vect__178.226_193;
  vect__176.223_163 = MEM[(const limb *)z2_11(D) + 32B];
  vect__178.226_164 = MEM[(limb *)&z_out + 32B];
  vect__179.227_165 = vect__176.223_163 ^ vect__178.226_164;
  vect_tmp_180.228_166 = vect__179.227_165 & vect_cst__986;
  vect__181.229_167 = vect__178.226_164 ^ vect_tmp_180.228_166;
  vect__176.223_267 = MEM[(const limb *)z2_11(D) + 48B];
  vect__178.226_264 = MEM[(limb *)&z_out + 48B];
  vect__179.227_263 = vect__178.226_264 ^ vect__176.223_267;
  vect_tmp_180.228_261 = vect__179.227_263 & vect_cst__986;
  vect__181.229_260 = vect_tmp_180.228_261 ^ vect__178.226_264;
  _397 = MEM[(const limb *)z2_11(D) + 64B];
  _387 = MEM[(limb *)&z_out + 64B];
  _378 = _387 ^ _397;
  tmp_368 = z1_is_zero_10 & _378;
  _363 = tmp_368 ^ _387;
  vect__165.210_343 = MEM[(const limb *)z1_8(D)];
  vect__168.214_711 = vect__181.229_203 ^ vect__165.210_343;
  vect_tmp_169.215_216 = vect__168.214_711 & vect_cst__953;
  vect__170.216_675 = vect__181.229_203 ^ vect_tmp_169.215_216;
  MEM[(limb *)&z_out] = vect__170.216_675;
  vect__165.210_962 = MEM[(const limb *)z1_8(D) + 16B];
  vect__168.214_776 = vect__181.229_174 ^ vect__165.210_962;
  vect_tmp_169.215_655 = vect__168.214_776 & vect_cst__953;
  vect__170.216_217 = vect__181.229_174 ^ vect_tmp_169.215_655;
  MEM[(limb *)&z_out + 16B] = vect__170.216_217;
  vect__165.210_206 = MEM[(const limb *)z1_8(D) + 32B];
  vect__168.214_208 = vect__181.229_167 ^ vect__165.210_206;
  vect_tmp_169.215_209 = vect__168.214_208 & vect_cst__953;
  vect__170.216_210 = vect__181.229_167 ^ vect_tmp_169.215_209;
  MEM[(limb *)&z_out + 32B] = vect__170.216_210;
  vect__165.210_589 = MEM[(const limb *)z1_8(D) + 48B];
  vect__168.214_573 = vect__181.229_260 ^ vect__165.210_589;
  vect_tmp_169.215_569 = vect__168.214_573 & vect_cst__953;
  vect__170.216_568 = vect__181.229_260 ^ vect_tmp_169.215_569;
  MEM[(limb *)&z_out + 48B] = vect__170.216_568;
  _648 = MEM[(const limb *)z1_8(D) + 64B];
  _636 = _363 ^ _648;
  tmp_632 = z2_is_zero_13 & _636;
  _628 = _363 ^ tmp_632;
  _152 = MEM[(const limb *)&x_out];
  *x3_49(D) = _152;
  _153 = MEM[(const limb *)&x_out + 8B];
  MEM[(limb *)x3_49(D) + 8B] = _153;
  _154 = MEM[(const limb *)&x_out + 16B];
  MEM[(limb *)x3_49(D) + 16B] = _154;
  _155 = MEM[(const limb *)&x_out + 24B];
  MEM[(limb *)x3_49(D) + 24B] = _155;
  _156 = MEM[(const limb *)&x_out + 32B];
  MEM[(limb *)x3_49(D) + 32B] = _156;
  _157 = MEM[(const limb *)&x_out + 40B];
  MEM[(limb *)x3_49(D) + 40B] = _157;
  _158 = MEM[(const limb *)&x_out + 48B];
  MEM[(limb *)x3_49(D) + 48B] = _158;
  _159 = MEM[(const limb *)&x_out + 56B];
  MEM[(limb *)x3_49(D) + 56B] = _159;
  MEM[(limb *)x3_49(D) + 64B] = _941;
  _143 = MEM[(const limb *)&y_out];
  *y3_50(D) = _143;
  _144 = MEM[(const limb *)&y_out + 8B];
  MEM[(limb *)y3_50(D) + 8B] = _144;
  _145 = MEM[(const limb *)&y_out + 16B];
  MEM[(limb *)y3_50(D) + 16B] = _145;
  _146 = MEM[(const limb *)&y_out + 24B];
  MEM[(limb *)y3_50(D) + 24B] = _146;
  _147 = MEM[(const limb *)&y_out + 32B];
  MEM[(limb *)y3_50(D) + 32B] = _147;
  _148 = MEM[(const limb *)&y_out + 40B];
  MEM[(limb *)y3_50(D) + 40B] = _148;
  _149 = MEM[(const limb *)&y_out + 48B];
  MEM[(limb *)y3_50(D) + 48B] = _149;
  _150 = MEM[(const limb *)&y_out + 56B];
  MEM[(limb *)y3_50(D) + 56B] = _150;
  MEM[(limb *)y3_50(D) + 64B] = _680;
  _134 = MEM[(const limb *)&z_out];
  *z3_51(D) = _134;
  _135 = MEM[(const limb *)&z_out + 8B];
  MEM[(limb *)z3_51(D) + 8B] = _135;
  _136 = MEM[(const limb *)&z_out + 16B];
  MEM[(limb *)z3_51(D) + 16B] = _136;
  _137 = MEM[(const limb *)&z_out + 24B];
  MEM[(limb *)z3_51(D) + 24B] = _137;
  _138 = MEM[(const limb *)&z_out + 32B];
  MEM[(limb *)z3_51(D) + 32B] = _138;
  _139 = MEM[(const limb *)&z_out + 40B];
  MEM[(limb *)z3_51(D) + 40B] = _139;
  _140 = MEM[(const limb *)&z_out + 48B];
  MEM[(limb *)z3_51(D) + 48B] = _140;
  _141 = MEM[(const limb *)&z_out + 56B];
  MEM[(limb *)z3_51(D) + 56B] = _141;
  MEM[(limb *)z3_51(D) + 64B] = _628;
  ftmp ={v} {CLOBBER};
  ftmp2 ={v} {CLOBBER};
  ftmp3 ={v} {CLOBBER};
  ftmp4 ={v} {CLOBBER};
  ftmp5 ={v} {CLOBBER};
  ftmp6 ={v} {CLOBBER};
  x_out ={v} {CLOBBER};
  y_out ={v} {CLOBBER};
  z_out ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  tmp2 ={v} {CLOBBER};

  <bb 9> [local count: 124219315]:
  return;

}



;; Function batch_mul (batch_mul, funcdef_no=430, decl_uid=10646, cgraph_uid=430, symbol_order=436)

batch_mul (limb * x_out, limb * y_out, limb * z_out, const u8[66] * scalars, const unsigned int num_points, const u8 * g_scalar, const int mixed, const limb[17][3][9] * pre_comp, const limb[3][9] * g_pre_comp)
{
  vector(2) long unsigned int tmp__lsm.561;
  limb D__lsm.560;
  vector(2) long unsigned int tmp__lsm.559;
  vector(2) long unsigned int tmp__lsm.557;
  long unsigned int ivtmp.544;
  unsigned long ivtmp.543;
  unsigned long ivtmp.533;
  long unsigned int ivtmp.532;
  unsigned long ivtmp.524;
  unsigned long ivtmp.519;
  long unsigned int ivtmp.511;
  unsigned long ivtmp.510;
  unsigned long ivtmp.491;
  sizetype ivtmp.490;
  const vector(2) long unsigned int vect__349.475;
  vector(2) long unsigned int vect_tmp_348.474;
  const vector(2) long unsigned int vect__347.473;
  vector(2) long unsigned int vect__286.472;
  const vector(2) long unsigned int vect__285.471;
  const vector(2) long unsigned int vect__285.470;
  const vector(2) long unsigned int vect__285.469;
  const vector(2) long unsigned int vect__285.468;
  const vector(2) long unsigned int vect__199.463;
  const vector(2) long unsigned int vect__199.462;
  const vector(2) long unsigned int vect__199.461;
  const vector(2) long unsigned int vect__199.460;
  const vector(2) long unsigned int vect__208.455;
  const vector(2) long unsigned int vect__208.454;
  const vector(2) long unsigned int vect__208.453;
  const vector(2) long unsigned int vect__208.452;
  const vector(2) long unsigned int vect__217.447;
  const vector(2) long unsigned int vect__217.446;
  const vector(2) long unsigned int vect__217.445;
  const vector(2) long unsigned int vect__217.444;
  vector(2) long unsigned int vect__725.433;
  vector(2) long unsigned int vect__726.432;
  const vector(2) long unsigned int vect__727.431;
  const vector(2) long unsigned int vect__727.430;
  vector(2) long unsigned int vect_mask_755.423;
  vector(2) long unsigned int vect_mask_756.422;
  vector(2) long unsigned int vect_mask_757.421;
  vector(2) long unsigned int vect__758.420;
  vector(2) long unsigned int vect_mask_759.419;
  vector(2) long unsigned int vect__760.418;
  vector(2) long unsigned int vect_mask_761.417;
  vector(2) long unsigned int vect__765.416;
  vector(4) unsigned int vect_i_284.415;
  vector(2) long unsigned int vect__282.412;
  vector(2) long unsigned int vect__281.411;
  const vector(2) long unsigned int vect__280.410;
  const vector(2) long unsigned int vect__280.409;
  vector(2) long unsigned int vect__278.406;
  vector(2) long unsigned int vect__278.405;
  vector(2) long unsigned int vect__774.398;
  vector(2) long unsigned int vect__775.397;
  const vector(2) long unsigned int vect__776.396;
  vector(2) long unsigned int vect__778.393;
  vector(2) long unsigned int vect__641.386;
  vector(2) long unsigned int vect__642.385;
  const vector(2) long unsigned int vect__643.384;
  const vector(2) long unsigned int vect__643.383;
  vector(2) long unsigned int vect_mask_651.376;
  vector(2) long unsigned int vect_mask_652.375;
  vector(2) long unsigned int vect_mask_653.374;
  vector(2) long unsigned int vect__654.373;
  vector(2) long unsigned int vect_mask_655.372;
  vector(2) long unsigned int vect__656.371;
  vector(2) long unsigned int vect_mask_657.370;
  vector(2) long unsigned int vect__658.369;
  vector(2) long unsigned int vect_mask_659.368;
  vector(2) long unsigned int vect__668.367;
  vector(4) unsigned int vect_i_329.366;
  vector(2) long unsigned int vect__327.363;
  vector(2) long unsigned int vect__326.362;
  const vector(2) long unsigned int vect__325.361;
  const vector(2) long unsigned int vect__325.360;
  vector(2) long unsigned int vect__323.357;
  vector(2) long unsigned int vect__323.356;
  vector(2) long unsigned int vect__677.349;
  vector(2) long unsigned int vect__678.348;
  const vector(2) long unsigned int vect__679.347;
  vector(2) long unsigned int vect__681.344;
  limb mask;
  unsigned int i;
  limb mask;
  unsigned int i;
  const limb tmp;
  u8 digit;
  u8 sign;
  limb bits;
  limb tmp[4][9];
  limb nq[3][9];
  int skip;
  int i;
  _Bool _1;
  _Bool _3;
  _Bool _4;
  int _6;
  int _7;
  int _9;
  int _11;
  long unsigned int _12;
  int _13;
  unsigned int _14;
  int _17;
  int _18;
  unsigned int _19;
  int _20;
  unsigned int _21;
  int _22;
  unsigned int _23;
  int _24;
  int _25;
  unsigned char digit.6_32;
  long unsigned int _33;
  unsigned char sign.7_34;
  long unsigned int _35;
  long unsigned int _36;
  int _39;
  vector(2) long unsigned int vect_cst__48;
  int _53;
  unsigned char _58;
  const u8 * _60;
  int _61;
  sizetype _62;
  int _63;
  int _65;
  int _70;
  int _73;
  int _74;
  int _75;
  int _77;
  int _78;
  int _80;
  int _92;
  int _100;
  int _101;
  int _102;
  char _103;
  char _104;
  int _105;
  sizetype _106;
  const u8 * _107;
  unsigned char _108;
  int _109;
  int _110;
  int _111;
  char _112;
  char _113;
  int _114;
  sizetype _115;
  const u8 * _116;
  unsigned char _117;
  int _118;
  int _119;
  int _120;
  char _121;
  char _122;
  int _123;
  sizetype _124;
  const u8 * _125;
  unsigned char _126;
  int _127;
  int _128;
  int _129;
  char _130;
  char _131;
  int _140;
  int _143;
  sizetype _144;
  unsigned char _146;
  int _147;
  int _148;
  int _149;
  char _150;
  char _151;
  int _153;
  sizetype _154;
  unsigned char _156;
  int _157;
  int _159;
  char _160;
  char _161;
  int _162;
  sizetype _163;
  unsigned char _165;
  int _166;
  int _168;
  char _169;
  char _170;
  int _172;
  sizetype _173;
  unsigned char _175;
  int _176;
  int _178;
  char _179;
  char _180;
  int _181;
  sizetype _182;
  unsigned char _184;
  int _185;
  int _187;
  char _188;
  char _189;
  int _190;
  sizetype _191;
  unsigned char _193;
  int _194;
  int _196;
  char _197;
  char _198;
  long unsigned int _207;
  long unsigned int _216;
  long unsigned int _225;
  void * _240;
  vector(2) long unsigned int vect_cst__267;
  long unsigned int _268;
  long unsigned int _270;
  long unsigned int _301;
  long unsigned int _302;
  const limb[3][9] * _308;
  long unsigned int _311;
  long unsigned int _313;
  long unsigned int _315;
  long unsigned int _359;
  long unsigned int _364;
  long unsigned int _365;
  long unsigned int _393;
  long unsigned int _394;
  long unsigned int _395;
  long unsigned int _397;
  void * _415;
  unsigned long _429;
  vector(2) long unsigned int vect_cst__447;
  long unsigned int _451;
  long unsigned int _453;
  long unsigned int _464;
  long unsigned int _465;
  long unsigned int _466;
  unsigned long _475;
  vector(2) long unsigned int vect_cst__525;
  vector(2) long unsigned int vect_cst__541;
  unsigned int _553;
  unsigned int _554;
  long unsigned int _556;
  long unsigned int _557;
  long unsigned int _558;
  int _562;
  unsigned int _563;
  long unsigned int _580;
  long unsigned int _581;
  long unsigned int _582;
  long unsigned int _584;
  unsigned int _586;
  int _587;
  long unsigned int _589;
  unsigned int _590;
  vector(2) long unsigned int vect_cst__612;
  long unsigned int _623;
  long unsigned int _624;
  long unsigned int _625;
  const limb[3][9] * _629;
  void * _630;
  unsigned long _637;
  unsigned int _650;
  unsigned long _671;
  long unsigned int _690;
  long unsigned int _692;
  long unsigned int _694;
  int _715;
  int _716;
  int _717;
  int _718;
  int _719;
  long unsigned int _730;
  long unsigned int _732;
  int _733;
  int prephitmp_734;
  long unsigned int _752;
  void * _759;
  unsigned int _769;
  long unsigned int _787;
  long unsigned int _789;
  int _812;
  long unsigned int _831;
  long unsigned int _833;
  long unsigned int _834;
  long unsigned int _835;
  long unsigned int _845;
  long unsigned int _847;
  long unsigned int _849;
  long unsigned int _858;
  long unsigned int _859;
  long unsigned int _860;
  int _866;
  unsigned int _867;
  long unsigned int _870;
  long unsigned int _872;
  long unsigned int _873;
  long unsigned int _874;
  int _892;
  unsigned int _893;
  long unsigned int _897;
  long unsigned int _898;
  long unsigned int _899;
  int _902;
  unsigned long _906;
  int _907;
  unsigned int _916;
  int _930;
  unsigned int _935;
  vector(2) long unsigned int _1001;
  long unsigned int _1077;
  long unsigned int _1079;
  long unsigned int _1080;
  long unsigned int _1081;
  long unsigned int _1090;
  long unsigned int _1092;
  long unsigned int _1101;
  long unsigned int _1102;
  long unsigned int _1103;
  long unsigned int _1113;
  long unsigned int _1115;
  long unsigned int _1116;
  long unsigned int _1117;
  unsigned long _1124;
  long unsigned int _1137;
  long unsigned int _1138;
  long unsigned int _1139;
  unsigned long _1203;
  unsigned int _1204;
  void * _1323;
  void * _1325;
  sizetype _1326;
  unsigned char _1328;
  const u8 * _1384;
  unsigned int _1385;
  const vector(2) long unsigned int * _1389;
  int _1440;

  <bb 2> [local count: 12149864]:
  _1 = g_scalar_51(D) != 0B;
  __builtin_memset (&nq, 0, 216);
  if (num_points_54(D) != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 6074932]:

  <bb 4> [local count: 12149864]:
  # i_44 = PHI <520(2), 130(3)>
  _1204 = num_points_54(D) + 4294967295;
  _1203 = (unsigned long) _1204;
  _475 = _1203 * 3672;
  _637 = (unsigned long) pre_comp_83(D);
  _1124 = _637 + 3672;
  _671 = _475 + _1124;
  goto <bb 8>; [100.00%]

  <bb 5> [local count: 47889389]:
  if (skip_436 == 0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [100.00%]

  <bb 6> [local count: 37971586]:
  point_double (&nq[0], &nq[1], &nq[2], &nq[0], &nq[1], &nq[2]);

  <bb 7> [local count: 80622277]:
  # skip_28 = PHI <0(6), skip_436(5)>

  <bb 8> [local count: 98303560]:
  # i_423 = PHI <_812(7), i_44(4)>
  # skip_436 = PHI <skip_28(7), 1(4)>
  _3 = i_423 <= 130;
  _4 = _1 & _3;
  _812 = i_423 + -1;
  if (_4 != 0)
    goto <bb 9>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 9> [local count: 49151769]:
  _14 = (unsigned int) i_423;
  _867 = _14 + 390;
  _866 = (int) _867;
  _65 = _866 >> 3;
  _62 = (sizetype) _65;
  _60 = g_scalar_51(D) + _62;
  _58 = *_60;
  _100 = (int) _58;
  _101 = _866 & 7;
  _102 = _100 >> _101;
  _103 = (char) _102;
  _104 = _103 & 1;
  _6 = (int) _104;
  _7 = _6 << 3;
  if (i_423 != 130)
    goto <bb 11>; [36.00%]
  else
    goto <bb 10>; [64.00%]

  <bb 10> [local count: 31457132]:
  bits_59 = (limb) _7;
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 17694637]:
  _19 = (unsigned int) i_423;
  _590 = _19 + 260;
  _902 = (int) _590;
  _123 = _902 >> 3;
  _124 = (sizetype) _123;
  _125 = g_scalar_51(D) + _124;
  _126 = *_125;
  _127 = (int) _126;
  _128 = _902 & 7;
  _129 = _127 >> _128;
  _130 = (char) _129;
  _131 = _130 & 1;
  _9 = (int) _131;
  _61 = _9 << 2;
  _80 = _7 | _61;
  _553 = (unsigned int) i_423;
  _893 = _553 + 130;
  _892 = (int) _893;
  _114 = _892 >> 3;
  _115 = (sizetype) _114;
  _116 = g_scalar_51(D) + _115;
  _117 = *_116;
  _118 = (int) _117;
  _119 = _892 & 7;
  _120 = _118 >> _119;
  _121 = (char) _120;
  _122 = _121 & 1;
  _11 = (int) _122;
  _63 = _11 << 1;
  _53 = _63 | _80;
  bits_64 = (limb) _53;
  _105 = i_423 >> 3;
  _106 = (sizetype) _105;
  _107 = g_scalar_51(D) + _106;
  _108 = *_107;
  _109 = (int) _108;
  _110 = i_423 & 7;
  _111 = _109 >> _110;
  _112 = (char) _111;
  _113 = _112 & 1;
  _12 = (long unsigned int) _113;
  bits_66 = _12 | bits_64;

  <bb 12> [local count: 49151769]:
  # bits_43 = PHI <bits_66(11), bits_59(10)>
  __builtin_memset (&tmp, 0, 216);
  ivtmp.543_661 = (unsigned long) g_pre_comp_67(D);
  tmp__lsm.561_263 = MEM[(limb *)&tmp];

  <bb 13> [local count: 49151770]:
  # i_442 = PHI <0(12), i_722(13)>
  # ivtmp.543_645 = PHI <ivtmp.543_661(12), ivtmp.543_656(13)>
  # ivtmp.544_323 = PHI <1(12), ivtmp.544_669(13)>
  # tmp__lsm.561_744 = PHI <tmp__lsm.561_263(12), vect__725.433_1191(13)>
  _752 = ivtmp.544_323 + 18446744073709551615;
  mask_265 = bits_43 ^ _752;
  _268 = mask_265 >> 2;
  mask_269 = mask_265 | _268;
  _270 = mask_269 >> 1;
  mask_271 = mask_269 | _270;
  mask_272 = mask_271 & 1;
  mask_273 = mask_272 + 18446744073709551615;
  vect_cst__267 = {mask_273, mask_273};
  vect_cst__48 = {bits_43, bits_43};
  vect__278.406_1153 = MEM[(limb *)&tmp + 16B];
  _759 = (void *) ivtmp.543_645;
  vect__280.409_1154 = MEM[base: _759, offset: 0B];
  vect__280.410_1156 = MEM[base: _759, offset: 16B];
  vect__281.411_1157 = vect_cst__267 & vect__280.409_1154;
  vect__281.411_1158 = vect_cst__267 & vect__280.410_1156;
  vect__282.412_1159 = tmp__lsm.561_744 | vect__281.411_1157;
  vect__282.412_1160 = vect__278.406_1153 | vect__281.411_1158;
  _769 = i_442 + 1;
  vect_i_284.415_1166 = {_769, _769, _769, _769};
  vect__765.416_1167 = [vec_unpack_lo_expr] vect_i_284.415_1166;
  vect__765.416_1168 = [vec_unpack_hi_expr] vect_i_284.415_1166;
  vect_mask_761.417_1169 = vect_cst__48 ^ vect__765.416_1167;
  vect_mask_761.417_1170 = vect_cst__48 ^ vect__765.416_1168;
  vect__760.418_1171 = vect_mask_761.417_1169 >> 2;
  vect__760.418_1172 = vect_mask_761.417_1170 >> 2;
  vect_mask_759.419_1173 = vect_mask_761.417_1169 | vect__760.418_1171;
  vect_mask_759.419_1174 = vect_mask_761.417_1170 | vect__760.418_1172;
  vect__758.420_1175 = vect_mask_759.419_1173 >> 1;
  vect__758.420_1176 = vect_mask_759.419_1174 >> 1;
  vect_mask_757.421_1177 = vect_mask_759.419_1173 | vect__758.420_1175;
  vect_mask_757.421_1178 = vect_mask_759.419_1174 | vect__758.420_1176;
  vect_mask_756.422_1179 = vect_mask_757.421_1177 & { 1, 1 };
  vect_mask_756.422_1180 = vect_mask_757.421_1178 & { 1, 1 };
  vect_mask_755.423_1181 = vect_mask_756.422_1179 + { 18446744073709551615, 18446744073709551615 };
  vect_mask_755.423_1182 = vect_mask_756.422_1180 + { 18446744073709551615, 18446744073709551615 };
  vect__727.430_1186 = MEM[base: _759, offset: 216B];
  vect__727.431_1188 = MEM[base: _759, offset: 232B];
  vect__726.432_1189 = vect_mask_755.423_1181 & vect__727.430_1186;
  vect__726.432_1190 = vect_mask_755.423_1182 & vect__727.431_1188;
  vect__725.433_1191 = vect__282.412_1159 | vect__726.432_1189;
  vect__725.433_1192 = vect__282.412_1160 | vect__726.432_1190;
  MEM[(limb *)&tmp + 16B] = vect__725.433_1192;
  vect__278.405_1211 = MEM[(limb *)&tmp + 32B];
  vect__278.406_1213 = MEM[(limb *)&tmp + 48B];
  vect__280.409_1214 = MEM[base: _759, offset: 32B];
  vect__280.410_1216 = MEM[base: _759, offset: 48B];
  vect__281.411_1217 = vect_cst__267 & vect__280.409_1214;
  vect__281.411_1218 = vect_cst__267 & vect__280.410_1216;
  vect__282.412_1219 = vect__278.405_1211 | vect__281.411_1217;
  vect__282.412_1220 = vect__278.406_1213 | vect__281.411_1218;
  vect__727.430_1246 = MEM[base: _759, offset: 248B];
  vect__727.431_1248 = MEM[base: _759, offset: 264B];
  vect__726.432_1249 = vect_mask_755.423_1181 & vect__727.430_1246;
  vect__726.432_1250 = vect_mask_755.423_1182 & vect__727.431_1248;
  vect__725.433_1251 = vect__282.412_1219 | vect__726.432_1249;
  vect__725.433_1252 = vect__282.412_1220 | vect__726.432_1250;
  MEM[(limb *)&tmp + 32B] = vect__725.433_1251;
  MEM[(limb *)&tmp + 48B] = vect__725.433_1252;
  vect__278.405_1271 = MEM[(limb *)&tmp + 64B];
  vect__278.406_1273 = MEM[(limb *)&tmp + 80B];
  vect__280.409_1274 = MEM[base: _759, offset: 64B];
  vect__280.410_1276 = MEM[base: _759, offset: 80B];
  vect__281.411_1277 = vect_cst__267 & vect__280.409_1274;
  vect__281.411_1278 = vect_cst__267 & vect__280.410_1276;
  vect__282.412_1279 = vect__278.405_1271 | vect__281.411_1277;
  vect__282.412_1280 = vect__278.406_1273 | vect__281.411_1278;
  vect__727.430_1306 = MEM[base: _759, offset: 280B];
  vect__727.431_1308 = MEM[base: _759, offset: 296B];
  vect__726.432_1309 = vect_mask_755.423_1181 & vect__727.430_1306;
  vect__726.432_1310 = vect_mask_755.423_1182 & vect__727.431_1308;
  vect__725.433_1311 = vect__282.412_1279 | vect__726.432_1309;
  vect__725.433_1312 = vect__282.412_1280 | vect__726.432_1310;
  MEM[(limb *)&tmp + 64B] = vect__725.433_1311;
  MEM[(limb *)&tmp + 80B] = vect__725.433_1312;
  vect__278.405_1331 = MEM[(limb *)&tmp + 96B];
  vect__278.406_1333 = MEM[(limb *)&tmp + 112B];
  vect__280.409_1334 = MEM[base: _759, offset: 96B];
  vect__280.410_1336 = MEM[base: _759, offset: 112B];
  vect__281.411_1337 = vect_cst__267 & vect__280.409_1334;
  vect__281.411_1338 = vect_cst__267 & vect__280.410_1336;
  vect__282.412_1339 = vect__278.405_1331 | vect__281.411_1337;
  vect__282.412_1340 = vect__278.406_1333 | vect__281.411_1338;
  vect__727.430_1366 = MEM[base: _759, offset: 312B];
  vect__727.431_1368 = MEM[base: _759, offset: 328B];
  vect__726.432_1369 = vect_mask_755.423_1181 & vect__727.430_1366;
  vect__726.432_1370 = vect_mask_755.423_1182 & vect__727.431_1368;
  vect__725.433_1371 = vect__282.412_1339 | vect__726.432_1369;
  vect__725.433_1372 = vect__282.412_1340 | vect__726.432_1370;
  MEM[(limb *)&tmp + 96B] = vect__725.433_1371;
  MEM[(limb *)&tmp + 112B] = vect__725.433_1372;
  vect__278.405_1391 = MEM[(limb *)&tmp + 128B];
  vect__278.406_1393 = MEM[(limb *)&tmp + 144B];
  vect__280.409_1394 = MEM[base: _759, offset: 128B];
  vect__280.410_1396 = MEM[base: _759, offset: 144B];
  vect__281.411_1397 = vect_cst__267 & vect__280.409_1394;
  vect__281.411_1398 = vect_cst__267 & vect__280.410_1396;
  vect__282.412_1399 = vect__278.405_1391 | vect__281.411_1397;
  vect__282.412_1400 = vect__278.406_1393 | vect__281.411_1398;
  vect__727.430_1426 = MEM[base: _759, offset: 344B];
  vect__727.431_1428 = MEM[base: _759, offset: 360B];
  vect__726.432_1429 = vect_mask_755.423_1181 & vect__727.430_1426;
  vect__726.432_1430 = vect_mask_755.423_1182 & vect__727.431_1428;
  vect__725.433_1431 = vect__282.412_1399 | vect__726.432_1429;
  vect__725.433_1432 = vect__282.412_1400 | vect__726.432_1430;
  MEM[(limb *)&tmp + 128B] = vect__725.433_1431;
  MEM[(limb *)&tmp + 144B] = vect__725.433_1432;
  vect__278.405_352 = MEM[(limb *)&tmp + 160B];
  vect__278.406_333 = MEM[(limb *)&tmp + 176B];
  vect__280.409_304 = MEM[base: _759, offset: 160B];
  vect__280.410_274 = MEM[base: _759, offset: 176B];
  vect__281.411_266 = vect_cst__267 & vect__280.409_304;
  vect__281.411_260 = vect_cst__267 & vect__280.410_274;
  vect__282.412_259 = vect__281.411_266 | vect__278.405_352;
  vect__282.412_258 = vect__281.411_260 | vect__278.406_333;
  vect__727.430_747 = MEM[base: _759, offset: 376B];
  vect__727.431_736 = MEM[base: _759, offset: 392B];
  vect__726.432_739 = vect__727.430_747 & vect_mask_755.423_1181;
  vect__726.432_737 = vect__727.431_736 & vect_mask_755.423_1182;
  vect__725.433_738 = vect__282.412_259 | vect__726.432_739;
  vect__725.433_735 = vect__282.412_258 | vect__726.432_737;
  MEM[(limb *)&tmp + 160B] = vect__725.433_738;
  MEM[(limb *)&tmp + 176B] = vect__725.433_735;
  _1077 = MEM[(limb *)&tmp + 192B];
  _1079 = MEM[base: _759, offset: 192B];
  _1080 = mask_273 & _1079;
  _1081 = _1077 | _1080;
  mask_1089 = bits_43 ^ ivtmp.544_323;
  _1090 = mask_1089 >> 2;
  mask_1091 = mask_1089 | _1090;
  _1092 = mask_1091 >> 1;
  mask_1093 = mask_1091 | _1092;
  mask_1094 = mask_1093 & 1;
  mask_1095 = mask_1094 + 18446744073709551615;
  _1101 = MEM[base: _759, offset: 408B];
  _1102 = mask_1095 & _1101;
  _1103 = _1081 | _1102;
  MEM[(limb *)&tmp + 192B] = _1103;
  _1113 = MEM[(limb *)&tmp + 200B];
  _1115 = MEM[base: _759, offset: 200B];
  _1116 = mask_273 & _1115;
  _1117 = _1113 | _1116;
  _1137 = MEM[base: _759, offset: 416B];
  _1138 = mask_1095 & _1137;
  _1139 = _1117 | _1138;
  MEM[(limb *)&tmp + 200B] = _1139;
  _397 = MEM[(limb *)&tmp + 208B];
  _395 = MEM[base: _759, offset: 208B];
  _394 = mask_273 & _395;
  _393 = _394 | _397;
  _365 = MEM[base: _759, offset: 424B];
  _364 = _365 & mask_1095;
  _359 = _364 | _393;
  MEM[(limb *)&tmp + 208B] = _359;
  i_722 = i_442 + 2;
  ivtmp.543_656 = ivtmp.543_645 + 432;
  ivtmp.544_669 = ivtmp.544_323 + 2;
  if (i_722 != 14)
    goto <bb 13>; [83.33%]
  else
    goto <bb 14>; [16.67%]

  <bb 14> [local count: 8191962]:
  MEM[(limb *)&tmp] = vect__725.433_1191;
  _629 = g_pre_comp_67(D) + 3024;
  ivtmp.533_1143 = (unsigned long) _629;

  <bb 15> [local count: 10741885489]:
  # ivtmp.532_1148 = PHI <14(14), 15(15)>
  # ivtmp.533_1145 = PHI <ivtmp.533_1143(14), ivtmp.533_1144(15)>
  # tmp__lsm.559_262 = PHI <vect__725.433_1191(14), vect__774.398_911(15)>
  # D__lsm.560_746 = PHI <_359(14), _464(15)>
  mask_790 = bits_43 ^ ivtmp.532_1148;
  _789 = mask_790 >> 2;
  mask_788 = _789 | mask_790;
  _787 = mask_788 >> 1;
  mask_786 = _787 | mask_788;
  mask_785 = mask_786 & 1;
  mask_784 = mask_785 + 18446744073709551615;
  vect_cst__447 = {mask_784, mask_784};
  _630 = (void *) ivtmp.533_1145;
  vect__776.396_909 = MEM[base: _630, offset: 0B];
  vect__775.397_910 = vect_cst__447 & vect__776.396_909;
  vect__774.398_911 = tmp__lsm.559_262 | vect__775.397_910;
  vect__778.393_922 = MEM[(limb *)&tmp + 16B];
  vect__776.396_923 = MEM[base: _630, offset: 16B];
  vect__775.397_924 = vect_cst__447 & vect__776.396_923;
  vect__774.398_925 = vect__778.393_922 | vect__775.397_924;
  MEM[(limb *)&tmp + 16B] = vect__774.398_925;
  vect__778.393_936 = MEM[(limb *)&tmp + 32B];
  vect__776.396_937 = MEM[base: _630, offset: 32B];
  vect__775.397_938 = vect_cst__447 & vect__776.396_937;
  vect__774.398_939 = vect__778.393_936 | vect__775.397_938;
  MEM[(limb *)&tmp + 32B] = vect__774.398_939;
  vect__778.393_950 = MEM[(limb *)&tmp + 48B];
  vect__776.396_951 = MEM[base: _630, offset: 48B];
  vect__775.397_952 = vect_cst__447 & vect__776.396_951;
  vect__774.398_953 = vect__778.393_950 | vect__775.397_952;
  MEM[(limb *)&tmp + 48B] = vect__774.398_953;
  vect__778.393_964 = MEM[(limb *)&tmp + 64B];
  vect__776.396_965 = MEM[base: _630, offset: 64B];
  vect__775.397_966 = vect_cst__447 & vect__776.396_965;
  vect__774.398_967 = vect__778.393_964 | vect__775.397_966;
  MEM[(limb *)&tmp + 64B] = vect__774.398_967;
  vect__778.393_978 = MEM[(limb *)&tmp + 80B];
  vect__776.396_979 = MEM[base: _630, offset: 80B];
  vect__775.397_980 = vect_cst__447 & vect__776.396_979;
  vect__774.398_981 = vect__778.393_978 | vect__775.397_980;
  MEM[(limb *)&tmp + 80B] = vect__774.398_981;
  vect__778.393_992 = MEM[(limb *)&tmp + 96B];
  vect__776.396_993 = MEM[base: _630, offset: 96B];
  vect__775.397_994 = vect_cst__447 & vect__776.396_993;
  vect__774.398_995 = vect__778.393_992 | vect__775.397_994;
  MEM[(limb *)&tmp + 96B] = vect__774.398_995;
  vect__778.393_1006 = MEM[(limb *)&tmp + 112B];
  vect__776.396_1007 = MEM[base: _630, offset: 112B];
  vect__775.397_1008 = vect_cst__447 & vect__776.396_1007;
  vect__774.398_1009 = vect__778.393_1006 | vect__775.397_1008;
  MEM[(limb *)&tmp + 112B] = vect__774.398_1009;
  vect__778.393_1020 = MEM[(limb *)&tmp + 128B];
  vect__776.396_1021 = MEM[base: _630, offset: 128B];
  vect__775.397_1022 = vect_cst__447 & vect__776.396_1021;
  vect__774.398_1023 = vect__778.393_1020 | vect__775.397_1022;
  MEM[(limb *)&tmp + 128B] = vect__774.398_1023;
  vect__778.393_1034 = MEM[(limb *)&tmp + 144B];
  vect__776.396_1035 = MEM[base: _630, offset: 144B];
  vect__775.397_1036 = vect_cst__447 & vect__776.396_1035;
  vect__774.398_1037 = vect__778.393_1034 | vect__775.397_1036;
  MEM[(limb *)&tmp + 144B] = vect__774.398_1037;
  vect__778.393_1048 = MEM[(limb *)&tmp + 160B];
  vect__776.396_1049 = MEM[base: _630, offset: 160B];
  vect__775.397_1050 = vect_cst__447 & vect__776.396_1049;
  vect__774.398_1051 = vect__778.393_1048 | vect__775.397_1050;
  MEM[(limb *)&tmp + 160B] = vect__774.398_1051;
  vect__778.393_1062 = MEM[(limb *)&tmp + 176B];
  vect__776.396_1063 = MEM[base: _630, offset: 176B];
  vect__775.397_1064 = vect_cst__447 & vect__776.396_1063;
  vect__774.398_1065 = vect__778.393_1062 | vect__775.397_1064;
  MEM[(limb *)&tmp + 176B] = vect__774.398_1065;
  vect__778.393_457 = MEM[(limb *)&tmp + 192B];
  vect__776.396_450 = MEM[base: _630, offset: 192B];
  vect__775.397_446 = vect_cst__447 & vect__776.396_450;
  vect__774.398_445 = vect__775.397_446 | vect__778.393_457;
  MEM[(limb *)&tmp + 192B] = vect__774.398_445;
  _466 = MEM[base: _630, offset: 208B];
  _465 = _466 & mask_784;
  _464 = _465 | D__lsm.560_746;
  ivtmp.533_1144 = ivtmp.533_1145 + 216;
  if (ivtmp.532_1148 != 15)
    goto <bb 15>; [87.64%]
  else
    goto <bb 16>; [12.36%]

  <bb 16> [local count: 49151769]:
  MEM[(limb *)&tmp] = vect__774.398_911;
  MEM[(limb *)&tmp + 208B] = _464;
  if (skip_436 == 0)
    goto <bb 17>; [33.00%]
  else
    goto <bb 22>; [67.00%]

  <bb 17> [local count: 16220095]:
  point_add (&nq[0], &nq[1], &nq[2], &nq[0], &nq[1], &nq[2], 1, &tmp[0], &tmp[1], &tmp[2]);
  if (num_points_54(D) != 0)
    goto <bb 18>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 18> [local count: 8110048]:
  _39 = i_423 % 5;
  if (_39 == 0)
    goto <bb 41>; [27.00%]
  else
    goto <bb 19>; [73.00%]

  <bb 19> [local count: 5920335]:
  if (_812 >= 0)
    goto <bb 6>; [87.19%]
  else
    goto <bb 20>; [12.81%]

  <bb 20> [local count: 12149887]:
  vect__217.444_615 = MEM[(const limb *)&nq];
  vect__217.445_685 = MEM[(const limb *)&nq + 16B];
  vect__217.446_90 = MEM[(const limb *)&nq + 32B];
  vect__217.447_29 = MEM[(const limb *)&nq + 48B];
  MEM[(limb *)x_out_91(D)] = vect__217.444_615;
  MEM[(limb *)x_out_91(D) + 16B] = vect__217.445_685;
  MEM[(limb *)x_out_91(D) + 32B] = vect__217.446_90;
  MEM[(limb *)x_out_91(D) + 48B] = vect__217.447_29;
  _225 = MEM[(const limb *)&nq + 64B];
  MEM[(limb *)x_out_91(D) + 64B] = _225;
  vect__208.452_431 = MEM[(const limb *)&nq + 72B];
  vect__208.453_421 = MEM[(const limb *)&nq + 88B];
  vect__208.454_552 = MEM[(const limb *)&nq + 104B];
  vect__208.455_673 = MEM[(const limb *)&nq + 120B];
  MEM[(limb *)y_out_93(D)] = vect__208.452_431;
  MEM[(limb *)y_out_93(D) + 16B] = vect__208.453_421;
  MEM[(limb *)y_out_93(D) + 32B] = vect__208.454_552;
  MEM[(limb *)y_out_93(D) + 48B] = vect__208.455_673;
  _216 = MEM[(const limb *)&nq + 136B];
  MEM[(limb *)y_out_93(D) + 64B] = _216;
  vect__199.460_658 = MEM[(const limb *)&nq + 144B];
  vect__199.461_660 = MEM[(const limb *)&nq + 160B];
  vect__199.462_321 = MEM[(const limb *)&nq + 176B];
  vect__199.463_132 = MEM[(const limb *)&nq + 192B];
  MEM[(limb *)z_out_95(D)] = vect__199.460_658;
  MEM[(limb *)z_out_95(D) + 16B] = vect__199.461_660;
  MEM[(limb *)z_out_95(D) + 32B] = vect__199.462_321;
  MEM[(limb *)z_out_95(D) + 48B] = vect__199.463_132;
  _207 = MEM[(const limb *)&nq + 208B];
  MEM[(limb *)z_out_95(D) + 64B] = _207;
  nq ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  sign ={v} {CLOBBER};
  digit ={v} {CLOBBER};
  return;

  <bb 21> [local count: 8110048]:
  if (_812 != -1)
    goto <bb 6>; [89.00%]
  else
    goto <bb 20>; [11.00%]

  <bb 22> [local count: 32931696]:
  MEM[(char * {ref-all})&nq] = MEM[(char * {ref-all})&tmp];
  if (num_points_54(D) != 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 23> [local count: 16465848]:
  _140 = i_423 % 5;
  if (_140 == 0)
    goto <bb 41>; [27.00%]
  else
    goto <bb 24>; [73.00%]

  <bb 24> [local count: 12020069]:
  if (_812 >= 0)
    goto <bb 6>; [87.19%]
  else
    goto <bb 20>; [12.81%]

  <bb 25> [local count: 16465848]:
  if (_812 != -1)
    goto <bb 6>; [89.00%]
  else
    goto <bb 20>; [11.00%]

  <bb 26> [local count: 49151769]:
  if (num_points_54(D) != 0)
    goto <bb 27>; [50.00%]
  else
    goto <bb 39>; [50.00%]

  <bb 27> [local count: 24575873]:
  _13 = i_423 % 5;
  if (_13 == 0)
    goto <bb 28>; [27.00%]
  else
    goto <bb 39>; [73.00%]

  <bb 28> [local count: 11811170]:
  # skip_1088 = PHI <0(41), skip_436(27)>
  _21 = (unsigned int) i_423;
  _935 = _21 + 4;
  _930 = (int) _935;
  _190 = _930 >> 3;
  _191 = (sizetype) _190;
  _563 = (unsigned int) i_423;
  _916 = _563 + 3;
  _907 = (int) _916;
  _181 = _907 >> 3;
  _182 = (sizetype) _181;
  _23 = (unsigned int) i_423;
  _554 = _23 + 2;
  _562 = (int) _554;
  _172 = _562 >> 3;
  _173 = (sizetype) _172;
  _1385 = (unsigned int) i_423;
  _586 = _1385 + 1;
  _587 = (int) _586;
  _162 = _587 >> 3;
  _163 = (sizetype) _162;
  _153 = i_423 >> 3;
  _154 = (sizetype) _153;
  _143 = _812 >> 3;
  _144 = (sizetype) _143;
  _715 = i_423 & 7;
  _716 = _587 & 7;
  _717 = _562 & 7;
  _718 = _907 & 7;
  _719 = _930 & 7;
  _1384 = scalars_72(D) + _182;
  ivtmp.519_1386 = (unsigned long) _1384;

  <bb 29> [local count: 107374320]:
  # skip_319 = PHI <skip_1088(28), 0(38)>
  # ivtmp.519_1388 = PHI <ivtmp.519_1386(28), ivtmp.519_1387(38)>
  # ivtmp.524_1383 = PHI <_637(28), ivtmp.524_1329(38)>
  _1326 = ivtmp.519_1388 - _182;
  _1325 = (void *) _1326;
  _193 = MEM[base: _1325, index: _191, offset: 0B];
  _194 = (int) _193;
  _196 = _194 >> _719;
  _197 = (char) _196;
  _198 = _197 & 1;
  _17 = (int) _198;
  _18 = _17 << 5;
  _1323 = (void *) ivtmp.519_1388;
  _184 = MEM[base: _1323, offset: 0B];
  _185 = (int) _184;
  _187 = _185 >> _718;
  _188 = (char) _187;
  _189 = _188 & 1;
  _20 = (int) _189;
  _74 = _20 << 4;
  _175 = MEM[base: _1325, index: _173, offset: 0B];
  _176 = (int) _175;
  _178 = _176 >> _717;
  _179 = (char) _178;
  _180 = _179 & 1;
  _22 = (int) _180;
  _75 = _22 << 3;
  _1440 = _18 | _75;
  _70 = _74 | _1440;
  _165 = MEM[base: _1325, index: _163, offset: 0B];
  _166 = (int) _165;
  _168 = _166 >> _716;
  _169 = (char) _168;
  _170 = _169 & 1;
  _24 = (int) _170;
  _77 = _24 << 2;
  _73 = _70 | _77;
  _156 = MEM[base: _1325, index: _154, offset: 0B];
  _157 = (int) _156;
  _159 = _157 >> _715;
  _160 = (char) _159;
  _161 = _160 & 1;
  _25 = (int) _161;
  _78 = _25 << 1;
  _92 = _73 | _78;
  if (_812 == -1)
    goto <bb 31>; [26.36%]
  else
    goto <bb 30>; [73.64%]

  <bb 30> [local count: 79070448]:
  _146 = MEM[base: _1325, index: _144, offset: 0B];
  _147 = (int) _146;
  _148 = _812 & 7;
  _149 = _147 >> _148;
  _150 = (char) _149;
  _151 = _150 & 1;
  _730 = (long unsigned int) _151;
  bits_79 = (limb) _92;
  _732 = bits_79 | _730;
  _733 = (int) _732;

  <bb 31> [local count: 107374320]:
  # prephitmp_734 = PHI <_733(30), _92(29)>
  ec_GFp_nistp_recode_scalar_bits (&sign, &digit, prephitmp_734);
  digit.6_32 = digit;
  _33 = (long unsigned int) digit.6_32;
  __builtin_memset (&tmp, 0, 216);

  <bb 32> [local count: 107374320]:
  # i_432 = PHI <0(31), i_638(34)>
  # ivtmp.510_233 = PHI <ivtmp.524_1383(31), ivtmp.510_232(34)>
  # ivtmp.511_632 = PHI <1(31), ivtmp.511_865(34)>
  _589 = ivtmp.511_632 + 18446744073709551615;
  _308 = (const limb[3][9] *) ivtmp.510_233;
  mask_310 = _33 ^ _589;
  _311 = mask_310 >> 4;
  mask_312 = mask_310 | _311;
  _313 = mask_312 >> 2;
  mask_314 = mask_312 | _313;
  _315 = mask_314 >> 1;
  mask_316 = mask_314 | _315;
  mask_317 = mask_316 & 1;
  mask_318 = mask_317 + 18446744073709551615;
  vect_cst__541 = {mask_318, mask_318};
  vect_cst__525 = {_33, _33};
  _429 = ivtmp.510_233 + 216;
  _1389 = (const vector(2) long unsigned int *) _429;
  ivtmp.491_241 = (unsigned long) &tmp;
  _650 = i_432 + 1;
  vect_i_329.366_529 = {_650, _650, _650, _650};
  vect__668.367_527 = [vec_unpack_lo_expr] vect_i_329.366_529;
  vect__668.367_526 = [vec_unpack_hi_expr] vect_i_329.366_529;
  vect_mask_659.368_524 = vect_cst__525 ^ vect__668.367_527;
  vect_mask_659.368_523 = vect_cst__525 ^ vect__668.367_526;
  vect__658.369_522 = vect_mask_659.368_524 >> 4;
  vect__658.369_521 = vect_mask_659.368_523 >> 4;
  vect_mask_657.370_520 = vect__658.369_522 | vect_mask_659.368_524;
  vect_mask_657.370_519 = vect__658.369_521 | vect_mask_659.368_523;
  vect__656.371_518 = vect_mask_657.370_520 >> 2;
  vect__656.371_517 = vect_mask_657.370_519 >> 2;
  vect_mask_655.372_516 = vect__656.371_518 | vect_mask_657.370_520;
  vect_mask_655.372_515 = vect__656.371_517 | vect_mask_657.370_519;
  vect__654.373_514 = vect_mask_655.372_516 >> 1;
  vect__654.373_513 = vect_mask_655.372_515 >> 1;
  vect_mask_653.374_512 = vect__654.373_514 | vect_mask_655.372_516;
  vect_mask_653.374_511 = vect__654.373_513 | vect_mask_655.372_515;
  vect_mask_652.375_509 = vect_mask_653.374_512 & { 1, 1 };
  vect_mask_652.375_508 = vect_mask_653.374_511 & { 1, 1 };
  vect_mask_651.376_506 = vect_mask_652.375_509 + { 18446744073709551615, 18446744073709551615 };
  vect_mask_651.376_505 = vect_mask_652.375_508 + { 18446744073709551615, 18446744073709551615 };

  <bb 33> [local count: 751620248]:
  # ivtmp.490_245 = PHI <0(32), ivtmp.490_244(33)>
  # ivtmp.491_243 = PHI <ivtmp.491_241(32), ivtmp.491_242(33)>
  _240 = (void *) ivtmp.491_243;
  vect__323.356_549 = MEM[base: _240, offset: 0B];
  vect__323.357_547 = MEM[base: _240, offset: 16B];
  vect__325.360_544 = MEM[base: _308, index: ivtmp.490_245, offset: 0B];
  vect__325.361_542 = MEM[base: _308, index: ivtmp.490_245, offset: 16B];
  vect__326.362_540 = vect_cst__541 & vect__325.360_544;
  vect__326.362_539 = vect_cst__541 & vect__325.361_542;
  vect__327.363_538 = vect__326.362_540 | vect__323.356_549;
  vect__327.363_537 = vect__326.362_539 | vect__323.357_547;
  vect__643.383_492 = MEM[base: _1389, index: ivtmp.490_245, offset: 0B];
  vect__643.384_490 = MEM[base: _1389, index: ivtmp.490_245, offset: 16B];
  vect__642.385_489 = vect__643.383_492 & vect_mask_651.376_506;
  vect__642.385_488 = vect__643.384_490 & vect_mask_651.376_505;
  vect__641.386_487 = vect__642.385_489 | vect__327.363_538;
  vect__641.386_486 = vect__642.385_488 | vect__327.363_537;
  MEM[base: _240, offset: 0B] = vect__641.386_487;
  MEM[base: _240, offset: 16B] = vect__641.386_486;
  ivtmp.490_244 = ivtmp.490_245 + 32;
  ivtmp.491_242 = ivtmp.491_243 + 32;
  if (ivtmp.490_244 != 192)
    goto <bb 33>; [85.71%]
  else
    goto <bb 34>; [14.29%]

  <bb 34> [local count: 107374321]:
  _831 = MEM[(limb *)&tmp + 192B];
  _833 = MEM[base: _308, offset: 192B];
  _834 = mask_318 & _833;
  _835 = _831 | _834;
  mask_844 = _33 ^ ivtmp.511_632;
  _845 = mask_844 >> 4;
  mask_846 = mask_844 | _845;
  _847 = mask_846 >> 2;
  mask_848 = mask_846 | _847;
  _849 = mask_848 >> 1;
  mask_850 = mask_848 | _849;
  mask_851 = mask_850 & 1;
  mask_852 = mask_851 + 18446744073709551615;
  _858 = MEM[base: _308, offset: 408B];
  _859 = mask_852 & _858;
  _860 = _835 | _859;
  MEM[(limb *)&tmp + 192B] = _860;
  _870 = MEM[(limb *)&tmp + 200B];
  _872 = MEM[base: _308, offset: 200B];
  _873 = mask_318 & _872;
  _874 = _870 | _873;
  _897 = MEM[base: _308, offset: 416B];
  _898 = mask_852 & _897;
  _899 = _874 | _898;
  MEM[(limb *)&tmp + 200B] = _899;
  _584 = MEM[(limb *)&tmp + 208B];
  _582 = MEM[base: _308, offset: 208B];
  _581 = mask_318 & _582;
  _580 = _581 | _584;
  _558 = MEM[base: _308, offset: 424B];
  _557 = _558 & mask_852;
  _556 = _557 | _580;
  MEM[(limb *)&tmp + 208B] = _556;
  i_638 = i_432 + 2;
  ivtmp.510_232 = ivtmp.510_233 + 432;
  ivtmp.511_865 = ivtmp.511_632 + 2;
  if (i_638 != 16)
    goto <bb 32>; [83.33%]
  else
    goto <bb 35>; [16.67%]

  <bb 35> [local count: 107374321]:
  _906 = ivtmp.524_1383 + 3456;
  tmp__lsm.557_1275 = MEM[(limb *)&tmp];
  _1328 = digit.6_32 ^ 16;
  mask_695 = (limb) _1328;
  _694 = mask_695 >> 4;
  mask_693 = _694 | mask_695;
  _692 = mask_693 >> 2;
  mask_691 = _692 | mask_693;
  _690 = mask_691 >> 1;
  mask_689 = _690 | mask_691;
  mask_688 = mask_689 & 1;
  mask_687 = mask_688 + 18446744073709551615;
  vect_cst__612 = {mask_687, mask_687};
  _415 = (void *) _906;
  vect__679.347_783 = MEM[base: _415, offset: 0B];
  vect__678.348_409 = vect_cst__612 & vect__679.347_783;
  vect__677.349_712 = vect__678.348_409 | tmp__lsm.557_1275;
  vect__681.344_282 = MEM[(limb *)&tmp + 16B];
  vect__679.347_284 = MEM[base: _415, offset: 16B];
  vect__678.348_765 = vect__679.347_284 & vect_cst__612;
  vect__677.349_764 = vect__681.344_282 | vect__678.348_765;
  MEM[(limb *)&tmp + 16B] = vect__677.349_764;
  vect__681.344_751 = MEM[(limb *)&tmp + 32B];
  vect__679.347_750 = MEM[base: _415, offset: 32B];
  vect__678.348_729 = vect_cst__612 & vect__679.347_750;
  vect__677.349_728 = vect__678.348_729 | vect__681.344_751;
  MEM[(limb *)&tmp + 32B] = vect__677.349_728;
  vect__681.344_324 = MEM[(limb *)&tmp + 48B];
  vect__679.347_325 = MEM[base: _415, offset: 48B];
  vect__678.348_326 = vect__679.347_325 & vect_cst__612;
  vect__677.349_327 = vect__681.344_324 | vect__678.348_326;
  MEM[(limb *)&tmp + 48B] = vect__677.349_327;
  vect__681.344_655 = MEM[(limb *)&tmp + 64B];
  vect__679.347_654 = MEM[base: _415, offset: 64B];
  vect__678.348_653 = vect_cst__612 & vect__679.347_654;
  vect__677.349_652 = vect__678.348_653 | vect__681.344_655;
  MEM[(limb *)&tmp + 64B] = vect__677.349_652;
  vect__681.344_770 = MEM[(limb *)&tmp + 80B];
  vect__679.347_528 = MEM[base: _415, offset: 80B];
  vect__678.348_704 = vect__679.347_528 & vect_cst__612;
  vect__677.349_636 = vect__678.348_704 | vect__681.344_770;
  MEM[(limb *)&tmp + 80B] = vect__677.349_636;
  vect__681.344_684 = MEM[(limb *)&tmp + 96B];
  vect__679.347_683 = MEM[base: _415, offset: 96B];
  vect__678.348_682 = vect_cst__612 & vect__679.347_683;
  vect__677.349_681 = vect__678.348_682 | vect__681.344_684;
  MEM[(limb *)&tmp + 96B] = vect__677.349_681;
  vect__681.344_592 = MEM[(limb *)&tmp + 112B];
  vect__679.347_593 = MEM[base: _415, offset: 112B];
  vect__678.348_594 = vect__679.347_593 & vect_cst__612;
  vect__677.349_410 = vect__681.344_592 | vect__678.348_594;
  MEM[(limb *)&tmp + 112B] = vect__677.349_410;
  vect__681.344_478 = MEM[(limb *)&tmp + 128B];
  vect__679.347_640 = MEM[base: _415, offset: 128B];
  vect__678.348_337 = vect_cst__612 & vect__679.347_640;
  vect__677.349_595 = vect__678.348_337 | vect__681.344_478;
  MEM[(limb *)&tmp + 128B] = vect__677.349_595;
  vect__681.344_608 = MEM[(limb *)&tmp + 144B];
  vect__679.347_606 = MEM[base: _415, offset: 144B];
  vect__678.348_605 = vect__679.347_606 & vect_cst__612;
  vect__677.349_604 = vect__678.348_605 | vect__681.344_608;
  MEM[(limb *)&tmp + 144B] = vect__677.349_604;
  vect__681.344_664 = MEM[(limb *)&tmp + 160B];
  vect__679.347_26 = MEM[base: _415, offset: 160B];
  vect__678.348_195 = vect__679.347_26 & vect_cst__612;
  vect__677.349_186 = vect__678.348_195 | vect__681.344_664;
  MEM[(limb *)&tmp + 160B] = vect__677.349_186;
  vect__681.344_816 = MEM[(limb *)&tmp + 176B];
  vect__679.347_817 = MEM[base: _415, offset: 176B];
  vect__678.348_818 = vect_cst__612 & vect__679.347_817;
  vect__677.349_819 = vect__681.344_816 | vect__678.348_818;
  MEM[(limb *)&tmp + 176B] = vect__677.349_819;
  vect__681.344_616 = MEM[(limb *)&tmp + 192B];
  vect__679.347_613 = MEM[base: _415, offset: 192B];
  vect__678.348_611 = vect_cst__612 & vect__679.347_613;
  vect__677.349_610 = vect__678.348_611 | vect__681.344_616;
  MEM[(limb *)&tmp + 192B] = vect__677.349_610;
  _625 = MEM[base: _415, offset: 208B];
  _624 = _625 & mask_687;
  _623 = _556 | _624;
  MEM[(limb *)&tmp] = vect__677.349_712;
  MEM[(limb *)&tmp + 208B] = _623;
  vect__285.468_782 = MEM[(const limb *)&tmp + 72B];
  vect__285.469_1059 = MEM[(const limb *)&tmp + 88B];
  vect__285.470_1057 = MEM[(const limb *)&tmp + 104B];
  vect__285.471_1045 = MEM[(const limb *)&tmp + 120B];
  vect__286.472_1029 = { 4611686018427387872, 4611686018427387888 } - vect__285.468_782;
  vect__286.472_1018 = { 4611686018427387888, 4611686018427387888 } - vect__285.469_1059;
  vect__286.472_1017 = { 4611686018427387888, 4611686018427387888 } - vect__285.470_1057;
  vect__286.472_1016 = { 4611686018427387888, 4611686018427387888 } - vect__285.471_1045;
  MEM[(limb *)&tmp + 216B] = vect__286.472_1029;
  MEM[(limb *)&tmp + 232B] = vect__286.472_1018;
  MEM[(limb *)&tmp + 248B] = vect__286.472_1017;
  MEM[(limb *)&tmp + 264B] = vect__286.472_1016;
  _301 = MEM[(const limb *)&tmp + 136B];
  _302 = 4611686018427387888 - _301;
  MEM[(limb *)&tmp + 280B] = _302;
  sign.7_34 = sign;
  _35 = (long unsigned int) sign.7_34;
  _36 = -_35;
  vect__347.473_1015 = vect__285.468_782 ^ vect__286.472_1029;
  vect__347.473_1004 = vect__286.472_1018 ^ vect__285.469_1059;
  vect__347.473_1003 = vect__286.472_1017 ^ vect__285.470_1057;
  vect__347.473_1002 = vect__286.472_1016 ^ vect__285.471_1045;
  _1001 = {_36, _36};
  vect_tmp_348.474_973 = _1001 & vect__347.473_1015;
  vect_tmp_348.474_962 = _1001 & vect__347.473_1004;
  vect_tmp_348.474_961 = _1001 & vect__347.473_1003;
  vect_tmp_348.474_960 = _1001 & vect__347.473_1002;
  vect__349.475_959 = vect__285.468_782 ^ vect_tmp_348.474_973;
  vect__349.475_948 = vect_tmp_348.474_962 ^ vect__285.469_1059;
  vect__349.475_947 = vect_tmp_348.474_961 ^ vect__285.470_1057;
  vect__349.475_946 = vect_tmp_348.474_960 ^ vect__285.471_1045;
  MEM[(limb *)&tmp + 72B] = vect__349.475_959;
  MEM[(limb *)&tmp + 88B] = vect__349.475_948;
  MEM[(limb *)&tmp + 104B] = vect__349.475_947;
  MEM[(limb *)&tmp + 120B] = vect__349.475_946;
  _451 = _301 ^ _302;
  tmp_452 = _36 & _451;
  _453 = _301 ^ tmp_452;
  MEM[(limb *)&tmp + 136B] = _453;
  if (skip_319 == 0)
    goto <bb 36>; [33.00%]
  else
    goto <bb 37>; [67.00%]

  <bb 36> [local count: 35433536]:
  point_add (&nq[0], &nq[1], &nq[2], &nq[0], &nq[1], &nq[2], mixed_86(D), &tmp[0], &tmp[1], &tmp[2]);
  goto <bb 38>; [100.00%]

  <bb 37> [local count: 71940784]:
  MEM[(char * {ref-all})&nq] = MEM[(char * {ref-all})&tmp];

  <bb 38> [local count: 107374331]:
  ivtmp.519_1387 = ivtmp.519_1388 + 66;
  ivtmp.524_1329 = ivtmp.524_1383 + 3672;
  if (_671 != ivtmp.524_1329)
    goto <bb 29>; [89.00%]
  else
    goto <bb 40>; [11.00%]

  <bb 39> [local count: 43246180]:
  if (_812 >= 0)
    goto <bb 5>; [100.00%]
  else
    goto <bb 20>; [0.00%]

  <bb 40> [local count: 11811176]:
  if (_812 >= 0)
    goto <bb 6>; [0.96%]
  else
    goto <bb 20>; [99.04%]

  <bb 41> [local count: 6635492]:
  goto <bb 28>; [100.00%]

}



;; Function ec_GFp_nistp521_points_mul (ec_GFp_nistp521_points_mul, funcdef_no=439, decl_uid=10185, cgraph_uid=439, symbol_order=445)

ec_GFp_nistp521_points_mul (const struct EC_GROUP * group, struct EC_POINT * r, const struct BIGNUM * scalar, size_t num, const struct EC_POINT * * points, const struct BIGNUM * * scalars, struct BN_CTX * ctx)
{
  unsigned long ivtmp.588;
  unsigned int ivtmp.586;
  unsigned long ivtmp.575;
  unsigned long ivtmp.567;
  unsigned int ivtmp.565;
  const struct BIGNUM * p_scalar;
  const struct EC_POINT * p;
  struct EC_POINT * generator;
  limb[3][9] * g_pre_comp;
  struct NISTP521_PRE_COMP * pre;
  limb z_out[9];
  limb y_out[9];
  limb x_out[9];
  limb z_in[9];
  limb y_in[9];
  limb x_in[9];
  size_t num_points;
  unsigned int num_bytes;
  unsigned int i;
  u8 tmp[66];
  limb[9] * tmp_felems;
  limb[17][3][9] * pre_comp;
  u8[66] * secrets;
  u8 g_secret[66];
  struct BIGNUM * tmp_scalar;
  struct BIGNUM * z;
  struct BIGNUM * y;
  struct BIGNUM * x;
  int mixed;
  int j;
  int ret;
  limb[9] * _1;
  struct BIGNUM * _2;
  limb[9] * _3;
  struct BIGNUM * _4;
  limb[9] * _5;
  struct BIGNUM * _6;
  int _7;
  struct EC_POINT * _8;
  int _9;
  long unsigned int _12;
  long unsigned int _13;
  _Bool _14;
  _Bool _15;
  _Bool _16;
  long unsigned int _20;
  const struct EC_POINT * * _21;
  const struct BIGNUM * * _22;
  _Bool _23;
  _Bool _24;
  _Bool _25;
  int _26;
  int _27;
  struct BIGNUM * _28;
  int _29;
  int _30;
  int _31;
  long unsigned int _32;
  struct BIGNUM * _33;
  int _34;
  struct BIGNUM * _35;
  int _36;
  struct BIGNUM * _37;
  int _38;
  long unsigned int _39;
  limb[17][3][9] * _40;
  limb[9] * _41;
  limb[9] * _42;
  limb[9] * _43;
  int _44;
  int _52;
  limb[9] * _53;
  limb[9] * _54;
  limb[9] * _55;
  long unsigned int _59;
  long unsigned int _60;
  _Bool _61;
  _Bool _63;
  int _64;
  int _65;
  struct BIGNUM * _66;
  int _67;
  int _68;
  int _69;
  unsigned int _70;
  unsigned int _71;
  struct BIGNUM * _72;
  struct BIGNUM * _73;
  struct BIGNUM * _74;
  _Bool _105;
  long unsigned int _203;
  _Bool _204;
  sizetype _208;
  const u8 * _209;
  unsigned char _212;
  sizetype _217;
  const u8 * _218;
  unsigned char _221;
  sizetype _232;
  _Bool _246;
  sizetype _257;
  sizetype _259;
  sizetype _265;
  void * _320;
  unsigned int _324;
  u8 * _325;
  _Bool prephitmp_329;
  long unsigned int _330;
  long unsigned int _331;
  limb[9] * _335;
  unsigned long _336;
  limb[9] * _337;
  unsigned long _338;
  limb[9] * _339;
  unsigned long _340;
  unsigned int _341;
  limb[17][3][9] * _346;
  unsigned long _347;
  limb[17][3][9] * _348;
  unsigned long _355;
  limb[17][3][9] * _356;
  void * _360;
  limb[17][3][9] * _367;

  <bb 2> [local count: 127978197]:
  BN_CTX_start (ctx_117(D));
  x_120 = BN_CTX_get (ctx_117(D));
  y_122 = BN_CTX_get (ctx_117(D));
  z_124 = BN_CTX_get (ctx_117(D));
  tmp_scalar_126 = BN_CTX_get (ctx_117(D));
  if (tmp_scalar_126 == 0B)
    goto <bb 3>; [18.09%]
  else
    goto <bb 4>; [81.91%]

  <bb 3> [local count: 45862013]:
  goto <bb 60>; [100.00%]

  <bb 4> [local count: 104826941]:
  if (scalar_127(D) != 0B)
    goto <bb 5>; [70.00%]
  else
    goto <bb 64>; [30.00%]

  <bb 5> [local count: 73378859]:
  pre_129 = group_128(D)->pre_comp.nistp521;
  if (pre_129 != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 7>; [30.00%]

  <bb 6> [local count: 51365201]:
  g_pre_comp_130 = &pre_129->g_pre_comp[0];

  <bb 7> [local count: 73378859]:
  # g_pre_comp_91 = PHI <g_pre_comp_130(6), &gmul(5)>
  generator_132 = EC_POINT_new (group_128(D));
  if (generator_132 == 0B)
    goto <bb 3>; [30.95%]
  else
    goto <bb 8>; [69.05%]

  <bb 8> [local count: 50668102]:
  _1 = &MEM[(limb[3][9] *)g_pre_comp_91 + 216B][0];
  _2 = felem_to_BN (x_120, _1);
  if (_2 == 0B)
    goto <bb 9>; [18.09%]
  else
    goto <bb 10>; [81.91%]

  <bb 9> [local count: 30880238]:
  ERR_put_error (16, 234, 3, "ecp_nistp521.c", 1916);
  goto <bb 60>; [100.00%]

  <bb 10> [local count: 41502242]:
  _3 = &MEM[(limb[3][9] *)g_pre_comp_91 + 216B][1];
  _4 = felem_to_BN (y_122, _3);
  if (_4 == 0B)
    goto <bb 9>; [30.95%]
  else
    goto <bb 11>; [69.05%]

  <bb 11> [local count: 28657298]:
  _5 = &MEM[(limb[3][9] *)g_pre_comp_91 + 216B][2];
  _6 = felem_to_BN (z_124, _5);
  if (_6 == 0B)
    goto <bb 9>; [30.95%]
  else
    goto <bb 12>; [69.05%]

  <bb 12> [local count: 19787864]:
  _7 = EC_POINT_set_Jprojective_coordinates_GFp (group_128(D), generator_132, x_120, y_122, z_124, ctx_117(D));
  if (_7 == 0)
    goto <bb 60>; [51.12%]
  else
    goto <bb 13>; [48.88%]

  <bb 13> [local count: 9672308]:
  _8 = group_128(D)->generator;
  _9 = EC_POINT_cmp (group_128(D), generator_132, _8, ctx_117(D));
  if (_9 == 0)
    goto <bb 63>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 14> [local count: 4836154]:
  num_points_138 = num_115(D) + 1;
  goto <bb 64>; [100.00%]

  <bb 15> [local count: 20560195]:
  # num_points_293 = PHI <num_115(D)(63), num_points_240(64)>
  # g_pre_comp_296 = PHI <g_pre_comp_91(63), g_pre_comp_241(64)>
  # generator_298 = PHI <generator_132(63), generator_248(64)>
  # prephitmp_329 = PHI <1(63), 0(64)>
  _330 = num_points_293 * 66;
  _331 = num_points_293 * 3672;
  if (num_points_293 > 1)
    goto <bb 62>; [59.00%]
  else
    goto <bb 61>; [41.00%]

  <bb 16> [local count: 9675299]:
  if (tmp_felems_145 == 0B)
    goto <bb 18>; [57.63%]
  else
    goto <bb 17>; [42.37%]

  <bb 17> [local count: 10823216]:
  # tmp_felems_254 = PHI <tmp_felems_145(16), 0B(61)>
  # mixed_306 = PHI <1(16), 0(61)>
  # secrets_307 = PHI <secrets_277(16), secrets_270(61)>
  # pre_comp_309 = PHI <pre_comp_280(16), pre_comp_273(61)>
  goto <bb 19>; [100.00%]

  <bb 18> [local count: 9736979]:
  # tmp_felems_288 = PHI <tmp_felems_145(16), 0B(61), tmp_felems_145(62)>
  # secrets_308 = PHI <secrets_277(16), secrets_270(61), secrets_277(62)>
  # pre_comp_310 = PHI <pre_comp_280(16), pre_comp_273(61), pre_comp_280(62)>
  ERR_put_error (16, 234, 65, "ecp_nistp521.c", 1949);
  goto <bb 60>; [100.00%]

  <bb 19> [local count: 221087120]:
  # _203 = PHI <0(17), _59(23)>
  # i_202 = PHI <0(17), i_166(23)>
  if (num_115(D) == _203)
    goto <bb 20>; [20.24%]
  else
    goto <bb 21>; [79.76%]

  <bb 20> [local count: 44748033]:
  p_147 = EC_GROUP_get0_generator (group_128(D));
  goto <bb 22>; [100.00%]

  <bb 21> [local count: 176339087]:
  _20 = _203 * 8;
  _21 = points_148(D) + _20;
  p_149 = *_21;
  _22 = scalars_150(D) + _20;
  p_scalar_151 = *_22;

  <bb 22> [local count: 221087120]:
  # p_95 = PHI <p_147(20), p_149(21)>
  # p_scalar_96 = PHI <scalar_127(D)(20), p_scalar_151(21)>
  _23 = p_scalar_96 != 0B;
  _24 = p_95 != 0B;
  _25 = _23 & _24;
  if (_25 != 0)
    goto <bb 24>; [33.00%]
  else
    goto <bb 23>; [67.00%]

  <bb 23> [local count: 215237239]:
  i_166 = i_202 + 1;
  _59 = (long unsigned int) i_166;
  if (_59 < num_points_293)
    goto <bb 19>; [97.80%]
  else
    goto <bb 41>; [2.20%]

  <bb 24> [local count: 72958750]:
  _26 = BN_num_bits (p_scalar_96);
  if (_26 > 521)
    goto <bb 25>; [27.00%]
  else
    goto <bb 26>; [73.00%]

  <bb 25> [local count: 55382987]:
  _28 = group_128(D)->order;
  _29 = BN_nnmod (tmp_scalar_126, p_scalar_96, _28, ctx_117(D));
  if (_29 == 0)
    goto <bb 27>; [2.20%]
  else
    goto <bb 28>; [97.80%]

  <bb 26> [local count: 53259887]:
  _27 = BN_is_negative (p_scalar_96);
  if (_27 != 0)
    goto <bb 25>; [67.00%]
  else
    goto <bb 29>; [33.00%]

  <bb 27> [local count: 1218426]:
  ERR_put_error (16, 234, 3, "ecp_nistp521.c", 1981);
  goto <bb 60>; [100.00%]

  <bb 28> [local count: 54164561]:
  _30 = BN_bn2bin (tmp_scalar_126, &tmp);
  num_bytes_159 = (unsigned int) _30;
  goto <bb 30>; [100.00%]

  <bb 29> [local count: 17575763]:
  _31 = BN_bn2bin (p_scalar_96, &tmp);
  num_bytes_155 = (unsigned int) _31;

  <bb 30> [local count: 71740324]:
  # num_bytes_87 = PHI <num_bytes_159(28), num_bytes_155(29)>
  _32 = _203 * 66;
  if (num_bytes_87 != 0)
    goto <bb 32>; [89.00%]
  else
    goto <bb 31>; [11.00%]

  <bb 31> [local count: 71740324]:
  _33 = p_95->X;
  _34 = BN_to_felem (&x_out, _33);
  if (_34 == 0)
    goto <bb 60>; [2.20%]
  else
    goto <bb 34>; [97.80%]

  <bb 32> [local count: 63848888]:
  _341 = num_bytes_87 + 4294967295;
  _325 = secrets_307 + _32;
  ivtmp.588_326 = (unsigned long) _325;

  <bb 33> [local count: 580444436]:
  # ivtmp.586_334 = PHI <_341(32), ivtmp.586_333(33)>
  # ivtmp.588_328 = PHI <ivtmp.588_326(32), ivtmp.588_327(33)>
  _208 = (sizetype) ivtmp.586_334;
  _209 = &tmp + _208;
  _212 = *_209;
  _320 = (void *) ivtmp.588_328;
  MEM[base: _320, offset: 0B] = _212;
  ivtmp.586_333 = ivtmp.586_334 + 4294967295;
  ivtmp.588_327 = ivtmp.588_328 + 1;
  if (ivtmp.586_333 != 4294967295)
    goto <bb 33>; [89.00%]
  else
    goto <bb 31>; [11.00%]

  <bb 34> [local count: 70162036]:
  _35 = p_95->Y;
  _36 = BN_to_felem (&y_out, _35);
  if (_36 == 0)
    goto <bb 60>; [2.20%]
  else
    goto <bb 35>; [97.80%]

  <bb 35> [local count: 68618472]:
  _37 = p_95->Z;
  _38 = BN_to_felem (&z_out, _37);
  if (_38 == 0)
    goto <bb 60>; [2.20%]
  else
    goto <bb 36>; [97.80%]

  <bb 36> [local count: 67108865]:
  _39 = _203 * 3672;
  _40 = pre_comp_309 + _39;
  _41 = &*_40[1][0];
  __builtin_memcpy (_41, &x_out, 72);
  _42 = &*_40[1][1];
  __builtin_memcpy (_42, &y_out, 72);
  _43 = &*_40[1][2];
  __builtin_memcpy (_43, &z_out, 72);
  _356 = _40 + 432;
  ivtmp.575_357 = (unsigned long) _356;

  <bb 37> [local count: 1006632960]:
  # j_283 = PHI <2(36), j_165(40)>
  # ivtmp.575_359 = PHI <ivtmp.575_357(36), ivtmp.575_358(40)>
  _44 = j_283 & 1;
  _347 = ivtmp.575_359 + 144;
  _346 = (limb[17][3][9] *) _347;
  _355 = ivtmp.575_359 + 72;
  _348 = (limb[17][3][9] *) _355;
  _367 = (limb[17][3][9] *) ivtmp.575_359;
  if (_44 != 0)
    goto <bb 38>; [50.00%]
  else
    goto <bb 39>; [50.00%]

  <bb 38> [local count: 503316480]:
  _336 = ivtmp.575_359 + 18446744073709551544;
  _335 = (limb[9] *) _336;
  _338 = ivtmp.575_359 + 18446744073709551472;
  _337 = (limb[9] *) _338;
  _340 = ivtmp.575_359 + 18446744073709551400;
  _339 = (limb[9] *) _340;
  point_add (_367, _348, _346, _41, _42, _43, 0, _339, _337, _335);
  goto <bb 40>; [100.00%]

  <bb 39> [local count: 503316480]:
  _52 = j_283 >> 1;
  _257 = (sizetype) _52;
  _259 = _257 * 216;
  _265 = _259 + 144;
  _53 = _40 + _265;
  _232 = _259 + 72;
  _54 = _40 + _232;
  _55 = _40 + _259;
  point_double (_367, _348, _346, _55, _54, _53);

  <bb 40> [local count: 1006632960]:
  j_165 = j_283 + 1;
  ivtmp.575_358 = ivtmp.575_359 + 216;
  if (j_165 != 17)
    goto <bb 37>; [93.33%]
  else
    goto <bb 23>; [6.67%]

  <bb 41> [local count: 4973330]:
  if (mixed_306 != 0)
    goto <bb 42>; [33.00%]
  else
    goto <bb 43>; [67.00%]

  <bb 42> [local count: 1641199]:
  _60 = num_points_293 * 17;
  ec_GFp_nistp_points_make_affine_internal (_60, pre_comp_309, 72, tmp_felems_254, felem_one, felem_is_zero_int, felem_assign, felem_square_reduce, felem_mul_reduce, felem_inv, felem_contract);

  <bb 43> [local count: 7930608]:
  # mixed_78 = PHI <mixed_306(42), mixed_306(41)>
  _61 = scalar_127(D) != 0B;
  _63 = _61 & prephitmp_329;
  if (_63 != 0)
    goto <bb 44>; [100.00%]
  else
    goto <bb 54>; [0.00%]

  <bb 44> [local count: 12766763]:
  # mixed_247 = PHI <mixed_78(43), _9(63)>
  # secrets_261 = PHI <secrets_307(43), 0B(63)>
  # pre_comp_258 = PHI <pre_comp_309(43), 0B(63)>
  # tmp_felems_289 = PHI <tmp_felems_254(43), 0B(63)>
  # num_points_294 = PHI <num_points_293(43), num_115(D)(63)>
  # g_pre_comp_297 = PHI <g_pre_comp_296(43), g_pre_comp_91(63)>
  # generator_299 = PHI <generator_298(43), generator_132(63)>
  __builtin_memset (&g_secret, 0, 66);
  _64 = BN_num_bits (scalar_127(D));
  if (_64 > 521)
    goto <bb 45>; [50.00%]
  else
    goto <bb 46>; [50.00%]

  <bb 45> [local count: 10660247]:
  _66 = group_128(D)->order;
  _67 = BN_nnmod (tmp_scalar_126, scalar_127(D), _66, ctx_117(D));
  if (_67 == 0)
    goto <bb 47>; [34.00%]
  else
    goto <bb 48>; [66.00%]

  <bb 46> [local count: 6383381]:
  _65 = BN_is_negative (scalar_127(D));
  if (_65 != 0)
    goto <bb 45>; [67.00%]
  else
    goto <bb 49>; [33.00%]

  <bb 47> [local count: 3624484]:
  ERR_put_error (16, 234, 3, "ecp_nistp521.c", 2027);
  goto <bb 60>; [100.00%]

  <bb 48> [local count: 7035763]:
  _68 = BN_bn2bin (tmp_scalar_126, &tmp);
  num_bytes_176 = (unsigned int) _68;
  goto <bb 50>; [100.00%]

  <bb 49> [local count: 2106516]:
  _69 = BN_bn2bin (scalar_127(D), &tmp);
  num_bytes_172 = (unsigned int) _69;

  <bb 50> [local count: 9142279]:
  # num_bytes_88 = PHI <num_bytes_176(48), num_bytes_172(49)>
  if (num_bytes_88 != 0)
    goto <bb 52>; [89.00%]
  else
    goto <bb 51>; [11.00%]

  <bb 51> [local count: 9142279]:
  _70 = (unsigned int) num_points_294;
  batch_mul (&x_out, &y_out, &z_out, secrets_261, _70, &g_secret, mixed_247, pre_comp_258, g_pre_comp_297);
  goto <bb 55>; [100.00%]

  <bb 52> [local count: 8136628]:
  _324 = num_bytes_88 + 4294967295;
  ivtmp.567_97 = (unsigned long) &g_secret;

  <bb 53> [local count: 73969345]:
  # ivtmp.565_266 = PHI <_324(52), ivtmp.565_109(53)>
  # ivtmp.567_101 = PHI <ivtmp.567_97(52), ivtmp.567_106(53)>
  _217 = (sizetype) ivtmp.565_266;
  _218 = &tmp + _217;
  _221 = *_218;
  _360 = (void *) ivtmp.567_101;
  MEM[base: _360, offset: 0B] = _221;
  ivtmp.565_109 = ivtmp.565_266 + 4294967295;
  ivtmp.567_106 = ivtmp.567_101 + 1;
  if (ivtmp.565_109 != 4294967295)
    goto <bb 53>; [89.00%]
  else
    goto <bb 51>; [11.00%]

  <bb 54> [local count: 12766763]:
  # mixed_251 = PHI <mixed_78(43), 0(64)>
  # secrets_262 = PHI <secrets_307(43), 0B(64)>
  # pre_comp_255 = PHI <pre_comp_309(43), 0B(64)>
  # tmp_felems_290 = PHI <tmp_felems_254(43), 0B(64)>
  # num_points_295 = PHI <num_points_293(43), num_points_240(64)>
  # generator_300 = PHI <generator_298(43), generator_248(64)>
  _71 = (unsigned int) num_points_295;
  batch_mul (&x_out, &y_out, &z_out, secrets_262, _71, 0B, mixed_251, pre_comp_255, 0B);

  <bb 55> [local count: 21909041]:
  # secrets_260 = PHI <secrets_261(51), secrets_262(54)>
  # pre_comp_256 = PHI <pre_comp_258(51), pre_comp_255(54)>
  # tmp_felems_291 = PHI <tmp_felems_289(51), tmp_felems_290(54)>
  # generator_301 = PHI <generator_299(51), generator_300(54)>
  felem_contract (&x_in, &x_out);
  felem_contract (&y_in, &y_out);
  felem_contract (&z_in, &z_out);
  _72 = felem_to_BN (x_120, &x_in);
  if (_72 == 0B)
    goto <bb 56>; [18.09%]
  else
    goto <bb 57>; [81.91%]

  <bb 56> [local count: 13352709]:
  ERR_put_error (16, 234, 3, "ecp_nistp521.c", 2051);
  goto <bb 60>; [100.00%]

  <bb 57> [local count: 17945696]:
  _73 = felem_to_BN (y_122, &y_in);
  if (_73 == 0B)
    goto <bb 56>; [30.95%]
  else
    goto <bb 58>; [69.05%]

  <bb 58> [local count: 12391503]:
  _74 = felem_to_BN (z_124, &z_in);
  if (_74 == 0B)
    goto <bb 56>; [30.95%]
  else
    goto <bb 59>; [69.05%]

  <bb 59> [local count: 8556333]:
  ret_187 = EC_POINT_set_Jprojective_coordinates_GFp (group_128(D), r_185(D), x_120, y_122, z_124, ctx_117(D));

  <bb 60> [local count: 127978195]:
  # ret_75 = PHI <_7(12), _36(34), 0(9), 0(3), 0(18), _29(27), _34(31), _67(47), 0(56), ret_187(59), _38(35)>
  # secrets_80 = PHI <0B(12), secrets_307(34), 0B(9), 0B(3), secrets_308(18), secrets_307(27), secrets_307(31), secrets_261(47), secrets_260(56), secrets_260(59), secrets_307(35)>
  # pre_comp_82 = PHI <0B(12), pre_comp_309(34), 0B(9), 0B(3), pre_comp_310(18), pre_comp_309(27), pre_comp_309(31), pre_comp_258(47), pre_comp_256(56), pre_comp_256(59), pre_comp_309(35)>
  # tmp_felems_85 = PHI <0B(12), tmp_felems_254(34), 0B(9), 0B(3), tmp_felems_288(18), tmp_felems_254(27), tmp_felems_254(31), tmp_felems_289(47), tmp_felems_291(56), tmp_felems_291(59), tmp_felems_254(35)>
  # generator_94 = PHI <generator_132(12), generator_298(34), generator_132(9), 0B(3), generator_298(18), generator_298(27), generator_298(31), generator_299(47), generator_301(56), generator_301(59), generator_298(35)>
err:
  BN_CTX_end (ctx_117(D));
  EC_POINT_free (generator_94);
  CRYPTO_free (secrets_80, "ecp_nistp521.c", 2059);
  CRYPTO_free (pre_comp_82, "ecp_nistp521.c", 2060);
  CRYPTO_free (tmp_felems_85, "ecp_nistp521.c", 2061);
  g_secret ={v} {CLOBBER};
  tmp ={v} {CLOBBER};
  x_in ={v} {CLOBBER};
  y_in ={v} {CLOBBER};
  z_in ={v} {CLOBBER};
  x_out ={v} {CLOBBER};
  y_out ={v} {CLOBBER};
  z_out ={v} {CLOBBER};
  return ret_75;

  <bb 61> [local count: 8429680]:
  secrets_270 = CRYPTO_zalloc (_330, "ecp_nistp521.c", 1942);
  pre_comp_273 = CRYPTO_zalloc (_331, "ecp_nistp521.c", 1943);
  _204 = secrets_270 == 0B;
  _105 = pre_comp_273 == 0B;
  _246 = _105 | _204;
  if (_246 != 0)
    goto <bb 18>; [20.24%]
  else
    goto <bb 17>; [79.76%]

  <bb 62> [local count: 12130515]:
  secrets_277 = CRYPTO_zalloc (_330, "ecp_nistp521.c", 1942);
  pre_comp_280 = CRYPTO_zalloc (_331, "ecp_nistp521.c", 1943);
  _12 = num_points_293 * 1224;
  _13 = _12 + 72;
  tmp_felems_145 = CRYPTO_malloc (_13, "ecp_nistp521.c", 1946);
  _14 = secrets_277 == 0B;
  _15 = pre_comp_280 == 0B;
  _16 = _14 | _15;
  if (_16 != 0)
    goto <bb 18>; [20.24%]
  else
    goto <bb 16>; [79.76%]

  <bb 63> [local count: 4836154]:
  if (num_115(D) != 0)
    goto <bb 15>; [0.00%]
  else
    goto <bb 44>; [100.00%]

  <bb 64> [local count: 36284236]:
  # num_points_240 = PHI <num_points_138(14), num_115(D)(4)>
  # g_pre_comp_241 = PHI <g_pre_comp_91(14), 0B(4)>
  # generator_248 = PHI <generator_132(14), 0B(4)>
  if (num_points_240 != 0)
    goto <bb 15>; [64.81%]
  else
    goto <bb 54>; [35.19%]

}



;; Function EC_GFp_nistp521_method (EC_GFp_nistp521_method, funcdef_no=431, decl_uid=8596, cgraph_uid=431, symbol_order=437)

EC_GFp_nistp521_method ()
{
  static const struct EC_METHOD ret = {.flags=1, .field_type=406, .group_init=ec_GFp_nistp521_group_init, .group_finish=ec_GFp_simple_group_finish, .group_clear_finish=ec_GFp_simple_group_clear_finish, .group_copy=ec_GFp_nist_group_copy, .group_set_curve=ec_GFp_nistp521_group_set_curve, .group_get_curve=ec_GFp_simple_group_get_curve, .group_get_degree=ec_GFp_simple_group_get_degree, .group_order_bits=ec_group_simple_order_bits, .group_check_discriminant=ec_GFp_simple_group_check_discriminant, .point_init=ec_GFp_simple_point_init, .point_finish=ec_GFp_simple_point_finish, .point_clear_finish=ec_GFp_simple_point_clear_finish, .point_copy=ec_GFp_simple_point_copy, .point_set_to_infinity=ec_GFp_simple_point_set_to_infinity, .point_set_Jprojective_coordinates_GFp=ec_GFp_simple_set_Jprojective_coordinates_GFp, .point_get_Jprojective_coordinates_GFp=ec_GFp_simple_get_Jprojective_coordinates_GFp, .point_set_affine_coordinates=ec_GFp_simple_point_set_affine_coordinates, .point_get_affine_coordinates=ec_GFp_nistp521_point_get_affine_coordinates, .point_set_compressed_coordinates=0B, .point2oct=0B, .oct2point=0B, .add=ec_GFp_simple_add, .dbl=ec_GFp_simple_dbl, .invert=ec_GFp_simple_invert, .is_at_infinity=ec_GFp_simple_is_at_infinity, .is_on_curve=ec_GFp_simple_is_on_curve, .point_cmp=ec_GFp_simple_cmp, .make_affine=ec_GFp_simple_make_affine, .points_make_affine=ec_GFp_simple_points_make_affine, .mul=ec_GFp_nistp521_points_mul, .precompute_mult=ec_GFp_nistp521_precompute_mult, .have_precompute_mult=ec_GFp_nistp521_have_precompute_mult, .field_mul=ec_GFp_nist_field_mul, .field_sqr=ec_GFp_nist_field_sqr, .field_div=0B, .field_inv=ec_GFp_simple_field_inv, .field_encode=0B, .field_decode=0B, .field_set_to_one=0B, .priv2oct=ec_key_simple_priv2oct, .oct2priv=ec_key_simple_oct2priv, .set_private=0B, .keygen=ec_key_simple_generate_key, .keycheck=ec_key_simple_check_key, .keygenpub=ec_key_simple_generate_public_key, .keycopy=0B, .keyfinish=0B, .ecdh_compute_key=ecdh_simple_compute_key, .field_inverse_mod_ord=0B, .blind_coordinates=0B, .ladder_pre=0B, .ladder_step=0B, .ladder_post=0B};

  <bb 2> [local count: 1073741825]:
  return &ret;

}



;; Function EC_nistp521_pre_comp_dup (EC_nistp521_pre_comp_dup, funcdef_no=433, decl_uid=9710, cgraph_uid=433, symbol_order=439)

EC_nistp521_pre_comp_dup (struct NISTP521_PRE_COMP * p)
{
  atomic CRYPTO_REF_COUNT * _1;

  <bb 2> [local count: 1073741825]:
  if (p_3(D) != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> [local count: 574129753]:
  _1 = &p_3(D)->references;
  __atomic_fetch_add_4 (_1, 1, 0);

  <bb 4> [local count: 1073741825]:
  return p_3(D);

}



;; Function EC_nistp521_pre_comp_free (EC_nistp521_pre_comp_free, funcdef_no=434, decl_uid=9724, cgraph_uid=434, symbol_order=440)

EC_nistp521_pre_comp_free (struct NISTP521_PRE_COMP * p)
{
  atomic CRYPTO_REF_COUNT * _2;
  unsigned int _10;
  int _11;
  int _12;
  CRYPTO_RWLOCK * _13;

  <bb 2> [local count: 1073741825]:
  if (p_5(D) == 0B)
    goto <bb 3>; [30.95%]
  else
    goto <bb 4>; [69.05%]

  <bb 3> [local count: 777767468]:
  goto <bb 8>; [100.00%]

  <bb 4> [local count: 741418730]:
  _2 = &p_5(D)->references;
  _10 = __atomic_fetch_sub_4 (_2, 1, 0);
  _11 = (int) _10;
  _12 = _11 + -1;
  if (_12 == 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 6>; [67.00%]

  <bb 5> [local count: 244668181]:
  __atomic_thread_fence (2);
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 496750549]:
  if (_12 > 0)
    goto <bb 3>; [89.67%]
  else
    goto <bb 7>; [10.33%]

  <bb 7> [local count: 295974357]:
  _13 = p_5(D)->lock;
  CRYPTO_THREAD_lock_free (_13);
  CRYPTO_free (p_5(D), "ecp_nistp521.c", 1738); [tail call]

  <bb 8> [local count: 1073741825]:
  return;

}



;; Function ec_GFp_nistp521_precompute_mult (ec_GFp_nistp521_precompute_mult, funcdef_no=440, decl_uid=10188, cgraph_uid=440, symbol_order=446)

ec_GFp_nistp521_precompute_mult (struct EC_GROUP * group, struct BN_CTX * ctx)
{
  unsigned long ivtmp.599;
  struct NISTP521_PRE_COMP * ret;
  limb tmp_felems[16][9];
  struct EC_POINT * generator;
  struct BIGNUM * y;
  struct BIGNUM * x;
  struct BN_CTX * new_ctx;
  int i;
  struct NISTP521_PRE_COMP * pre;
  int ret;
  struct EC_POINT * _1;
  int _2;
  struct EC_POINT * _3;
  int _4;
  limb[16][3][9] * _5;
  struct EC_POINT * _6;
  struct BIGNUM * _7;
  limb[9] * _8;
  int _9;
  struct EC_POINT * _10;
  struct BIGNUM * _11;
  limb[9] * _12;
  int _13;
  struct EC_POINT * _14;
  struct BIGNUM * _15;
  limb[9] * _16;
  int _17;
  limb[9] * _18;
  limb[9] * _19;
  limb[9] * _20;
  int _21;
  limb[9] * _22;
  limb[9] * _23;
  limb[9] * _24;
  limb[3][9] * _25;
  limb[9] * _26;
  limb[9] * _27;
  limb[9] * _28;
  limb[9] * _29;
  limb[9] * _30;
  limb[9] * _31;
  limb[9] * _32;
  limb[9] * _33;
  limb[9] * _34;
  limb[9] * _35;
  limb[9] * _36;
  limb[9] * _37;
  limb[9] * _38;
  limb[9] * _39;
  limb[9] * _40;
  limb[9] * _41;
  limb[9] * _42;
  limb[9] * _43;
  limb[9] * _44;
  limb[9] * _45;
  limb[9] * _46;
  limb[9] * _54;
  sizetype _59;
  sizetype _60;
  int _63;
  sizetype _68;
  atomic CRYPTO_REF_COUNT * _117;
  CRYPTO_RWLOCK * _118;
  sizetype _119;
  sizetype _120;
  sizetype _144;
  sizetype _146;
  sizetype _147;
  unsigned long _158;
  unsigned long _159;
  limb[9] * _160;
  unsigned long _161;
  limb[9] * _162;
  unsigned long _163;
  limb[9] * _164;
  unsigned long _165;
  limb[9] * _166;
  unsigned long _167;
  limb[9] * _168;
  unsigned long _169;
  limb[9] * _170;
  unsigned int ivtmp_194;
  unsigned int ivtmp_195;
  unsigned int ivtmp_196;
  unsigned int ivtmp_197;

  <bb 2> [local count: 275868412]:
  EC_pre_comp_free (group_73(D));
  if (ctx_75(D) == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [local count: 82760524]:
  new_ctx_77 = BN_CTX_new ();
  if (new_ctx_77 == 0B)
    goto <bb 26>; [18.09%]
  else
    goto <bb 4>; [81.91%]

  <bb 4> [local count: 260897033]:
  # ctx_55 = PHI <ctx_75(D)(2), new_ctx_77(3)>
  # new_ctx_61 = PHI <0B(2), new_ctx_77(3)>
  BN_CTX_start (ctx_55);
  x_80 = BN_CTX_get (ctx_55);
  y_82 = BN_CTX_get (ctx_55);
  if (y_82 == 0B)
    goto <bb 5>; [18.09%]
  else
    goto <bb 6>; [81.91%]

  <bb 5> [local count: 159006595]:
  goto <bb 25>; [100.00%]

  <bb 6> [local count: 213700760]:
  _1 = group_73(D)->generator;
  if (_1 == 0B)
    goto <bb 5>; [30.95%]
  else
    goto <bb 7>; [69.05%]

  <bb 7> [local count: 147560375]:
  generator_84 = EC_POINT_new (group_73(D));
  if (generator_84 == 0B)
    goto <bb 5>; [30.95%]
  else
    goto <bb 8>; [69.05%]

  <bb 8> [local count: 101890439]:
  BN_bin2bn (&nistp521_curve_params[3], 66, x_80);
  BN_bin2bn (&nistp521_curve_params[4], 66, y_82);
  _2 = EC_POINT_set_affine_coordinates (group_73(D), generator_84, x_80, y_82, ctx_55);
  if (_2 == 0)
    goto <bb 25>; [51.12%]
  else
    goto <bb 9>; [48.88%]

  <bb 9> [local count: 49804046]:
  ret_116 = CRYPTO_zalloc (3472, "ecp_nistp521.c", 1698);
  if (ret_116 == 0B)
    goto <bb 10>; [8.27%]
  else
    goto <bb 11>; [91.73%]

  <bb 10> [local count: 4118795]:
  ERR_put_error (16, 237, 65, "ecp_nistp521.c", 1701);
  goto <bb 25>; [100.00%]

  <bb 11> [local count: 45685252]:
  _117 = &ret_116->references;
  __atomic_store_4 (_117, 1, 5);
  _118 = CRYPTO_THREAD_lock_new ();
  ret_116->lock = _118;
  if (_118 == 0B)
    goto <bb 12>; [4.25%]
  else
    goto <bb 13>; [95.75%]

  <bb 12> [local count: 1941623]:
  ERR_put_error (16, 237, 65, "ecp_nistp521.c", 1709);
  CRYPTO_free (ret_116, "ecp_nistp521.c", 1710);
  goto <bb 25>; [100.00%]

  <bb 13> [local count: 43743628]:
  _3 = group_73(D)->generator;
  _4 = EC_POINT_cmp (group_73(D), generator_84, _3, ctx_55);
  if (_4 == 0)
    goto <bb 14>; [34.00%]
  else
    goto <bb 15>; [66.00%]

  <bb 14> [local count: 11692496]:
  _5 = &ret_116->g_pre_comp;
  __builtin_memcpy (_5, &gmul, 3456);
  goto <bb 24>; [100.00%]

  <bb 15> [local count: 22697198]:
  _6 = group_73(D)->generator;
  _7 = _6->X;
  _8 = &ret_116->g_pre_comp[1][0];
  _9 = BN_to_felem (_8, _7);
  if (_9 == 0)
    goto <bb 25>; [51.12%]
  else
    goto <bb 16>; [48.88%]

  <bb 16> [local count: 11094390]:
  _10 = group_73(D)->generator;
  _11 = _10->Y;
  _12 = &ret_116->g_pre_comp[1][1];
  _13 = BN_to_felem (_12, _11);
  if (_13 == 0)
    goto <bb 25>; [51.12%]
  else
    goto <bb 17>; [48.88%]

  <bb 17> [local count: 5422938]:
  _14 = group_73(D)->generator;
  _15 = _14->Z;
  _16 = &ret_116->g_pre_comp[1][2];
  _17 = BN_to_felem (_16, _15);
  if (_17 == 0)
    goto <bb 25>; [34.00%]
  else
    goto <bb 18>; [66.00%]

  <bb 18> [local count: 10737418]:
  # i_149 = PHI <1(17), i_97(20)>
  # ivtmp_195 = PHI <3(17), ivtmp_194(20)>
  _119 = (sizetype) i_149;
  _147 = _119 * 216;
  _59 = _147 + 144;
  _18 = ret_116 + _59;
  _60 = _147 + 72;
  _19 = ret_116 + _60;
  _20 = ret_116 + _147;
  _21 = i_149 * 2;
  _146 = (sizetype) _21;
  _144 = _146 * 216;
  _68 = _144 + 144;
  _22 = ret_116 + _68;
  _120 = _144 + 72;
  _23 = ret_116 + _120;
  _24 = _20 + _147;
  point_double (_24, _23, _22, _20, _19, _18);

  <bb 19> [local count: 1063004407]:
  # ivtmp_197 = PHI <129(18), ivtmp_196(19)>
  point_double (_24, _23, _22, _24, _23, _22);
  ivtmp_196 = ivtmp_197 + 4294967295;
  if (ivtmp_196 != 0)
    goto <bb 19>; [98.99%]
  else
    goto <bb 20>; [1.01%]

  <bb 20> [local count: 10737418]:
  i_97 = i_149 << 1;
  ivtmp_194 = ivtmp_195 + 4294967295;
  if (ivtmp_194 != 0)
    goto <bb 18>; [66.67%]
  else
    goto <bb 21>; [33.33%]

  <bb 21> [local count: 3579139]:
  _25 = &ret_116->g_pre_comp[0];
  __builtin_memset (_25, 0, 216);
  _26 = &ret_116->g_pre_comp[2][2];
  _27 = &ret_116->g_pre_comp[2][1];
  _28 = &ret_116->g_pre_comp[2][0];
  _29 = &ret_116->g_pre_comp[4][2];
  _30 = &ret_116->g_pre_comp[4][1];
  _31 = &ret_116->g_pre_comp[4][0];
  _32 = &ret_116->g_pre_comp[6][2];
  _33 = &ret_116->g_pre_comp[6][1];
  _34 = &ret_116->g_pre_comp[6][0];
  point_add (_34, _33, _32, _31, _30, _29, 0, _28, _27, _26);
  _35 = &ret_116->g_pre_comp[8][2];
  _36 = &ret_116->g_pre_comp[8][1];
  _37 = &ret_116->g_pre_comp[8][0];
  _38 = &ret_116->g_pre_comp[10][2];
  _39 = &ret_116->g_pre_comp[10][1];
  _40 = &ret_116->g_pre_comp[10][0];
  point_add (_40, _39, _38, _37, _36, _35, 0, _28, _27, _26);
  _41 = &ret_116->g_pre_comp[12][2];
  _42 = &ret_116->g_pre_comp[12][1];
  _43 = &ret_116->g_pre_comp[12][0];
  point_add (_43, _42, _41, _37, _36, _35, 0, _31, _30, _29);
  _44 = &ret_116->g_pre_comp[14][2];
  _45 = &ret_116->g_pre_comp[14][1];
  _46 = &ret_116->g_pre_comp[14][0];
  point_add (_46, _45, _44, _43, _42, _41, 0, _28, _27, _26);
  _170 = ret_116 + 648;
  ivtmp.599_171 = (unsigned long) _170;
  _159 = (unsigned long) ret_116;
  _158 = _159 + 3672;

  <bb 22> [local count: 25053976]:
  # ivtmp.599_151 = PHI <ivtmp.599_171(21), ivtmp.599_96(22)>
  _161 = ivtmp.599_151 + 18446744073709551544;
  _160 = (limb[9] *) _161;
  _163 = ivtmp.599_151 + 18446744073709551472;
  _162 = (limb[9] *) _163;
  _165 = ivtmp.599_151 + 18446744073709551400;
  _164 = (limb[9] *) _165;
  _167 = ivtmp.599_151 + 144;
  _166 = (limb[9] *) _167;
  _169 = ivtmp.599_151 + 72;
  _168 = (limb[9] *) _169;
  _54 = (limb[9] *) ivtmp.599_151;
  point_add (_54, _168, _166, _164, _162, _160, 0, _8, _12, _16);
  ivtmp.599_96 = ivtmp.599_151 + 432;
  if (ivtmp.599_96 != _158)
    goto <bb 22>; [85.71%]
  else
    goto <bb 23>; [14.29%]

  <bb 23> [local count: 3579139]:
  ec_GFp_nistp_points_make_affine_internal (15, _8, 72, &tmp_felems, felem_one, felem_is_zero_int, felem_assign, felem_square_reduce, felem_mul_reduce, felem_inv, felem_contract);

  <bb 24> [local count: 15271635]:
done:
  group_73(D)->pre_comp_type = 3;
  group_73(D)->pre_comp.nistp521 = ret_116;

  <bb 25> [local count: 260897033]:
  # ret_56 = PHI <0(10), _2(8), 0(12), _9(15), 0(5), _13(16), 1(24), _17(17)>
  # pre_57 = PHI <ret_116(10), 0B(8), 0B(12), ret_116(15), 0B(5), ret_116(16), 0B(24), ret_116(17)>
  # generator_62 = PHI <generator_84(10), generator_84(8), generator_84(12), generator_84(15), 0B(5), generator_84(16), generator_84(24), generator_84(17)>
err:
  BN_CTX_end (ctx_55);
  EC_POINT_free (generator_62);
  BN_CTX_free (new_ctx_61);
  EC_nistp521_pre_comp_free (pre_57);

  <bb 26> [local count: 275868412]:
  # _63 = PHI <ret_56(25), 0(3)>
  tmp_felems ={v} {CLOBBER};
  return _63;

}


