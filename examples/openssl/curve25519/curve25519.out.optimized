
;; Function fe51_mul (fe51_mul, funcdef_no=364, decl_uid=10143, cgraph_uid=364, symbol_order=365)

fe51_mul (uint64_t * h, const uint64_t * f, const uint64_t * g)
{
  uint64_t g4;
  uint64_t g3;
  uint64_t g2;
  uint64_t g1;
  uint64_t g0;
  uint64_t f_i;
  u128 h4;
  u128 h3;
  u128 h2;
  u128 h1;
  u128 h0;
  __int128 unsigned _9;
  __int128 unsigned _10;
  __int128 unsigned _11;
  __int128 unsigned _12;
  __int128 unsigned _15;
  __int128 unsigned _16;
  __int128 unsigned _17;
  __int128 unsigned _18;
  __int128 unsigned _21;
  __int128 unsigned _22;
  __int128 unsigned _23;
  __int128 unsigned _24;
  __int128 unsigned _27;
  __int128 unsigned _28;
  __int128 unsigned _29;
  __int128 unsigned _30;
  __int128 unsigned _31;
  long unsigned int _32;
  __int128 unsigned _33;
  long unsigned int _34;
  __int128 unsigned _35;
  long unsigned int _36;
  __int128 unsigned _37;
  long unsigned int _38;
  long unsigned int _39;
  __int128 unsigned _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  __int128 unsigned _62;
  __int128 unsigned _70;
  __int128 unsigned _78;
  __int128 unsigned _86;
  __int128 unsigned _112;
  __int128 unsigned _113;
  __int128 unsigned _114;

  <bb 2> [local count: 1073741825]:
  f_i_48 = *f_47(D);
  g0_50 = *g_49(D);
  h0_51 = f_i_48 w* g0_50;
  g1_52 = MEM[(const uint64_t *)g_49(D) + 8B];
  h1_53 = f_i_48 w* g1_52;
  g2_54 = MEM[(const uint64_t *)g_49(D) + 16B];
  h2_55 = f_i_48 w* g2_54;
  g3_56 = MEM[(const uint64_t *)g_49(D) + 24B];
  h3_57 = f_i_48 w* g3_56;
  g4_58 = MEM[(const uint64_t *)g_49(D) + 32B];
  h4_59 = f_i_48 w* g4_58;
  f_i_60 = MEM[(const uint64_t *)f_47(D) + 8B];
  g4_61 = g4_58 * 19;
  _62 = f_i_60 w* g4_61;
  h0_63 = h0_51 + _62;
  _9 = g0_50 w* f_i_60;
  h1_64 = _9 + h1_53;
  _10 = g1_52 w* f_i_60;
  h2_65 = _10 + h2_55;
  _11 = g2_54 w* f_i_60;
  h3_66 = _11 + h3_57;
  _12 = g3_56 w* f_i_60;
  h4_67 = _12 + h4_59;
  f_i_68 = MEM[(const uint64_t *)f_47(D) + 16B];
  g3_69 = g3_56 * 19;
  _70 = f_i_68 w* g3_69;
  h0_71 = h0_63 + _70;
  _15 = g4_61 w* f_i_68;
  h1_72 = _15 + h1_64;
  _16 = g0_50 w* f_i_68;
  h2_73 = _16 + h2_65;
  _17 = g1_52 w* f_i_68;
  h3_74 = _17 + h3_66;
  _18 = g2_54 w* f_i_68;
  h4_75 = _18 + h4_67;
  f_i_76 = MEM[(const uint64_t *)f_47(D) + 24B];
  g2_77 = g2_54 * 19;
  _78 = f_i_76 w* g2_77;
  h0_79 = h0_71 + _78;
  _21 = g3_69 w* f_i_76;
  h1_80 = _21 + h1_72;
  _22 = g4_61 w* f_i_76;
  h2_81 = _22 + h2_73;
  _23 = g0_50 w* f_i_76;
  h3_82 = _23 + h3_74;
  _24 = g1_52 w* f_i_76;
  h4_83 = _24 + h4_75;
  f_i_84 = MEM[(const uint64_t *)f_47(D) + 32B];
  g1_85 = g1_52 * 19;
  _86 = f_i_84 w* g1_85;
  h0_87 = h0_79 + _86;
  _27 = g2_77 w* f_i_84;
  h1_88 = _27 + h1_80;
  _28 = g3_69 w* f_i_84;
  h2_89 = _28 + h2_81;
  _29 = g4_61 w* f_i_84;
  h3_90 = _29 + h3_82;
  _30 = g0_50 w* f_i_84;
  h4_91 = _30 + h4_83;
  _31 = h2_89 >> 51;
  _112 = _31 & 18446744073709551615;
  h3_92 = h3_90 + _112;
  _32 = (long unsigned int) h2_89;
  g2_93 = _32 & 2251799813685247;
  _33 = h0_87 >> 51;
  _113 = _33 & 18446744073709551615;
  h1_94 = h1_88 + _113;
  _34 = (long unsigned int) h0_87;
  g0_95 = _34 & 2251799813685247;
  _35 = h3_92 >> 51;
  _114 = _35 & 18446744073709551615;
  h4_96 = h4_91 + _114;
  _36 = (long unsigned int) h3_92;
  g3_97 = _36 & 2251799813685247;
  _37 = h1_94 >> 51;
  _38 = (long unsigned int) _37;
  g2_98 = _38 + g2_93;
  _39 = (long unsigned int) h1_94;
  g1_99 = _39 & 2251799813685247;
  _40 = h4_96 >> 51;
  _41 = (long unsigned int) _40;
  _42 = _41 * 19;
  g0_100 = _42 + g0_95;
  _43 = (long unsigned int) h4_96;
  g4_101 = _43 & 2251799813685247;
  _44 = g2_98 >> 51;
  g3_102 = _44 + g3_97;
  g2_103 = g2_98 & 2251799813685247;
  _45 = g0_100 >> 51;
  g1_104 = _45 + g1_99;
  g0_105 = g0_100 & 2251799813685247;
  *h_106(D) = g0_105;
  MEM[(uint64_t *)h_106(D) + 8B] = g1_104;
  MEM[(uint64_t *)h_106(D) + 16B] = g2_103;
  MEM[(uint64_t *)h_106(D) + 24B] = g3_102;
  MEM[(uint64_t *)h_106(D) + 32B] = g4_101;
  return;

}



;; Function fe51_sq (fe51_sq, funcdef_no=365, decl_uid=10158, cgraph_uid=365, symbol_order=366)

fe51_sq (uint64_t * h, const uint64_t * f)
{
  u128 h4;
  u128 h3;
  u128 h2;
  u128 h1;
  u128 h0;
  uint64_t g4;
  uint64_t g3;
  uint64_t g2;
  uint64_t g1;
  uint64_t g0;
  __int128 unsigned _8;
  __int128 unsigned _10;
  __int128 unsigned _11;
  __int128 unsigned _12;
  long unsigned int _14;
  __int128 unsigned _16;
  __int128 unsigned _17;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _21;
  long unsigned int _22;
  __int128 unsigned _23;
  long unsigned int _24;
  __int128 unsigned _25;
  long unsigned int _26;
  __int128 unsigned _27;
  long unsigned int _28;
  long unsigned int _29;
  __int128 unsigned _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  __int128 unsigned _49;
  __int128 unsigned _51;
  __int128 unsigned _58;
  __int128 unsigned _60;
  __int128 unsigned _87;
  __int128 unsigned _88;
  __int128 unsigned _89;

  <bb 2> [local count: 1073741825]:
  g0_38 = *f_37(D);
  g1_39 = MEM[(const uint64_t *)f_37(D) + 8B];
  g2_40 = MEM[(const uint64_t *)f_37(D) + 16B];
  g3_41 = MEM[(const uint64_t *)f_37(D) + 24B];
  g4_42 = MEM[(const uint64_t *)f_37(D) + 32B];
  h0_43 = g0_38 w* g0_38;
  g0_44 = g0_38 * 2;
  h1_45 = g0_44 w* g1_39;
  h2_46 = g0_44 w* g2_40;
  h3_47 = g0_44 w* g3_41;
  h4_48 = g0_44 w* g4_42;
  g4_50 = g4_42 * 19;
  _51 = g4_42 w* g4_50;
  h3_52 = h3_47 + _51;
  _8 = g1_39 w* g1_39;
  g1_54 = g1_39 * 2;
  _10 = g2_40 w* g1_54;
  h3_55 = _10 + h3_52;
  _11 = g3_41 w* g1_54;
  h4_56 = _11 + h4_48;
  _12 = g4_50 w* g1_54;
  g3_59 = g3_41 * 19;
  _60 = g3_41 w* g3_59;
  h1_61 = h1_45 + _60;
  _14 = g3_41 * 2;
  _16 = g4_50 w* _14;
  _88 = _16 + h2_46;
  h2_62 = _8 + _88;
  _17 = g2_40 w* g2_40;
  h4_63 = _17 + h4_56;
  g2_64 = g2_40 * 2;
  _19 = g3_59 w* g2_64;
  _89 = _12 + _19;
  h0_65 = h0_43 + _89;
  _20 = g4_50 w* g2_64;
  h1_66 = _20 + h1_61;
  _21 = h2_62 >> 51;
  _49 = _21 & 18446744073709551615;
  h3_67 = _49 + h3_55;
  _22 = (long unsigned int) h2_62;
  g2_68 = _22 & 2251799813685247;
  _23 = h0_65 >> 51;
  _58 = _23 & 18446744073709551615;
  h1_69 = _58 + h1_66;
  _24 = (long unsigned int) h0_65;
  g0_70 = _24 & 2251799813685247;
  _25 = h3_67 >> 51;
  _87 = _25 & 18446744073709551615;
  h4_71 = h4_63 + _87;
  _26 = (long unsigned int) h3_67;
  g3_72 = _26 & 2251799813685247;
  _27 = h1_69 >> 51;
  _28 = (long unsigned int) _27;
  g2_73 = _28 + g2_68;
  _29 = (long unsigned int) h1_69;
  g1_74 = _29 & 2251799813685247;
  _30 = h4_71 >> 51;
  _31 = (long unsigned int) _30;
  _32 = _31 * 19;
  g0_75 = _32 + g0_70;
  _33 = (long unsigned int) h4_71;
  g4_76 = _33 & 2251799813685247;
  _34 = g2_73 >> 51;
  g3_77 = _34 + g3_72;
  g2_78 = g2_73 & 2251799813685247;
  _35 = g0_75 >> 51;
  g1_79 = _35 + g1_74;
  g0_80 = g0_75 & 2251799813685247;
  *h_81(D) = g0_80;
  MEM[(uint64_t *)h_81(D) + 8B] = g1_79;
  MEM[(uint64_t *)h_81(D) + 16B] = g2_78;
  MEM[(uint64_t *)h_81(D) + 24B] = g3_77;
  MEM[(uint64_t *)h_81(D) + 32B] = g4_76;
  return;

}



;; Function fe_tobytes (fe_tobytes, funcdef_no=378, decl_uid=10306, cgraph_uid=378, symbol_order=383)

fe_tobytes (uint8_t * s, const int32_t * h)
{
  int32_t q;
  int32_t h9;
  int32_t h8;
  int32_t h7;
  int32_t h6;
  int32_t h5;
  int32_t h4;
  int32_t h3;
  int32_t h2;
  int32_t h1;
  int32_t h0;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  int _14;
  int _15;
  int _16;
  int _17;
  int _18;
  int _19;
  int _20;
  int _21;
  int _22;
  int _26;
  unsigned char _27;
  int _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  int _33;
  unsigned char _34;
  int _35;
  unsigned char _36;
  int _37;
  unsigned char _38;
  unsigned char _39;
  unsigned char _40;
  unsigned char _41;
  int _42;
  unsigned char _43;
  int _44;
  unsigned char _45;
  int _46;
  unsigned char _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char _50;
  int _51;
  unsigned char _52;
  int _53;
  unsigned char _54;
  int _55;
  unsigned char _56;
  unsigned char _57;
  unsigned char _58;
  unsigned char _59;
  int _60;
  unsigned char _61;
  int _62;
  unsigned char _63;
  int _64;
  unsigned char _65;
  int _69;
  unsigned char _70;
  int _71;
  unsigned char _72;
  unsigned char _73;
  unsigned char _74;
  unsigned char _75;
  int _76;
  unsigned char _77;
  int _78;
  unsigned char _79;
  int _80;
  unsigned char _81;
  unsigned char _82;
  unsigned char _83;
  unsigned char _84;
  int _85;
  unsigned char _86;
  int _87;
  unsigned char _88;
  int _89;
  unsigned char _90;
  unsigned char _91;
  unsigned char _92;
  unsigned char _93;
  int _94;
  unsigned char _95;
  int _96;
  unsigned char _97;
  int _98;
  unsigned char _99;
  unsigned char _100;
  unsigned char _101;
  unsigned char _102;
  int _103;
  unsigned char _104;
  int _105;
  unsigned char _106;
  int _107;
  unsigned char _108;
  unsigned short _185;
  unsigned short _186;

  <bb 2> [local count: 1073741825]:
  h0_111 = *h_110(D);
  h1_112 = MEM[(const int32_t *)h_110(D) + 4B];
  h2_113 = MEM[(const int32_t *)h_110(D) + 8B];
  h3_114 = MEM[(const int32_t *)h_110(D) + 12B];
  h4_115 = MEM[(const int32_t *)h_110(D) + 16B];
  h5_116 = MEM[(const int32_t *)h_110(D) + 20B];
  h6_117 = MEM[(const int32_t *)h_110(D) + 24B];
  h7_118 = MEM[(const int32_t *)h_110(D) + 28B];
  h8_119 = MEM[(const int32_t *)h_110(D) + 32B];
  h9_120 = MEM[(const int32_t *)h_110(D) + 36B];
  _1 = h9_120 * 19;
  _2 = _1 + 16777216;
  q_121 = _2 >> 25;
  _3 = h0_111 + q_121;
  q_122 = _3 >> 26;
  _4 = h1_112 + q_122;
  q_123 = _4 >> 25;
  _5 = h2_113 + q_123;
  q_124 = _5 >> 26;
  _6 = h3_114 + q_124;
  q_125 = _6 >> 25;
  _7 = h4_115 + q_125;
  q_126 = _7 >> 26;
  _8 = h5_116 + q_126;
  q_127 = _8 >> 25;
  _9 = h6_117 + q_127;
  q_128 = _9 >> 26;
  _10 = h7_118 + q_128;
  q_129 = _10 >> 25;
  _11 = h8_119 + q_129;
  q_130 = _11 >> 26;
  _12 = h9_120 + q_130;
  q_131 = _12 >> 25;
  _13 = q_131 * 19;
  h0_132 = _13 + h0_111;
  _14 = h0_132 >> 26;
  h1_133 = _14 + h1_112;
  h0_134 = h0_132 & 67108863;
  _15 = h1_133 >> 25;
  h2_135 = _15 + h2_113;
  h1_136 = h1_133 & 33554431;
  _16 = h2_135 >> 26;
  h3_137 = _16 + h3_114;
  h2_138 = h2_135 & 67108863;
  _17 = h3_137 >> 25;
  h4_139 = _17 + h4_115;
  h3_140 = h3_137 & 33554431;
  _18 = h4_139 >> 26;
  h5_141 = _18 + h5_116;
  h4_142 = h4_139 & 67108863;
  _19 = h5_141 >> 25;
  h6_143 = _19 + h6_117;
  h5_144 = h5_141 & 33554431;
  _20 = h6_143 >> 26;
  h7_145 = _20 + h7_118;
  h6_146 = h6_143 & 67108863;
  _21 = h7_145 >> 25;
  h8_147 = _21 + h8_119;
  h7_148 = h7_145 & 33554431;
  _22 = h8_147 >> 26;
  h9_149 = _22 + h9_120;
  h8_150 = h8_147 & 67108863;
  h9_151 = h9_149 & 33554431;
  _185 = (unsigned short) h0_134;
  MEM[(uint8_t *)s_152(D)] = _185;
  _26 = h0_134 >> 16;
  _27 = (unsigned char) _26;
  MEM[(uint8_t *)s_152(D) + 2B] = _27;
  _28 = h0_134 >> 24;
  _29 = (unsigned char) _28;
  _30 = (unsigned char) h1_136;
  _31 = _30 << 2;
  _32 = _29 | _31;
  MEM[(uint8_t *)s_152(D) + 3B] = _32;
  _33 = h1_136 >> 6;
  _34 = (unsigned char) _33;
  MEM[(uint8_t *)s_152(D) + 4B] = _34;
  _35 = h1_136 >> 14;
  _36 = (unsigned char) _35;
  MEM[(uint8_t *)s_152(D) + 5B] = _36;
  _37 = h1_136 >> 22;
  _38 = (unsigned char) _37;
  _39 = (unsigned char) h2_138;
  _40 = _39 << 3;
  _41 = _38 | _40;
  MEM[(uint8_t *)s_152(D) + 6B] = _41;
  _42 = h2_138 >> 5;
  _43 = (unsigned char) _42;
  MEM[(uint8_t *)s_152(D) + 7B] = _43;
  _44 = h2_138 >> 13;
  _45 = (unsigned char) _44;
  MEM[(uint8_t *)s_152(D) + 8B] = _45;
  _46 = h2_138 >> 21;
  _47 = (unsigned char) _46;
  _48 = (unsigned char) h3_140;
  _49 = _48 << 5;
  _50 = _47 | _49;
  MEM[(uint8_t *)s_152(D) + 9B] = _50;
  _51 = h3_140 >> 3;
  _52 = (unsigned char) _51;
  MEM[(uint8_t *)s_152(D) + 10B] = _52;
  _53 = h3_140 >> 11;
  _54 = (unsigned char) _53;
  MEM[(uint8_t *)s_152(D) + 11B] = _54;
  _55 = h3_140 >> 19;
  _56 = (unsigned char) _55;
  _57 = (unsigned char) h4_142;
  _58 = _57 << 6;
  _59 = _56 | _58;
  MEM[(uint8_t *)s_152(D) + 12B] = _59;
  _60 = h4_142 >> 2;
  _61 = (unsigned char) _60;
  MEM[(uint8_t *)s_152(D) + 13B] = _61;
  _62 = h4_142 >> 10;
  _63 = (unsigned char) _62;
  MEM[(uint8_t *)s_152(D) + 14B] = _63;
  _64 = h4_142 >> 18;
  _65 = (unsigned char) _64;
  MEM[(uint8_t *)s_152(D) + 15B] = _65;
  _186 = (unsigned short) h5_144;
  MEM[(uint8_t *)s_152(D) + 16B] = _186;
  _69 = h5_144 >> 16;
  _70 = (unsigned char) _69;
  MEM[(uint8_t *)s_152(D) + 18B] = _70;
  _71 = h5_144 >> 24;
  _72 = (unsigned char) _71;
  _73 = (unsigned char) h6_146;
  _74 = _73 << 1;
  _75 = _72 | _74;
  MEM[(uint8_t *)s_152(D) + 19B] = _75;
  _76 = h6_146 >> 7;
  _77 = (unsigned char) _76;
  MEM[(uint8_t *)s_152(D) + 20B] = _77;
  _78 = h6_146 >> 15;
  _79 = (unsigned char) _78;
  MEM[(uint8_t *)s_152(D) + 21B] = _79;
  _80 = h6_146 >> 23;
  _81 = (unsigned char) _80;
  _82 = (unsigned char) h7_148;
  _83 = _82 << 3;
  _84 = _81 | _83;
  MEM[(uint8_t *)s_152(D) + 22B] = _84;
  _85 = h7_148 >> 5;
  _86 = (unsigned char) _85;
  MEM[(uint8_t *)s_152(D) + 23B] = _86;
  _87 = h7_148 >> 13;
  _88 = (unsigned char) _87;
  MEM[(uint8_t *)s_152(D) + 24B] = _88;
  _89 = h7_148 >> 21;
  _90 = (unsigned char) _89;
  _91 = (unsigned char) h8_150;
  _92 = _91 << 4;
  _93 = _90 | _92;
  MEM[(uint8_t *)s_152(D) + 25B] = _93;
  _94 = h8_150 >> 4;
  _95 = (unsigned char) _94;
  MEM[(uint8_t *)s_152(D) + 26B] = _95;
  _96 = h8_150 >> 12;
  _97 = (unsigned char) _96;
  MEM[(uint8_t *)s_152(D) + 27B] = _97;
  _98 = h8_150 >> 20;
  _99 = (unsigned char) _98;
  _100 = (unsigned char) h9_151;
  _101 = _100 << 6;
  _102 = _99 | _101;
  MEM[(uint8_t *)s_152(D) + 28B] = _102;
  _103 = h9_151 >> 2;
  _104 = (unsigned char) _103;
  MEM[(uint8_t *)s_152(D) + 29B] = _104;
  _105 = h9_151 >> 10;
  _106 = (unsigned char) _105;
  MEM[(uint8_t *)s_152(D) + 30B] = _106;
  _107 = h9_151 >> 18;
  _108 = (unsigned char) _107;
  MEM[(uint8_t *)s_152(D) + 31B] = _108;
  return;

}



;; Function fe_mul (fe_mul, funcdef_no=384, decl_uid=10350, cgraph_uid=384, symbol_order=389)

fe_mul (int32_t * h, const int32_t * f, const int32_t * g)
{
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t h9;
  int64_t h8;
  int64_t h7;
  int64_t h6;
  int64_t h5;
  int64_t h4;
  int64_t h3;
  int64_t h2;
  int64_t h1;
  int64_t h0;
  int64_t f9g9_38;
  int64_t f9g8_19;
  int64_t f9g7_38;
  int64_t f9g6_19;
  int64_t f9g5_38;
  int64_t f9g4_19;
  int64_t f9g3_38;
  int64_t f9g2_19;
  int64_t f9g1_38;
  int64_t f9g0;
  int64_t f8g9_19;
  int64_t f8g8_19;
  int64_t f8g7_19;
  int64_t f8g6_19;
  int64_t f8g5_19;
  int64_t f8g4_19;
  int64_t f8g3_19;
  int64_t f8g2_19;
  int64_t f8g1;
  int64_t f8g0;
  int64_t f7g9_38;
  int64_t f7g8_19;
  int64_t f7g7_38;
  int64_t f7g6_19;
  int64_t f7g5_38;
  int64_t f7g4_19;
  int64_t f7g3_38;
  int64_t f7g2;
  int64_t f7g1_2;
  int64_t f7g0;
  int64_t f6g9_19;
  int64_t f6g8_19;
  int64_t f6g7_19;
  int64_t f6g6_19;
  int64_t f6g5_19;
  int64_t f6g4_19;
  int64_t f6g3;
  int64_t f6g2;
  int64_t f6g1;
  int64_t f6g0;
  int64_t f5g9_38;
  int64_t f5g8_19;
  int64_t f5g7_38;
  int64_t f5g6_19;
  int64_t f5g5_38;
  int64_t f5g4;
  int64_t f5g3_2;
  int64_t f5g2;
  int64_t f5g1_2;
  int64_t f5g0;
  int64_t f4g9_19;
  int64_t f4g8_19;
  int64_t f4g7_19;
  int64_t f4g6_19;
  int64_t f4g5;
  int64_t f4g4;
  int64_t f4g3;
  int64_t f4g2;
  int64_t f4g1;
  int64_t f4g0;
  int64_t f3g9_38;
  int64_t f3g8_19;
  int64_t f3g7_38;
  int64_t f3g6;
  int64_t f3g5_2;
  int64_t f3g4;
  int64_t f3g3_2;
  int64_t f3g2;
  int64_t f3g1_2;
  int64_t f3g0;
  int64_t f2g9_19;
  int64_t f2g8_19;
  int64_t f2g7;
  int64_t f2g6;
  int64_t f2g5;
  int64_t f2g4;
  int64_t f2g3;
  int64_t f2g2;
  int64_t f2g1;
  int64_t f2g0;
  int64_t f1g9_38;
  int64_t f1g8;
  int64_t f1g7_2;
  int64_t f1g6;
  int64_t f1g5_2;
  int64_t f1g4;
  int64_t f1g3_2;
  int64_t f1g2;
  int64_t f1g1_2;
  int64_t f1g0;
  int64_t f0g9;
  int64_t f0g8;
  int64_t f0g7;
  int64_t f0g6;
  int64_t f0g5;
  int64_t f0g4;
  int64_t f0g3;
  int64_t f0g2;
  int64_t f0g1;
  int64_t f0g0;
  int32_t f9_2;
  int32_t f7_2;
  int32_t f5_2;
  int32_t f3_2;
  int32_t f1_2;
  int32_t g9_19;
  int32_t g8_19;
  int32_t g7_19;
  int32_t g6_19;
  int32_t g5_19;
  int32_t g4_19;
  int32_t g3_19;
  int32_t g2_19;
  int32_t g1_19;
  int32_t g9;
  int32_t g8;
  int32_t g7;
  int32_t g6;
  int32_t g5;
  int32_t g4;
  int32_t g3;
  int32_t g2;
  int32_t g1;
  int32_t g0;
  int32_t f9;
  int32_t f8;
  int32_t f7;
  int32_t f6;
  int32_t f5;
  int32_t f4;
  int32_t f3;
  int32_t f2;
  int32_t f1;
  int32_t f0;
  long int _1;
  long int _2;
  long int _3;
  long int _4;
  long int _5;
  long int _6;
  long int _7;
  long int _8;
  long int _9;
  long int _10;
  long int _11;
  long int _12;
  long int _13;
  long int _14;
  long int _15;
  long int _16;
  long int _17;
  long int _18;
  long int _19;
  long int _20;
  long int _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  long int _51;
  long int _52;
  long int _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  long int _58;
  long int _59;
  long int _60;
  long int _61;
  long int _62;
  long int _63;
  long int _64;
  long int _65;
  long int _66;
  long int _67;
  long int _68;
  long int _69;
  long int _70;
  long int _71;
  long int _72;
  long int _73;
  long int _74;
  long int _75;
  long int _76;
  long int _77;
  long int _78;
  long int _79;
  long int _80;
  long int _81;
  long int _82;
  long int _83;
  long int _84;
  long int _85;
  long int _86;
  long int _87;
  long int _88;
  long int _89;
  long int _90;
  long int _91;
  long int _92;
  long int _93;
  long int _94;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _100;
  long int _101;
  long int _102;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  long int _112;
  long int _113;
  long int _114;
  long int _115;
  long int _116;
  long int _117;
  long int _118;
  long int _119;
  long int _120;
  long int _121;
  long int _122;
  long int _123;
  long int _124;
  long int _125;
  long int _126;
  long int _127;
  long int _128;
  long int _129;
  long int _130;
  long int _131;
  long int _132;
  long int _133;
  long int _134;
  long int _135;
  long int _136;
  long int _137;
  long int _138;
  long int _139;
  int _140;
  int _141;
  int _142;
  int _143;
  int _144;
  int _145;
  int _146;
  int _147;
  int _148;
  int _149;

  <bb 2> [local count: 1073741825]:
  f0_152 = *f_151(D);
  f1_153 = MEM[(const int32_t *)f_151(D) + 4B];
  f2_154 = MEM[(const int32_t *)f_151(D) + 8B];
  f3_155 = MEM[(const int32_t *)f_151(D) + 12B];
  f4_156 = MEM[(const int32_t *)f_151(D) + 16B];
  f5_157 = MEM[(const int32_t *)f_151(D) + 20B];
  f6_158 = MEM[(const int32_t *)f_151(D) + 24B];
  f7_159 = MEM[(const int32_t *)f_151(D) + 28B];
  f8_160 = MEM[(const int32_t *)f_151(D) + 32B];
  f9_161 = MEM[(const int32_t *)f_151(D) + 36B];
  g0_163 = *g_162(D);
  g1_164 = MEM[(const int32_t *)g_162(D) + 4B];
  g2_165 = MEM[(const int32_t *)g_162(D) + 8B];
  g3_166 = MEM[(const int32_t *)g_162(D) + 12B];
  g4_167 = MEM[(const int32_t *)g_162(D) + 16B];
  g5_168 = MEM[(const int32_t *)g_162(D) + 20B];
  g6_169 = MEM[(const int32_t *)g_162(D) + 24B];
  g7_170 = MEM[(const int32_t *)g_162(D) + 28B];
  g8_171 = MEM[(const int32_t *)g_162(D) + 32B];
  g9_172 = MEM[(const int32_t *)g_162(D) + 36B];
  g1_19_173 = g1_164 * 19;
  g2_19_174 = g2_165 * 19;
  g3_19_175 = g3_166 * 19;
  g4_19_176 = g4_167 * 19;
  g5_19_177 = g5_168 * 19;
  g6_19_178 = g6_169 * 19;
  g7_19_179 = g7_170 * 19;
  g8_19_180 = g8_171 * 19;
  g9_19_181 = g9_172 * 19;
  f1_2_182 = f1_153 * 2;
  f3_2_183 = f3_155 * 2;
  f5_2_184 = f5_157 * 2;
  f7_2_185 = f7_159 * 2;
  f9_2_186 = f9_161 * 2;
  _1 = (long int) f0_152;
  _2 = (long int) g0_163;
  f0g0_187 = _1 * _2;
  _3 = (long int) g1_164;
  f0g1_188 = _1 * _3;
  _4 = (long int) g2_165;
  f0g2_189 = _1 * _4;
  _5 = (long int) g3_166;
  f0g3_190 = _1 * _5;
  _6 = (long int) g4_167;
  f0g4_191 = _1 * _6;
  _7 = (long int) g5_168;
  f0g5_192 = _1 * _7;
  _8 = (long int) g6_169;
  f0g6_193 = _1 * _8;
  _9 = (long int) g7_170;
  f0g7_194 = _1 * _9;
  _10 = (long int) g8_171;
  f0g8_195 = _1 * _10;
  _11 = (long int) g9_172;
  f0g9_196 = _1 * _11;
  _12 = (long int) f1_153;
  f1g0_197 = _2 * _12;
  _13 = (long int) f1_2_182;
  f1g1_2_198 = _3 * _13;
  f1g2_199 = _4 * _12;
  f1g3_2_200 = _5 * _13;
  f1g4_201 = _6 * _12;
  f1g5_2_202 = _7 * _13;
  f1g6_203 = _8 * _12;
  f1g7_2_204 = _9 * _13;
  f1g8_205 = _10 * _12;
  _14 = (long int) g9_19_181;
  f1g9_38_206 = _13 * _14;
  _15 = (long int) f2_154;
  f2g0_207 = _2 * _15;
  f2g1_208 = _3 * _15;
  f2g2_209 = _4 * _15;
  f2g3_210 = _5 * _15;
  f2g4_211 = _6 * _15;
  f2g5_212 = _7 * _15;
  f2g6_213 = _8 * _15;
  f2g7_214 = _9 * _15;
  _16 = (long int) g8_19_180;
  f2g8_19_215 = _15 * _16;
  f2g9_19_216 = _14 * _15;
  _17 = (long int) f3_155;
  f3g0_217 = _2 * _17;
  _18 = (long int) f3_2_183;
  f3g1_2_218 = _3 * _18;
  f3g2_219 = _4 * _17;
  f3g3_2_220 = _5 * _18;
  f3g4_221 = _6 * _17;
  f3g5_2_222 = _7 * _18;
  f3g6_223 = _8 * _17;
  _19 = (long int) g7_19_179;
  f3g7_38_224 = _18 * _19;
  f3g8_19_225 = _16 * _17;
  f3g9_38_226 = _14 * _18;
  _20 = (long int) f4_156;
  f4g0_227 = _2 * _20;
  f4g1_228 = _3 * _20;
  f4g2_229 = _4 * _20;
  f4g3_230 = _5 * _20;
  f4g4_231 = _6 * _20;
  f4g5_232 = _7 * _20;
  _21 = (long int) g6_19_178;
  f4g6_19_233 = _20 * _21;
  f4g7_19_234 = _19 * _20;
  f4g8_19_235 = _16 * _20;
  f4g9_19_236 = _14 * _20;
  _22 = (long int) f5_157;
  f5g0_237 = _2 * _22;
  _23 = (long int) f5_2_184;
  f5g1_2_238 = _3 * _23;
  f5g2_239 = _4 * _22;
  f5g3_2_240 = _5 * _23;
  f5g4_241 = _6 * _22;
  _24 = (long int) g5_19_177;
  f5g5_38_242 = _23 * _24;
  f5g6_19_243 = _21 * _22;
  f5g7_38_244 = _19 * _23;
  f5g8_19_245 = _16 * _22;
  f5g9_38_246 = _14 * _23;
  _25 = (long int) f6_158;
  f6g0_247 = _2 * _25;
  f6g1_248 = _3 * _25;
  f6g2_249 = _4 * _25;
  f6g3_250 = _5 * _25;
  _26 = (long int) g4_19_176;
  f6g4_19_251 = _25 * _26;
  f6g5_19_252 = _24 * _25;
  f6g6_19_253 = _21 * _25;
  f6g7_19_254 = _19 * _25;
  f6g8_19_255 = _16 * _25;
  f6g9_19_256 = _14 * _25;
  _27 = (long int) f7_159;
  f7g0_257 = _2 * _27;
  _28 = (long int) f7_2_185;
  f7g1_2_258 = _3 * _28;
  f7g2_259 = _4 * _27;
  _29 = (long int) g3_19_175;
  f7g3_38_260 = _28 * _29;
  f7g4_19_261 = _26 * _27;
  f7g5_38_262 = _24 * _28;
  f7g6_19_263 = _21 * _27;
  f7g7_38_264 = _19 * _28;
  f7g8_19_265 = _16 * _27;
  f7g9_38_266 = _14 * _28;
  _30 = (long int) f8_160;
  f8g0_267 = _2 * _30;
  f8g1_268 = _3 * _30;
  _31 = (long int) g2_19_174;
  f8g2_19_269 = _30 * _31;
  f8g3_19_270 = _29 * _30;
  f8g4_19_271 = _26 * _30;
  f8g5_19_272 = _24 * _30;
  f8g6_19_273 = _21 * _30;
  f8g7_19_274 = _19 * _30;
  f8g8_19_275 = _16 * _30;
  f8g9_19_276 = _14 * _30;
  _32 = (long int) f9_161;
  f9g0_277 = _2 * _32;
  _33 = (long int) f9_2_186;
  _34 = (long int) g1_19_173;
  f9g1_38_278 = _33 * _34;
  f9g2_19_279 = _31 * _32;
  f9g3_38_280 = _29 * _33;
  f9g4_19_281 = _26 * _32;
  f9g5_38_282 = _24 * _33;
  f9g6_19_283 = _21 * _32;
  f9g7_38_284 = _19 * _33;
  f9g8_19_285 = _16 * _32;
  f9g9_38_286 = _14 * _33;
  _35 = f0g0_187 + f1g9_38_206;
  _36 = _35 + f2g8_19_215;
  _37 = _36 + f3g7_38_224;
  _38 = _37 + f4g6_19_233;
  _39 = _38 + f5g5_38_242;
  _40 = _39 + f6g4_19_251;
  _41 = _40 + f7g3_38_260;
  _42 = _41 + f8g2_19_269;
  h0_287 = _42 + f9g1_38_278;
  _43 = f0g1_188 + f1g0_197;
  _44 = _43 + f2g9_19_216;
  _45 = _44 + f3g8_19_225;
  _46 = _45 + f4g7_19_234;
  _47 = _46 + f5g6_19_243;
  _48 = _47 + f6g5_19_252;
  _49 = _48 + f7g4_19_261;
  _50 = _49 + f8g3_19_270;
  h1_288 = _50 + f9g2_19_279;
  _51 = f0g2_189 + f1g1_2_198;
  _52 = _51 + f2g0_207;
  _53 = _52 + f3g9_38_226;
  _54 = _53 + f4g8_19_235;
  _55 = _54 + f5g7_38_244;
  _56 = _55 + f6g6_19_253;
  _57 = _56 + f7g5_38_262;
  _58 = _57 + f8g4_19_271;
  h2_289 = _58 + f9g3_38_280;
  _59 = f0g3_190 + f1g2_199;
  _60 = _59 + f2g1_208;
  _61 = _60 + f3g0_217;
  _62 = _61 + f4g9_19_236;
  _63 = _62 + f5g8_19_245;
  _64 = _63 + f6g7_19_254;
  _65 = _64 + f7g6_19_263;
  _66 = _65 + f8g5_19_272;
  h3_290 = _66 + f9g4_19_281;
  _67 = f0g4_191 + f1g3_2_200;
  _68 = _67 + f2g2_209;
  _69 = _68 + f3g1_2_218;
  _70 = _69 + f4g0_227;
  _71 = _70 + f5g9_38_246;
  _72 = _71 + f6g8_19_255;
  _73 = _72 + f7g7_38_264;
  _74 = _73 + f8g6_19_273;
  h4_291 = _74 + f9g5_38_282;
  _75 = f0g5_192 + f1g4_201;
  _76 = _75 + f2g3_210;
  _77 = _76 + f3g2_219;
  _78 = _77 + f4g1_228;
  _79 = _78 + f5g0_237;
  _80 = _79 + f6g9_19_256;
  _81 = _80 + f7g8_19_265;
  _82 = _81 + f8g7_19_274;
  h5_292 = _82 + f9g6_19_283;
  _83 = f0g6_193 + f1g5_2_202;
  _84 = _83 + f2g4_211;
  _85 = _84 + f3g3_2_220;
  _86 = _85 + f4g2_229;
  _87 = _86 + f5g1_2_238;
  _88 = _87 + f6g0_247;
  _89 = _88 + f7g9_38_266;
  _90 = _89 + f8g8_19_275;
  h6_293 = _90 + f9g7_38_284;
  _91 = f0g7_194 + f1g6_203;
  _92 = _91 + f2g5_212;
  _93 = _92 + f3g4_221;
  _94 = _93 + f4g3_230;
  _95 = _94 + f5g2_239;
  _96 = _95 + f6g1_248;
  _97 = _96 + f7g0_257;
  _98 = _97 + f8g9_19_276;
  h7_294 = _98 + f9g8_19_285;
  _99 = f0g8_195 + f1g7_2_204;
  _100 = _99 + f2g6_213;
  _101 = _100 + f3g5_2_222;
  _102 = _101 + f4g4_231;
  _103 = _102 + f5g3_2_240;
  _104 = _103 + f6g2_249;
  _105 = _104 + f7g1_2_258;
  _106 = _105 + f8g0_267;
  h8_295 = _106 + f9g9_38_286;
  _107 = f0g9_196 + f1g8_205;
  _108 = _107 + f2g7_214;
  _109 = _108 + f3g6_223;
  _110 = _109 + f4g5_232;
  _111 = _110 + f5g4_241;
  _112 = _111 + f6g3_250;
  _113 = _112 + f7g2_259;
  _114 = _113 + f8g1_268;
  h9_296 = _114 + f9g0_277;
  carry0_297 = h0_287 + 33554432;
  _115 = carry0_297 >> 26;
  h1_298 = _115 + h1_288;
  _116 = carry0_297 & -67108864;
  h0_299 = h0_287 - _116;
  carry4_300 = h4_291 + 33554432;
  _117 = carry4_300 >> 26;
  h5_301 = _117 + h5_292;
  _118 = carry4_300 & -67108864;
  h4_302 = h4_291 - _118;
  carry1_303 = h1_298 + 16777216;
  _119 = carry1_303 >> 25;
  h2_304 = _119 + h2_289;
  _120 = carry1_303 & -33554432;
  h1_305 = h1_298 - _120;
  carry5_306 = h5_301 + 16777216;
  _121 = carry5_306 >> 25;
  h6_307 = _121 + h6_293;
  _122 = carry5_306 & -33554432;
  h5_308 = h5_301 - _122;
  carry2_309 = h2_304 + 33554432;
  _123 = carry2_309 >> 26;
  h3_310 = _123 + h3_290;
  _124 = carry2_309 & -67108864;
  h2_311 = h2_304 - _124;
  carry6_312 = h6_307 + 33554432;
  _125 = carry6_312 >> 26;
  h7_313 = _125 + h7_294;
  _126 = carry6_312 & -67108864;
  h6_314 = h6_307 - _126;
  carry3_315 = h3_310 + 16777216;
  _127 = carry3_315 >> 25;
  h4_316 = _127 + h4_302;
  _128 = carry3_315 & -33554432;
  h3_317 = h3_310 - _128;
  carry7_318 = h7_313 + 16777216;
  _129 = carry7_318 >> 25;
  h8_319 = _129 + h8_295;
  _130 = carry7_318 & -33554432;
  h7_320 = h7_313 - _130;
  carry4_321 = h4_316 + 33554432;
  _131 = carry4_321 >> 26;
  h5_322 = _131 + h5_308;
  _132 = carry4_321 & -67108864;
  h4_323 = h4_316 - _132;
  carry8_324 = h8_319 + 33554432;
  _133 = carry8_324 >> 26;
  h9_325 = _133 + h9_296;
  _134 = carry8_324 & -67108864;
  h8_326 = h8_319 - _134;
  carry9_327 = h9_325 + 16777216;
  _135 = carry9_327 >> 25;
  _136 = _135 * 19;
  h0_328 = _136 + h0_299;
  _137 = carry9_327 & -33554432;
  h9_329 = h9_325 - _137;
  carry0_330 = h0_328 + 33554432;
  _138 = carry0_330 >> 26;
  h1_331 = _138 + h1_305;
  _139 = carry0_330 & -67108864;
  h0_332 = h0_328 - _139;
  _140 = (int) h0_332;
  *h_333(D) = _140;
  _141 = (int) h1_331;
  MEM[(int32_t *)h_333(D) + 4B] = _141;
  _142 = (int) h2_311;
  MEM[(int32_t *)h_333(D) + 8B] = _142;
  _143 = (int) h3_317;
  MEM[(int32_t *)h_333(D) + 12B] = _143;
  _144 = (int) h4_323;
  MEM[(int32_t *)h_333(D) + 16B] = _144;
  _145 = (int) h5_322;
  MEM[(int32_t *)h_333(D) + 20B] = _145;
  _146 = (int) h6_314;
  MEM[(int32_t *)h_333(D) + 24B] = _146;
  _147 = (int) h7_320;
  MEM[(int32_t *)h_333(D) + 28B] = _147;
  _148 = (int) h8_326;
  MEM[(int32_t *)h_333(D) + 32B] = _148;
  _149 = (int) h9_329;
  MEM[(int32_t *)h_333(D) + 36B] = _149;
  return;

}



;; Function fe_sq (fe_sq, funcdef_no=385, decl_uid=10508, cgraph_uid=385, symbol_order=390)

fe_sq (int32_t * h, const int32_t * f)
{
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t h9;
  int64_t h8;
  int64_t h7;
  int64_t h6;
  int64_t h5;
  int64_t h4;
  int64_t h3;
  int64_t h2;
  int64_t h1;
  int64_t h0;
  int64_t f9f9_38;
  int64_t f8f9_38;
  int64_t f8f8_19;
  int64_t f7f9_76;
  int64_t f7f8_38;
  int64_t f7f7_38;
  int64_t f6f9_38;
  int64_t f6f8_38;
  int64_t f6f7_38;
  int64_t f6f6_19;
  int64_t f5f9_76;
  int64_t f5f8_38;
  int64_t f5f7_76;
  int64_t f5f6_38;
  int64_t f5f5_38;
  int64_t f4f9_38;
  int64_t f4f8_38;
  int64_t f4f7_38;
  int64_t f4f6_38;
  int64_t f4f5_2;
  int64_t f4f4;
  int64_t f3f9_76;
  int64_t f3f8_38;
  int64_t f3f7_76;
  int64_t f3f6_2;
  int64_t f3f5_4;
  int64_t f3f4_2;
  int64_t f3f3_2;
  int64_t f2f9_38;
  int64_t f2f8_38;
  int64_t f2f7_2;
  int64_t f2f6_2;
  int64_t f2f5_2;
  int64_t f2f4_2;
  int64_t f2f3_2;
  int64_t f2f2;
  int64_t f1f9_76;
  int64_t f1f8_2;
  int64_t f1f7_4;
  int64_t f1f6_2;
  int64_t f1f5_4;
  int64_t f1f4_2;
  int64_t f1f3_4;
  int64_t f1f2_2;
  int64_t f1f1_2;
  int64_t f0f9_2;
  int64_t f0f8_2;
  int64_t f0f7_2;
  int64_t f0f6_2;
  int64_t f0f5_2;
  int64_t f0f4_2;
  int64_t f0f3_2;
  int64_t f0f2_2;
  int64_t f0f1_2;
  int64_t f0f0;
  int32_t f9_38;
  int32_t f8_19;
  int32_t f7_38;
  int32_t f6_19;
  int32_t f5_38;
  int32_t f7_2;
  int32_t f6_2;
  int32_t f5_2;
  int32_t f4_2;
  int32_t f3_2;
  int32_t f2_2;
  int32_t f1_2;
  int32_t f0_2;
  int32_t f9;
  int32_t f8;
  int32_t f7;
  int32_t f6;
  int32_t f5;
  int32_t f4;
  int32_t f3;
  int32_t f2;
  int32_t f1;
  int32_t f0;
  long int _1;
  long int _2;
  long int _3;
  long int _4;
  long int _5;
  long int _6;
  long int _7;
  long int _8;
  long int _9;
  long int _10;
  long int _11;
  long int _12;
  long int _13;
  long int _14;
  long int _15;
  long int _16;
  long int _17;
  long int _18;
  long int _19;
  long int _20;
  long int _21;
  long int _22;
  long int _23;
  long int _24;
  long int _25;
  long int _26;
  long int _27;
  long int _28;
  long int _29;
  long int _30;
  long int _31;
  long int _32;
  long int _33;
  long int _34;
  long int _35;
  long int _36;
  long int _37;
  long int _38;
  long int _39;
  long int _40;
  long int _41;
  long int _42;
  long int _43;
  long int _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  long int _51;
  long int _52;
  long int _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  long int _58;
  long int _59;
  long int _60;
  long int _61;
  long int _62;
  long int _63;
  long int _64;
  long int _65;
  long int _66;
  long int _67;
  long int _68;
  long int _69;
  long int _70;
  long int _71;
  long int _72;
  long int _73;
  long int _74;
  long int _75;
  long int _76;
  long int _77;
  long int _78;
  long int _79;
  long int _80;
  long int _81;
  long int _82;
  long int _83;
  int _84;
  int _85;
  int _86;
  int _87;
  int _88;
  int _89;
  int _90;
  int _91;
  int _92;
  int _93;

  <bb 2> [local count: 1073741825]:
  f0_96 = *f_95(D);
  f1_97 = MEM[(const int32_t *)f_95(D) + 4B];
  f2_98 = MEM[(const int32_t *)f_95(D) + 8B];
  f3_99 = MEM[(const int32_t *)f_95(D) + 12B];
  f4_100 = MEM[(const int32_t *)f_95(D) + 16B];
  f5_101 = MEM[(const int32_t *)f_95(D) + 20B];
  f6_102 = MEM[(const int32_t *)f_95(D) + 24B];
  f7_103 = MEM[(const int32_t *)f_95(D) + 28B];
  f8_104 = MEM[(const int32_t *)f_95(D) + 32B];
  f9_105 = MEM[(const int32_t *)f_95(D) + 36B];
  f0_2_106 = f0_96 * 2;
  f1_2_107 = f1_97 * 2;
  f2_2_108 = f2_98 * 2;
  f3_2_109 = f3_99 * 2;
  f4_2_110 = f4_100 * 2;
  f5_2_111 = f5_101 * 2;
  f6_2_112 = f6_102 * 2;
  f7_2_113 = f7_103 * 2;
  f5_38_114 = f5_101 * 38;
  f6_19_115 = f6_102 * 19;
  f7_38_116 = f7_103 * 38;
  f8_19_117 = f8_104 * 19;
  f9_38_118 = f9_105 * 38;
  _1 = (long int) f0_96;
  f0f0_119 = _1 * _1;
  _2 = (long int) f0_2_106;
  _3 = (long int) f1_97;
  f0f1_2_120 = _2 * _3;
  _4 = (long int) f2_98;
  f0f2_2_121 = _2 * _4;
  _5 = (long int) f3_99;
  f0f3_2_122 = _2 * _5;
  _6 = (long int) f4_100;
  f0f4_2_123 = _2 * _6;
  _7 = (long int) f5_101;
  f0f5_2_124 = _2 * _7;
  _8 = (long int) f6_102;
  f0f6_2_125 = _2 * _8;
  _9 = (long int) f7_103;
  f0f7_2_126 = _2 * _9;
  _10 = (long int) f8_104;
  f0f8_2_127 = _2 * _10;
  _11 = (long int) f9_105;
  f0f9_2_128 = _2 * _11;
  _12 = (long int) f1_2_107;
  f1f1_2_129 = _3 * _12;
  f1f2_2_130 = _4 * _12;
  _13 = (long int) f3_2_109;
  f1f3_4_131 = _12 * _13;
  f1f4_2_132 = _6 * _12;
  _14 = (long int) f5_2_111;
  f1f5_4_133 = _12 * _14;
  f1f6_2_134 = _8 * _12;
  _15 = (long int) f7_2_113;
  f1f7_4_135 = _12 * _15;
  f1f8_2_136 = _10 * _12;
  _16 = (long int) f9_38_118;
  f1f9_76_137 = _12 * _16;
  f2f2_138 = _4 * _4;
  _17 = (long int) f2_2_108;
  f2f3_2_139 = _5 * _17;
  f2f4_2_140 = _6 * _17;
  f2f5_2_141 = _7 * _17;
  f2f6_2_142 = _8 * _17;
  f2f7_2_143 = _9 * _17;
  _18 = (long int) f8_19_117;
  f2f8_38_144 = _17 * _18;
  f2f9_38_145 = _4 * _16;
  f3f3_2_146 = _5 * _13;
  f3f4_2_147 = _6 * _13;
  f3f5_4_148 = _13 * _14;
  f3f6_2_149 = _8 * _13;
  _19 = (long int) f7_38_116;
  f3f7_76_150 = _13 * _19;
  f3f8_38_151 = _13 * _18;
  f3f9_76_152 = _13 * _16;
  f4f4_153 = _6 * _6;
  _20 = (long int) f4_2_110;
  f4f5_2_154 = _7 * _20;
  _21 = (long int) f6_19_115;
  f4f6_38_155 = _20 * _21;
  f4f7_38_156 = _6 * _19;
  f4f8_38_157 = _18 * _20;
  f4f9_38_158 = _6 * _16;
  _22 = (long int) f5_38_114;
  f5f5_38_159 = _7 * _22;
  f5f6_38_160 = _14 * _21;
  f5f7_76_161 = _14 * _19;
  f5f8_38_162 = _14 * _18;
  f5f9_76_163 = _14 * _16;
  f6f6_19_164 = _8 * _21;
  f6f7_38_165 = _8 * _19;
  _23 = (long int) f6_2_112;
  f6f8_38_166 = _18 * _23;
  f6f9_38_167 = _8 * _16;
  f7f7_38_168 = _9 * _19;
  f7f8_38_169 = _15 * _18;
  f7f9_76_170 = _15 * _16;
  f8f8_19_171 = _10 * _18;
  f8f9_38_172 = _10 * _16;
  f9f9_38_173 = _11 * _16;
  _24 = f0f0_119 + f1f9_76_137;
  _25 = _24 + f2f8_38_144;
  _26 = _25 + f3f7_76_150;
  _27 = _26 + f4f6_38_155;
  h0_174 = _27 + f5f5_38_159;
  _28 = f0f1_2_120 + f2f9_38_145;
  _29 = _28 + f3f8_38_151;
  _30 = _29 + f4f7_38_156;
  h1_175 = _30 + f5f6_38_160;
  _31 = f0f2_2_121 + f1f1_2_129;
  _32 = _31 + f3f9_76_152;
  _33 = _32 + f4f8_38_157;
  _34 = _33 + f5f7_76_161;
  h2_176 = _34 + f6f6_19_164;
  _35 = f0f3_2_122 + f1f2_2_130;
  _36 = _35 + f4f9_38_158;
  _37 = _36 + f5f8_38_162;
  h3_177 = _37 + f6f7_38_165;
  _38 = f0f4_2_123 + f1f3_4_131;
  _39 = _38 + f2f2_138;
  _40 = _39 + f5f9_76_163;
  _41 = _40 + f6f8_38_166;
  h4_178 = _41 + f7f7_38_168;
  _42 = f0f5_2_124 + f1f4_2_132;
  _43 = _42 + f2f3_2_139;
  _44 = _43 + f6f9_38_167;
  h5_179 = _44 + f7f8_38_169;
  _45 = f0f6_2_125 + f1f5_4_133;
  _46 = _45 + f2f4_2_140;
  _47 = _46 + f3f3_2_146;
  _48 = _47 + f7f9_76_170;
  h6_180 = _48 + f8f8_19_171;
  _49 = f0f7_2_126 + f1f6_2_134;
  _50 = _49 + f2f5_2_141;
  _51 = _50 + f3f4_2_147;
  h7_181 = _51 + f8f9_38_172;
  _52 = f0f8_2_127 + f1f7_4_135;
  _53 = _52 + f2f6_2_142;
  _54 = _53 + f3f5_4_148;
  _55 = _54 + f4f4_153;
  h8_182 = _55 + f9f9_38_173;
  _56 = f0f9_2_128 + f1f8_2_136;
  _57 = _56 + f2f7_2_143;
  _58 = _57 + f3f6_2_149;
  h9_183 = _58 + f4f5_2_154;
  carry0_184 = h0_174 + 33554432;
  _59 = carry0_184 >> 26;
  h1_185 = _59 + h1_175;
  _60 = carry0_184 & -67108864;
  h0_186 = h0_174 - _60;
  carry4_187 = h4_178 + 33554432;
  _61 = carry4_187 >> 26;
  h5_188 = _61 + h5_179;
  _62 = carry4_187 & -67108864;
  h4_189 = h4_178 - _62;
  carry1_190 = h1_185 + 16777216;
  _63 = carry1_190 >> 25;
  h2_191 = _63 + h2_176;
  _64 = carry1_190 & -33554432;
  h1_192 = h1_185 - _64;
  carry5_193 = h5_188 + 16777216;
  _65 = carry5_193 >> 25;
  h6_194 = _65 + h6_180;
  _66 = carry5_193 & -33554432;
  h5_195 = h5_188 - _66;
  carry2_196 = h2_191 + 33554432;
  _67 = carry2_196 >> 26;
  h3_197 = _67 + h3_177;
  _68 = carry2_196 & -67108864;
  h2_198 = h2_191 - _68;
  carry6_199 = h6_194 + 33554432;
  _69 = carry6_199 >> 26;
  h7_200 = _69 + h7_181;
  _70 = carry6_199 & -67108864;
  h6_201 = h6_194 - _70;
  carry3_202 = h3_197 + 16777216;
  _71 = carry3_202 >> 25;
  h4_203 = _71 + h4_189;
  _72 = carry3_202 & -33554432;
  h3_204 = h3_197 - _72;
  carry7_205 = h7_200 + 16777216;
  _73 = carry7_205 >> 25;
  h8_206 = _73 + h8_182;
  _74 = carry7_205 & -33554432;
  h7_207 = h7_200 - _74;
  carry4_208 = h4_203 + 33554432;
  _75 = carry4_208 >> 26;
  h5_209 = _75 + h5_195;
  _76 = carry4_208 & -67108864;
  h4_210 = h4_203 - _76;
  carry8_211 = h8_206 + 33554432;
  _77 = carry8_211 >> 26;
  h9_212 = _77 + h9_183;
  _78 = carry8_211 & -67108864;
  h8_213 = h8_206 - _78;
  carry9_214 = h9_212 + 16777216;
  _79 = carry9_214 >> 25;
  _80 = _79 * 19;
  h0_215 = _80 + h0_186;
  _81 = carry9_214 & -33554432;
  h9_216 = h9_212 - _81;
  carry0_217 = h0_215 + 33554432;
  _82 = carry0_217 >> 26;
  h1_218 = _82 + h1_192;
  _83 = carry0_217 & -67108864;
  h0_219 = h0_215 - _83;
  _84 = (int) h0_219;
  *h_220(D) = _84;
  _85 = (int) h1_218;
  MEM[(int32_t *)h_220(D) + 4B] = _85;
  _86 = (int) h2_198;
  MEM[(int32_t *)h_220(D) + 8B] = _86;
  _87 = (int) h3_204;
  MEM[(int32_t *)h_220(D) + 12B] = _87;
  _88 = (int) h4_210;
  MEM[(int32_t *)h_220(D) + 16B] = _88;
  _89 = (int) h5_209;
  MEM[(int32_t *)h_220(D) + 20B] = _89;
  _90 = (int) h6_201;
  MEM[(int32_t *)h_220(D) + 24B] = _90;
  _91 = (int) h7_207;
  MEM[(int32_t *)h_220(D) + 28B] = _91;
  _92 = (int) h8_213;
  MEM[(int32_t *)h_220(D) + 32B] = _92;
  _93 = (int) h9_216;
  MEM[(int32_t *)h_220(D) + 36B] = _93;
  return;

}



;; Function fe_invert (fe_invert, funcdef_no=386, decl_uid=10610, cgraph_uid=386, symbol_order=391)

fe_invert (int32_t * out, const int32_t * z)
{
  int32_t t3[10];
  int32_t t2[10];
  int32_t t1[10];
  int32_t t0[10];
  unsigned int ivtmp_1;
  unsigned int ivtmp_2;
  unsigned int ivtmp_3;
  unsigned int ivtmp_4;
  unsigned int ivtmp_5;
  unsigned int ivtmp_6;
  unsigned int ivtmp_7;
  unsigned int ivtmp_8;
  unsigned int ivtmp_70;
  unsigned int ivtmp_72;
  unsigned int ivtmp_74;
  unsigned int ivtmp_76;
  unsigned int ivtmp_78;
  unsigned int ivtmp_80;
  unsigned int ivtmp_82;
  unsigned int ivtmp_84;

  <bb 2> [local count: 10737418]:
  fe_sq (&t0, z_18(D));
  fe_sq (&t1, &t0);
  fe_sq (&t1, &t1);
  fe_mul (&t1, z_18(D), &t1);
  fe_mul (&t0, &t0, &t1);
  fe_sq (&t2, &t0);
  fe_mul (&t1, &t1, &t2);
  fe_sq (&t2, &t1);

  <bb 3> [local count: 42949671]:
  # ivtmp_1 = PHI <4(2), ivtmp_84(3)>
  fe_sq (&t2, &t2);
  ivtmp_84 = ivtmp_1 + 4294967295;
  if (ivtmp_84 != 0)
    goto <bb 3>; [75.00%]
  else
    goto <bb 4>; [25.00%]

  <bb 4> [local count: 10737418]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t2, &t1);

  <bb 5> [local count: 96636760]:
  # ivtmp_2 = PHI <9(4), ivtmp_82(5)>
  fe_sq (&t2, &t2);
  ivtmp_82 = ivtmp_2 + 4294967295;
  if (ivtmp_82 != 0)
    goto <bb 5>; [88.89%]
  else
    goto <bb 6>; [11.11%]

  <bb 6> [local count: 10737418]:
  fe_mul (&t2, &t2, &t1);
  fe_sq (&t3, &t2);

  <bb 7> [local count: 204010939]:
  # ivtmp_3 = PHI <19(6), ivtmp_80(7)>
  fe_sq (&t3, &t3);
  ivtmp_80 = ivtmp_3 + 4294967295;
  if (ivtmp_80 != 0)
    goto <bb 7>; [94.74%]
  else
    goto <bb 8>; [5.26%]

  <bb 8> [local count: 10737418]:
  fe_mul (&t2, &t3, &t2);

  <bb 9> [local count: 107385990]:
  # ivtmp_4 = PHI <10(8), ivtmp_78(9)>
  fe_sq (&t2, &t2);
  ivtmp_78 = ivtmp_4 + 4294967295;
  if (ivtmp_78 != 0)
    goto <bb 9>; [90.00%]
  else
    goto <bb 10>; [10.00%]

  <bb 10> [local count: 10737418]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t2, &t1);

  <bb 11> [local count: 526133483]:
  # ivtmp_6 = PHI <49(10), ivtmp_5(11)>
  fe_sq (&t2, &t2);
  ivtmp_5 = ivtmp_6 + 4294967295;
  if (ivtmp_5 != 0)
    goto <bb 11>; [97.96%]
  else
    goto <bb 12>; [2.04%]

  <bb 12> [local count: 10737418]:
  fe_mul (&t2, &t2, &t1);
  fe_sq (&t3, &t2);

  <bb 13> [local count: 1063004407]:
  # ivtmp_8 = PHI <99(12), ivtmp_7(13)>
  fe_sq (&t3, &t3);
  ivtmp_7 = ivtmp_8 + 4294967295;
  if (ivtmp_7 != 0)
    goto <bb 13>; [98.99%]
  else
    goto <bb 14>; [1.01%]

  <bb 14> [local count: 10737418]:
  fe_mul (&t2, &t3, &t2);
  fe_sq (&t2, &t2);

  <bb 15> [local count: 526133506]:
  # ivtmp_72 = PHI <49(14), ivtmp_70(15)>
  fe_sq (&t2, &t2);
  ivtmp_70 = ivtmp_72 + 4294967295;
  if (ivtmp_70 != 0)
    goto <bb 15>; [97.96%]
  else
    goto <bb 16>; [2.04%]

  <bb 16> [local count: 10737418]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t1, &t1);

  <bb 17> [local count: 42949674]:
  # ivtmp_76 = PHI <4(16), ivtmp_74(17)>
  fe_sq (&t1, &t1);
  ivtmp_74 = ivtmp_76 + 4294967295;
  if (ivtmp_74 != 0)
    goto <bb 17>; [75.00%]
  else
    goto <bb 18>; [25.00%]

  <bb 18> [local count: 10737418]:
  fe_mul (out_56(D), &t1, &t0);
  t0 ={v} {CLOBBER};
  t1 ={v} {CLOBBER};
  t2 ={v} {CLOBBER};
  t3 ={v} {CLOBBER};
  return;

}



;; Function ge_p2_dbl (ge_p2_dbl, funcdef_no=403, decl_uid=10886, cgraph_uid=403, symbol_order=411)

ge_p2_dbl (struct ge_p1p1 * r, const struct ge_p2 * p)
{
  const vector(4) int vect__62.129;
  const vector(4) int vect__60.128;
  const vector(4) int vect__58.125;
  const vector(4) int vect__52.118;
  const vector(4) int vect__50.117;
  const vector(4) int vect__48.114;
  const vector(4) int vect__42.107;
  const vector(4) int vect__41.106;
  const vector(4) int vect__39.103;
  const vector(4) int vect__33.96;
  const vector(4) int vect__31.95;
  const vector(4) int vect__29.92;
  const vector(4) int vect__23.85;
  const vector(4) int vect__22.84;
  const vector(4) int vect__20.81;
  int32_t f0;
  int32_t f1;
  int32_t f2;
  int32_t f3;
  int32_t f4;
  int32_t f5;
  int32_t f6;
  int32_t f7;
  int32_t f8;
  int32_t f9;
  int32_t f0_2;
  int32_t f1_2;
  int32_t f2_2;
  int32_t f3_2;
  int32_t f4_2;
  int32_t f5_2;
  int32_t f6_2;
  int32_t f7_2;
  int32_t f5_38;
  int32_t f6_19;
  int32_t f7_38;
  int32_t f8_19;
  int32_t f9_38;
  int64_t f0f0;
  int64_t f0f1_2;
  int64_t f0f2_2;
  int64_t f0f3_2;
  int64_t f0f4_2;
  int64_t f0f5_2;
  int64_t f0f6_2;
  int64_t f0f7_2;
  int64_t f0f8_2;
  int64_t f0f9_2;
  int64_t f1f1_2;
  int64_t f1f2_2;
  int64_t f1f3_4;
  int64_t f1f4_2;
  int64_t f1f5_4;
  int64_t f1f6_2;
  int64_t f1f7_4;
  int64_t f1f8_2;
  int64_t f1f9_76;
  int64_t f2f2;
  int64_t f2f3_2;
  int64_t f2f4_2;
  int64_t f2f5_2;
  int64_t f2f6_2;
  int64_t f2f7_2;
  int64_t f2f8_38;
  int64_t f2f9_38;
  int64_t f3f3_2;
  int64_t f3f4_2;
  int64_t f3f5_4;
  int64_t f3f6_2;
  int64_t f3f7_76;
  int64_t f3f8_38;
  int64_t f3f9_76;
  int64_t f4f4;
  int64_t f4f5_2;
  int64_t f4f6_38;
  int64_t f4f7_38;
  int64_t f4f8_38;
  int64_t f4f9_38;
  int64_t f5f5_38;
  int64_t f5f6_38;
  int64_t f5f7_76;
  int64_t f5f8_38;
  int64_t f5f9_76;
  int64_t f6f6_19;
  int64_t f6f7_38;
  int64_t f6f8_38;
  int64_t f6f9_38;
  int64_t f7f7_38;
  int64_t f7f8_38;
  int64_t f7f9_76;
  int64_t f8f8_19;
  int64_t f8f9_38;
  int64_t f9f9_38;
  int64_t h0;
  int64_t h1;
  int64_t h2;
  int64_t h3;
  int64_t h4;
  int64_t h5;
  int64_t h6;
  int64_t h7;
  int64_t h8;
  int64_t h9;
  int64_t carry0;
  int64_t carry1;
  int64_t carry2;
  int64_t carry3;
  int64_t carry4;
  int64_t carry5;
  int64_t carry6;
  int64_t carry7;
  int64_t carry8;
  int64_t carry9;
  int32_t t0[10];
  const int32_t[10] * _1;
  int32_t[10] * _2;
  const int32_t[10] * _3;
  int32_t[10] * _4;
  int32_t[10] * _7;
  int _17;
  int _19;
  int _20;
  int _47;
  int _49;
  int _51;
  long int _97;
  long int _99;
  long int _100;
  long int _102;
  long int _104;
  long int _106;
  long int _108;
  long int _110;
  long int _112;
  long int _114;
  long int _116;
  long int _118;
  long int _121;
  long int _124;
  long int _127;
  long int _130;
  long int _133;
  long int _139;
  long int _146;
  long int _151;
  long int _153;
  long int _158;
  long int _166;
  long int _175;
  long int _176;
  long int _177;
  long int _178;
  long int _180;
  long int _181;
  long int _182;
  long int _184;
  long int _185;
  long int _186;
  long int _187;
  long int _189;
  long int _190;
  long int _191;
  long int _193;
  long int _194;
  long int _195;
  long int _196;
  long int _198;
  long int _199;
  long int _200;
  long int _202;
  long int _203;
  long int _204;
  long int _205;
  long int _207;
  long int _208;
  long int _209;
  long int _211;
  long int _212;
  long int _213;
  long int _214;
  long int _216;
  long int _217;
  long int _218;
  long int _231;
  long int _233;
  long int _236;
  long int _238;
  long int _241;
  long int _243;
  long int _246;
  long int _248;
  long int _251;
  long int _253;
  long int _256;
  long int _258;
  long int _261;
  long int _263;
  long int _266;
  long int _268;
  long int _271;
  long int _273;
  long int _276;
  long int _278;
  long int _281;
  long int _282;
  long int _284;
  long int _287;
  long int _289;
  int _291;
  int _292;
  int _293;
  int _294;
  int _295;
  int _296;
  int _297;
  int _298;
  int _299;
  int _300;
  int _323;
  int _324;
  int _326;
  int _352;
  int _370;
  int _374;
  int _375;
  int _380;
  int _388;
  int _390;
  int _391;
  int _395;
  int _418;
  int _420;
  int _422;
  const struct ge_p2 * _442;
  struct ge_p1p1 * _443;
  _Bool _444;
  struct ge_p1p1 * _445;
  _Bool _446;
  _Bool _447;
  int _454;
  int _456;
  int _458;
  int _470;
  int _472;
  int _474;
  int _500;
  int _502;
  int _504;
  int _527;
  int _529;
  int _531;
  int _541;
  int _543;
  int _545;
  int _555;
  int _557;
  int _559;
  int _569;
  int _571;
  int _573;
  int _583;
  int _585;
  int _587;
  int _597;
  int _599;
  int _601;
  int _611;
  int _613;
  int _615;
  int _625;
  int _627;
  int _629;
  int _639;
  int _641;
  int _643;
  int _653;
  int _655;
  int _657;

  <bb 2> [local count: 97603132]:
  _1 = &p_8(D)->X;
  _2 = &r_9(D)->X;
  fe_sq (_2, _1);
  _3 = &p_8(D)->Y;
  _4 = &r_9(D)->Z;
  fe_sq (_4, _3);
  f0_74 = MEM[(const int32_t *)p_8(D) + 80B];
  f1_75 = MEM[(const int32_t *)p_8(D) + 84B];
  f2_76 = MEM[(const int32_t *)p_8(D) + 88B];
  f3_77 = MEM[(const int32_t *)p_8(D) + 92B];
  f4_78 = MEM[(const int32_t *)p_8(D) + 96B];
  f5_79 = MEM[(const int32_t *)p_8(D) + 100B];
  f6_80 = MEM[(const int32_t *)p_8(D) + 104B];
  f7_81 = MEM[(const int32_t *)p_8(D) + 108B];
  f8_82 = MEM[(const int32_t *)p_8(D) + 112B];
  f9_83 = MEM[(const int32_t *)p_8(D) + 116B];
  f0_2_84 = f0_74 * 2;
  f1_2_85 = f1_75 * 2;
  f2_2_86 = f2_76 * 2;
  f3_2_87 = f3_77 * 2;
  f4_2_88 = f4_78 * 2;
  f5_2_89 = f5_79 * 2;
  f6_2_90 = f6_80 * 2;
  f7_2_91 = f7_81 * 2;
  f5_38_92 = f5_79 * 38;
  f6_19_93 = f6_80 * 19;
  f7_38_94 = f7_81 * 38;
  f8_19_95 = f8_82 * 19;
  f9_38_96 = f9_83 * 38;
  _97 = (long int) f0_74;
  f0f0_98 = _97 * _97;
  _99 = (long int) f0_2_84;
  _100 = (long int) f1_75;
  f0f1_2_101 = _99 * _100;
  _102 = (long int) f2_76;
  f0f2_2_103 = _99 * _102;
  _104 = (long int) f3_77;
  f0f3_2_105 = _99 * _104;
  _106 = (long int) f4_78;
  f0f4_2_107 = _99 * _106;
  _108 = (long int) f5_79;
  f0f5_2_109 = _99 * _108;
  _110 = (long int) f6_80;
  f0f6_2_111 = _99 * _110;
  _112 = (long int) f7_81;
  f0f7_2_113 = _99 * _112;
  _114 = (long int) f8_82;
  f0f8_2_115 = _99 * _114;
  _116 = (long int) f9_83;
  f0f9_2_117 = _99 * _116;
  _118 = (long int) f1_2_85;
  f1f1_2_119 = _100 * _118;
  f1f2_2_120 = _102 * _118;
  _121 = (long int) f3_2_87;
  f1f3_4_122 = _118 * _121;
  f1f4_2_123 = _106 * _118;
  _124 = (long int) f5_2_89;
  f1f5_4_125 = _118 * _124;
  f1f6_2_126 = _110 * _118;
  _127 = (long int) f7_2_91;
  f1f7_4_128 = _118 * _127;
  f1f8_2_129 = _114 * _118;
  _130 = (long int) f9_38_96;
  f1f9_76_131 = _118 * _130;
  f2f2_132 = _102 * _102;
  _133 = (long int) f2_2_86;
  f2f3_2_134 = _104 * _133;
  f2f4_2_135 = _106 * _133;
  f2f5_2_136 = _108 * _133;
  f2f6_2_137 = _110 * _133;
  f2f7_2_138 = _112 * _133;
  _139 = (long int) f8_19_95;
  f2f8_38_140 = _133 * _139;
  f2f9_38_141 = _102 * _130;
  f3f3_2_142 = _104 * _121;
  f3f4_2_143 = _106 * _121;
  f3f5_4_144 = _121 * _124;
  f3f6_2_145 = _110 * _121;
  _146 = (long int) f7_38_94;
  f3f7_76_147 = _121 * _146;
  f3f8_38_148 = _121 * _139;
  f3f9_76_149 = _121 * _130;
  f4f4_150 = _106 * _106;
  _151 = (long int) f4_2_88;
  f4f5_2_152 = _108 * _151;
  _153 = (long int) f6_19_93;
  f4f6_38_154 = _151 * _153;
  f4f7_38_155 = _106 * _146;
  f4f8_38_156 = _139 * _151;
  f4f9_38_157 = _106 * _130;
  _158 = (long int) f5_38_92;
  f5f5_38_159 = _108 * _158;
  f5f6_38_160 = _124 * _153;
  f5f7_76_161 = _124 * _146;
  f5f8_38_162 = _124 * _139;
  f5f9_76_163 = _124 * _130;
  f6f6_19_164 = _110 * _153;
  f6f7_38_165 = _110 * _146;
  _166 = (long int) f6_2_90;
  f6f8_38_167 = _139 * _166;
  f6f9_38_168 = _110 * _130;
  f7f7_38_169 = _112 * _146;
  f7f8_38_170 = _127 * _139;
  f7f9_76_171 = _127 * _130;
  f8f8_19_172 = _114 * _139;
  f8f9_38_173 = _114 * _130;
  f9f9_38_174 = _116 * _130;
  _175 = f0f0_98 + f1f9_76_131;
  _176 = f2f8_38_140 + _175;
  _177 = f3f7_76_147 + _176;
  _178 = f4f6_38_154 + _177;
  h0_179 = f5f5_38_159 + _178;
  _180 = f0f1_2_101 + f2f9_38_141;
  _181 = f3f8_38_148 + _180;
  _182 = f4f7_38_155 + _181;
  h1_183 = f5f6_38_160 + _182;
  _184 = f0f2_2_103 + f1f1_2_119;
  _185 = f3f9_76_149 + _184;
  _186 = f4f8_38_156 + _185;
  _187 = f5f7_76_161 + _186;
  h2_188 = f6f6_19_164 + _187;
  _189 = f0f3_2_105 + f1f2_2_120;
  _190 = f4f9_38_157 + _189;
  _191 = f5f8_38_162 + _190;
  h3_192 = f6f7_38_165 + _191;
  _193 = f0f4_2_107 + f1f3_4_122;
  _194 = f2f2_132 + _193;
  _195 = f5f9_76_163 + _194;
  _196 = f6f8_38_167 + _195;
  h4_197 = f7f7_38_169 + _196;
  _198 = f0f5_2_109 + f1f4_2_123;
  _199 = f2f3_2_134 + _198;
  _200 = f6f9_38_168 + _199;
  h5_201 = f7f8_38_170 + _200;
  _202 = f0f6_2_111 + f1f5_4_125;
  _203 = f2f4_2_135 + _202;
  _204 = f3f3_2_142 + _203;
  _205 = f7f9_76_171 + _204;
  h6_206 = f8f8_19_172 + _205;
  _207 = f0f7_2_113 + f1f6_2_126;
  _208 = f2f5_2_136 + _207;
  _209 = f3f4_2_143 + _208;
  h7_210 = f8f9_38_173 + _209;
  _211 = f0f8_2_115 + f1f7_4_128;
  _212 = f2f6_2_137 + _211;
  _213 = f3f5_4_144 + _212;
  _214 = f4f4_150 + _213;
  h8_215 = f9f9_38_174 + _214;
  _216 = f0f9_2_117 + f1f8_2_129;
  _217 = f2f7_2_138 + _216;
  _218 = f3f6_2_145 + _217;
  h9_219 = f4f5_2_152 + _218;
  h0_220 = h0_179 * 2;
  h1_221 = h1_183 * 2;
  h2_222 = h2_188 * 2;
  h3_223 = h3_192 * 2;
  h4_224 = h4_197 * 2;
  h5_225 = h5_201 * 2;
  h6_226 = h6_206 * 2;
  h7_227 = h7_210 * 2;
  h8_228 = h8_215 * 2;
  h9_229 = h9_219 * 2;
  carry0_230 = h0_220 + 33554432;
  _231 = carry0_230 >> 26;
  h1_232 = h1_221 + _231;
  _233 = carry0_230 & -67108864;
  h0_234 = h0_220 - _233;
  carry4_235 = h4_224 + 33554432;
  _236 = carry4_235 >> 26;
  h5_237 = h5_225 + _236;
  _238 = carry4_235 & -67108864;
  h4_239 = h4_224 - _238;
  carry1_240 = h1_232 + 16777216;
  _241 = carry1_240 >> 25;
  h2_242 = h2_222 + _241;
  _243 = carry1_240 & -33554432;
  h1_244 = h1_232 - _243;
  carry5_245 = h5_237 + 16777216;
  _246 = carry5_245 >> 25;
  h6_247 = h6_226 + _246;
  _248 = carry5_245 & -33554432;
  h5_249 = h5_237 - _248;
  carry2_250 = h2_242 + 33554432;
  _251 = carry2_250 >> 26;
  h3_252 = h3_223 + _251;
  _253 = carry2_250 & -67108864;
  h2_254 = h2_242 - _253;
  carry6_255 = h6_247 + 33554432;
  _256 = carry6_255 >> 26;
  h7_257 = h7_227 + _256;
  _258 = carry6_255 & -67108864;
  h6_259 = h6_247 - _258;
  carry3_260 = h3_252 + 16777216;
  _261 = carry3_260 >> 25;
  h4_262 = h4_239 + _261;
  _263 = carry3_260 & -33554432;
  h3_264 = h3_252 - _263;
  carry7_265 = h7_257 + 16777216;
  _266 = carry7_265 >> 25;
  h8_267 = h8_228 + _266;
  _268 = carry7_265 & -33554432;
  h7_269 = h7_257 - _268;
  carry4_270 = h4_262 + 33554432;
  _271 = carry4_270 >> 26;
  h5_272 = h5_249 + _271;
  _273 = carry4_270 & -67108864;
  h4_274 = h4_262 - _273;
  carry8_275 = h8_267 + 33554432;
  _276 = carry8_275 >> 26;
  h9_277 = h9_229 + _276;
  _278 = carry8_275 & -67108864;
  h8_279 = h8_267 - _278;
  carry9_280 = h9_277 + 16777216;
  _281 = carry9_280 >> 25;
  _282 = _281 * 19;
  h0_283 = h0_234 + _282;
  _284 = carry9_280 & -33554432;
  h9_285 = h9_277 - _284;
  carry0_286 = h0_283 + 33554432;
  _287 = carry0_286 >> 26;
  h1_288 = h1_244 + _287;
  _289 = carry0_286 & -67108864;
  h0_290 = h0_283 - _289;
  _291 = (int) h0_290;
  MEM[(int32_t *)r_9(D) + 120B] = _291;
  _292 = (int) h1_288;
  MEM[(int32_t *)r_9(D) + 124B] = _292;
  _293 = (int) h2_254;
  MEM[(int32_t *)r_9(D) + 128B] = _293;
  _294 = (int) h3_264;
  MEM[(int32_t *)r_9(D) + 132B] = _294;
  _295 = (int) h4_274;
  MEM[(int32_t *)r_9(D) + 136B] = _295;
  _296 = (int) h5_272;
  MEM[(int32_t *)r_9(D) + 140B] = _296;
  _297 = (int) h6_259;
  MEM[(int32_t *)r_9(D) + 144B] = _297;
  _298 = (int) h7_269;
  MEM[(int32_t *)r_9(D) + 148B] = _298;
  _299 = (int) h8_279;
  MEM[(int32_t *)r_9(D) + 152B] = _299;
  _300 = (int) h9_285;
  MEM[(int32_t *)r_9(D) + 156B] = _300;
  _7 = &r_9(D)->Y;
  _442 = p_8(D) + 56;
  _443 = r_9(D) + 40;
  _444 = _442 <= _443;
  _445 = r_9(D) + 56;
  _446 = p_8(D) >= _445;
  _447 = _444 | _446;
  if (_447 != 0)
    goto <bb 3>; [80.00%]
  else
    goto <bb 4>; [20.00%]

  <bb 3> [local count: 78082506]:
  vect__58.125_666 = MEM[(const int32_t *)p_8(D)];
  vect__60.128_667 = MEM[(const int32_t *)p_8(D) + 40B];
  vect__62.129_668 = vect__58.125_666 + vect__60.128_667;
  MEM[(int32_t *)r_9(D) + 40B] = vect__62.129_668;
  vect__58.125_481 = MEM[(const int32_t *)p_8(D) + 16B];
  vect__60.128_485 = MEM[(const int32_t *)p_8(D) + 56B];
  vect__62.129_486 = vect__58.125_481 + vect__60.128_485;
  MEM[(int32_t *)r_9(D) + 56B] = vect__62.129_486;
  _653 = MEM[(const int32_t *)p_8(D) + 32B];
  _655 = MEM[(const int32_t *)p_8(D) + 72B];
  _657 = _653 + _655;
  MEM[(int32_t *)r_9(D) + 72B] = _657;
  _470 = MEM[(const int32_t *)p_8(D) + 36B];
  _472 = MEM[(const int32_t *)p_8(D) + 76B];
  _474 = _470 + _472;
  MEM[(int32_t *)r_9(D) + 76B] = _474;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 19520625]:
  _527 = MEM[(const int32_t *)p_8(D)];
  _529 = MEM[(const int32_t *)p_8(D) + 40B];
  _531 = _527 + _529;
  MEM[(int32_t *)r_9(D) + 40B] = _531;
  _541 = MEM[(const int32_t *)p_8(D) + 4B];
  _543 = MEM[(const int32_t *)p_8(D) + 44B];
  _545 = _541 + _543;
  MEM[(int32_t *)r_9(D) + 44B] = _545;
  _555 = MEM[(const int32_t *)p_8(D) + 8B];
  _557 = MEM[(const int32_t *)p_8(D) + 48B];
  _559 = _555 + _557;
  MEM[(int32_t *)r_9(D) + 48B] = _559;
  _569 = MEM[(const int32_t *)p_8(D) + 12B];
  _571 = MEM[(const int32_t *)p_8(D) + 52B];
  _573 = _569 + _571;
  MEM[(int32_t *)r_9(D) + 52B] = _573;
  _583 = MEM[(const int32_t *)p_8(D) + 16B];
  _585 = MEM[(const int32_t *)p_8(D) + 56B];
  _587 = _583 + _585;
  MEM[(int32_t *)r_9(D) + 56B] = _587;
  _597 = MEM[(const int32_t *)p_8(D) + 20B];
  _599 = MEM[(const int32_t *)p_8(D) + 60B];
  _601 = _597 + _599;
  MEM[(int32_t *)r_9(D) + 60B] = _601;
  _611 = MEM[(const int32_t *)p_8(D) + 24B];
  _613 = MEM[(const int32_t *)p_8(D) + 64B];
  _615 = _611 + _613;
  MEM[(int32_t *)r_9(D) + 64B] = _615;
  _625 = MEM[(const int32_t *)p_8(D) + 28B];
  _627 = MEM[(const int32_t *)p_8(D) + 68B];
  _629 = _625 + _627;
  MEM[(int32_t *)r_9(D) + 68B] = _629;
  _639 = MEM[(const int32_t *)p_8(D) + 32B];
  _641 = MEM[(const int32_t *)p_8(D) + 72B];
  _643 = _639 + _641;
  MEM[(int32_t *)r_9(D) + 72B] = _643;
  _454 = MEM[(const int32_t *)p_8(D) + 36B];
  _456 = MEM[(const int32_t *)p_8(D) + 76B];
  _458 = _454 + _456;
  MEM[(int32_t *)r_9(D) + 76B] = _458;

  <bb 5> [local count: 97603132]:
  fe_sq (&t0, _7);
  vect__48.114_513 = MEM[(const int32_t *)r_9(D) + 80B];
  vect__50.117_514 = MEM[(const int32_t *)r_9(D)];
  vect__52.118_515 = vect__48.114_513 + vect__50.117_514;
  MEM[(int32_t *)r_9(D) + 40B] = vect__52.118_515;
  vect__48.114_430 = MEM[(const int32_t *)r_9(D) + 96B];
  vect__50.117_433 = MEM[(const int32_t *)r_9(D) + 16B];
  vect__52.118_434 = vect__48.114_430 + vect__50.117_433;
  MEM[(int32_t *)r_9(D) + 56B] = vect__52.118_434;
  _500 = MEM[(const int32_t *)r_9(D) + 112B];
  _502 = MEM[(const int32_t *)r_9(D) + 32B];
  _504 = _500 + _502;
  MEM[(int32_t *)r_9(D) + 72B] = _504;
  _418 = MEM[(const int32_t *)r_9(D) + 116B];
  _420 = MEM[(const int32_t *)r_9(D) + 36B];
  _422 = _418 + _420;
  MEM[(int32_t *)r_9(D) + 76B] = _422;
  vect__39.103_35 = MEM[(const int32_t *)r_9(D) + 80B];
  vect__41.106_344 = MEM[(const int32_t *)r_9(D)];
  vect__42.107_69 = vect__39.103_35 - vect__41.106_344;
  MEM[(int32_t *)r_9(D) + 80B] = vect__42.107_69;
  vect__39.103_399 = MEM[(const int32_t *)r_9(D) + 96B];
  vect__41.106_402 = MEM[(const int32_t *)r_9(D) + 16B];
  vect__42.107_403 = vect__39.103_399 - vect__41.106_402;
  MEM[(int32_t *)r_9(D) + 96B] = vect__42.107_403;
  _17 = MEM[(const int32_t *)r_9(D) + 112B];
  _19 = MEM[(const int32_t *)r_9(D) + 32B];
  _20 = _17 - _19;
  MEM[(int32_t *)r_9(D) + 112B] = _20;
  _388 = MEM[(const int32_t *)r_9(D) + 116B];
  _390 = MEM[(const int32_t *)r_9(D) + 36B];
  _391 = _388 - _390;
  MEM[(int32_t *)r_9(D) + 116B] = _391;
  vect__29.92_41 = MEM[(const int32_t *)&t0];
  vect__31.95_42 = MEM[(const int32_t *)r_9(D) + 40B];
  vect__33.96_43 = vect__29.92_41 - vect__31.95_42;
  MEM[(int32_t *)r_9(D)] = vect__33.96_43;
  vect__29.92_366 = MEM[(const int32_t *)&t0 + 16B];
  vect__31.95_357 = MEM[(const int32_t *)r_9(D) + 56B];
  vect__33.96_360 = vect__29.92_366 - vect__31.95_357;
  MEM[(int32_t *)r_9(D) + 16B] = vect__33.96_360;
  _47 = MEM[(const int32_t *)&t0 + 32B];
  _49 = MEM[(const int32_t *)r_9(D) + 72B];
  _51 = _47 - _49;
  MEM[(int32_t *)r_9(D) + 32B] = _51;
  _380 = MEM[(const int32_t *)&t0 + 36B];
  _374 = MEM[(const int32_t *)r_9(D) + 76B];
  _370 = _380 - _374;
  MEM[(int32_t *)r_9(D) + 36B] = _370;
  vect__20.81_346 = MEM[(const int32_t *)r_9(D) + 120B];
  vect__22.84_332 = MEM[(const int32_t *)r_9(D) + 80B];
  vect__23.85_55 = vect__20.81_346 - vect__22.84_332;
  MEM[(int32_t *)r_9(D) + 120B] = vect__23.85_55;
  vect__20.81_315 = MEM[(const int32_t *)r_9(D) + 136B];
  vect__22.84_311 = MEM[(const int32_t *)r_9(D) + 96B];
  vect__23.85_68 = vect__20.81_315 - vect__22.84_311;
  MEM[(int32_t *)r_9(D) + 136B] = vect__23.85_68;
  _375 = MEM[(const int32_t *)r_9(D) + 152B];
  _352 = MEM[(const int32_t *)r_9(D) + 112B];
  _395 = _375 - _352;
  MEM[(int32_t *)r_9(D) + 152B] = _395;
  _326 = MEM[(const int32_t *)r_9(D) + 156B];
  _324 = MEM[(const int32_t *)r_9(D) + 116B];
  _323 = _326 - _324;
  MEM[(int32_t *)r_9(D) + 156B] = _323;
  t0 ={v} {CLOBBER};
  return;

}



;; Function ge_madd (ge_madd, funcdef_no=405, decl_uid=10897, cgraph_uid=405, symbol_order=413)

ge_madd (struct ge_p1p1 * r, const struct ge_p3 * p, const struct ge_precomp * q)
{
  const vector(4) int vect__84.203;
  const vector(4) int vect__82.202;
  const vector(4) int vect__80.199;
  const vector(4) int vect__74.192;
  const vector(4) int vect__72.191;
  const vector(4) int vect__70.188;
  const vector(4) int vect__64.181;
  const vector(4) int vect__62.180;
  const vector(4) int vect__56.173;
  const vector(4) int vect__54.172;
  const vector(4) int vect__52.169;
  const vector(4) int vect__46.162;
  const vector(4) int vect__45.161;
  const vector(4) int vect__43.158;
  const vector(4) int vect__37.151;
  const vector(4) int vect__35.150;
  const vector(4) int vect__33.147;
  const vector(4) int vect__27.140;
  const vector(4) int vect__26.139;
  int32_t t0[10];
  int32_t[10] * _3;
  int32_t[10] * _4;
  const int32_t[10] * _5;
  int32_t[10] * _6;
  const int32_t[10] * _7;
  const int32_t[10] * _8;
  const int32_t[10] * _9;
  int32_t[10] * _10;
  int _21;
  int _23;
  int _25;
  int _52;
  int _54;
  int _55;
  int _66;
  int _81;
  int _83;
  int _85;
  int _86;
  int _88;
  int _122;
  int _137;
  int _159;
  int _166;
  int _167;
  int _176;
  int _184;
  int _214;
  int _216;
  int _218;
  int _245;
  int _247;
  struct ge_p1p1 * _265;
  _Bool _266;
  struct ge_p1p1 * _267;
  _Bool _268;
  _Bool _269;
  int _276;
  int _278;
  int _280;
  int _292;
  int _294;
  int _296;
  const struct ge_p3 * _316;
  _Bool _317;
  struct ge_p1p1 * _318;
  _Bool _319;
  _Bool _320;
  int _327;
  int _329;
  int _331;
  int _343;
  int _345;
  int _347;
  int _369;
  int _371;
  int _391;
  int _393;
  int _395;
  int _405;
  int _407;
  int _409;
  int _419;
  int _421;
  int _423;
  int _433;
  int _435;
  int _437;
  int _447;
  int _449;
  int _451;
  int _461;
  int _463;
  int _465;
  int _475;
  int _477;
  int _479;
  int _489;
  int _491;
  int _493;
  int _503;
  int _505;
  int _507;
  int _517;
  int _519;
  int _521;
  int _544;
  int _546;
  int _548;
  int _558;
  int _560;
  int _562;
  int _572;
  int _574;
  int _576;
  int _586;
  int _588;
  int _590;
  int _600;
  int _602;
  int _604;
  int _614;
  int _616;
  int _618;
  int _628;
  int _630;
  int _632;
  int _642;
  int _644;
  int _646;
  int _656;
  int _658;
  int _660;
  int _670;
  int _672;
  int _674;

  <bb 2> [local count: 97603132]:
  _3 = &r_13(D)->X;
  _316 = p_12(D) + 56;
  _317 = r_13(D) >= _316;
  _318 = r_13(D) + 16;
  _319 = p_12(D) >= _318;
  _320 = _317 | _319;
  if (_320 != 0)
    goto <bb 3>; [80.00%]
  else
    goto <bb 4>; [20.00%]

  <bb 3> [local count: 78082506]:
  vect__80.199_683 = MEM[(const int32_t *)p_12(D) + 40B];
  vect__82.202_684 = MEM[(const int32_t *)p_12(D)];
  vect__84.203_685 = vect__80.199_683 + vect__82.202_684;
  MEM[(int32_t *)r_13(D)] = vect__84.203_685;
  vect__80.199_355 = MEM[(const int32_t *)p_12(D) + 56B];
  vect__82.202_358 = MEM[(const int32_t *)p_12(D) + 16B];
  vect__84.203_359 = vect__80.199_355 + vect__82.202_358;
  MEM[(int32_t *)r_13(D) + 16B] = vect__84.203_359;
  _670 = MEM[(const int32_t *)p_12(D) + 72B];
  _672 = MEM[(const int32_t *)p_12(D) + 32B];
  _674 = _670 + _672;
  MEM[(int32_t *)r_13(D) + 32B] = _674;
  _343 = MEM[(const int32_t *)p_12(D) + 76B];
  _345 = MEM[(const int32_t *)p_12(D) + 36B];
  _347 = _343 + _345;
  MEM[(int32_t *)r_13(D) + 36B] = _347;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 19520625]:
  _544 = MEM[(const int32_t *)p_12(D) + 40B];
  _546 = MEM[(const int32_t *)p_12(D)];
  _548 = _544 + _546;
  MEM[(int32_t *)r_13(D)] = _548;
  _558 = MEM[(const int32_t *)p_12(D) + 44B];
  _560 = MEM[(const int32_t *)p_12(D) + 4B];
  _562 = _558 + _560;
  MEM[(int32_t *)r_13(D) + 4B] = _562;
  _572 = MEM[(const int32_t *)p_12(D) + 48B];
  _574 = MEM[(const int32_t *)p_12(D) + 8B];
  _576 = _572 + _574;
  MEM[(int32_t *)r_13(D) + 8B] = _576;
  _586 = MEM[(const int32_t *)p_12(D) + 52B];
  _588 = MEM[(const int32_t *)p_12(D) + 12B];
  _590 = _586 + _588;
  MEM[(int32_t *)r_13(D) + 12B] = _590;
  _600 = MEM[(const int32_t *)p_12(D) + 56B];
  _602 = MEM[(const int32_t *)p_12(D) + 16B];
  _604 = _600 + _602;
  MEM[(int32_t *)r_13(D) + 16B] = _604;
  _614 = MEM[(const int32_t *)p_12(D) + 60B];
  _616 = MEM[(const int32_t *)p_12(D) + 20B];
  _618 = _614 + _616;
  MEM[(int32_t *)r_13(D) + 20B] = _618;
  _628 = MEM[(const int32_t *)p_12(D) + 64B];
  _630 = MEM[(const int32_t *)p_12(D) + 24B];
  _632 = _628 + _630;
  MEM[(int32_t *)r_13(D) + 24B] = _632;
  _642 = MEM[(const int32_t *)p_12(D) + 68B];
  _644 = MEM[(const int32_t *)p_12(D) + 28B];
  _646 = _642 + _644;
  MEM[(int32_t *)r_13(D) + 28B] = _646;
  _656 = MEM[(const int32_t *)p_12(D) + 72B];
  _658 = MEM[(const int32_t *)p_12(D) + 32B];
  _660 = _656 + _658;
  MEM[(int32_t *)r_13(D) + 32B] = _660;
  _327 = MEM[(const int32_t *)p_12(D) + 76B];
  _329 = MEM[(const int32_t *)p_12(D) + 36B];
  _331 = _327 + _329;
  MEM[(int32_t *)r_13(D) + 36B] = _331;

  <bb 5> [local count: 97603132]:
  _4 = &r_13(D)->Y;
  _265 = r_13(D) + 40;
  _266 = _265 >= _316;
  _267 = r_13(D) + 56;
  _268 = p_12(D) >= _267;
  _269 = _266 | _268;
  if (_269 != 0)
    goto <bb 6>; [80.00%]
  else
    goto <bb 7>; [20.00%]

  <bb 6> [local count: 78082506]:
  vect__70.188_530 = MEM[(const int32_t *)p_12(D) + 40B];
  vect__72.191_531 = MEM[(const int32_t *)p_12(D)];
  vect__74.192_532 = vect__70.188_530 - vect__72.191_531;
  MEM[(int32_t *)r_13(D) + 40B] = vect__74.192_532;
  vect__70.188_304 = MEM[(const int32_t *)p_12(D) + 56B];
  vect__72.191_307 = MEM[(const int32_t *)p_12(D) + 16B];
  vect__74.192_308 = vect__70.188_304 - vect__72.191_307;
  MEM[(int32_t *)r_13(D) + 56B] = vect__74.192_308;
  _517 = MEM[(const int32_t *)p_12(D) + 72B];
  _519 = MEM[(const int32_t *)p_12(D) + 32B];
  _521 = _517 - _519;
  MEM[(int32_t *)r_13(D) + 72B] = _521;
  _292 = MEM[(const int32_t *)p_12(D) + 76B];
  _294 = MEM[(const int32_t *)p_12(D) + 36B];
  _296 = _292 - _294;
  MEM[(int32_t *)r_13(D) + 76B] = _296;
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 19520625]:
  _391 = MEM[(const int32_t *)p_12(D) + 40B];
  _393 = MEM[(const int32_t *)p_12(D)];
  _395 = _391 - _393;
  MEM[(int32_t *)r_13(D) + 40B] = _395;
  _405 = MEM[(const int32_t *)p_12(D) + 44B];
  _407 = MEM[(const int32_t *)p_12(D) + 4B];
  _409 = _405 - _407;
  MEM[(int32_t *)r_13(D) + 44B] = _409;
  _419 = MEM[(const int32_t *)p_12(D) + 48B];
  _421 = MEM[(const int32_t *)p_12(D) + 8B];
  _423 = _419 - _421;
  MEM[(int32_t *)r_13(D) + 48B] = _423;
  _433 = MEM[(const int32_t *)p_12(D) + 52B];
  _435 = MEM[(const int32_t *)p_12(D) + 12B];
  _437 = _433 - _435;
  MEM[(int32_t *)r_13(D) + 52B] = _437;
  _447 = MEM[(const int32_t *)p_12(D) + 56B];
  _449 = MEM[(const int32_t *)p_12(D) + 16B];
  _451 = _447 - _449;
  MEM[(int32_t *)r_13(D) + 56B] = _451;
  _461 = MEM[(const int32_t *)p_12(D) + 60B];
  _463 = MEM[(const int32_t *)p_12(D) + 20B];
  _465 = _461 - _463;
  MEM[(int32_t *)r_13(D) + 60B] = _465;
  _475 = MEM[(const int32_t *)p_12(D) + 64B];
  _477 = MEM[(const int32_t *)p_12(D) + 24B];
  _479 = _475 - _477;
  MEM[(int32_t *)r_13(D) + 64B] = _479;
  _489 = MEM[(const int32_t *)p_12(D) + 68B];
  _491 = MEM[(const int32_t *)p_12(D) + 28B];
  _493 = _489 - _491;
  MEM[(int32_t *)r_13(D) + 68B] = _493;
  _503 = MEM[(const int32_t *)p_12(D) + 72B];
  _505 = MEM[(const int32_t *)p_12(D) + 32B];
  _507 = _503 - _505;
  MEM[(int32_t *)r_13(D) + 72B] = _507;
  _276 = MEM[(const int32_t *)p_12(D) + 76B];
  _278 = MEM[(const int32_t *)p_12(D) + 36B];
  _280 = _276 - _278;
  MEM[(int32_t *)r_13(D) + 76B] = _280;

  <bb 8> [local count: 97603136]:
  _5 = &q_15(D)->yplusx;
  _6 = &r_13(D)->Z;
  fe_mul (_6, _3, _5);
  _7 = &q_15(D)->yminusx;
  fe_mul (_4, _4, _7);
  _8 = &p_12(D)->T;
  _9 = &q_15(D)->xy2d;
  _10 = &r_13(D)->T;
  fe_mul (_10, _9, _8);
  vect__62.180_379 = MEM[(const int32_t *)p_12(D) + 80B];
  vect__64.181_380 = vect__62.180_379 * { 2, 2, 2, 2 };
  MEM[(int32_t *)&t0] = vect__64.181_380;
  vect__62.180_255 = MEM[(const int32_t *)p_12(D) + 96B];
  vect__64.181_257 = vect__62.180_255 * { 2, 2, 2, 2 };
  MEM[(int32_t *)&t0 + 16B] = vect__64.181_257;
  _369 = MEM[(const int32_t *)p_12(D) + 112B];
  _371 = _369 * 2;
  MEM[(int32_t *)&t0 + 32B] = _371;
  _245 = MEM[(const int32_t *)p_12(D) + 116B];
  _247 = _245 * 2;
  MEM[(int32_t *)&t0 + 36B] = _247;
  vect__52.169_182 = MEM[(const int32_t *)r_13(D) + 80B];
  vect__54.172_103 = MEM[(const int32_t *)r_13(D) + 40B];
  vect__56.173_147 = vect__52.169_182 - vect__54.172_103;
  MEM[(int32_t *)r_13(D)] = vect__56.173_147;
  vect__52.169_226 = MEM[(const int32_t *)r_13(D) + 96B];
  vect__54.172_230 = MEM[(const int32_t *)r_13(D) + 56B];
  vect__56.173_231 = vect__52.169_226 - vect__54.172_230;
  MEM[(int32_t *)r_13(D) + 16B] = vect__56.173_231;
  _21 = MEM[(const int32_t *)r_13(D) + 112B];
  _23 = MEM[(const int32_t *)r_13(D) + 72B];
  _25 = _21 - _23;
  MEM[(int32_t *)r_13(D) + 32B] = _25;
  _214 = MEM[(const int32_t *)r_13(D) + 116B];
  _216 = MEM[(const int32_t *)r_13(D) + 76B];
  _218 = _214 - _216;
  MEM[(int32_t *)r_13(D) + 36B] = _218;
  vect__43.158_45 = MEM[(const int32_t *)r_13(D) + 80B];
  vect__45.161_46 = MEM[(const int32_t *)r_13(D) + 40B];
  vect__46.162_47 = vect__43.158_45 + vect__45.161_46;
  MEM[(int32_t *)r_13(D) + 40B] = vect__46.162_47;
  vect__43.158_161 = MEM[(const int32_t *)r_13(D) + 96B];
  vect__45.161_156 = MEM[(const int32_t *)r_13(D) + 56B];
  vect__46.162_155 = vect__45.161_156 + vect__43.158_161;
  MEM[(int32_t *)r_13(D) + 56B] = vect__46.162_155;
  _52 = MEM[(const int32_t *)r_13(D) + 112B];
  _54 = MEM[(const int32_t *)r_13(D) + 72B];
  _55 = _52 + _54;
  MEM[(int32_t *)r_13(D) + 72B] = _55;
  _176 = MEM[(const int32_t *)r_13(D) + 116B];
  _166 = MEM[(const int32_t *)r_13(D) + 76B];
  _167 = _166 + _176;
  MEM[(int32_t *)r_13(D) + 76B] = _167;
  vect__33.147_74 = MEM[(const int32_t *)&t0];
  vect__35.150_75 = MEM[(const int32_t *)r_13(D) + 120B];
  vect__37.151_150 = vect__33.147_74 + vect__35.150_75;
  MEM[(int32_t *)r_13(D) + 80B] = vect__37.151_150;
  vect__33.147_195 = MEM[(const int32_t *)&t0 + 16B];
  vect__35.150_192 = MEM[(const int32_t *)r_13(D) + 136B];
  vect__37.151_187 = vect__35.150_192 + vect__33.147_195;
  MEM[(int32_t *)r_13(D) + 96B] = vect__37.151_187;
  _81 = MEM[(const int32_t *)&t0 + 32B];
  _83 = MEM[(const int32_t *)r_13(D) + 152B];
  _85 = _81 + _83;
  MEM[(int32_t *)r_13(D) + 112B] = _85;
  _88 = MEM[(const int32_t *)&t0 + 36B];
  _86 = MEM[(const int32_t *)r_13(D) + 156B];
  _66 = _86 + _88;
  MEM[(int32_t *)r_13(D) + 116B] = _66;
  vect__26.139_127 = MEM[(const int32_t *)r_13(D) + 120B];
  vect__27.140_285 = vect__33.147_74 - vect__26.139_127;
  MEM[(int32_t *)r_13(D) + 120B] = vect__27.140_285;
  vect__26.139_111 = MEM[(const int32_t *)r_13(D) + 136B];
  vect__27.140_110 = vect__33.147_195 - vect__26.139_111;
  MEM[(int32_t *)r_13(D) + 136B] = vect__27.140_110;
  _184 = MEM[(const int32_t *)r_13(D) + 152B];
  _159 = _81 - _184;
  MEM[(int32_t *)r_13(D) + 152B] = _159;
  _137 = MEM[(const int32_t *)r_13(D) + 156B];
  _122 = _88 - _137;
  MEM[(int32_t *)r_13(D) + 156B] = _122;
  t0 ={v} {CLOBBER};
  return;

}



;; Function ge_add (ge_add, funcdef_no=407, decl_uid=10909, cgraph_uid=407, symbol_order=415)

ge_add (struct ge_p1p1 * r, const struct ge_p3 * p, const struct ge_cached * q)
{
  const vector(4) int vect__86.277;
  const vector(4) int vect__84.276;
  const vector(4) int vect__82.273;
  const vector(4) int vect__76.266;
  const vector(4) int vect__74.265;
  const vector(4) int vect__72.262;
  const vector(4) int vect__66.255;
  const vector(4) int vect__64.254;
  const vector(4) int vect__58.247;
  const vector(4) int vect__56.246;
  const vector(4) int vect__54.243;
  const vector(4) int vect__48.236;
  const vector(4) int vect__47.235;
  const vector(4) int vect__45.232;
  const vector(4) int vect__39.225;
  const vector(4) int vect__37.224;
  const vector(4) int vect__35.221;
  const vector(4) int vect__29.214;
  const vector(4) int vect__28.213;
  int32_t t0[10];
  int32_t[10] * _3;
  int32_t[10] * _4;
  const int32_t[10] * _5;
  int32_t[10] * _6;
  const int32_t[10] * _7;
  const int32_t[10] * _8;
  const int32_t[10] * _9;
  int32_t[10] * _10;
  const int32_t[10] * _11;
  const int32_t[10] * _12;
  int _23;
  int _25;
  int _27;
  int _54;
  int _56;
  int _57;
  int _68;
  int _83;
  int _85;
  int _87;
  int _88;
  int _90;
  int _124;
  int _139;
  int _161;
  int _168;
  int _169;
  int _178;
  int _186;
  int _216;
  int _218;
  int _220;
  int _247;
  int _249;
  struct ge_p1p1 * _266;
  _Bool _267;
  struct ge_p1p1 * _268;
  _Bool _269;
  _Bool _270;
  int _277;
  int _279;
  int _281;
  int _293;
  int _295;
  int _297;
  const struct ge_p3 * _317;
  _Bool _318;
  struct ge_p1p1 * _319;
  _Bool _320;
  _Bool _321;
  int _328;
  int _330;
  int _332;
  int _344;
  int _346;
  int _348;
  int _370;
  int _372;
  int _392;
  int _394;
  int _396;
  int _406;
  int _408;
  int _410;
  int _420;
  int _422;
  int _424;
  int _434;
  int _436;
  int _438;
  int _448;
  int _450;
  int _452;
  int _462;
  int _464;
  int _466;
  int _476;
  int _478;
  int _480;
  int _490;
  int _492;
  int _494;
  int _504;
  int _506;
  int _508;
  int _518;
  int _520;
  int _522;
  int _545;
  int _547;
  int _549;
  int _559;
  int _561;
  int _563;
  int _573;
  int _575;
  int _577;
  int _587;
  int _589;
  int _591;
  int _601;
  int _603;
  int _605;
  int _615;
  int _617;
  int _619;
  int _629;
  int _631;
  int _633;
  int _643;
  int _645;
  int _647;
  int _657;
  int _659;
  int _661;
  int _671;
  int _673;
  int _675;

  <bb 2> [local count: 97603132]:
  _3 = &r_14(D)->X;
  _317 = p_13(D) + 56;
  _318 = r_14(D) >= _317;
  _319 = r_14(D) + 16;
  _320 = p_13(D) >= _319;
  _321 = _318 | _320;
  if (_321 != 0)
    goto <bb 3>; [80.00%]
  else
    goto <bb 4>; [20.00%]

  <bb 3> [local count: 78082506]:
  vect__82.273_684 = MEM[(const int32_t *)p_13(D) + 40B];
  vect__84.276_685 = MEM[(const int32_t *)p_13(D)];
  vect__86.277_686 = vect__82.273_684 + vect__84.276_685;
  MEM[(int32_t *)r_14(D)] = vect__86.277_686;
  vect__82.273_356 = MEM[(const int32_t *)p_13(D) + 56B];
  vect__84.276_359 = MEM[(const int32_t *)p_13(D) + 16B];
  vect__86.277_360 = vect__82.273_356 + vect__84.276_359;
  MEM[(int32_t *)r_14(D) + 16B] = vect__86.277_360;
  _671 = MEM[(const int32_t *)p_13(D) + 72B];
  _673 = MEM[(const int32_t *)p_13(D) + 32B];
  _675 = _671 + _673;
  MEM[(int32_t *)r_14(D) + 32B] = _675;
  _344 = MEM[(const int32_t *)p_13(D) + 76B];
  _346 = MEM[(const int32_t *)p_13(D) + 36B];
  _348 = _344 + _346;
  MEM[(int32_t *)r_14(D) + 36B] = _348;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 19520625]:
  _545 = MEM[(const int32_t *)p_13(D) + 40B];
  _547 = MEM[(const int32_t *)p_13(D)];
  _549 = _545 + _547;
  MEM[(int32_t *)r_14(D)] = _549;
  _559 = MEM[(const int32_t *)p_13(D) + 44B];
  _561 = MEM[(const int32_t *)p_13(D) + 4B];
  _563 = _559 + _561;
  MEM[(int32_t *)r_14(D) + 4B] = _563;
  _573 = MEM[(const int32_t *)p_13(D) + 48B];
  _575 = MEM[(const int32_t *)p_13(D) + 8B];
  _577 = _573 + _575;
  MEM[(int32_t *)r_14(D) + 8B] = _577;
  _587 = MEM[(const int32_t *)p_13(D) + 52B];
  _589 = MEM[(const int32_t *)p_13(D) + 12B];
  _591 = _587 + _589;
  MEM[(int32_t *)r_14(D) + 12B] = _591;
  _601 = MEM[(const int32_t *)p_13(D) + 56B];
  _603 = MEM[(const int32_t *)p_13(D) + 16B];
  _605 = _601 + _603;
  MEM[(int32_t *)r_14(D) + 16B] = _605;
  _615 = MEM[(const int32_t *)p_13(D) + 60B];
  _617 = MEM[(const int32_t *)p_13(D) + 20B];
  _619 = _615 + _617;
  MEM[(int32_t *)r_14(D) + 20B] = _619;
  _629 = MEM[(const int32_t *)p_13(D) + 64B];
  _631 = MEM[(const int32_t *)p_13(D) + 24B];
  _633 = _629 + _631;
  MEM[(int32_t *)r_14(D) + 24B] = _633;
  _643 = MEM[(const int32_t *)p_13(D) + 68B];
  _645 = MEM[(const int32_t *)p_13(D) + 28B];
  _647 = _643 + _645;
  MEM[(int32_t *)r_14(D) + 28B] = _647;
  _657 = MEM[(const int32_t *)p_13(D) + 72B];
  _659 = MEM[(const int32_t *)p_13(D) + 32B];
  _661 = _657 + _659;
  MEM[(int32_t *)r_14(D) + 32B] = _661;
  _328 = MEM[(const int32_t *)p_13(D) + 76B];
  _330 = MEM[(const int32_t *)p_13(D) + 36B];
  _332 = _328 + _330;
  MEM[(int32_t *)r_14(D) + 36B] = _332;

  <bb 5> [local count: 97603132]:
  _4 = &r_14(D)->Y;
  _266 = r_14(D) + 40;
  _267 = _266 >= _317;
  _268 = r_14(D) + 56;
  _269 = p_13(D) >= _268;
  _270 = _267 | _269;
  if (_270 != 0)
    goto <bb 6>; [80.00%]
  else
    goto <bb 7>; [20.00%]

  <bb 6> [local count: 78082506]:
  vect__72.262_531 = MEM[(const int32_t *)p_13(D) + 40B];
  vect__74.265_532 = MEM[(const int32_t *)p_13(D)];
  vect__76.266_533 = vect__72.262_531 - vect__74.265_532;
  MEM[(int32_t *)r_14(D) + 40B] = vect__76.266_533;
  vect__72.262_305 = MEM[(const int32_t *)p_13(D) + 56B];
  vect__74.265_308 = MEM[(const int32_t *)p_13(D) + 16B];
  vect__76.266_309 = vect__72.262_305 - vect__74.265_308;
  MEM[(int32_t *)r_14(D) + 56B] = vect__76.266_309;
  _518 = MEM[(const int32_t *)p_13(D) + 72B];
  _520 = MEM[(const int32_t *)p_13(D) + 32B];
  _522 = _518 - _520;
  MEM[(int32_t *)r_14(D) + 72B] = _522;
  _293 = MEM[(const int32_t *)p_13(D) + 76B];
  _295 = MEM[(const int32_t *)p_13(D) + 36B];
  _297 = _293 - _295;
  MEM[(int32_t *)r_14(D) + 76B] = _297;
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 19520625]:
  _392 = MEM[(const int32_t *)p_13(D) + 40B];
  _394 = MEM[(const int32_t *)p_13(D)];
  _396 = _392 - _394;
  MEM[(int32_t *)r_14(D) + 40B] = _396;
  _406 = MEM[(const int32_t *)p_13(D) + 44B];
  _408 = MEM[(const int32_t *)p_13(D) + 4B];
  _410 = _406 - _408;
  MEM[(int32_t *)r_14(D) + 44B] = _410;
  _420 = MEM[(const int32_t *)p_13(D) + 48B];
  _422 = MEM[(const int32_t *)p_13(D) + 8B];
  _424 = _420 - _422;
  MEM[(int32_t *)r_14(D) + 48B] = _424;
  _434 = MEM[(const int32_t *)p_13(D) + 52B];
  _436 = MEM[(const int32_t *)p_13(D) + 12B];
  _438 = _434 - _436;
  MEM[(int32_t *)r_14(D) + 52B] = _438;
  _448 = MEM[(const int32_t *)p_13(D) + 56B];
  _450 = MEM[(const int32_t *)p_13(D) + 16B];
  _452 = _448 - _450;
  MEM[(int32_t *)r_14(D) + 56B] = _452;
  _462 = MEM[(const int32_t *)p_13(D) + 60B];
  _464 = MEM[(const int32_t *)p_13(D) + 20B];
  _466 = _462 - _464;
  MEM[(int32_t *)r_14(D) + 60B] = _466;
  _476 = MEM[(const int32_t *)p_13(D) + 64B];
  _478 = MEM[(const int32_t *)p_13(D) + 24B];
  _480 = _476 - _478;
  MEM[(int32_t *)r_14(D) + 64B] = _480;
  _490 = MEM[(const int32_t *)p_13(D) + 68B];
  _492 = MEM[(const int32_t *)p_13(D) + 28B];
  _494 = _490 - _492;
  MEM[(int32_t *)r_14(D) + 68B] = _494;
  _504 = MEM[(const int32_t *)p_13(D) + 72B];
  _506 = MEM[(const int32_t *)p_13(D) + 32B];
  _508 = _504 - _506;
  MEM[(int32_t *)r_14(D) + 72B] = _508;
  _277 = MEM[(const int32_t *)p_13(D) + 76B];
  _279 = MEM[(const int32_t *)p_13(D) + 36B];
  _281 = _277 - _279;
  MEM[(int32_t *)r_14(D) + 76B] = _281;

  <bb 8> [local count: 97603136]:
  _5 = &q_16(D)->YplusX;
  _6 = &r_14(D)->Z;
  fe_mul (_6, _3, _5);
  _7 = &q_16(D)->YminusX;
  fe_mul (_4, _4, _7);
  _8 = &p_13(D)->T;
  _9 = &q_16(D)->T2d;
  _10 = &r_14(D)->T;
  fe_mul (_10, _9, _8);
  _11 = &q_16(D)->Z;
  _12 = &p_13(D)->Z;
  fe_mul (_3, _12, _11);
  vect__64.254_380 = MEM[(const int32_t *)r_14(D)];
  vect__66.255_381 = vect__64.254_380 * { 2, 2, 2, 2 };
  MEM[(int32_t *)&t0] = vect__66.255_381;
  vect__64.254_256 = MEM[(const int32_t *)r_14(D) + 16B];
  vect__66.255_258 = vect__64.254_256 * { 2, 2, 2, 2 };
  MEM[(int32_t *)&t0 + 16B] = vect__66.255_258;
  _370 = MEM[(const int32_t *)r_14(D) + 32B];
  _372 = _370 * 2;
  MEM[(int32_t *)&t0 + 32B] = _372;
  _247 = MEM[(const int32_t *)r_14(D) + 36B];
  _249 = _247 * 2;
  MEM[(int32_t *)&t0 + 36B] = _249;
  vect__54.243_184 = MEM[(const int32_t *)r_14(D) + 80B];
  vect__56.246_105 = MEM[(const int32_t *)r_14(D) + 40B];
  vect__58.247_149 = vect__54.243_184 - vect__56.246_105;
  MEM[(int32_t *)r_14(D)] = vect__58.247_149;
  vect__54.243_228 = MEM[(const int32_t *)r_14(D) + 96B];
  vect__56.246_232 = MEM[(const int32_t *)r_14(D) + 56B];
  vect__58.247_233 = vect__54.243_228 - vect__56.246_232;
  MEM[(int32_t *)r_14(D) + 16B] = vect__58.247_233;
  _23 = MEM[(const int32_t *)r_14(D) + 112B];
  _25 = MEM[(const int32_t *)r_14(D) + 72B];
  _27 = _23 - _25;
  MEM[(int32_t *)r_14(D) + 32B] = _27;
  _216 = MEM[(const int32_t *)r_14(D) + 116B];
  _218 = MEM[(const int32_t *)r_14(D) + 76B];
  _220 = _216 - _218;
  MEM[(int32_t *)r_14(D) + 36B] = _220;
  vect__45.232_47 = MEM[(const int32_t *)r_14(D) + 80B];
  vect__47.235_48 = MEM[(const int32_t *)r_14(D) + 40B];
  vect__48.236_49 = vect__45.232_47 + vect__47.235_48;
  MEM[(int32_t *)r_14(D) + 40B] = vect__48.236_49;
  vect__45.232_163 = MEM[(const int32_t *)r_14(D) + 96B];
  vect__47.235_158 = MEM[(const int32_t *)r_14(D) + 56B];
  vect__48.236_157 = vect__47.235_158 + vect__45.232_163;
  MEM[(int32_t *)r_14(D) + 56B] = vect__48.236_157;
  _54 = MEM[(const int32_t *)r_14(D) + 112B];
  _56 = MEM[(const int32_t *)r_14(D) + 72B];
  _57 = _54 + _56;
  MEM[(int32_t *)r_14(D) + 72B] = _57;
  _178 = MEM[(const int32_t *)r_14(D) + 116B];
  _168 = MEM[(const int32_t *)r_14(D) + 76B];
  _169 = _168 + _178;
  MEM[(int32_t *)r_14(D) + 76B] = _169;
  vect__35.221_76 = MEM[(const int32_t *)&t0];
  vect__37.224_77 = MEM[(const int32_t *)r_14(D) + 120B];
  vect__39.225_152 = vect__35.221_76 + vect__37.224_77;
  MEM[(int32_t *)r_14(D) + 80B] = vect__39.225_152;
  vect__35.221_197 = MEM[(const int32_t *)&t0 + 16B];
  vect__37.224_194 = MEM[(const int32_t *)r_14(D) + 136B];
  vect__39.225_189 = vect__37.224_194 + vect__35.221_197;
  MEM[(int32_t *)r_14(D) + 96B] = vect__39.225_189;
  _83 = MEM[(const int32_t *)&t0 + 32B];
  _85 = MEM[(const int32_t *)r_14(D) + 152B];
  _87 = _83 + _85;
  MEM[(int32_t *)r_14(D) + 112B] = _87;
  _90 = MEM[(const int32_t *)&t0 + 36B];
  _88 = MEM[(const int32_t *)r_14(D) + 156B];
  _68 = _88 + _90;
  MEM[(int32_t *)r_14(D) + 116B] = _68;
  vect__28.213_129 = MEM[(const int32_t *)r_14(D) + 120B];
  vect__29.214_286 = vect__35.221_76 - vect__28.213_129;
  MEM[(int32_t *)r_14(D) + 120B] = vect__29.214_286;
  vect__28.213_113 = MEM[(const int32_t *)r_14(D) + 136B];
  vect__29.214_112 = vect__35.221_197 - vect__28.213_113;
  MEM[(int32_t *)r_14(D) + 136B] = vect__29.214_112;
  _186 = MEM[(const int32_t *)r_14(D) + 152B];
  _161 = _83 - _186;
  MEM[(int32_t *)r_14(D) + 152B] = _161;
  _139 = MEM[(const int32_t *)r_14(D) + 156B];
  _124 = _90 - _139;
  MEM[(int32_t *)r_14(D) + 156B] = _124;
  t0 ={v} {CLOBBER};
  return;

}



;; Function cmov (cmov, funcdef_no=410, decl_uid=10929, cgraph_uid=410, symbol_order=418)

cmov (struct ge_precomp * t, const struct ge_precomp * u, uint8_t b)
{
  vector(4) int vect__47.322;
  vector(4) int vect_x_46.321;
  vector(4) unsigned int vect__45.320;
  vector(4) unsigned int vect_x.319;
  vector(4) int vect_x_43.318;
  const vector(4) int vect__42.317;
  vector(4) int vect__40.314;
  vector(4) int vect__34.307;
  vector(4) int vect_x_33.306;
  vector(4) unsigned int vect__32.305;
  vector(4) unsigned int vect_x.304;
  vector(4) int vect_x_30.303;
  const vector(4) int vect__29.302;
  vector(4) int vect__27.299;
  vector(4) int vect__22.292;
  vector(4) int vect_x_21.291;
  vector(4) unsigned int vect__20.290;
  vector(4) unsigned int vect_x.289;
  vector(4) int vect_x_18.288;
  const vector(4) int vect__17.287;
  vector(4) int vect__15.284;
  int32_t x;
  unsigned int b;
  int32_t x;
  int32_t x;
  unsigned int _1;
  int _14;
  int _16;
  unsigned int x.12_18;
  unsigned int _19;
  int _21;
  int _24;
  unsigned int x.12_26;
  unsigned int _27;
  int _29;
  int _38;
  int _47;
  unsigned int _49;
  unsigned int x.12_50;
  int _55;
  int _57;
  int _68;
  int _74;
  unsigned int _76;
  unsigned int x.12_77;
  int _79;
  int _81;
  _Bool _87;
  _Bool _88;
  const struct ge_precomp * _89;
  struct ge_precomp * _90;
  _Bool _91;
  struct ge_precomp * _92;
  const struct ge_precomp * _93;
  int _94;
  unsigned int _95;
  vector(4) unsigned int vect_cst__113;
  const struct ge_precomp * _123;
  struct ge_precomp * _124;
  _Bool _125;
  struct ge_precomp * _126;
  const struct ge_precomp * _127;
  _Bool _128;
  _Bool _129;
  int _135;
  int _137;
  unsigned int x.12_139;
  unsigned int _140;
  int _142;
  int _153;
  int _155;
  unsigned int x.12_157;
  unsigned int _158;
  int _160;
  int _164;
  vector(4) unsigned int vect_cst__175;
  const struct ge_precomp * _185;
  _Bool _186;
  struct ge_precomp * _187;
  _Bool _188;
  _Bool _189;
  int _195;
  int _197;
  unsigned int x.12_199;
  unsigned int _200;
  int _202;
  int _213;
  int _215;
  unsigned int x.12_217;
  unsigned int _218;
  int _220;
  unsigned int x.12_224;
  vector(4) unsigned int vect_cst__233;
  int _244;
  int _246;
  unsigned int x.12_248;
  unsigned int _249;
  int _251;
  int _260;
  int _262;
  unsigned int x.12_264;
  unsigned int _265;
  int _267;
  int _276;
  int _278;
  unsigned int x.12_280;
  unsigned int _281;
  int _283;
  int _292;
  int _294;
  unsigned int x.12_296;
  unsigned int _297;
  int _299;
  int _308;
  int _310;
  unsigned int x.12_312;
  unsigned int _313;
  int _315;
  int _324;
  int _326;
  unsigned int x.12_328;
  unsigned int _329;
  int _331;
  int _340;
  int _342;
  unsigned int x.12_344;
  unsigned int _345;
  int _347;
  int _373;
  int _375;
  unsigned int x.12_377;
  unsigned int _378;
  int _380;
  int _389;
  int _391;
  unsigned int x.12_393;
  unsigned int _394;
  int _396;
  int _405;
  int _407;
  unsigned int x.12_409;
  unsigned int _410;
  int _412;
  int _421;
  int _423;
  unsigned int x.12_425;
  unsigned int _426;
  int _428;
  int _437;
  int _439;
  unsigned int x.12_441;
  unsigned int _442;
  int _444;
  int _453;
  int _455;
  unsigned int x.12_457;
  unsigned int _458;
  int _460;
  int _469;
  int _471;
  unsigned int x.12_473;
  unsigned int _474;
  int _476;
  int _485;
  int _487;
  unsigned int x.12_489;
  unsigned int _490;
  int _492;
  int _501;
  int _503;
  unsigned int x.12_505;
  unsigned int _506;
  int _508;
  int _517;
  int _519;
  unsigned int x.12_521;
  unsigned int _522;
  int _524;
  int _550;
  int _552;
  unsigned int x.12_554;
  unsigned int _555;
  int _557;
  int _566;
  int _568;
  unsigned int x.12_570;
  unsigned int _571;
  int _573;
  int _582;
  int _584;
  unsigned int x.12_586;
  unsigned int _587;
  int _589;
  int _598;
  int _600;
  unsigned int x.12_602;
  unsigned int _603;
  int _605;
  int _614;
  int _616;
  unsigned int x.12_618;
  unsigned int _619;
  int _621;
  int _630;
  int _632;
  unsigned int x.12_634;
  unsigned int _635;
  int _637;
  int _646;
  int _648;
  unsigned int x.12_650;
  unsigned int _651;
  int _653;
  int _662;
  int _664;
  unsigned int x.12_666;
  unsigned int _667;
  int _669;
  int _678;
  int _680;
  unsigned int x.12_682;
  unsigned int _683;
  int _685;
  int _694;
  int _696;
  unsigned int x.12_698;
  unsigned int _699;
  int _701;

  <bb 2> [local count: 97603132]:
  _1 = (unsigned int) b_8(D);
  b_36 = -_1;
  _185 = u_9(D) + 16;
  _186 = t_10(D) >= _185;
  _187 = t_10(D) + 16;
  _188 = u_9(D) >= _187;
  _189 = _186 | _188;
  if (_189 != 0)
    goto <bb 3>; [80.00%]
  else
    goto <bb 4>; [20.00%]

  <bb 3> [local count: 78082506]:
  vect_cst__233 = {b_36, b_36, b_36, b_36};
  vect__40.314_710 = MEM[(int32_t *)t_10(D)];
  vect__42.317_711 = MEM[(const int32_t *)u_9(D)];
  vect_x_43.318_712 = vect__40.314_710 ^ vect__42.317_711;
  vect_x.319_713 = VIEW_CONVERT_EXPR<vector(4) unsigned int>(vect_x_43.318_712);
  vect__45.320_714 = vect_cst__233 & vect_x.319_713;
  vect_x_46.321_715 = VIEW_CONVERT_EXPR<vector(4) int>(vect__45.320_714);
  vect__47.322_716 = vect__40.314_710 ^ vect_x_46.321_715;
  MEM[(int32_t *)t_10(D)] = vect__47.322_716;
  vect__40.314_227 = MEM[(int32_t *)t_10(D) + 16B];
  vect__42.317_230 = MEM[(const int32_t *)u_9(D) + 16B];
  vect_x_43.318_231 = vect__40.314_227 ^ vect__42.317_230;
  vect_x.319_232 = VIEW_CONVERT_EXPR<vector(4) unsigned int>(vect_x_43.318_231);
  vect__45.320_234 = vect_x.319_232 & vect_cst__233;
  vect_x_46.321_235 = VIEW_CONVERT_EXPR<vector(4) int>(vect__45.320_234);
  vect__47.322_236 = vect__40.314_227 ^ vect_x_46.321_235;
  MEM[(int32_t *)t_10(D) + 16B] = vect__47.322_236;
  _694 = MEM[(int32_t *)t_10(D) + 32B];
  _696 = MEM[(const int32_t *)u_9(D) + 32B];
  x_697 = _694 ^ _696;
  x.12_698 = (unsigned int) x_697;
  _699 = b_36 & x.12_698;
  x_700 = (int32_t) _699;
  _701 = _694 ^ x_700;
  MEM[(int32_t *)t_10(D) + 32B] = _701;
  _213 = MEM[(int32_t *)t_10(D) + 36B];
  _215 = MEM[(const int32_t *)u_9(D) + 36B];
  x_216 = _213 ^ _215;
  x.12_217 = (unsigned int) x_216;
  _218 = b_36 & x.12_217;
  x_219 = (int32_t) _218;
  _220 = _213 ^ x_219;
  MEM[(int32_t *)t_10(D) + 36B] = _220;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 19520625]:
  _550 = MEM[(int32_t *)t_10(D)];
  _552 = MEM[(const int32_t *)u_9(D)];
  x_553 = _550 ^ _552;
  x.12_554 = (unsigned int) x_553;
  _555 = b_36 & x.12_554;
  x_556 = (int32_t) _555;
  _557 = _550 ^ x_556;
  MEM[(int32_t *)t_10(D)] = _557;
  _566 = MEM[(int32_t *)t_10(D) + 4B];
  _568 = MEM[(const int32_t *)u_9(D) + 4B];
  x_569 = _566 ^ _568;
  x.12_570 = (unsigned int) x_569;
  _571 = b_36 & x.12_570;
  x_572 = (int32_t) _571;
  _573 = _566 ^ x_572;
  MEM[(int32_t *)t_10(D) + 4B] = _573;
  _582 = MEM[(int32_t *)t_10(D) + 8B];
  _584 = MEM[(const int32_t *)u_9(D) + 8B];
  x_585 = _582 ^ _584;
  x.12_586 = (unsigned int) x_585;
  _587 = b_36 & x.12_586;
  x_588 = (int32_t) _587;
  _589 = _582 ^ x_588;
  MEM[(int32_t *)t_10(D) + 8B] = _589;
  _598 = MEM[(int32_t *)t_10(D) + 12B];
  _600 = MEM[(const int32_t *)u_9(D) + 12B];
  x_601 = _598 ^ _600;
  x.12_602 = (unsigned int) x_601;
  _603 = b_36 & x.12_602;
  x_604 = (int32_t) _603;
  _605 = _598 ^ x_604;
  MEM[(int32_t *)t_10(D) + 12B] = _605;
  _614 = MEM[(int32_t *)t_10(D) + 16B];
  _616 = MEM[(const int32_t *)u_9(D) + 16B];
  x_617 = _614 ^ _616;
  x.12_618 = (unsigned int) x_617;
  _619 = b_36 & x.12_618;
  x_620 = (int32_t) _619;
  _621 = _614 ^ x_620;
  MEM[(int32_t *)t_10(D) + 16B] = _621;
  _630 = MEM[(int32_t *)t_10(D) + 20B];
  _632 = MEM[(const int32_t *)u_9(D) + 20B];
  x_633 = _630 ^ _632;
  x.12_634 = (unsigned int) x_633;
  _635 = b_36 & x.12_634;
  x_636 = (int32_t) _635;
  _637 = _630 ^ x_636;
  MEM[(int32_t *)t_10(D) + 20B] = _637;
  _646 = MEM[(int32_t *)t_10(D) + 24B];
  _648 = MEM[(const int32_t *)u_9(D) + 24B];
  x_649 = _646 ^ _648;
  x.12_650 = (unsigned int) x_649;
  _651 = b_36 & x.12_650;
  x_652 = (int32_t) _651;
  _653 = _646 ^ x_652;
  MEM[(int32_t *)t_10(D) + 24B] = _653;
  _662 = MEM[(int32_t *)t_10(D) + 28B];
  _664 = MEM[(const int32_t *)u_9(D) + 28B];
  x_665 = _662 ^ _664;
  x.12_666 = (unsigned int) x_665;
  _667 = b_36 & x.12_666;
  x_668 = (int32_t) _667;
  _669 = _662 ^ x_668;
  MEM[(int32_t *)t_10(D) + 28B] = _669;
  _678 = MEM[(int32_t *)t_10(D) + 32B];
  _680 = MEM[(const int32_t *)u_9(D) + 32B];
  x_681 = _678 ^ _680;
  x.12_682 = (unsigned int) x_681;
  _683 = b_36 & x.12_682;
  x_684 = (int32_t) _683;
  _685 = _678 ^ x_684;
  MEM[(int32_t *)t_10(D) + 32B] = _685;
  _195 = MEM[(int32_t *)t_10(D) + 36B];
  _197 = MEM[(const int32_t *)u_9(D) + 36B];
  x_198 = _195 ^ _197;
  x.12_199 = (unsigned int) x_198;
  _200 = b_36 & x.12_199;
  x_201 = (int32_t) _200;
  _202 = _195 ^ x_201;
  MEM[(int32_t *)t_10(D) + 36B] = _202;

  <bb 5> [local count: 97603132]:
  _123 = u_9(D) + 56;
  _124 = t_10(D) + 40;
  _125 = _123 <= _124;
  _126 = t_10(D) + 56;
  _127 = u_9(D) + 40;
  _128 = _126 <= _127;
  _129 = _125 | _128;
  if (_129 != 0)
    goto <bb 6>; [80.00%]
  else
    goto <bb 7>; [20.00%]

  <bb 6> [local count: 78082506]:
  vect_cst__175 = {b_36, b_36, b_36, b_36};
  vect__27.299_533 = MEM[(int32_t *)t_10(D) + 40B];
  vect__29.302_534 = MEM[(const int32_t *)u_9(D) + 40B];
  vect_x_30.303_535 = vect__27.299_533 ^ vect__29.302_534;
  vect_x.304_536 = VIEW_CONVERT_EXPR<vector(4) unsigned int>(vect_x_30.303_535);
  vect__32.305_537 = vect_cst__175 & vect_x.304_536;
  vect_x_33.306_538 = VIEW_CONVERT_EXPR<vector(4) int>(vect__32.305_537);
  vect__34.307_539 = vect__27.299_533 ^ vect_x_33.306_538;
  MEM[(int32_t *)t_10(D) + 40B] = vect__34.307_539;
  vect__27.299_168 = MEM[(int32_t *)t_10(D) + 56B];
  vect__29.302_172 = MEM[(const int32_t *)u_9(D) + 56B];
  vect_x_30.303_173 = vect__27.299_168 ^ vect__29.302_172;
  vect_x.304_174 = VIEW_CONVERT_EXPR<vector(4) unsigned int>(vect_x_30.303_173);
  vect__32.305_176 = vect_x.304_174 & vect_cst__175;
  vect_x_33.306_177 = VIEW_CONVERT_EXPR<vector(4) int>(vect__32.305_176);
  vect__34.307_178 = vect__27.299_168 ^ vect_x_33.306_177;
  MEM[(int32_t *)t_10(D) + 56B] = vect__34.307_178;
  _517 = MEM[(int32_t *)t_10(D) + 72B];
  _519 = MEM[(const int32_t *)u_9(D) + 72B];
  x_520 = _517 ^ _519;
  x.12_521 = (unsigned int) x_520;
  _522 = b_36 & x.12_521;
  x_523 = (int32_t) _522;
  _524 = _517 ^ x_523;
  MEM[(int32_t *)t_10(D) + 72B] = _524;
  _153 = MEM[(int32_t *)t_10(D) + 76B];
  _155 = MEM[(const int32_t *)u_9(D) + 76B];
  x_156 = _153 ^ _155;
  x.12_157 = (unsigned int) x_156;
  _158 = b_36 & x.12_157;
  x_159 = (int32_t) _158;
  _160 = _153 ^ x_159;
  MEM[(int32_t *)t_10(D) + 76B] = _160;
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 19520625]:
  _373 = MEM[(int32_t *)t_10(D) + 40B];
  _375 = MEM[(const int32_t *)u_9(D) + 40B];
  x_376 = _373 ^ _375;
  x.12_377 = (unsigned int) x_376;
  _378 = b_36 & x.12_377;
  x_379 = (int32_t) _378;
  _380 = _373 ^ x_379;
  MEM[(int32_t *)t_10(D) + 40B] = _380;
  _389 = MEM[(int32_t *)t_10(D) + 44B];
  _391 = MEM[(const int32_t *)u_9(D) + 44B];
  x_392 = _389 ^ _391;
  x.12_393 = (unsigned int) x_392;
  _394 = b_36 & x.12_393;
  x_395 = (int32_t) _394;
  _396 = _389 ^ x_395;
  MEM[(int32_t *)t_10(D) + 44B] = _396;
  _405 = MEM[(int32_t *)t_10(D) + 48B];
  _407 = MEM[(const int32_t *)u_9(D) + 48B];
  x_408 = _405 ^ _407;
  x.12_409 = (unsigned int) x_408;
  _410 = b_36 & x.12_409;
  x_411 = (int32_t) _410;
  _412 = _405 ^ x_411;
  MEM[(int32_t *)t_10(D) + 48B] = _412;
  _421 = MEM[(int32_t *)t_10(D) + 52B];
  _423 = MEM[(const int32_t *)u_9(D) + 52B];
  x_424 = _421 ^ _423;
  x.12_425 = (unsigned int) x_424;
  _426 = b_36 & x.12_425;
  x_427 = (int32_t) _426;
  _428 = _421 ^ x_427;
  MEM[(int32_t *)t_10(D) + 52B] = _428;
  _437 = MEM[(int32_t *)t_10(D) + 56B];
  _439 = MEM[(const int32_t *)u_9(D) + 56B];
  x_440 = _437 ^ _439;
  x.12_441 = (unsigned int) x_440;
  _442 = b_36 & x.12_441;
  x_443 = (int32_t) _442;
  _444 = _437 ^ x_443;
  MEM[(int32_t *)t_10(D) + 56B] = _444;
  _453 = MEM[(int32_t *)t_10(D) + 60B];
  _455 = MEM[(const int32_t *)u_9(D) + 60B];
  x_456 = _453 ^ _455;
  x.12_457 = (unsigned int) x_456;
  _458 = b_36 & x.12_457;
  x_459 = (int32_t) _458;
  _460 = _453 ^ x_459;
  MEM[(int32_t *)t_10(D) + 60B] = _460;
  _469 = MEM[(int32_t *)t_10(D) + 64B];
  _471 = MEM[(const int32_t *)u_9(D) + 64B];
  x_472 = _469 ^ _471;
  x.12_473 = (unsigned int) x_472;
  _474 = b_36 & x.12_473;
  x_475 = (int32_t) _474;
  _476 = _469 ^ x_475;
  MEM[(int32_t *)t_10(D) + 64B] = _476;
  _485 = MEM[(int32_t *)t_10(D) + 68B];
  _487 = MEM[(const int32_t *)u_9(D) + 68B];
  x_488 = _485 ^ _487;
  x.12_489 = (unsigned int) x_488;
  _490 = b_36 & x.12_489;
  x_491 = (int32_t) _490;
  _492 = _485 ^ x_491;
  MEM[(int32_t *)t_10(D) + 68B] = _492;
  _501 = MEM[(int32_t *)t_10(D) + 72B];
  _503 = MEM[(const int32_t *)u_9(D) + 72B];
  x_504 = _501 ^ _503;
  x.12_505 = (unsigned int) x_504;
  _506 = b_36 & x.12_505;
  x_507 = (int32_t) _506;
  _508 = _501 ^ x_507;
  MEM[(int32_t *)t_10(D) + 72B] = _508;
  _135 = MEM[(int32_t *)t_10(D) + 76B];
  _137 = MEM[(const int32_t *)u_9(D) + 76B];
  x_138 = _135 ^ _137;
  x.12_139 = (unsigned int) x_138;
  _140 = b_36 & x.12_139;
  x_141 = (int32_t) _140;
  _142 = _135 ^ x_141;
  MEM[(int32_t *)t_10(D) + 76B] = _142;

  <bb 8> [local count: 97603132]:
  _93 = u_9(D) + 96;
  _92 = t_10(D) + 80;
  _91 = _92 >= _93;
  _90 = t_10(D) + 96;
  _89 = u_9(D) + 80;
  _88 = _89 >= _90;
  _87 = _88 | _91;
  if (_87 != 0)
    goto <bb 9>; [80.00%]
  else
    goto <bb 10>; [20.00%]

  <bb 9> [local count: 78082506]:
  vect_cst__113 = {b_36, b_36, b_36, b_36};
  vect__15.284_356 = MEM[(int32_t *)t_10(D) + 80B];
  vect__17.287_357 = MEM[(const int32_t *)u_9(D) + 80B];
  vect_x_18.288_358 = vect__15.284_356 ^ vect__17.287_357;
  vect_x.289_359 = VIEW_CONVERT_EXPR<vector(4) unsigned int>(vect_x_18.288_358);
  vect__20.290_360 = vect_cst__113 & vect_x.289_359;
  vect_x_21.291_361 = VIEW_CONVERT_EXPR<vector(4) int>(vect__20.290_360);
  vect__22.292_362 = vect__15.284_356 ^ vect_x_21.291_361;
  MEM[(int32_t *)t_10(D) + 80B] = vect__22.292_362;
  vect__15.284_106 = MEM[(int32_t *)t_10(D) + 96B];
  vect__17.287_102 = MEM[(const int32_t *)u_9(D) + 96B];
  vect_x_18.288_101 = vect__17.287_102 ^ vect__15.284_106;
  vect_x.289_112 = VIEW_CONVERT_EXPR<vector(4) unsigned int>(vect_x_18.288_101);
  vect__20.290_114 = vect_x.289_112 & vect_cst__113;
  vect_x_21.291_115 = VIEW_CONVERT_EXPR<vector(4) int>(vect__20.290_114);
  vect__22.292_116 = vect__15.284_106 ^ vect_x_21.291_115;
  MEM[(int32_t *)t_10(D) + 96B] = vect__22.292_116;
  _340 = MEM[(int32_t *)t_10(D) + 112B];
  _342 = MEM[(const int32_t *)u_9(D) + 112B];
  x_343 = _340 ^ _342;
  x.12_344 = (unsigned int) x_343;
  _345 = b_36 & x.12_344;
  x_346 = (int32_t) _345;
  _347 = _340 ^ x_346;
  MEM[(int32_t *)t_10(D) + 112B] = _347;
  _57 = MEM[(int32_t *)t_10(D) + 116B];
  _55 = MEM[(const int32_t *)u_9(D) + 116B];
  x_51 = _55 ^ _57;
  x.12_50 = (unsigned int) x_51;
  _49 = b_36 & x.12_50;
  x_37 = (int32_t) _49;
  _24 = x_37 ^ _57;
  MEM[(int32_t *)t_10(D) + 116B] = _24;
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 19520627]:
  _164 = MEM[(int32_t *)t_10(D) + 80B];
  _68 = MEM[(const int32_t *)u_9(D) + 80B];
  x_207 = _68 ^ _164;
  x.12_224 = (unsigned int) x_207;
  _95 = b_36 & x.12_224;
  x_69 = (int32_t) _95;
  _38 = x_69 ^ _164;
  MEM[(int32_t *)t_10(D) + 80B] = _38;
  _47 = MEM[(int32_t *)t_10(D) + 84B];
  _94 = MEM[(const int32_t *)u_9(D) + 84B];
  x_25 = _47 ^ _94;
  x.12_26 = (unsigned int) x_25;
  _27 = x.12_26 & b_36;
  x_28 = (int32_t) _27;
  _29 = x_28 ^ _47;
  MEM[(int32_t *)t_10(D) + 84B] = _29;
  _14 = MEM[(int32_t *)t_10(D) + 88B];
  _16 = MEM[(const int32_t *)u_9(D) + 88B];
  x_17 = _14 ^ _16;
  x.12_18 = (unsigned int) x_17;
  _19 = x.12_18 & b_36;
  x_20 = (int32_t) _19;
  _21 = _14 ^ x_20;
  MEM[(int32_t *)t_10(D) + 88B] = _21;
  _244 = MEM[(int32_t *)t_10(D) + 92B];
  _246 = MEM[(const int32_t *)u_9(D) + 92B];
  x_247 = _244 ^ _246;
  x.12_248 = (unsigned int) x_247;
  _249 = b_36 & x.12_248;
  x_250 = (int32_t) _249;
  _251 = _244 ^ x_250;
  MEM[(int32_t *)t_10(D) + 92B] = _251;
  _260 = MEM[(int32_t *)t_10(D) + 96B];
  _262 = MEM[(const int32_t *)u_9(D) + 96B];
  x_263 = _260 ^ _262;
  x.12_264 = (unsigned int) x_263;
  _265 = b_36 & x.12_264;
  x_266 = (int32_t) _265;
  _267 = _260 ^ x_266;
  MEM[(int32_t *)t_10(D) + 96B] = _267;
  _276 = MEM[(int32_t *)t_10(D) + 100B];
  _278 = MEM[(const int32_t *)u_9(D) + 100B];
  x_279 = _276 ^ _278;
  x.12_280 = (unsigned int) x_279;
  _281 = b_36 & x.12_280;
  x_282 = (int32_t) _281;
  _283 = _276 ^ x_282;
  MEM[(int32_t *)t_10(D) + 100B] = _283;
  _292 = MEM[(int32_t *)t_10(D) + 104B];
  _294 = MEM[(const int32_t *)u_9(D) + 104B];
  x_295 = _292 ^ _294;
  x.12_296 = (unsigned int) x_295;
  _297 = b_36 & x.12_296;
  x_298 = (int32_t) _297;
  _299 = _292 ^ x_298;
  MEM[(int32_t *)t_10(D) + 104B] = _299;
  _308 = MEM[(int32_t *)t_10(D) + 108B];
  _310 = MEM[(const int32_t *)u_9(D) + 108B];
  x_311 = _308 ^ _310;
  x.12_312 = (unsigned int) x_311;
  _313 = b_36 & x.12_312;
  x_314 = (int32_t) _313;
  _315 = _308 ^ x_314;
  MEM[(int32_t *)t_10(D) + 108B] = _315;
  _324 = MEM[(int32_t *)t_10(D) + 112B];
  _326 = MEM[(const int32_t *)u_9(D) + 112B];
  x_327 = _324 ^ _326;
  x.12_328 = (unsigned int) x_327;
  _329 = b_36 & x.12_328;
  x_330 = (int32_t) _329;
  _331 = _324 ^ x_330;
  MEM[(int32_t *)t_10(D) + 112B] = _331;
  _81 = MEM[(int32_t *)t_10(D) + 116B];
  _79 = MEM[(const int32_t *)u_9(D) + 116B];
  x_78 = _79 ^ _81;
  x.12_77 = (unsigned int) x_78;
  _76 = b_36 & x.12_77;
  x_75 = (int32_t) _76;
  _74 = x_75 ^ _81;
  MEM[(int32_t *)t_10(D) + 116B] = _74;

  <bb 11> [local count: 97603131]:
  return;

}



;; Function slide (slide, funcdef_no=414, decl_uid=10968, cgraph_uid=414, symbol_order=423)

slide (signed char * r, const uint8_t * a)
{
  unsigned long ivtmp.358;
  unsigned long ivtmp.351;
  unsigned long ivtmp.343;
  unsigned long ivtmp.329;
  int b;
  int i;
  int _1;
  sizetype _2;
  const uint8_t * _3;
  unsigned char _4;
  int _5;
  int _6;
  int _7;
  signed char _8;
  unsigned long _9;
  signed char _11;
  signed char _14;
  signed char _18;
  signed char _19;
  int _20;
  int _21;
  int _22;
  int _23;
  unsigned char _24;
  unsigned char _25;
  unsigned char _26;
  signed char _27;
  int _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  signed char _32;
  signed char * _34;
  signed char _35;
  unsigned int _37;
  unsigned int _38;
  unsigned long _60;
  unsigned int _64;
  unsigned long _65;
  unsigned long _69;
  unsigned long _88;
  void * _98;
  unsigned long _103;
  unsigned int _104;
  unsigned int _109;

  <bb 2> [local count: 7136370]:

  <bb 3> [local count: 706500602]:
  # ivtmp.358_107 = PHI <0(2), ivtmp.358_108(3)>
  i_77 = (int) ivtmp.358_107;
  _1 = i_77 >> 3;
  _2 = (sizetype) _1;
  _3 = a_48(D) + _2;
  _4 = *_3;
  _5 = (int) _4;
  _6 = i_77 & 7;
  _7 = _5 >> _6;
  _8 = (signed char) _7;
  _11 = _8 & 1;
  MEM[base: r_49(D), index: ivtmp.358_107, offset: 0B] = _11;
  ivtmp.358_108 = ivtmp.358_107 + 1;
  if (ivtmp.358_108 != 256)
    goto <bb 3>; [98.99%]
  else
    goto <bb 4>; [1.01%]

  <bb 4> [local count: 706500486]:
  # ivtmp.351_62 = PHI <0(3), ivtmp.351_61(6)>
  _14 = MEM[base: r_49(D), index: ivtmp.351_62, offset: 0B];
  if (_14 != 0)
    goto <bb 5>; [27.00%]
  else
    goto <bb 6>; [73.00%]

  <bb 5> [local count: 190755134]:
  _60 = (unsigned long) r_49(D);
  _103 = _60 + ivtmp.351_62;
  goto <bb 17>; [100.00%]

  <bb 6> [local count: 706500486]:
  ivtmp.351_61 = ivtmp.351_62 + 1;
  if (ivtmp.351_61 != 256)
    goto <bb 4>; [98.99%]
  else
    goto <bb 18>; [1.01%]

  <bb 7> [local count: 883164810]:
  _98 = (void *) ivtmp.343_46;
  _18 = MEM[base: _98, offset: 1B];
  if (_18 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 8> [local count: 441582405]:
  _19 = MEM[base: r_49(D), index: ivtmp.351_62, offset: 0B];
  _20 = (int) _19;
  _21 = (int) _18;
  _22 = _21 << b_79;
  _23 = _20 + _22;
  if (_23 <= 15)
    goto <bb 9>; [73.00%]
  else
    goto <bb 10>; [27.00%]

  <bb 9> [local count: 322355156]:
  _24 = (unsigned char) _19;
  _25 = (unsigned char) _22;
  _26 = _24 + _25;
  _27 = (signed char) _26;
  MEM[base: r_49(D), index: ivtmp.351_62, offset: 0B] = _27;
  MEM[base: _98, offset: 1B] = 0;
  goto <bb 16>; [100.00%]

  <bb 10> [local count: 119227249]:
  _28 = _20 - _22;
  if (_28 >= -15)
    goto <bb 11>; [96.34%]
  else
    goto <bb 6>; [3.66%]

  <bb 11> [local count: 114863532]:
  _29 = (unsigned char) _19;
  _30 = (unsigned char) _22;
  _31 = _29 - _30;
  _32 = (signed char) _31;
  MEM[base: r_49(D), index: ivtmp.351_62, offset: 0B] = _32;
  _88 = ivtmp.343_46 + 1;
  _109 = 255 - _104;
  _64 = _109 - _38;
  _69 = (unsigned long) _64;
  _9 = ivtmp.343_46 + 2;
  _65 = _9 + _69;

  <bb 12> [local count: 1014686023]:
  # ivtmp.329_92 = PHI <_88(11), ivtmp.329_91(14)>
  _34 = (signed char *) ivtmp.329_92;
  _35 = MEM[base: _34, offset: 0B];
  if (_35 == 0)
    goto <bb 13>; [5.50%]
  else
    goto <bb 14>; [94.50%]

  <bb 13> [local count: 55807731]:
  *_34 = 1;
  goto <bb 16>; [100.00%]

  <bb 14> [local count: 958878293]:
  MEM[base: _34, offset: 0B] = 0;
  ivtmp.329_91 = ivtmp.329_92 + 1;
  if (_65 != ivtmp.329_91)
    goto <bb 12>; [93.84%]
  else
    goto <bb 15>; [6.16%]

  <bb 15> [local count: 500638205]:

  <bb 16> [local count: 878801092]:
  b_58 = b_79 + 1;
  ivtmp.343_44 = ivtmp.343_46 + 1;
  if (b_58 != 7)
    goto <bb 17>; [82.61%]
  else
    goto <bb 6>; [17.39%]

  <bb 17> [local count: 916716639]:
  # b_79 = PHI <1(5), b_58(16)>
  # ivtmp.343_46 = PHI <_103(5), ivtmp.343_44(16)>
  _104 = (unsigned int) ivtmp.351_62;
  _38 = (unsigned int) b_79;
  _37 = _38 + _104;
  if (_37 <= 255)
    goto <bb 7>; [96.34%]
  else
    goto <bb 6>; [3.66%]

  <bb 18> [local count: 7136369]:
  return;

}



;; Function x25519_sc_reduce (x25519_sc_reduce, funcdef_no=416, decl_uid=11006, cgraph_uid=416, symbol_order=426)

x25519_sc_reduce (uint8_t * s)
{
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  int64_t carry16;
  int64_t carry15;
  int64_t carry14;
  int64_t carry13;
  int64_t carry12;
  int64_t carry11;
  int64_t carry10;
  int64_t carry9;
  int64_t carry8;
  int64_t carry7;
  int64_t carry6;
  int64_t carry5;
  int64_t carry4;
  int64_t carry3;
  int64_t carry2;
  int64_t carry1;
  int64_t carry0;
  int64_t s23;
  int64_t s22;
  int64_t s21;
  int64_t s20;
  int64_t s19;
  int64_t s18;
  int64_t s17;
  int64_t s16;
  int64_t s15;
  int64_t s14;
  int64_t s13;
  int64_t s12;
  int64_t s11;
  int64_t s10;
  int64_t s9;
  int64_t s8;
  int64_t s7;
  int64_t s6;
  int64_t s5;
  int64_t s4;
  int64_t s3;
  int64_t s2;
  int64_t s1;
  int64_t s0;
  long int _1;
  long unsigned int _2;
  long int _3;
  long unsigned int _4;
  long int _5;
  long unsigned int _6;
  long int _7;
  long unsigned int _8;
  long int _9;
  long unsigned int _10;
  long int _11;
  long unsigned int _12;
  long int _13;
  long unsigned int _14;
  long int _15;
  long int _16;
  long unsigned int _17;
  long int _18;
  long unsigned int _19;
  long int _20;
  long unsigned int _21;
  long int _22;
  long unsigned int _23;
  long int _24;
  long unsigned int _25;
  long int _26;
  long unsigned int _27;
  long int _28;
  long unsigned int _29;
  long int _30;
  long int _31;
  long unsigned int _32;
  long int _33;
  long unsigned int _34;
  long int _35;
  long unsigned int _36;
  long int _37;
  long unsigned int _38;
  long int _39;
  long unsigned int _40;
  long int _41;
  long unsigned int _42;
  long int _43;
  long unsigned int _44;
  long int _45;
  long int _46;
  long int _47;
  long int _48;
  long int _49;
  long int _50;
  long int _51;
  long int _52;
  long int _53;
  long int _54;
  long int _55;
  long int _56;
  long int _57;
  long int _58;
  long int _59;
  long int _60;
  long int _61;
  long int _62;
  long int _63;
  long int _64;
  long int _65;
  long int _66;
  long int _67;
  long int _68;
  long int _69;
  long int _70;
  long int _71;
  long int _72;
  long int _73;
  long int _74;
  long int _75;
  long int _76;
  long int _77;
  long int _78;
  long int _79;
  long int _80;
  long int _81;
  long int _82;
  long int _83;
  long int _84;
  long int _85;
  long int _86;
  long int _87;
  long int _88;
  long int _89;
  long int _90;
  long int _91;
  long int _92;
  long int _93;
  long int _94;
  long int _95;
  long int _96;
  long int _97;
  long int _98;
  long int _99;
  long int _100;
  long int _101;
  long int _102;
  long int _103;
  long int _104;
  long int _105;
  long int _106;
  long int _107;
  long int _108;
  long int _109;
  long int _110;
  long int _111;
  long int _112;
  long int _113;
  long int _114;
  long int _115;
  long int _116;
  long int _117;
  long int _118;
  long int _119;
  long int _120;
  long int _121;
  long int _122;
  long int _123;
  long int _124;
  long int _125;
  long int _126;
  long int _127;
  long int _128;
  long int _129;
  long int _130;
  long int _131;
  long int _132;
  long int _133;
  long int _134;
  long int _135;
  long int _136;
  long int _137;
  long int _138;
  long int _139;
  long int _140;
  long int _141;
  long int _142;
  long int _143;
  long int _144;
  long int _145;
  long int _146;
  long int _147;
  long int _148;
  long int _149;
  long int _150;
  long int _151;
  long int _152;
  long int _153;
  long int _154;
  long int _155;
  long int _156;
  long int _157;
  long int _158;
  long int _159;
  long int _160;
  long int _161;
  long int _162;
  long int _163;
  long int _164;
  long int _165;
  long int _166;
  long int _167;
  long int _168;
  long int _169;
  long int _170;
  long int _171;
  long int _172;
  long int _173;
  long int _174;
  long int _175;
  long int _176;
  long int _177;
  long int _178;
  long int _179;
  long int _180;
  long int _181;
  long int _182;
  long int _183;
  long int _184;
  long int _185;
  long int _186;
  long int _187;
  long int _188;
  long int _189;
  long int _190;
  long int _191;
  long int _192;
  long int _193;
  long int _194;
  long int _195;
  long int _196;
  long int _197;
  long int _201;
  signed char _202;
  long int _203;
  signed char _204;
  signed char _205;
  unsigned char _206;
  long int _207;
  unsigned char _208;
  long int _209;
  unsigned char _210;
  long int _211;
  signed char _212;
  long int _213;
  signed char _214;
  signed char _215;
  unsigned char _216;
  long int _217;
  unsigned char _218;
  long int _219;
  signed char _220;
  long int _221;
  signed char _222;
  signed char _223;
  unsigned char _224;
  long int _225;
  unsigned char _226;
  long int _227;
  unsigned char _228;
  long int _229;
  signed char _230;
  long int _231;
  signed char _232;
  signed char _233;
  unsigned char _234;
  long int _235;
  unsigned char _236;
  long int _237;
  unsigned char _238;
  long int _239;
  signed char _240;
  long int _241;
  signed char _242;
  signed char _243;
  unsigned char _244;
  long int _245;
  unsigned char _246;
  long int _247;
  signed char _248;
  long int _249;
  signed char _250;
  signed char _251;
  unsigned char _252;
  long int _253;
  unsigned char _254;
  long int _255;
  unsigned char _256;
  long int _257;
  signed char _258;
  long int _259;
  signed char _260;
  signed char _261;
  unsigned char _262;
  long int _263;
  unsigned char _264;
  long int _265;
  unsigned char _266;
  long int _270;
  signed char _271;
  long int _272;
  signed char _273;
  signed char _274;
  unsigned char _275;
  long int _276;
  unsigned char _277;
  long int _278;
  unsigned char _279;
  long int _280;
  signed char _281;
  long int _282;
  signed char _283;
  signed char _284;
  unsigned char _285;
  long int _286;
  unsigned char _287;
  long int _288;
  signed char _289;
  long int _290;
  signed char _291;
  signed char _292;
  unsigned char _293;
  long int _294;
  unsigned char _295;
  long int _296;
  unsigned char _297;
  long int _298;
  unsigned char _299;
  unsigned char _600;
  long unsigned int _601;
  long unsigned int _602;
  unsigned char _604;
  long unsigned int _605;
  long unsigned int _606;
  unsigned char _616;
  long unsigned int _617;
  unsigned char _632;
  long unsigned int _633;
  long unsigned int _634;
  unsigned char _636;
  long unsigned int _637;
  long unsigned int _638;
  unsigned char _648;
  long unsigned int _649;
  unsigned char _652;
  unsigned char _654;
  long unsigned int _655;
  long unsigned int _656;
  unsigned char _658;
  long unsigned int _659;
  long unsigned int _660;
  unsigned char _662;
  long unsigned int _663;
  long unsigned int _664;
  unsigned char _666;
  long unsigned int _667;
  long unsigned int _668;
  unsigned char _678;
  long unsigned int _679;
  unsigned char _682;
  long unsigned int _683;
  long unsigned int _684;
  unsigned char _686;
  long unsigned int _687;
  long unsigned int _688;
  unsigned short _690;
  unsigned int load_dst_693;
  unsigned char _698;
  long unsigned int _699;
  unsigned short patt_702;
  unsigned int _703;
  unsigned int patt_704;
  unsigned int load_dst_705;
  unsigned int patt_706;
  unsigned int _707;
  unsigned short _708;
  unsigned int _709;
  unsigned int patt_710;
  unsigned int patt_711;
  unsigned short _712;
  unsigned char _714;
  long unsigned int _715;
  long unsigned int _716;
  unsigned int load_dst_717;
  unsigned char _718;
  long unsigned int _719;
  long unsigned int _720;
  unsigned short patt_722;
  unsigned int _723;
  unsigned int _724;
  unsigned int load_dst_725;
  unsigned short _726;
  unsigned short patt_727;
  unsigned int _728;
  unsigned int _729;
  unsigned char _730;
  long unsigned int _731;
  unsigned short _732;
  unsigned char _734;
  unsigned char _736;
  long unsigned int _737;
  long unsigned int _738;
  unsigned int load_dst_739;
  unsigned char _740;
  long unsigned int _741;
  long unsigned int _742;
  unsigned char _744;
  long unsigned int _745;
  long unsigned int _746;
  unsigned int load_dst_747;
  unsigned char _748;
  long unsigned int _749;
  long unsigned int _750;
  unsigned int patt_752;
  unsigned int patt_753;
  unsigned int _754;
  unsigned int load_dst_755;
  unsigned short _756;
  unsigned short patt_757;
  unsigned int _758;
  unsigned int _759;
  unsigned char _760;
  long unsigned int _761;
  unsigned short _762;
  unsigned char _764;
  long unsigned int _765;
  long unsigned int _766;
  unsigned int load_dst_767;
  unsigned char _768;
  long unsigned int _769;
  long unsigned int _770;
  unsigned int _772;
  unsigned short _773;
  unsigned short patt_774;
  unsigned int load_dst_775;
  unsigned int _776;
  unsigned int patt_777;
  unsigned int _778;
  unsigned short patt_779;
  unsigned char _780;
  long unsigned int _781;
  unsigned int _782;
  unsigned int patt_784;
  unsigned int patt_785;
  unsigned int _786;
  unsigned int load_dst_787;
  unsigned short _788;
  unsigned short patt_789;
  unsigned int _790;
  unsigned int _791;
  unsigned short _792;
  unsigned short patt_793;
  unsigned int _794;
  unsigned char _796;
  long unsigned int _797;
  long unsigned int _798;
  unsigned int load_dst_799;
  unsigned char _800;
  long unsigned int _801;
  long unsigned int _802;
  unsigned int _804;
  unsigned short _805;
  unsigned short patt_806;
  unsigned int load_dst_807;
  unsigned int _808;
  unsigned int patt_809;
  unsigned int _810;
  unsigned short patt_811;
  unsigned char _812;
  long unsigned int _813;
  unsigned int _814;
  unsigned char _816;
  unsigned char _818;
  long unsigned int _819;
  long unsigned int _820;
  unsigned int load_dst_821;
  unsigned char _822;
  long unsigned int _823;
  long unsigned int _824;
  long unsigned int _828;
  long unsigned int _831;
  long unsigned int _833;
  long unsigned int _834;
  long unsigned int _836;
  unsigned short patt_838;
  long unsigned int _839;
  unsigned int patt_840;
  long unsigned int _841;
  long unsigned int _842;
  unsigned int patt_843;
  long unsigned int _844;
  unsigned short _845;
  unsigned int patt_846;
  long unsigned int _847;
  unsigned short _848;
  long unsigned int _849;

  <bb 2> [local count: 1073741825]:
  _816 = MEM[(const uint8_t *)s_301(D)];
  result_817 = (uint64_t) _816;
  _818 = MEM[(const uint8_t *)s_301(D) + 1B];
  _819 = (long unsigned int) _818;
  _820 = _819 << 8;
  load_dst_693 = MEM[(const uint8_t *)s_301(D) + 2B];
  result_815 = (uint64_t) load_dst_693;
  _822 = MEM[(const uint8_t *)s_301(D) + 2B];
  _823 = (long unsigned int) _822;
  _824 = _823 << 16;
  _849 = _820 | _824;
  result_825 = result_817 | _849;
  _1 = (long int) result_825;
  s0_303 = _1 & 2097151;
  _812 = MEM[(const uint8_t *)s_301(D) + 5B];
  _813 = (long unsigned int) _812;
  _2 = result_815 >> 5;
  _3 = (long int) _2;
  s1_305 = _3 & 2097151;
  _796 = MEM[(const uint8_t *)s_301(D) + 6B];
  _797 = (long unsigned int) _796;
  _798 = _797 << 8;
  load_dst_705 = MEM[(const uint8_t *)s_301(D) + 7B];
  result_795 = (uint64_t) load_dst_705;
  _800 = MEM[(const uint8_t *)s_301(D) + 7B];
  _801 = (long unsigned int) _800;
  _802 = _801 << 16;
  _847 = _798 | _802;
  result_803 = _813 | _847;
  _4 = result_803 >> 2;
  _5 = (long int) _4;
  s2_307 = _5 & 2097151;
  load_dst_717 = MEM[(const uint8_t *)s_301(D) + 10B];
  result_783 = (uint64_t) load_dst_717;
  _6 = result_795 >> 7;
  _7 = (long int) _6;
  s3_309 = _7 & 2097151;
  _780 = MEM[(const uint8_t *)s_301(D) + 13B];
  _781 = (long unsigned int) _780;
  _8 = result_783 >> 4;
  _9 = (long int) _8;
  s4_311 = _9 & 2097151;
  _764 = MEM[(const uint8_t *)s_301(D) + 14B];
  _765 = (long unsigned int) _764;
  _766 = _765 << 8;
  load_dst_725 = MEM[(const uint8_t *)s_301(D) + 15B];
  result_763 = (uint64_t) load_dst_725;
  _768 = MEM[(const uint8_t *)s_301(D) + 15B];
  _769 = (long unsigned int) _768;
  _770 = _769 << 16;
  _844 = _766 | _770;
  result_771 = _781 | _844;
  _10 = result_771 >> 1;
  _11 = (long int) _10;
  s5_313 = _11 & 2097151;
  _760 = MEM[(const uint8_t *)s_301(D) + 18B];
  _761 = (long unsigned int) _760;
  _12 = result_763 >> 6;
  _13 = (long int) _12;
  s6_315 = _13 & 2097151;
  _744 = MEM[(const uint8_t *)s_301(D) + 19B];
  _745 = (long unsigned int) _744;
  _746 = _745 << 8;
  _748 = MEM[(const uint8_t *)s_301(D) + 20B];
  _749 = (long unsigned int) _748;
  _750 = _749 << 16;
  _842 = _746 | _750;
  result_751 = _761 | _842;
  _14 = result_751 >> 3;
  _15 = (long int) _14;
  _734 = MEM[(const uint8_t *)s_301(D) + 21B];
  result_735 = (uint64_t) _734;
  _736 = MEM[(const uint8_t *)s_301(D) + 22B];
  _737 = (long unsigned int) _736;
  _738 = _737 << 8;
  load_dst_739 = MEM[(const uint8_t *)s_301(D) + 23B];
  result_733 = (uint64_t) load_dst_739;
  _740 = MEM[(const uint8_t *)s_301(D) + 23B];
  _741 = (long unsigned int) _740;
  _742 = _741 << 16;
  _841 = _738 | _742;
  result_743 = result_735 | _841;
  _16 = (long int) result_743;
  s8_317 = _16 & 2097151;
  _730 = MEM[(const uint8_t *)s_301(D) + 26B];
  _731 = (long unsigned int) _730;
  _17 = result_733 >> 5;
  _18 = (long int) _17;
  s9_318 = _18 & 2097151;
  _714 = MEM[(const uint8_t *)s_301(D) + 27B];
  _715 = (long unsigned int) _714;
  _716 = _715 << 8;
  load_dst_747 = MEM[(const uint8_t *)s_301(D) + 28B];
  result_713 = (uint64_t) load_dst_747;
  _718 = MEM[(const uint8_t *)s_301(D) + 28B];
  _719 = (long unsigned int) _718;
  _720 = _719 << 16;
  _839 = _716 | _720;
  result_721 = _731 | _839;
  _19 = result_721 >> 2;
  _20 = (long int) _19;
  s10_320 = _20 & 2097151;
  load_dst_755 = MEM[(const uint8_t *)s_301(D) + 31B];
  result_701 = (uint64_t) load_dst_755;
  _21 = result_713 >> 7;
  _22 = (long int) _21;
  s11_322 = _22 & 2097151;
  _698 = MEM[(const uint8_t *)s_301(D) + 34B];
  _699 = (long unsigned int) _698;
  _23 = result_701 >> 4;
  _24 = (long int) _23;
  s12_324 = _24 & 2097151;
  _682 = MEM[(const uint8_t *)s_301(D) + 35B];
  _683 = (long unsigned int) _682;
  _684 = _683 << 8;
  load_dst_767 = MEM[(const uint8_t *)s_301(D) + 36B];
  result_681 = (uint64_t) load_dst_767;
  _686 = MEM[(const uint8_t *)s_301(D) + 36B];
  _687 = (long unsigned int) _686;
  _688 = _687 << 16;
  _836 = _684 | _688;
  result_689 = _699 | _836;
  _25 = result_689 >> 1;
  _26 = (long int) _25;
  s13_326 = _26 & 2097151;
  _678 = MEM[(const uint8_t *)s_301(D) + 39B];
  _679 = (long unsigned int) _678;
  _27 = result_681 >> 6;
  _28 = (long int) _27;
  s14_328 = _28 & 2097151;
  _662 = MEM[(const uint8_t *)s_301(D) + 40B];
  _663 = (long unsigned int) _662;
  _664 = _663 << 8;
  _666 = MEM[(const uint8_t *)s_301(D) + 41B];
  _667 = (long unsigned int) _666;
  _668 = _667 << 16;
  _834 = _664 | _668;
  result_669 = _679 | _834;
  _29 = result_669 >> 3;
  _30 = (long int) _29;
  _652 = MEM[(const uint8_t *)s_301(D) + 42B];
  result_653 = (uint64_t) _652;
  _654 = MEM[(const uint8_t *)s_301(D) + 43B];
  _655 = (long unsigned int) _654;
  _656 = _655 << 8;
  load_dst_775 = MEM[(const uint8_t *)s_301(D) + 44B];
  result_651 = (uint64_t) load_dst_775;
  _658 = MEM[(const uint8_t *)s_301(D) + 44B];
  _659 = (long unsigned int) _658;
  _660 = _659 << 16;
  _833 = _656 | _660;
  result_661 = result_653 | _833;
  _31 = (long int) result_661;
  s16_331 = _31 & 2097151;
  _648 = MEM[(const uint8_t *)s_301(D) + 47B];
  _649 = (long unsigned int) _648;
  _32 = result_651 >> 5;
  _33 = (long int) _32;
  s17_333 = _33 & 2097151;
  _632 = MEM[(const uint8_t *)s_301(D) + 48B];
  _633 = (long unsigned int) _632;
  _634 = _633 << 8;
  load_dst_787 = MEM[(const uint8_t *)s_301(D) + 49B];
  result_631 = (uint64_t) load_dst_787;
  _636 = MEM[(const uint8_t *)s_301(D) + 49B];
  _637 = (long unsigned int) _636;
  _638 = _637 << 16;
  _831 = _634 | _638;
  result_639 = _649 | _831;
  _34 = result_639 >> 2;
  _35 = (long int) _34;
  s18_335 = _35 & 2097151;
  load_dst_799 = MEM[(const uint8_t *)s_301(D) + 52B];
  result_619 = (uint64_t) load_dst_799;
  _36 = result_631 >> 7;
  _37 = (long int) _36;
  s19_337 = _37 & 2097151;
  _616 = MEM[(const uint8_t *)s_301(D) + 55B];
  _617 = (long unsigned int) _616;
  _38 = result_619 >> 4;
  _39 = (long int) _38;
  s20_339 = _39 & 2097151;
  _600 = MEM[(const uint8_t *)s_301(D) + 56B];
  _601 = (long unsigned int) _600;
  _602 = _601 << 8;
  load_dst_807 = MEM[(const uint8_t *)s_301(D) + 57B];
  result_599 = (uint64_t) load_dst_807;
  _604 = MEM[(const uint8_t *)s_301(D) + 57B];
  _605 = (long unsigned int) _604;
  _606 = _605 << 16;
  _828 = _602 | _606;
  result_607 = _617 | _828;
  _40 = result_607 >> 1;
  _41 = (long int) _40;
  s21_341 = _41 & 2097151;
  _42 = result_599 >> 6;
  _43 = (long int) _42;
  s22_342 = _43 & 2097151;
  load_dst_821 = MEM[(const uint8_t *)s_301(D) + 60B];
  result_319 = (uint64_t) load_dst_821;
  _44 = result_319 >> 3;
  s23_343 = (int64_t) _44;
  _45 = s23_343 * 666643;
  s11_344 = _45 + s11_322;
  _46 = s23_343 * 470296;
  s12_345 = _46 + s12_324;
  _47 = s23_343 * 654183;
  s13_346 = _47 + s13_326;
  _48 = s23_343 * -997805;
  s14_347 = _48 + s14_328;
  _49 = s23_343 * 136657;
  s15_348 = _30 + _49;
  _50 = s23_343 * -683901;
  s16_349 = _50 + s16_331;
  _51 = s22_342 * 666643;
  s10_350 = _51 + s10_320;
  _52 = s22_342 * 470296;
  s11_351 = _52 + s11_344;
  _53 = s22_342 * 654183;
  s12_352 = _53 + s12_345;
  _54 = s22_342 * -997805;
  s13_353 = _54 + s13_346;
  _55 = s22_342 * 136657;
  s14_354 = _55 + s14_347;
  _56 = s22_342 * -683901;
  s15_355 = _56 + s15_348;
  _57 = s21_341 * 666643;
  s9_356 = _57 + s9_318;
  _58 = s21_341 * 470296;
  s10_357 = _58 + s10_350;
  _59 = s21_341 * 654183;
  s11_358 = _59 + s11_351;
  _60 = s21_341 * -997805;
  s12_359 = _60 + s12_352;
  _61 = s21_341 * 136657;
  s13_360 = _61 + s13_353;
  _62 = s21_341 * -683901;
  s14_361 = _62 + s14_354;
  _63 = s20_339 * 666643;
  s8_362 = _63 + s8_317;
  _64 = s20_339 * 470296;
  s9_363 = _64 + s9_356;
  _65 = s20_339 * 654183;
  s10_364 = _65 + s10_357;
  _66 = s20_339 * -997805;
  s11_365 = _66 + s11_358;
  _67 = s20_339 * 136657;
  s12_366 = _67 + s12_359;
  _68 = s20_339 * -683901;
  s13_367 = _68 + s13_360;
  _69 = s19_337 * 666643;
  s7_368 = _15 + _69;
  _70 = s19_337 * 470296;
  s8_369 = _70 + s8_362;
  _71 = s19_337 * 654183;
  s9_370 = _71 + s9_363;
  _72 = s19_337 * -997805;
  s10_371 = _72 + s10_364;
  _73 = s19_337 * 136657;
  s11_372 = _73 + s11_365;
  _74 = s19_337 * -683901;
  s12_373 = _74 + s12_366;
  _75 = s18_335 * 666643;
  s6_374 = _75 + s6_315;
  _76 = s18_335 * 470296;
  s7_375 = _76 + s7_368;
  _77 = s18_335 * 654183;
  s8_376 = _77 + s8_369;
  _78 = s18_335 * -997805;
  s9_377 = _78 + s9_370;
  _79 = s18_335 * 136657;
  s10_378 = _79 + s10_371;
  _80 = s18_335 * -683901;
  s11_379 = _80 + s11_372;
  _81 = s6_374 + 1048576;
  carry6_380 = _81 >> 21;
  s7_381 = s7_375 + carry6_380;
  _82 = carry6_380 * 2097152;
  s6_382 = s6_374 - _82;
  _83 = s8_376 + 1048576;
  carry8_383 = _83 >> 21;
  s9_384 = s9_377 + carry8_383;
  _84 = carry8_383 * 2097152;
  s8_385 = s8_376 - _84;
  _85 = s10_378 + 1048576;
  carry10_386 = _85 >> 21;
  s11_387 = s11_379 + carry10_386;
  _86 = carry10_386 * 2097152;
  s10_388 = s10_378 - _86;
  _87 = s12_373 + 1048576;
  carry12_389 = _87 >> 21;
  s13_390 = s13_367 + carry12_389;
  _88 = carry12_389 * 2097152;
  s12_391 = s12_373 - _88;
  _89 = s14_361 + 1048576;
  carry14_392 = _89 >> 21;
  s15_393 = s15_355 + carry14_392;
  _90 = carry14_392 * 2097152;
  s14_394 = s14_361 - _90;
  _91 = s16_349 + 1048576;
  carry16_395 = _91 >> 21;
  s17_396 = s17_333 + carry16_395;
  _92 = carry16_395 * 2097152;
  s16_397 = s16_349 - _92;
  _93 = s7_381 + 1048576;
  carry7_398 = _93 >> 21;
  s8_399 = s8_385 + carry7_398;
  _94 = carry7_398 * 2097152;
  s7_400 = s7_381 - _94;
  _95 = s9_384 + 1048576;
  carry9_401 = _95 >> 21;
  s10_402 = s10_388 + carry9_401;
  _96 = carry9_401 * 2097152;
  s9_403 = s9_384 - _96;
  _97 = s11_387 + 1048576;
  carry11_404 = _97 >> 21;
  s12_405 = s12_391 + carry11_404;
  _98 = carry11_404 * 2097152;
  s11_406 = s11_387 - _98;
  _99 = s13_390 + 1048576;
  carry13_407 = _99 >> 21;
  s14_408 = s14_394 + carry13_407;
  _100 = carry13_407 * 2097152;
  s13_409 = s13_390 - _100;
  _101 = s15_393 + 1048576;
  carry15_410 = _101 >> 21;
  s16_411 = s16_397 + carry15_410;
  _102 = carry15_410 * 2097152;
  s15_412 = s15_393 - _102;
  _103 = s17_396 * 666643;
  s5_413 = _103 + s5_313;
  _104 = s17_396 * 470296;
  s6_414 = _104 + s6_382;
  _105 = s17_396 * 654183;
  s7_415 = _105 + s7_400;
  _106 = s17_396 * -997805;
  s8_416 = _106 + s8_399;
  _107 = s17_396 * 136657;
  s9_417 = _107 + s9_403;
  _108 = s17_396 * -683901;
  s10_418 = _108 + s10_402;
  _109 = s16_411 * 666643;
  s4_419 = _109 + s4_311;
  _110 = s16_411 * 470296;
  s5_420 = _110 + s5_413;
  _111 = s16_411 * 654183;
  s6_421 = _111 + s6_414;
  _112 = s16_411 * -997805;
  s7_422 = _112 + s7_415;
  _113 = s16_411 * 136657;
  s8_423 = _113 + s8_416;
  _114 = s16_411 * -683901;
  s9_424 = _114 + s9_417;
  _115 = s15_412 * 666643;
  s3_425 = _115 + s3_309;
  _116 = s15_412 * 470296;
  s4_426 = _116 + s4_419;
  _117 = s15_412 * 654183;
  s5_427 = _117 + s5_420;
  _118 = s15_412 * -997805;
  s6_428 = _118 + s6_421;
  _119 = s15_412 * 136657;
  s7_429 = _119 + s7_422;
  _120 = s15_412 * -683901;
  s8_430 = _120 + s8_423;
  _121 = s14_408 * 666643;
  s2_431 = _121 + s2_307;
  _122 = s14_408 * 470296;
  s3_432 = _122 + s3_425;
  _123 = s14_408 * 654183;
  s4_433 = _123 + s4_426;
  _124 = s14_408 * -997805;
  s5_434 = _124 + s5_427;
  _125 = s14_408 * 136657;
  s6_435 = _125 + s6_428;
  _126 = s14_408 * -683901;
  s7_436 = _126 + s7_429;
  _127 = s13_409 * 666643;
  s1_437 = _127 + s1_305;
  _128 = s13_409 * 470296;
  s2_438 = _128 + s2_431;
  _129 = s13_409 * 654183;
  s3_439 = _129 + s3_432;
  _130 = s13_409 * -997805;
  s4_440 = _130 + s4_433;
  _131 = s13_409 * 136657;
  s5_441 = _131 + s5_434;
  _132 = s13_409 * -683901;
  s6_442 = _132 + s6_435;
  _133 = s12_405 * 666643;
  s0_443 = _133 + s0_303;
  _134 = s12_405 * 470296;
  s1_444 = _134 + s1_437;
  _135 = s12_405 * 654183;
  s2_445 = _135 + s2_438;
  _136 = s12_405 * -997805;
  s3_446 = _136 + s3_439;
  _137 = s12_405 * 136657;
  s4_447 = _137 + s4_440;
  _138 = s12_405 * -683901;
  s5_448 = _138 + s5_441;
  _139 = s0_443 + 1048576;
  carry0_449 = _139 >> 21;
  s1_450 = s1_444 + carry0_449;
  _140 = carry0_449 * 2097152;
  s0_451 = s0_443 - _140;
  _141 = s2_445 + 1048576;
  carry2_452 = _141 >> 21;
  s3_453 = s3_446 + carry2_452;
  _142 = carry2_452 * 2097152;
  s2_454 = s2_445 - _142;
  _143 = s4_447 + 1048576;
  carry4_455 = _143 >> 21;
  s5_456 = s5_448 + carry4_455;
  _144 = carry4_455 * 2097152;
  s4_457 = s4_447 - _144;
  _145 = s6_442 + 1048576;
  carry6_458 = _145 >> 21;
  s7_459 = s7_436 + carry6_458;
  _146 = carry6_458 * 2097152;
  s6_460 = s6_442 - _146;
  _147 = s8_430 + 1048576;
  carry8_461 = _147 >> 21;
  s9_462 = s9_424 + carry8_461;
  _148 = carry8_461 * 2097152;
  s8_463 = s8_430 - _148;
  _149 = s10_418 + 1048576;
  carry10_464 = _149 >> 21;
  s11_465 = s11_406 + carry10_464;
  _150 = carry10_464 * 2097152;
  s10_466 = s10_418 - _150;
  _151 = s1_450 + 1048576;
  carry1_467 = _151 >> 21;
  s2_468 = s2_454 + carry1_467;
  _152 = carry1_467 * 2097152;
  s1_469 = s1_450 - _152;
  _153 = s3_453 + 1048576;
  carry3_470 = _153 >> 21;
  s4_471 = s4_457 + carry3_470;
  _154 = carry3_470 * 2097152;
  s3_472 = s3_453 - _154;
  _155 = s5_456 + 1048576;
  carry5_473 = _155 >> 21;
  s6_474 = s6_460 + carry5_473;
  _156 = carry5_473 * 2097152;
  s5_475 = s5_456 - _156;
  _157 = s7_459 + 1048576;
  carry7_476 = _157 >> 21;
  s8_477 = s8_463 + carry7_476;
  _158 = carry7_476 * 2097152;
  s7_478 = s7_459 - _158;
  _159 = s9_462 + 1048576;
  carry9_479 = _159 >> 21;
  s10_480 = s10_466 + carry9_479;
  _160 = carry9_479 * 2097152;
  s9_481 = s9_462 - _160;
  _161 = s11_465 + 1048576;
  carry11_482 = _161 >> 21;
  _162 = carry11_482 * 2097152;
  s11_483 = s11_465 - _162;
  _163 = carry11_482 * 666643;
  s0_484 = _163 + s0_451;
  _164 = carry11_482 * 470296;
  s1_485 = _164 + s1_469;
  _165 = carry11_482 * 654183;
  s2_486 = _165 + s2_468;
  _166 = carry11_482 * -997805;
  s3_487 = _166 + s3_472;
  _167 = carry11_482 * 136657;
  s4_488 = _167 + s4_471;
  _168 = carry11_482 * -683901;
  s5_489 = _168 + s5_475;
  carry0_490 = s0_484 >> 21;
  s1_491 = s1_485 + carry0_490;
  _169 = carry0_490 * 2097152;
  s0_492 = s0_484 - _169;
  carry1_493 = s1_491 >> 21;
  s2_494 = s2_486 + carry1_493;
  _170 = carry1_493 * 2097152;
  s1_495 = s1_491 - _170;
  carry2_496 = s2_494 >> 21;
  s3_497 = s3_487 + carry2_496;
  _171 = carry2_496 * 2097152;
  s2_498 = s2_494 - _171;
  carry3_499 = s3_497 >> 21;
  s4_500 = s4_488 + carry3_499;
  _172 = carry3_499 * 2097152;
  s3_501 = s3_497 - _172;
  carry4_502 = s4_500 >> 21;
  s5_503 = s5_489 + carry4_502;
  _173 = carry4_502 * 2097152;
  s4_504 = s4_500 - _173;
  carry5_505 = s5_503 >> 21;
  s6_506 = s6_474 + carry5_505;
  _174 = carry5_505 * 2097152;
  s5_507 = s5_503 - _174;
  carry6_508 = s6_506 >> 21;
  s7_509 = s7_478 + carry6_508;
  _175 = carry6_508 * 2097152;
  s6_510 = s6_506 - _175;
  carry7_511 = s7_509 >> 21;
  s8_512 = s8_477 + carry7_511;
  _176 = carry7_511 * 2097152;
  s7_513 = s7_509 - _176;
  carry8_514 = s8_512 >> 21;
  s9_515 = s9_481 + carry8_514;
  _177 = carry8_514 * 2097152;
  s8_516 = s8_512 - _177;
  carry9_517 = s9_515 >> 21;
  s10_518 = s10_480 + carry9_517;
  _178 = carry9_517 * 2097152;
  s9_519 = s9_515 - _178;
  carry10_520 = s10_518 >> 21;
  s11_521 = s11_483 + carry10_520;
  _179 = carry10_520 * 2097152;
  s10_522 = s10_518 - _179;
  carry11_523 = s11_521 >> 21;
  _180 = carry11_523 * 2097152;
  s11_524 = s11_521 - _180;
  _181 = carry11_523 * 666643;
  s0_525 = _181 + s0_492;
  _182 = carry11_523 * 470296;
  s1_526 = _182 + s1_495;
  _183 = carry11_523 * 654183;
  s2_527 = _183 + s2_498;
  _184 = carry11_523 * -997805;
  s3_528 = _184 + s3_501;
  _185 = carry11_523 * 136657;
  s4_529 = _185 + s4_504;
  _186 = carry11_523 * -683901;
  s5_530 = _186 + s5_507;
  carry0_531 = s0_525 >> 21;
  s1_532 = s1_526 + carry0_531;
  _187 = carry0_531 * 2097152;
  s0_533 = s0_525 - _187;
  carry1_534 = s1_532 >> 21;
  s2_535 = s2_527 + carry1_534;
  _188 = carry1_534 * 2097152;
  s1_536 = s1_532 - _188;
  carry2_537 = s2_535 >> 21;
  s3_538 = s3_528 + carry2_537;
  _189 = carry2_537 * 2097152;
  s2_539 = s2_535 - _189;
  carry3_540 = s3_538 >> 21;
  s4_541 = s4_529 + carry3_540;
  _190 = carry3_540 * 2097152;
  s3_542 = s3_538 - _190;
  carry4_543 = s4_541 >> 21;
  s5_544 = s5_530 + carry4_543;
  _191 = carry4_543 * 2097152;
  s4_545 = s4_541 - _191;
  carry5_546 = s5_544 >> 21;
  s6_547 = s6_510 + carry5_546;
  _192 = carry5_546 * 2097152;
  s5_548 = s5_544 - _192;
  carry6_549 = s6_547 >> 21;
  s7_550 = s7_513 + carry6_549;
  _193 = carry6_549 * 2097152;
  s6_551 = s6_547 - _193;
  carry7_552 = s7_550 >> 21;
  s8_553 = s8_516 + carry7_552;
  _194 = carry7_552 * 2097152;
  s7_554 = s7_550 - _194;
  carry8_555 = s8_553 >> 21;
  s9_556 = s9_519 + carry8_555;
  _195 = carry8_555 * 2097152;
  s8_557 = s8_553 - _195;
  carry9_558 = s9_556 >> 21;
  s10_559 = s10_522 + carry9_558;
  _196 = carry9_558 * 2097152;
  s9_560 = s9_556 - _196;
  carry10_561 = s10_559 >> 21;
  s11_562 = s11_524 + carry10_561;
  _197 = carry10_561 * 2097152;
  s10_563 = s10_559 - _197;
  _712 = (unsigned short) s0_533;
  MEM[(uint8_t *)s_301(D)] = _712;
  _201 = s0_533 >> 16;
  _202 = (signed char) _201;
  _203 = s1_536 << 5;
  _204 = (signed char) _203;
  _205 = _202 | _204;
  _206 = (unsigned char) _205;
  MEM[(uint8_t *)s_301(D) + 2B] = _206;
  _207 = s1_536 >> 3;
  _208 = (unsigned char) _207;
  MEM[(uint8_t *)s_301(D) + 3B] = _208;
  _209 = s1_536 >> 11;
  _210 = (unsigned char) _209;
  MEM[(uint8_t *)s_301(D) + 4B] = _210;
  _211 = s1_536 >> 19;
  _212 = (signed char) _211;
  _213 = s2_539 << 2;
  _214 = (signed char) _213;
  _215 = _212 | _214;
  _216 = (unsigned char) _215;
  MEM[(uint8_t *)s_301(D) + 5B] = _216;
  _217 = s2_539 >> 6;
  _218 = (unsigned char) _217;
  MEM[(uint8_t *)s_301(D) + 6B] = _218;
  _219 = s2_539 >> 14;
  _220 = (signed char) _219;
  _221 = s3_542 << 7;
  _222 = (signed char) _221;
  _223 = _220 | _222;
  _224 = (unsigned char) _223;
  MEM[(uint8_t *)s_301(D) + 7B] = _224;
  _225 = s3_542 >> 1;
  _226 = (unsigned char) _225;
  MEM[(uint8_t *)s_301(D) + 8B] = _226;
  _227 = s3_542 >> 9;
  _228 = (unsigned char) _227;
  MEM[(uint8_t *)s_301(D) + 9B] = _228;
  _229 = s3_542 >> 17;
  _230 = (signed char) _229;
  _231 = s4_545 << 4;
  _232 = (signed char) _231;
  _233 = _230 | _232;
  _234 = (unsigned char) _233;
  MEM[(uint8_t *)s_301(D) + 10B] = _234;
  _235 = s4_545 >> 4;
  _236 = (unsigned char) _235;
  MEM[(uint8_t *)s_301(D) + 11B] = _236;
  _237 = s4_545 >> 12;
  _238 = (unsigned char) _237;
  MEM[(uint8_t *)s_301(D) + 12B] = _238;
  _239 = s4_545 >> 20;
  _240 = (signed char) _239;
  _241 = s5_548 << 1;
  _242 = (signed char) _241;
  _243 = _240 | _242;
  _244 = (unsigned char) _243;
  MEM[(uint8_t *)s_301(D) + 13B] = _244;
  _245 = s5_548 >> 7;
  _246 = (unsigned char) _245;
  MEM[(uint8_t *)s_301(D) + 14B] = _246;
  _247 = s5_548 >> 15;
  _248 = (signed char) _247;
  _249 = s6_551 << 6;
  _250 = (signed char) _249;
  _251 = _248 | _250;
  _252 = (unsigned char) _251;
  MEM[(uint8_t *)s_301(D) + 15B] = _252;
  _253 = s6_551 >> 2;
  _254 = (unsigned char) _253;
  MEM[(uint8_t *)s_301(D) + 16B] = _254;
  _255 = s6_551 >> 10;
  _256 = (unsigned char) _255;
  MEM[(uint8_t *)s_301(D) + 17B] = _256;
  _257 = s6_551 >> 18;
  _258 = (signed char) _257;
  _259 = s7_554 << 3;
  _260 = (signed char) _259;
  _261 = _258 | _260;
  _262 = (unsigned char) _261;
  MEM[(uint8_t *)s_301(D) + 18B] = _262;
  _263 = s7_554 >> 5;
  _264 = (unsigned char) _263;
  MEM[(uint8_t *)s_301(D) + 19B] = _264;
  _265 = s7_554 >> 13;
  _266 = (unsigned char) _265;
  MEM[(uint8_t *)s_301(D) + 20B] = _266;
  _690 = (unsigned short) s8_557;
  MEM[(uint8_t *)s_301(D) + 21B] = _690;
  _270 = s8_557 >> 16;
  _271 = (signed char) _270;
  _272 = s9_560 << 5;
  _273 = (signed char) _272;
  _274 = _271 | _273;
  _275 = (unsigned char) _274;
  MEM[(uint8_t *)s_301(D) + 23B] = _275;
  _276 = s9_560 >> 3;
  _277 = (unsigned char) _276;
  MEM[(uint8_t *)s_301(D) + 24B] = _277;
  _278 = s9_560 >> 11;
  _279 = (unsigned char) _278;
  MEM[(uint8_t *)s_301(D) + 25B] = _279;
  _280 = s9_560 >> 19;
  _281 = (signed char) _280;
  _282 = s10_563 << 2;
  _283 = (signed char) _282;
  _284 = _281 | _283;
  _285 = (unsigned char) _284;
  MEM[(uint8_t *)s_301(D) + 26B] = _285;
  _286 = s10_563 >> 6;
  _287 = (unsigned char) _286;
  MEM[(uint8_t *)s_301(D) + 27B] = _287;
  _288 = s10_563 >> 14;
  _289 = (signed char) _288;
  _290 = s11_562 << 7;
  _291 = (signed char) _290;
  _292 = _289 | _291;
  _293 = (unsigned char) _292;
  MEM[(uint8_t *)s_301(D) + 28B] = _293;
  _294 = s11_562 >> 1;
  _295 = (unsigned char) _294;
  MEM[(uint8_t *)s_301(D) + 29B] = _295;
  _296 = s11_562 >> 9;
  _297 = (unsigned char) _296;
  MEM[(uint8_t *)s_301(D) + 30B] = _297;
  _298 = s11_562 >> 17;
  _299 = (unsigned char) _298;
  MEM[(uint8_t *)s_301(D) + 31B] = _299;
  return;

}



;; Function table_select (table_select, funcdef_no=412, decl_uid=10939, cgraph_uid=412, symbol_order=421)

table_select (struct ge_precomp * t, int pos, signed char b)
{
  const vector(4) int vect__35.369;
  const vector(4) int vect__39.368;
  uint32_t x;
  uint8_t x;
  uint32_t y;
  uint8_t x;
  uint32_t y;
  uint8_t x;
  uint32_t y;
  uint8_t x;
  uint32_t y;
  uint8_t x;
  uint32_t y;
  uint8_t x;
  uint32_t y;
  uint8_t x;
  uint32_t y;
  uint8_t x;
  uint32_t y;
  uint8_t babs;
  struct ge_precomp minust;
  unsigned char b.3_1;
  unsigned char _2;
  signed char _3;
  signed char _4;
  unsigned char _5;
  unsigned char _6;
  int _7;
  const struct ge_precomp * _8;
  int _9;
  const struct ge_precomp * _10;
  int _11;
  const struct ge_precomp * _12;
  int _13;
  const struct ge_precomp * _14;
  int _15;
  const struct ge_precomp * _16;
  int _17;
  const struct ge_precomp * _18;
  int _19;
  const struct ge_precomp * _20;
  int _21;
  const struct ge_precomp * _22;
  sizetype _23;
  sizetype _24;
  int _26;
  int _37;
  int _41;
  int32_t[10] * _47;
  unsigned char _85;
  sizetype _90;
  sizetype _91;
  int32_t[10] * _92;
  int32_t[10] * _94;
  sizetype _102;
  sizetype _107;
  sizetype _110;
  sizetype _113;
  sizetype _116;
  int _122;
  int _126;

  <bb 2> [local count: 97603132]:
  x_83 = (uint32_t) b_27(D);
  x_84 = x_83 >> 31;
  _85 = (unsigned char) x_84;
  b.3_1 = (unsigned char) b_27(D);
  _2 = -_85;
  _3 = (signed char) _2;
  _4 = _3 & b_27(D);
  _5 = (unsigned char) _4;
  _6 = _5 << 1;
  babs_29 = b.3_1 - _6;
  _47 = &MEM[(void *)t_30(D) + 4B];
  __builtin_memset (_47, 0, 36);
  MEM[(int32_t *)t_30(D)] = 1;
  _92 = &t_30(D)->yminusx;
  __builtin_memset (_92, 0, 40);
  MEM[(int32_t *)t_30(D) + 40B] = 1;
  _94 = &t_30(D)->xy2d;
  __builtin_memset (_94, 0, 40);
  x_79 = babs_29 ^ 1;
  y_80 = (uint32_t) x_79;
  y_81 = y_80 + 4294967295;
  y_82 = y_81 >> 31;
  _7 = (int) y_82;
  _90 = (sizetype) pos_33(D);
  _102 = _90 * 960;
  _8 = &k25519Precomp + _102;
  cmov (t_30(D), _8, _7);
  x_75 = babs_29 ^ 2;
  y_76 = (uint32_t) x_75;
  y_77 = y_76 + 4294967295;
  y_78 = y_77 >> 31;
  _9 = (int) y_78;
  _91 = _102 + 120;
  _10 = &k25519Precomp + _91;
  cmov (t_30(D), _10, _9);
  x_71 = babs_29 ^ 3;
  y_72 = (uint32_t) x_71;
  y_73 = y_72 + 4294967295;
  y_74 = y_73 >> 31;
  _11 = (int) y_74;
  _24 = _102 + 240;
  _12 = &k25519Precomp + _24;
  cmov (t_30(D), _12, _11);
  x_67 = babs_29 ^ 4;
  y_68 = (uint32_t) x_67;
  y_69 = y_68 + 4294967295;
  y_70 = y_69 >> 31;
  _13 = (int) y_70;
  _23 = _102 + 360;
  _14 = &k25519Precomp + _23;
  cmov (t_30(D), _14, _13);
  x_63 = babs_29 ^ 5;
  y_64 = (uint32_t) x_63;
  y_65 = y_64 + 4294967295;
  y_66 = y_65 >> 31;
  _15 = (int) y_66;
  _107 = _102 + 480;
  _16 = &k25519Precomp + _107;
  cmov (t_30(D), _16, _15);
  x_59 = babs_29 ^ 6;
  y_60 = (uint32_t) x_59;
  y_61 = y_60 + 4294967295;
  y_62 = y_61 >> 31;
  _17 = (int) y_62;
  _110 = _102 + 600;
  _18 = &k25519Precomp + _110;
  cmov (t_30(D), _18, _17);
  x_55 = babs_29 ^ 7;
  y_56 = (uint32_t) x_55;
  y_57 = y_56 + 4294967295;
  y_58 = y_57 >> 31;
  _19 = (int) y_58;
  _113 = _102 + 720;
  _20 = &k25519Precomp + _113;
  cmov (t_30(D), _20, _19);
  x_51 = babs_29 ^ 8;
  y_52 = (uint32_t) x_51;
  y_53 = y_52 + 4294967295;
  y_54 = y_53 >> 31;
  _21 = (int) y_54;
  _116 = _102 + 840;
  _22 = &k25519Precomp + _116;
  cmov (t_30(D), _22, _21);
  MEM[(char * {ref-all})&minust] = MEM[(char * {ref-all})t_30(D) + 40B];
  MEM[(char * {ref-all})&minust + 40B] = MEM[(char * {ref-all})t_30(D)];
  vect__39.368_133 = MEM[(const int32_t *)t_30(D) + 80B];
  vect__35.369_134 = -vect__39.368_133;
  MEM[(int32_t *)&minust + 80B] = vect__35.369_134;
  vect__39.368_106 = MEM[(const int32_t *)t_30(D) + 96B];
  vect__35.369_108 = -vect__39.368_106;
  MEM[(int32_t *)&minust + 96B] = vect__35.369_108;
  _41 = MEM[(const int32_t *)t_30(D) + 112B];
  _37 = -_41;
  MEM[(int32_t *)&minust + 112B] = _37;
  _126 = MEM[(const int32_t *)t_30(D) + 116B];
  _122 = -_126;
  MEM[(int32_t *)&minust + 116B] = _122;
  _26 = (int) x_84;
  cmov (t_30(D), &minust, _26);
  minust ={v} {CLOBBER};
  return;

}



;; Function ge_scalarmult_base (ge_scalarmult_base, funcdef_no=413, decl_uid=10946, cgraph_uid=413, symbol_order=422)

ge_scalarmult_base (struct ge_p3 * h, const uint8_t * a)
{
  unsigned long ivtmp.408;
  sizetype ivtmp.394;
  sizetype ivtmp.385;
  vector(16) signed char vect__9.378;
  const vector(16) unsigned char vect__7.377;
  vector(16) signed char vect__6.376;
  vector(16) signed char vect__4.375;
  const vector(16) unsigned char vect__3.374;
  struct ge_p2 q;
  int i;
  struct ge_precomp t;
  struct ge_p2 s;
  struct ge_p1p1 r;
  signed char carry;
  signed char e[64];
  vector(16) signed char vect_inter_high_8;
  vector(16) signed char vect_inter_low_9;
  signed char _10;
  unsigned char _11;
  unsigned char carry.0_12;
  unsigned char _13;
  unsigned char _15;
  unsigned char carry.1_16;
  unsigned char _17;
  unsigned char _18;
  signed char _19;
  signed char _20;
  unsigned char _21;
  unsigned char _23;
  signed char _24;
  signed char _25;
  int _26;
  int _27;
  signed char _28;
  int _29;
  int _30;
  unsigned long _31;
  void * _34;
  int32_t[10] * _75;
  int32_t[10] * _77;
  int32_t[10] * _79;
  int32_t[10] * _81;
  vector(16) signed char vect_inter_low_82;
  vector(16) signed char vect_inter_high_85;

  <bb 2> [local count: 16750372]:
  vect__3.374_3 = MEM[(const uint8_t *)a_41(D)];
  vect__4.375_4 = VIEW_CONVERT_EXPR<vector(16) signed char>(vect__3.374_3);
  vect__6.376_5 = vect__4.375_4 & { 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15 };
  vect__7.377_6 = vect__3.374_3 >> 4;
  vect__9.378_7 = VIEW_CONVERT_EXPR<vector(16) signed char>(vect__7.377_6);
  vect_inter_high_8 = VEC_PERM_EXPR <vect__6.376_5, vect__9.378_7, { 0, 16, 1, 17, 2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 7, 23 }>;
  vect_inter_low_9 = VEC_PERM_EXPR <vect__6.376_5, vect__9.378_7, { 8, 24, 9, 25, 10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 15, 31 }>;
  MEM[(signed char[64] *)&e] = vect_inter_high_8;
  MEM[(signed char[64] *)&e + 16B] = vect_inter_low_9;
  vect__3.374_109 = MEM[(const uint8_t *)a_41(D) + 16B];
  vect__4.375_108 = VIEW_CONVERT_EXPR<vector(16) signed char>(vect__3.374_109);
  vect__6.376_98 = vect__4.375_108 & { 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15 };
  vect__7.377_93 = vect__3.374_109 >> 4;
  vect__9.378_90 = VIEW_CONVERT_EXPR<vector(16) signed char>(vect__7.377_93);
  vect_inter_high_85 = VEC_PERM_EXPR <vect__6.376_98, vect__9.378_90, { 0, 16, 1, 17, 2, 18, 3, 19, 4, 20, 5, 21, 6, 22, 7, 23 }>;
  vect_inter_low_82 = VEC_PERM_EXPR <vect__6.376_98, vect__9.378_90, { 8, 24, 9, 25, 10, 26, 11, 27, 12, 28, 13, 29, 14, 30, 15, 31 }>;
  MEM[(signed char[64] *)&e + 32B] = vect_inter_high_85;
  MEM[(signed char[64] *)&e + 48B] = vect_inter_low_82;
  ivtmp.408_35 = (unsigned long) &e;
  _31 = ivtmp.408_35 + 63;

  <bb 3> [local count: 1056991454]:
  # carry_125 = PHI <0(2), carry_46(3)>
  # ivtmp.408_127 = PHI <ivtmp.408_35(2), ivtmp.408_121(3)>
  _34 = (void *) ivtmp.408_127;
  _10 = MEM[base: _34, offset: 0B];
  _11 = (unsigned char) _10;
  carry.0_12 = (unsigned char) carry_125;
  _13 = _11 + carry.0_12;
  _15 = _13 + 8;
  carry_45 = (signed char) _15;
  carry_46 = carry_45 >> 4;
  carry.1_16 = (unsigned char) carry_46;
  _17 = carry.1_16 << 4;
  _18 = _13 - _17;
  _19 = (signed char) _18;
  MEM[base: _34, offset: 0B] = _19;
  ivtmp.408_121 = ivtmp.408_127 + 1;
  if (_31 != ivtmp.408_121)
    goto <bb 3>; [98.42%]
  else
    goto <bb 4>; [1.58%]

  <bb 4> [local count: 16750372]:
  _20 = e[63];
  _21 = (unsigned char) _20;
  _23 = carry.1_16 + _21;
  _24 = (signed char) _23;
  e[63] = _24;
  _75 = &h_50(D)->X;
  __builtin_memset (_75, 0, 40);
  _77 = &h_50(D)->Y;
  __builtin_memset (_77, 0, 40);
  MEM[(int32_t *)h_50(D) + 40B] = 1;
  _79 = &h_50(D)->Z;
  __builtin_memset (_79, 0, 40);
  MEM[(int32_t *)h_50(D) + 80B] = 1;
  _81 = &h_50(D)->T;
  __builtin_memset (_81, 0, 40);

  <bb 5> [local count: 536067206]:
  # ivtmp.394_115 = PHI <1(4), ivtmp.394_2(5)>
  i_113 = (int) ivtmp.394_115;
  _25 = MEM[symbol: e, index: ivtmp.394_115, offset: 0B];
  _26 = (int) _25;
  _27 = i_113 >> 1;
  table_select (&t, _27, _26);
  ge_madd (&r, h_50(D), &t);
  fe_mul (_75, &r.X, &r.T);
  fe_mul (_77, &r.Y, &r.Z);
  fe_mul (_79, &r.Z, &r.T);
  fe_mul (_81, &r.X, &r.Y);
  ivtmp.394_2 = ivtmp.394_115 + 2;
  if (ivtmp.394_2 != 65)
    goto <bb 5>; [96.88%]
  else
    goto <bb 6>; [3.12%]

  <bb 6> [local count: 16750373]:
  MEM[(char * {ref-all})&q] = MEM[(char * {ref-all})h_50(D)];
  MEM[(char * {ref-all})&q + 40B] = MEM[(char * {ref-all})h_50(D) + 40B];
  MEM[(char * {ref-all})&q + 80B] = MEM[(char * {ref-all})h_50(D) + 80B];
  ge_p2_dbl (&r, &q);
  q ={v} {CLOBBER};
  fe_mul (&s.X, &r.X, &r.T);
  fe_mul (&s.Y, &r.Y, &r.Z);
  fe_mul (&s.Z, &r.Z, &r.T);
  ge_p2_dbl (&r, &s);
  fe_mul (&s.X, &r.X, &r.T);
  fe_mul (&s.Y, &r.Y, &r.Z);
  fe_mul (&s.Z, &r.Z, &r.T);
  ge_p2_dbl (&r, &s);
  fe_mul (&s.X, &r.X, &r.T);
  fe_mul (&s.Y, &r.Y, &r.Z);
  fe_mul (&s.Z, &r.Z, &r.T);
  ge_p2_dbl (&r, &s);
  fe_mul (_75, &r.X, &r.T);
  fe_mul (_77, &r.Y, &r.Z);
  fe_mul (_79, &r.Z, &r.T);
  fe_mul (_81, &r.X, &r.Y);

  <bb 7> [local count: 536067209]:
  # ivtmp.385_39 = PHI <0(6), ivtmp.385_89(7)>
  i_114 = (int) ivtmp.385_39;
  _28 = MEM[symbol: e, index: ivtmp.385_39, offset: 0B];
  _29 = (int) _28;
  _30 = i_114 >> 1;
  table_select (&t, _30, _29);
  ge_madd (&r, h_50(D), &t);
  fe_mul (_75, &r.X, &r.T);
  fe_mul (_77, &r.Y, &r.Z);
  fe_mul (_79, &r.Z, &r.T);
  fe_mul (_81, &r.X, &r.Y);
  ivtmp.385_89 = ivtmp.385_39 + 2;
  if (ivtmp.385_89 != 64)
    goto <bb 7>; [96.88%]
  else
    goto <bb 8>; [3.12%]

  <bb 8> [local count: 16750373]:
  OPENSSL_cleanse (&e, 64);
  e ={v} {CLOBBER};
  r ={v} {CLOBBER};
  s ={v} {CLOBBER};
  t ={v} {CLOBBER};
  return;

}



;; Function fe51_mul121666 (fe51_mul121666, funcdef_no=366, decl_uid=10172, cgraph_uid=366, symbol_order=367)

__attribute__((used))
fe51_mul121666 (uint64_t * h, uint64_t * f)
{
  uint64_t g4;
  uint64_t g3;
  uint64_t g2;
  uint64_t g1;
  uint64_t g0;
  u128 h4;
  u128 h3;
  u128 h2;
  u128 h1;
  u128 h0;
  long unsigned int _1;
  long unsigned int _3;
  long unsigned int _5;
  long unsigned int _7;
  long unsigned int _9;
  __int128 unsigned _11;
  long unsigned int _12;
  __int128 unsigned _13;
  long unsigned int _14;
  __int128 unsigned _15;
  long unsigned int _16;
  __int128 unsigned _17;
  long unsigned int _18;
  long unsigned int _19;
  __int128 unsigned _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;

  <bb 2> [local count: 1073741825]:
  _1 = *f_27(D);
  h0_28 = _1 w* 121666;
  _3 = MEM[(uint64_t *)f_27(D) + 8B];
  h1_29 = _3 w* 121666;
  _5 = MEM[(uint64_t *)f_27(D) + 16B];
  h2_30 = _5 w* 121666;
  _7 = MEM[(uint64_t *)f_27(D) + 24B];
  h3_31 = _7 w* 121666;
  _9 = MEM[(uint64_t *)f_27(D) + 32B];
  h4_32 = _9 w* 121666;
  _11 = h2_30 >> 51;
  h3_33 = _11 + h3_31;
  _12 = (long unsigned int) h2_30;
  g2_34 = _12 & 2251799813685247;
  _13 = h0_28 >> 51;
  h1_35 = _13 + h1_29;
  _14 = (long unsigned int) h0_28;
  g0_36 = _14 & 2251799813685247;
  _15 = h3_33 >> 51;
  h4_37 = _15 + h4_32;
  _16 = (long unsigned int) h3_33;
  g3_38 = _16 & 2251799813685247;
  _17 = h1_35 >> 51;
  _18 = (long unsigned int) _17;
  g2_39 = _18 + g2_34;
  _19 = (long unsigned int) h1_35;
  g1_40 = _19 & 2251799813685247;
  _20 = h4_37 >> 51;
  _21 = (long unsigned int) _20;
  _22 = _21 * 19;
  g0_41 = _22 + g0_36;
  _23 = (long unsigned int) h4_37;
  g4_42 = _23 & 2251799813685247;
  _24 = g2_39 >> 51;
  g3_43 = _24 + g3_38;
  g2_44 = g2_39 & 2251799813685247;
  _25 = g0_41 >> 51;
  g1_45 = _25 + g1_40;
  g0_46 = g0_41 & 2251799813685247;
  *h_47(D) = g0_46;
  MEM[(uint64_t *)h_47(D) + 8B] = g1_45;
  MEM[(uint64_t *)h_47(D) + 16B] = g2_44;
  MEM[(uint64_t *)h_47(D) + 24B] = g3_43;
  MEM[(uint64_t *)h_47(D) + 32B] = g4_42;
  return;

}



;; Function fe51_add (fe51_add, funcdef_no=367, decl_uid=10187, cgraph_uid=367, symbol_order=368)

__attribute__((used))
fe51_add (uint64_t * h, const uint64_t * f, const uint64_t * g)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;

  <bb 2> [local count: 1073741825]:
  _1 = *f_17(D);
  _2 = *g_18(D);
  _3 = _1 + _2;
  *h_19(D) = _3;
  _4 = MEM[(const uint64_t *)f_17(D) + 8B];
  _5 = MEM[(const uint64_t *)g_18(D) + 8B];
  _6 = _4 + _5;
  MEM[(uint64_t *)h_19(D) + 8B] = _6;
  _7 = MEM[(const uint64_t *)f_17(D) + 16B];
  _8 = MEM[(const uint64_t *)g_18(D) + 16B];
  _9 = _7 + _8;
  MEM[(uint64_t *)h_19(D) + 16B] = _9;
  _10 = MEM[(const uint64_t *)f_17(D) + 24B];
  _11 = MEM[(const uint64_t *)g_18(D) + 24B];
  _12 = _10 + _11;
  MEM[(uint64_t *)h_19(D) + 24B] = _12;
  _13 = MEM[(const uint64_t *)f_17(D) + 32B];
  _14 = MEM[(const uint64_t *)g_18(D) + 32B];
  _15 = _13 + _14;
  MEM[(uint64_t *)h_19(D) + 32B] = _15;
  return;

}



;; Function fe51_sub (fe51_sub, funcdef_no=368, decl_uid=10192, cgraph_uid=368, symbol_order=369)

__attribute__((used))
fe51_sub (uint64_t * h, const uint64_t * f, const uint64_t * g)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;

  <bb 2> [local count: 1073741825]:
  _1 = *f_22(D);
  _2 = *g_23(D);
  _3 = _1 - _2;
  _4 = _3 + 4503599627370458;
  *h_24(D) = _4;
  _5 = MEM[(const uint64_t *)f_22(D) + 8B];
  _6 = MEM[(const uint64_t *)g_23(D) + 8B];
  _7 = _5 - _6;
  _8 = _7 + 4503599627370494;
  MEM[(uint64_t *)h_24(D) + 8B] = _8;
  _9 = MEM[(const uint64_t *)f_22(D) + 16B];
  _10 = MEM[(const uint64_t *)g_23(D) + 16B];
  _11 = _9 - _10;
  _12 = _11 + 4503599627370494;
  MEM[(uint64_t *)h_24(D) + 16B] = _12;
  _13 = MEM[(const uint64_t *)f_22(D) + 24B];
  _14 = MEM[(const uint64_t *)g_23(D) + 24B];
  _15 = _13 - _14;
  _16 = _15 + 4503599627370494;
  MEM[(uint64_t *)h_24(D) + 24B] = _16;
  _17 = MEM[(const uint64_t *)f_22(D) + 32B];
  _18 = MEM[(const uint64_t *)g_23(D) + 32B];
  _19 = _17 - _18;
  _20 = _19 + 4503599627370494;
  MEM[(uint64_t *)h_24(D) + 32B] = _20;
  return;

}



;; Function fe51_invert (fe51_invert, funcdef_no=373, decl_uid=10217, cgraph_uid=373, symbol_order=374)

__attribute__((optimize ("unroll-loops", "unroll-loops"), used, flatten))
fe51_invert (uint64_t * out, const uint64_t * z)
{
  long unsigned int t3$32;
  long unsigned int t3$24;
  long unsigned int t3$16;
  long unsigned int t3$8;
  long unsigned int t3;
  long unsigned int t2$32;
  long unsigned int t2$24;
  long unsigned int t2$16;
  long unsigned int t2$8;
  long unsigned int t2;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  uint64_t g0;
  uint64_t g1;
  uint64_t g2;
  uint64_t g3;
  uint64_t g4;
  u128 h0;
  u128 h1;
  u128 h2;
  u128 h3;
  u128 h4;
  __int128 unsigned _2;
  __int128 unsigned _4;
  __int128 unsigned _5;
  __int128 unsigned _14;
  __int128 unsigned _15;
  __int128 unsigned _16;
  __int128 unsigned _19;
  __int128 unsigned _20;
  __int128 unsigned _23;
  __int128 unsigned _25;
  __int128 unsigned _28;
  __int128 unsigned _30;
  __int128 unsigned _33;
  __int128 unsigned _35;
  __int128 unsigned _36;
  __int128 unsigned _38;
  __int128 unsigned _40;
  __int128 unsigned _42;
  __int128 unsigned _45;
  __int128 unsigned _47;
  __int128 unsigned _50;
  __int128 unsigned _52;
  __int128 unsigned _55;
  __int128 unsigned _58;
  __int128 unsigned _59;
  __int128 unsigned _63;
  __int128 unsigned _78;
  __int128 unsigned _80;
  __int128 unsigned _84;
  __int128 unsigned _86;
  __int128 unsigned _88;
  __int128 unsigned _92;
  long unsigned int _94;
  __int128 unsigned _96;
  __int128 unsigned _98;
  __int128 unsigned _102;
  __int128 unsigned _104;
  __int128 unsigned _106;
  long unsigned int _109;
  __int128 unsigned _111;
  __int128 unsigned _112;
  long unsigned int _114;
  __int128 unsigned _116;
  long unsigned int _119;
  __int128 unsigned _121;
  long unsigned int _122;
  long unsigned int _124;
  __int128 unsigned _126;
  long unsigned int _127;
  long unsigned int _128;
  long unsigned int _130;
  long unsigned int _132;
  long unsigned int _135;
  __int128 unsigned _150;
  __int128 unsigned _152;
  __int128 unsigned _154;
  __int128 unsigned _156;
  __int128 unsigned _158;
  __int128 unsigned _162;
  __int128 unsigned _164;
  __int128 unsigned _166;
  __int128 unsigned _168;
  __int128 unsigned _170;
  __int128 unsigned _174;
  __int128 unsigned _176;
  __int128 unsigned _178;
  __int128 unsigned _180;
  __int128 unsigned _182;
  __int128 unsigned _186;
  __int128 unsigned _188;
  __int128 unsigned _190;
  __int128 unsigned _192;
  __int128 unsigned _194;
  __int128 unsigned _196;
  __int128 unsigned _197;
  long unsigned int _199;
  __int128 unsigned _201;
  long unsigned int _204;
  __int128 unsigned _206;
  long unsigned int _209;
  __int128 unsigned _211;
  long unsigned int _212;
  long unsigned int _214;
  __int128 unsigned _216;
  long unsigned int _217;
  long unsigned int _218;
  long unsigned int _220;
  long unsigned int _222;
  long unsigned int _225;
  __int128 unsigned _242;
  __int128 unsigned _244;
  __int128 unsigned _248;
  __int128 unsigned _250;
  __int128 unsigned _252;
  __int128 unsigned _256;
  long unsigned int _258;
  __int128 unsigned _260;
  __int128 unsigned _262;
  __int128 unsigned _266;
  __int128 unsigned _268;
  __int128 unsigned _270;
  long unsigned int _273;
  __int128 unsigned _275;
  __int128 unsigned _276;
  long unsigned int _278;
  __int128 unsigned _280;
  long unsigned int _283;
  __int128 unsigned _285;
  long unsigned int _286;
  long unsigned int _288;
  __int128 unsigned _290;
  long unsigned int _291;
  long unsigned int _292;
  long unsigned int _294;
  long unsigned int _296;
  long unsigned int _299;
  __int128 unsigned _314;
  __int128 unsigned _316;
  __int128 unsigned _318;
  __int128 unsigned _320;
  __int128 unsigned _322;
  __int128 unsigned _326;
  __int128 unsigned _328;
  __int128 unsigned _330;
  __int128 unsigned _332;
  __int128 unsigned _334;
  __int128 unsigned _338;
  __int128 unsigned _340;
  __int128 unsigned _342;
  __int128 unsigned _344;
  __int128 unsigned _346;
  __int128 unsigned _350;
  __int128 unsigned _352;
  __int128 unsigned _354;
  __int128 unsigned _356;
  __int128 unsigned _358;
  __int128 unsigned _360;
  long unsigned int _363;
  __int128 unsigned _365;
  long unsigned int _368;
  __int128 unsigned _370;
  long unsigned int _373;
  __int128 unsigned _375;
  long unsigned int _376;
  long unsigned int _378;
  __int128 unsigned _380;
  long unsigned int _381;
  long unsigned int _382;
  long unsigned int _384;
  long unsigned int _386;
  long unsigned int _389;
  __int128 unsigned _397;
  __int128 unsigned _413;
  __int128 unsigned _415;
  __int128 unsigned _417;
  __int128 unsigned _419;
  __int128 unsigned _421;
  __int128 unsigned _423;
  __int128 unsigned _424;
  __int128 unsigned _427;
  __int128 unsigned _429;
  __int128 unsigned _431;
  __int128 unsigned _433;
  __int128 unsigned _435;
  __int128 unsigned _437;
  __int128 unsigned _438;
  __int128 unsigned _441;
  __int128 unsigned _443;
  __int128 unsigned _445;
  __int128 unsigned _447;
  __int128 unsigned _449;
  __int128 unsigned _455;
  __int128 unsigned _457;
  __int128 unsigned _459;
  __int128 unsigned _461;
  __int128 unsigned _463;
  __int128 unsigned _465;
  __int128 unsigned _466;
  long unsigned int _468;
  __int128 unsigned _470;
  __int128 unsigned _471;
  long unsigned int _473;
  __int128 unsigned _475;
  __int128 unsigned _476;
  long unsigned int _478;
  __int128 unsigned _480;
  long unsigned int _481;
  long unsigned int _483;
  __int128 unsigned _485;
  long unsigned int _486;
  long unsigned int _487;
  long unsigned int _489;
  long unsigned int _491;
  long unsigned int _494;
  __int128 unsigned _498;
  __int128 unsigned _499;
  __int128 unsigned _501;
  __int128 unsigned _516;
  __int128 unsigned _518;
  __int128 unsigned _522;
  __int128 unsigned _524;
  __int128 unsigned _526;
  __int128 unsigned _530;
  long unsigned int _532;
  __int128 unsigned _534;
  __int128 unsigned _536;
  __int128 unsigned _540;
  __int128 unsigned _542;
  __int128 unsigned _544;
  long unsigned int _547;
  __int128 unsigned _549;
  long unsigned int _552;
  __int128 unsigned _554;
  long unsigned int _557;
  __int128 unsigned _559;
  long unsigned int _560;
  long unsigned int _562;
  __int128 unsigned _564;
  long unsigned int _565;
  long unsigned int _566;
  long unsigned int _568;
  long unsigned int _570;
  long unsigned int _573;
  __int128 unsigned _579;
  __int128 unsigned _580;
  __int128 unsigned _595;
  __int128 unsigned _597;
  __int128 unsigned _601;
  __int128 unsigned _603;
  __int128 unsigned _605;
  __int128 unsigned _609;
  long unsigned int _611;
  __int128 unsigned _613;
  __int128 unsigned _615;
  __int128 unsigned _619;
  __int128 unsigned _621;
  __int128 unsigned _623;
  long unsigned int _626;
  __int128 unsigned _628;
  long unsigned int _631;
  __int128 unsigned _633;
  __int128 unsigned _634;
  long unsigned int _636;
  __int128 unsigned _638;
  long unsigned int _639;
  long unsigned int _641;
  __int128 unsigned _643;
  long unsigned int _644;
  long unsigned int _645;
  long unsigned int _647;
  long unsigned int _649;
  long unsigned int _652;
  __int128 unsigned _674;
  __int128 unsigned _676;
  __int128 unsigned _680;
  __int128 unsigned _682;
  __int128 unsigned _684;
  __int128 unsigned _688;
  long unsigned int _690;
  __int128 unsigned _692;
  __int128 unsigned _694;
  __int128 unsigned _698;
  __int128 unsigned _700;
  __int128 unsigned _702;
  __int128 unsigned _703;
  long unsigned int _705;
  __int128 unsigned _707;
  __int128 unsigned _708;
  long unsigned int _710;
  __int128 unsigned _712;
  __int128 unsigned _713;
  long unsigned int _715;
  __int128 unsigned _717;
  long unsigned int _718;
  long unsigned int _720;
  __int128 unsigned _722;
  long unsigned int _723;
  long unsigned int _724;
  long unsigned int _726;
  long unsigned int _728;
  long unsigned int _731;
  __int128 unsigned _748;
  __int128 unsigned _750;
  __int128 unsigned _754;
  __int128 unsigned _756;
  __int128 unsigned _758;
  __int128 unsigned _762;
  long unsigned int _764;
  __int128 unsigned _766;
  __int128 unsigned _768;
  __int128 unsigned _772;
  __int128 unsigned _774;
  __int128 unsigned _776;
  __int128 unsigned _777;
  long unsigned int _779;
  __int128 unsigned _781;
  __int128 unsigned _782;
  long unsigned int _784;
  __int128 unsigned _786;
  __int128 unsigned _787;
  long unsigned int _789;
  __int128 unsigned _791;
  long unsigned int _792;
  long unsigned int _794;
  __int128 unsigned _796;
  long unsigned int _797;
  long unsigned int _798;
  long unsigned int _800;
  long unsigned int _802;
  long unsigned int _805;
  __int128 unsigned _822;
  __int128 unsigned _824;
  __int128 unsigned _828;
  __int128 unsigned _830;
  __int128 unsigned _832;
  __int128 unsigned _836;
  long unsigned int _838;
  __int128 unsigned _840;
  __int128 unsigned _842;
  __int128 unsigned _846;
  __int128 unsigned _848;
  __int128 unsigned _850;
  long unsigned int _853;
  __int128 unsigned _855;
  long unsigned int _858;
  __int128 unsigned _860;
  long unsigned int _863;
  __int128 unsigned _865;
  long unsigned int _866;
  long unsigned int _868;
  __int128 unsigned _870;
  long unsigned int _871;
  long unsigned int _872;
  long unsigned int _874;
  long unsigned int _876;
  long unsigned int _879;
  __int128 unsigned _889;
  __int128 unsigned _891;
  __int128 unsigned _893;
  __int128 unsigned _895;
  __int128 unsigned _897;
  __int128 unsigned _900;
  __int128 unsigned _902;
  __int128 unsigned _904;
  __int128 unsigned _906;
  __int128 unsigned _908;
  __int128 unsigned _913;
  __int128 unsigned _915;
  __int128 unsigned _917;
  __int128 unsigned _919;
  __int128 unsigned _921;
  __int128 unsigned _926;
  __int128 unsigned _928;
  __int128 unsigned _930;
  __int128 unsigned _932;
  __int128 unsigned _934;
  __int128 unsigned _936;
  long unsigned int _939;
  __int128 unsigned _941;
  long unsigned int _944;
  __int128 unsigned _946;
  long unsigned int _949;
  __int128 unsigned _951;
  long unsigned int _952;
  long unsigned int _954;
  __int128 unsigned _956;
  long unsigned int _957;
  long unsigned int _958;
  long unsigned int _960;
  long unsigned int _962;
  long unsigned int _965;
  __int128 unsigned _982;
  __int128 unsigned _984;
  __int128 unsigned _988;
  __int128 unsigned _990;
  __int128 unsigned _992;
  __int128 unsigned _996;
  long unsigned int _998;
  __int128 unsigned _1000;
  __int128 unsigned _1002;
  __int128 unsigned _1006;
  __int128 unsigned _1008;
  __int128 unsigned _1010;
  long unsigned int _1013;
  __int128 unsigned _1015;
  long unsigned int _1018;
  __int128 unsigned _1020;
  long unsigned int _1023;
  __int128 unsigned _1025;
  long unsigned int _1026;
  long unsigned int _1028;
  __int128 unsigned _1030;
  long unsigned int _1031;
  long unsigned int _1032;
  long unsigned int _1034;
  long unsigned int _1036;
  long unsigned int _1039;
  __int128 unsigned _1056;
  __int128 unsigned _1058;
  __int128 unsigned _1062;
  __int128 unsigned _1064;
  __int128 unsigned _1066;
  __int128 unsigned _1070;
  long unsigned int _1072;
  __int128 unsigned _1074;
  __int128 unsigned _1076;
  __int128 unsigned _1080;
  __int128 unsigned _1082;
  __int128 unsigned _1084;
  long unsigned int _1087;
  __int128 unsigned _1089;
  long unsigned int _1092;
  __int128 unsigned _1094;
  long unsigned int _1097;
  __int128 unsigned _1099;
  long unsigned int _1100;
  long unsigned int _1102;
  __int128 unsigned _1104;
  long unsigned int _1105;
  long unsigned int _1106;
  long unsigned int _1108;
  long unsigned int _1110;
  long unsigned int _1113;
  __int128 unsigned _1123;
  __int128 unsigned _1125;
  __int128 unsigned _1127;
  __int128 unsigned _1129;
  __int128 unsigned _1131;
  __int128 unsigned _1134;
  __int128 unsigned _1136;
  __int128 unsigned _1138;
  __int128 unsigned _1140;
  __int128 unsigned _1142;
  __int128 unsigned _1147;
  __int128 unsigned _1149;
  __int128 unsigned _1151;
  __int128 unsigned _1153;
  __int128 unsigned _1155;
  __int128 unsigned _1160;
  __int128 unsigned _1162;
  __int128 unsigned _1164;
  __int128 unsigned _1166;
  __int128 unsigned _1168;
  __int128 unsigned _1170;
  long unsigned int _1173;
  __int128 unsigned _1175;
  long unsigned int _1178;
  __int128 unsigned _1180;
  long unsigned int _1183;
  __int128 unsigned _1185;
  long unsigned int _1186;
  long unsigned int _1188;
  __int128 unsigned _1190;
  long unsigned int _1191;
  long unsigned int _1192;
  long unsigned int _1194;
  long unsigned int _1196;
  long unsigned int _1199;
  __int128 unsigned _1216;
  __int128 unsigned _1218;
  __int128 unsigned _1222;
  __int128 unsigned _1224;
  __int128 unsigned _1226;
  __int128 unsigned _1230;
  long unsigned int _1232;
  __int128 unsigned _1234;
  __int128 unsigned _1236;
  __int128 unsigned _1240;
  __int128 unsigned _1242;
  __int128 unsigned _1244;
  long unsigned int _1247;
  __int128 unsigned _1249;
  long unsigned int _1252;
  __int128 unsigned _1254;
  __int128 unsigned _1255;
  long unsigned int _1257;
  __int128 unsigned _1259;
  long unsigned int _1260;
  long unsigned int _1262;
  __int128 unsigned _1264;
  long unsigned int _1265;
  long unsigned int _1266;
  long unsigned int _1268;
  long unsigned int _1270;
  long unsigned int _1273;
  __int128 unsigned _1283;
  __int128 unsigned _1285;
  __int128 unsigned _1287;
  __int128 unsigned _1289;
  __int128 unsigned _1291;
  __int128 unsigned _1294;
  __int128 unsigned _1296;
  __int128 unsigned _1298;
  __int128 unsigned _1300;
  __int128 unsigned _1302;
  __int128 unsigned _1307;
  __int128 unsigned _1309;
  __int128 unsigned _1311;
  __int128 unsigned _1313;
  __int128 unsigned _1315;
  __int128 unsigned _1320;
  __int128 unsigned _1322;
  __int128 unsigned _1324;
  __int128 unsigned _1326;
  __int128 unsigned _1328;
  __int128 unsigned _1330;
  long unsigned int _1333;
  __int128 unsigned _1335;
  long unsigned int _1338;
  __int128 unsigned _1340;
  long unsigned int _1343;
  __int128 unsigned _1345;
  long unsigned int _1346;
  long unsigned int _1348;
  __int128 unsigned _1350;
  long unsigned int _1351;
  long unsigned int _1352;
  long unsigned int _1354;
  long unsigned int _1356;
  long unsigned int _1359;
  __int128 unsigned _1376;
  __int128 unsigned _1378;
  __int128 unsigned _1382;
  __int128 unsigned _1384;
  __int128 unsigned _1386;
  __int128 unsigned _1390;
  long unsigned int _1392;
  __int128 unsigned _1394;
  __int128 unsigned _1396;
  __int128 unsigned _1400;
  __int128 unsigned _1402;
  __int128 unsigned _1404;
  long unsigned int _1407;
  __int128 unsigned _1409;
  long unsigned int _1412;
  __int128 unsigned _1414;
  long unsigned int _1417;
  __int128 unsigned _1419;
  long unsigned int _1420;
  long unsigned int _1422;
  __int128 unsigned _1424;
  long unsigned int _1425;
  long unsigned int _1426;
  long unsigned int _1428;
  long unsigned int _1430;
  long unsigned int _1433;
  __int128 unsigned _1450;
  __int128 unsigned _1452;
  __int128 unsigned _1456;
  __int128 unsigned _1458;
  __int128 unsigned _1460;
  __int128 unsigned _1464;
  long unsigned int _1466;
  __int128 unsigned _1468;
  __int128 unsigned _1470;
  __int128 unsigned _1474;
  __int128 unsigned _1476;
  __int128 unsigned _1478;
  long unsigned int _1481;
  __int128 unsigned _1483;
  long unsigned int _1486;
  __int128 unsigned _1488;
  long unsigned int _1491;
  __int128 unsigned _1493;
  long unsigned int _1494;
  long unsigned int _1496;
  __int128 unsigned _1498;
  long unsigned int _1499;
  long unsigned int _1500;
  long unsigned int _1502;
  long unsigned int _1504;
  long unsigned int _1507;
  __int128 unsigned _1517;
  __int128 unsigned _1519;
  __int128 unsigned _1521;
  __int128 unsigned _1523;
  __int128 unsigned _1525;
  __int128 unsigned _1528;
  __int128 unsigned _1530;
  __int128 unsigned _1532;
  __int128 unsigned _1534;
  __int128 unsigned _1536;
  __int128 unsigned _1539;
  __int128 unsigned _1541;
  __int128 unsigned _1543;
  __int128 unsigned _1545;
  __int128 unsigned _1547;
  __int128 unsigned _1550;
  __int128 unsigned _1552;
  __int128 unsigned _1554;
  __int128 unsigned _1556;
  __int128 unsigned _1558;
  __int128 unsigned _1560;
  __int128 unsigned _1561;
  long unsigned int _1563;
  __int128 unsigned _1565;
  __int128 unsigned _1566;
  long unsigned int _1568;
  __int128 unsigned _1570;
  __int128 unsigned _1571;
  long unsigned int _1573;
  __int128 unsigned _1575;
  long unsigned int _1576;
  long unsigned int _1578;
  __int128 unsigned _1580;
  long unsigned int _1581;
  long unsigned int _1582;
  long unsigned int _1584;
  long unsigned int _1586;
  long unsigned int _1589;
  __int128 unsigned _1606;
  __int128 unsigned _1608;
  __int128 unsigned _1612;
  __int128 unsigned _1614;
  __int128 unsigned _1616;
  __int128 unsigned _1620;
  long unsigned int _1622;
  __int128 unsigned _1624;
  __int128 unsigned _1626;
  __int128 unsigned _1630;
  __int128 unsigned _1632;
  __int128 unsigned _1634;
  __int128 unsigned _1635;
  long unsigned int _1637;
  __int128 unsigned _1639;
  __int128 unsigned _1640;
  long unsigned int _1642;
  __int128 unsigned _1644;
  long unsigned int _1647;
  __int128 unsigned _1649;
  long unsigned int _1650;
  long unsigned int _1652;
  __int128 unsigned _1654;
  long unsigned int _1655;
  long unsigned int _1656;
  long unsigned int _1658;
  long unsigned int _1660;
  long unsigned int _1663;
  __int128 unsigned _1680;
  __int128 unsigned _1682;
  __int128 unsigned _1686;
  __int128 unsigned _1688;
  __int128 unsigned _1690;
  __int128 unsigned _1694;
  long unsigned int _1696;
  __int128 unsigned _1698;
  __int128 unsigned _1700;
  __int128 unsigned _1704;
  __int128 unsigned _1706;
  __int128 unsigned _1708;
  __int128 unsigned _1709;
  long unsigned int _1711;
  __int128 unsigned _1713;
  long unsigned int _1716;
  __int128 unsigned _1718;
  long unsigned int _1721;
  __int128 unsigned _1723;
  long unsigned int _1724;
  long unsigned int _1726;
  __int128 unsigned _1728;
  long unsigned int _1729;
  long unsigned int _1730;
  long unsigned int _1732;
  long unsigned int _1734;
  long unsigned int _1737;
  __int128 unsigned _1747;
  __int128 unsigned _1749;
  __int128 unsigned _1751;
  __int128 unsigned _1753;
  __int128 unsigned _1755;
  __int128 unsigned _1758;
  __int128 unsigned _1760;
  __int128 unsigned _1762;
  __int128 unsigned _1764;
  __int128 unsigned _1766;
  __int128 unsigned _1771;
  __int128 unsigned _1773;
  __int128 unsigned _1775;
  __int128 unsigned _1777;
  __int128 unsigned _1779;
  __int128 unsigned _1784;
  __int128 unsigned _1786;
  __int128 unsigned _1788;
  __int128 unsigned _1790;
  __int128 unsigned _1792;
  __int128 unsigned _1794;
  long unsigned int _1797;
  __int128 unsigned _1799;
  long unsigned int _1802;
  __int128 unsigned _1804;
  long unsigned int _1807;
  __int128 unsigned _1809;
  long unsigned int _1810;
  long unsigned int _1812;
  __int128 unsigned _1814;
  long unsigned int _1815;
  long unsigned int _1816;
  long unsigned int _1818;
  long unsigned int _1820;
  long unsigned int _1823;
  __int128 unsigned _1840;
  __int128 unsigned _1842;
  __int128 unsigned _1846;
  __int128 unsigned _1848;
  __int128 unsigned _1850;
  __int128 unsigned _1854;
  long unsigned int _1856;
  __int128 unsigned _1858;
  __int128 unsigned _1860;
  __int128 unsigned _1864;
  __int128 unsigned _1866;
  __int128 unsigned _1868;
  long unsigned int _1871;
  __int128 unsigned _1873;
  long unsigned int _1876;
  __int128 unsigned _1878;
  long unsigned int _1881;
  __int128 unsigned _1883;
  long unsigned int _1884;
  long unsigned int _1886;
  __int128 unsigned _1888;
  long unsigned int _1889;
  long unsigned int _1890;
  long unsigned int _1892;
  long unsigned int _1894;
  long unsigned int _1897;
  __int128 unsigned _1907;
  __int128 unsigned _1909;
  __int128 unsigned _1911;
  __int128 unsigned _1913;
  __int128 unsigned _1915;
  __int128 unsigned _1918;
  __int128 unsigned _1920;
  __int128 unsigned _1922;
  __int128 unsigned _1924;
  __int128 unsigned _1926;
  __int128 unsigned _1931;
  __int128 unsigned _1933;
  __int128 unsigned _1935;
  __int128 unsigned _1937;
  __int128 unsigned _1939;
  __int128 unsigned _1944;
  __int128 unsigned _1946;
  __int128 unsigned _1948;
  __int128 unsigned _1950;
  __int128 unsigned _1952;
  __int128 unsigned _1954;
  __int128 unsigned _1955;
  long unsigned int _1957;
  __int128 unsigned _1959;
  __int128 unsigned _1960;
  long unsigned int _1962;
  __int128 unsigned _1964;
  __int128 unsigned _1965;
  long unsigned int _1967;
  __int128 unsigned _1969;
  long unsigned int _1970;
  long unsigned int _1972;
  __int128 unsigned _1974;
  long unsigned int _1975;
  long unsigned int _1976;
  long unsigned int _1978;
  long unsigned int _1980;
  long unsigned int _1983;
  __int128 unsigned _2000;
  __int128 unsigned _2002;
  __int128 unsigned _2006;
  __int128 unsigned _2008;
  __int128 unsigned _2010;
  __int128 unsigned _2014;
  long unsigned int _2016;
  __int128 unsigned _2018;
  __int128 unsigned _2020;
  __int128 unsigned _2024;
  __int128 unsigned _2026;
  __int128 unsigned _2028;
  long unsigned int _2031;
  __int128 unsigned _2033;
  long unsigned int _2036;
  __int128 unsigned _2038;
  long unsigned int _2041;
  __int128 unsigned _2043;
  long unsigned int _2044;
  long unsigned int _2046;
  __int128 unsigned _2048;
  long unsigned int _2049;
  long unsigned int _2050;
  long unsigned int _2052;
  long unsigned int _2054;
  long unsigned int _2057;
  __int128 unsigned _2067;
  __int128 unsigned _2069;
  __int128 unsigned _2071;
  __int128 unsigned _2073;
  __int128 unsigned _2075;
  __int128 unsigned _2078;
  __int128 unsigned _2080;
  __int128 unsigned _2082;
  __int128 unsigned _2084;
  __int128 unsigned _2086;
  __int128 unsigned _2089;
  __int128 unsigned _2091;
  __int128 unsigned _2093;
  __int128 unsigned _2095;
  __int128 unsigned _2097;
  __int128 unsigned _2100;
  __int128 unsigned _2102;
  __int128 unsigned _2104;
  __int128 unsigned _2106;
  __int128 unsigned _2108;
  __int128 unsigned _2110;
  long unsigned int _2113;
  __int128 unsigned _2115;
  long unsigned int _2118;
  __int128 unsigned _2120;
  long unsigned int _2123;
  __int128 unsigned _2125;
  long unsigned int _2126;
  long unsigned int _2128;
  __int128 unsigned _2130;
  long unsigned int _2131;
  long unsigned int _2132;
  long unsigned int _2134;
  long unsigned int _2136;
  long unsigned int _2139;
  __int128 unsigned _2156;
  __int128 unsigned _2158;
  __int128 unsigned _2162;
  __int128 unsigned _2164;
  __int128 unsigned _2166;
  __int128 unsigned _2170;
  long unsigned int _2172;
  __int128 unsigned _2174;
  __int128 unsigned _2176;
  __int128 unsigned _2180;
  __int128 unsigned _2182;
  __int128 unsigned _2184;
  long unsigned int _2187;
  __int128 unsigned _2189;
  long unsigned int _2192;
  __int128 unsigned _2194;
  long unsigned int _2197;
  __int128 unsigned _2199;
  long unsigned int _2200;
  long unsigned int _2202;
  __int128 unsigned _2204;
  long unsigned int _2205;
  long unsigned int _2206;
  long unsigned int _2208;
  long unsigned int _2210;
  long unsigned int _2213;
  __int128 unsigned _2223;
  __int128 unsigned _2225;
  __int128 unsigned _2227;
  __int128 unsigned _2229;
  __int128 unsigned _2231;
  __int128 unsigned _2234;
  __int128 unsigned _2236;
  __int128 unsigned _2238;
  __int128 unsigned _2240;
  __int128 unsigned _2242;
  __int128 unsigned _2247;
  __int128 unsigned _2249;
  __int128 unsigned _2251;
  __int128 unsigned _2253;
  __int128 unsigned _2255;
  __int128 unsigned _2260;
  __int128 unsigned _2262;
  __int128 unsigned _2264;
  __int128 unsigned _2266;
  __int128 unsigned _2268;
  __int128 unsigned _2270;
  long unsigned int _2273;
  __int128 unsigned _2275;
  long unsigned int _2278;
  __int128 unsigned _2280;
  long unsigned int _2283;
  __int128 unsigned _2285;
  long unsigned int _2286;
  long unsigned int _2288;
  __int128 unsigned _2290;
  long unsigned int _2291;
  long unsigned int _2292;
  long unsigned int _2294;
  long unsigned int _2296;
  long unsigned int _2299;
  __int128 unsigned _2309;
  __int128 unsigned _2316;
  __int128 unsigned _2317;
  __int128 unsigned _2318;
  __int128 unsigned _2324;
  __int128 unsigned _2326;
  __int128 unsigned _2327;
  __int128 unsigned _2328;
  __int128 unsigned _2329;
  __int128 unsigned _2330;
  __int128 unsigned _2331;
  __int128 unsigned _2332;
  __int128 unsigned _2333;
  __int128 unsigned _2335;
  __int128 unsigned _2337;
  __int128 unsigned _2338;
  __int128 unsigned _2339;
  __int128 unsigned _2340;
  __int128 unsigned _2341;
  __int128 unsigned _2343;
  __int128 unsigned _2344;
  __int128 unsigned _2347;
  __int128 unsigned _2350;
  __int128 unsigned _2351;
  __int128 unsigned _2353;
  __int128 unsigned _2354;
  __int128 unsigned _2356;
  __int128 unsigned _2358;
  __int128 unsigned _2359;
  __int128 unsigned _2361;
  __int128 unsigned _2364;
  __int128 unsigned _2365;
  __int128 unsigned _2366;
  __int128 unsigned _2367;
  __int128 unsigned _2368;
  __int128 unsigned _2369;
  __int128 unsigned _2370;
  __int128 unsigned _2371;
  __int128 unsigned _2372;
  __int128 unsigned _2373;
  __int128 unsigned _2374;
  __int128 unsigned _2375;
  __int128 unsigned _2376;
  __int128 unsigned _2377;
  __int128 unsigned _2386;
  __int128 unsigned _2388;
  __int128 unsigned _2390;
  __int128 unsigned _2394;
  __int128 unsigned _2396;
  __int128 unsigned _2397;
  __int128 unsigned _2401;
  __int128 unsigned _2404;
  __int128 unsigned _2405;
  __int128 unsigned _2410;
  __int128 unsigned _14582;
  __int128 unsigned _14583;
  __int128 unsigned _14584;
  __int128 unsigned _14585;
  __int128 unsigned _14586;
  __int128 unsigned _14587;
  __int128 unsigned _14588;
  __int128 unsigned _14589;
  __int128 unsigned _14590;
  __int128 unsigned _14591;
  __int128 unsigned _14592;
  __int128 unsigned _14593;
  __int128 unsigned _14594;
  __int128 unsigned _14595;
  __int128 unsigned _14596;
  __int128 unsigned _14597;
  __int128 unsigned _14598;
  __int128 unsigned _14599;
  __int128 unsigned _14600;
  __int128 unsigned _14601;
  __int128 unsigned _14602;
  __int128 unsigned _14603;
  __int128 unsigned _14604;
  __int128 unsigned _14605;
  __int128 unsigned _14606;
  __int128 unsigned _14607;
  __int128 unsigned _14608;
  __int128 unsigned _14609;
  __int128 unsigned _14610;
  __int128 unsigned _14611;
  __int128 unsigned _14612;
  __int128 unsigned _14613;
  __int128 unsigned _14614;
  __int128 unsigned _14615;
  __int128 unsigned _14616;
  __int128 unsigned _14617;
  __int128 unsigned _14618;
  __int128 unsigned _14619;
  __int128 unsigned _14620;
  __int128 unsigned _14621;
  __int128 unsigned _14622;
  __int128 unsigned _14623;
  __int128 unsigned _14624;
  __int128 unsigned _14625;
  __int128 unsigned _14626;
  __int128 unsigned _14627;
  __int128 unsigned _14628;
  __int128 unsigned _14629;
  __int128 unsigned _14630;
  __int128 unsigned _14631;
  __int128 unsigned _14632;
  __int128 unsigned _14633;
  __int128 unsigned _14634;
  __int128 unsigned _14635;
  __int128 unsigned _14636;
  __int128 unsigned _14637;
  __int128 unsigned _14638;
  __int128 unsigned _14639;
  __int128 unsigned _14640;
  __int128 unsigned _14641;
  __int128 unsigned _14642;
  __int128 unsigned _14643;
  __int128 unsigned _14644;
  __int128 unsigned _14645;
  __int128 unsigned _14646;
  __int128 unsigned _14647;
  __int128 unsigned _14648;
  __int128 unsigned _14649;
  __int128 unsigned _14650;
  __int128 unsigned _14651;
  __int128 unsigned _14652;
  __int128 unsigned _14653;
  __int128 unsigned _14654;
  __int128 unsigned _14655;
  __int128 unsigned _14656;
  __int128 unsigned _14657;
  __int128 unsigned _14658;
  __int128 unsigned _14659;
  __int128 unsigned _14660;
  __int128 unsigned _14661;
  long unsigned int _14665;
  long unsigned int _14668;
  long unsigned int _14670;
  long unsigned int _14672;
  long unsigned int _14673;
  __int128 unsigned _14674;
  long unsigned int _14676;
  long unsigned int _14678;
  __int128 unsigned _14679;
  long unsigned int _14681;
  __int128 unsigned _14683;
  long unsigned int _14685;
  __int128 unsigned _14687;
  long unsigned int _14689;
  __int128 unsigned _14691;
  __int128 unsigned _14693;
  __int128 unsigned _14696;
  __int128 unsigned _14700;
  __int128 unsigned _14703;
  long unsigned int _14705;
  __int128 unsigned _14707;
  __int128 unsigned _14710;
  __int128 unsigned _14712;
  __int128 unsigned _14714;
  __int128 unsigned _14717;
  __int128 unsigned _14719;
  __int128 unsigned _14735;
  __int128 unsigned _14736;
  __int128 unsigned _14737;
  __int128 unsigned _14738;
  __int128 unsigned _14739;
  __int128 unsigned _14740;
  long unsigned int _14744;
  long unsigned int _14747;
  long unsigned int _14749;
  long unsigned int _14751;
  long unsigned int _14752;
  __int128 unsigned _14753;
  long unsigned int _14755;
  long unsigned int _14757;
  __int128 unsigned _14758;
  long unsigned int _14760;
  __int128 unsigned _14762;
  long unsigned int _14764;
  __int128 unsigned _14766;
  long unsigned int _14768;
  __int128 unsigned _14770;
  __int128 unsigned _14772;
  __int128 unsigned _14775;
  __int128 unsigned _14779;
  __int128 unsigned _14782;
  long unsigned int _14784;
  __int128 unsigned _14786;
  __int128 unsigned _14790;
  __int128 unsigned _14792;
  __int128 unsigned _14794;
  __int128 unsigned _14797;
  __int128 unsigned _14799;
  __int128 unsigned _14814;
  __int128 unsigned _14815;
  __int128 unsigned _14816;
  __int128 unsigned _14817;
  __int128 unsigned _14818;
  __int128 unsigned _14819;
  long unsigned int _14823;
  long unsigned int _14826;
  long unsigned int _14828;
  long unsigned int _14830;
  long unsigned int _14831;
  __int128 unsigned _14832;
  long unsigned int _14834;
  long unsigned int _14836;
  __int128 unsigned _14837;
  long unsigned int _14839;
  __int128 unsigned _14841;
  long unsigned int _14843;
  __int128 unsigned _14845;
  long unsigned int _14847;
  __int128 unsigned _14849;
  __int128 unsigned _14851;
  __int128 unsigned _14855;
  __int128 unsigned _14859;
  __int128 unsigned _14862;
  long unsigned int _14864;
  __int128 unsigned _14866;
  __int128 unsigned _14869;
  __int128 unsigned _14871;
  __int128 unsigned _14873;
  __int128 unsigned _14876;
  __int128 unsigned _14878;
  __int128 unsigned _14893;
  __int128 unsigned _14894;
  __int128 unsigned _14895;
  __int128 unsigned _14896;
  __int128 unsigned _14897;
  __int128 unsigned _14898;
  long unsigned int _14902;
  long unsigned int _14905;
  long unsigned int _14907;
  long unsigned int _14909;
  long unsigned int _14910;
  __int128 unsigned _14911;
  long unsigned int _14913;
  long unsigned int _14915;
  __int128 unsigned _14916;
  long unsigned int _14918;
  __int128 unsigned _14920;
  long unsigned int _14923;
  __int128 unsigned _14925;
  long unsigned int _14927;
  __int128 unsigned _14929;
  __int128 unsigned _14931;
  __int128 unsigned _14934;
  __int128 unsigned _14938;
  __int128 unsigned _14941;
  long unsigned int _14943;
  __int128 unsigned _14945;
  __int128 unsigned _14948;
  __int128 unsigned _14950;
  __int128 unsigned _14952;
  __int128 unsigned _14955;
  __int128 unsigned _14957;
  __int128 unsigned _14972;
  __int128 unsigned _14973;
  __int128 unsigned _14974;
  __int128 unsigned _14975;
  __int128 unsigned _14976;
  __int128 unsigned _14977;
  long unsigned int _14981;
  long unsigned int _14984;
  long unsigned int _14986;
  long unsigned int _14989;
  long unsigned int _14990;
  __int128 unsigned _14991;
  long unsigned int _14993;
  long unsigned int _14995;
  __int128 unsigned _14996;
  long unsigned int _14998;
  __int128 unsigned _15000;
  long unsigned int _15002;
  __int128 unsigned _15004;
  long unsigned int _15006;
  __int128 unsigned _15008;
  __int128 unsigned _15010;
  __int128 unsigned _15013;
  __int128 unsigned _15017;
  __int128 unsigned _15020;
  long unsigned int _15022;
  __int128 unsigned _15024;
  __int128 unsigned _15027;
  __int128 unsigned _15029;
  __int128 unsigned _15031;
  __int128 unsigned _15034;
  __int128 unsigned _15036;
  __int128 unsigned _15051;
  __int128 unsigned _15052;
  __int128 unsigned _15053;
  __int128 unsigned _15054;
  __int128 unsigned _15056;
  __int128 unsigned _15057;
  long unsigned int _15061;
  long unsigned int _15064;
  long unsigned int _15066;
  long unsigned int _15068;
  long unsigned int _15069;
  __int128 unsigned _15070;
  long unsigned int _15072;
  long unsigned int _15074;
  __int128 unsigned _15075;
  long unsigned int _15077;
  __int128 unsigned _15079;
  long unsigned int _15081;
  __int128 unsigned _15083;
  long unsigned int _15085;
  __int128 unsigned _15087;
  __int128 unsigned _15089;
  __int128 unsigned _15092;
  __int128 unsigned _15096;
  __int128 unsigned _15099;
  long unsigned int _15101;
  __int128 unsigned _15103;
  __int128 unsigned _15106;
  __int128 unsigned _15108;
  __int128 unsigned _15110;
  __int128 unsigned _15113;
  __int128 unsigned _15115;
  __int128 unsigned _15131;
  __int128 unsigned _15132;
  __int128 unsigned _15133;
  __int128 unsigned _15134;
  __int128 unsigned _15135;
  __int128 unsigned _15136;
  long unsigned int _15140;
  long unsigned int _15143;
  long unsigned int _15145;
  long unsigned int _15147;
  long unsigned int _15148;
  __int128 unsigned _15149;
  long unsigned int _15151;
  long unsigned int _15153;
  __int128 unsigned _15154;
  long unsigned int _15156;
  __int128 unsigned _15158;
  long unsigned int _15160;
  __int128 unsigned _15162;
  long unsigned int _15164;
  __int128 unsigned _15166;
  __int128 unsigned _15168;
  __int128 unsigned _15171;
  __int128 unsigned _15175;
  __int128 unsigned _15178;
  long unsigned int _15180;
  __int128 unsigned _15182;
  __int128 unsigned _15185;
  __int128 unsigned _15187;
  __int128 unsigned _15190;
  __int128 unsigned _15193;
  __int128 unsigned _15195;
  __int128 unsigned _15201;
  unsigned int ivtmp_15202;
  unsigned int ivtmp_15203;
  unsigned int ivtmp_15204;
  unsigned int ivtmp_15205;
  unsigned int ivtmp_15206;
  unsigned int ivtmp_15207;
  unsigned int ivtmp_15208;
  unsigned int ivtmp_15209;
  unsigned int ivtmp_15210;
  unsigned int ivtmp_15211;
  unsigned int ivtmp_15212;
  unsigned int ivtmp_15213;
  __int128 unsigned _15215;
  __int128 unsigned _15216;
  __int128 unsigned _15217;
  __int128 unsigned _15218;
  __int128 unsigned _15219;
  __int128 unsigned _15220;
  __int128 unsigned _15251;
  __int128 unsigned _15252;
  __int128 unsigned _15253;
  __int128 unsigned _15254;
  __int128 unsigned _15255;

  <bb 2> [local count: 10737418]:
  g0_655 = *z_18(D);
  g1_656 = MEM[(const uint64_t *)z_18(D) + 8B];
  g2_657 = MEM[(const uint64_t *)z_18(D) + 16B];
  g3_658 = MEM[(const uint64_t *)z_18(D) + 24B];
  g4_659 = MEM[(const uint64_t *)z_18(D) + 32B];
  h0_661 = g0_655 w* g0_655;
  g0_662 = g0_655 * 2;
  h1_665 = g0_662 w* g1_656;
  h2_667 = g0_662 w* g2_657;
  h3_669 = g0_662 w* g3_658;
  h4_671 = g0_662 w* g4_659;
  g4_672 = g4_659 * 19;
  _674 = g4_659 w* g4_672;
  h3_675 = h3_669 + _674;
  _676 = g1_656 w* g1_656;
  g1_678 = g1_656 * 2;
  _680 = g2_657 w* g1_678;
  h3_681 = h3_675 + _680;
  _682 = g3_658 w* g1_678;
  h4_683 = h4_671 + _682;
  _684 = g4_672 w* g1_678;
  g3_686 = g3_658 * 19;
  _688 = g3_658 w* g3_686;
  h1_689 = h1_665 + _688;
  _690 = g3_658 * 2;
  _692 = g4_672 w* _690;
  _14 = h2_667 + _692;
  h2_693 = _14 + _676;
  _694 = g2_657 w* g2_657;
  h4_695 = h4_683 + _694;
  g2_696 = g2_657 * 2;
  _698 = g3_686 w* g2_696;
  _15 = _684 + _698;
  h0_699 = _15 + h0_661;
  _700 = g4_672 w* g2_696;
  h1_701 = h1_689 + _700;
  _702 = h2_693 >> 51;
  _703 = _702 & 18446744073709551615;
  h3_704 = h3_681 + _703;
  _705 = (long unsigned int) h2_693;
  g2_706 = _705 & 2251799813685247;
  _707 = h0_699 >> 51;
  _708 = _707 & 18446744073709551615;
  h1_709 = h1_701 + _708;
  _710 = (long unsigned int) h0_699;
  g0_711 = _710 & 2251799813685247;
  _712 = h3_704 >> 51;
  _713 = _712 & 18446744073709551615;
  h4_714 = h4_695 + _713;
  _715 = (long unsigned int) h3_704;
  g3_716 = _715 & 2251799813685247;
  _717 = h1_709 >> 51;
  _718 = (long unsigned int) _717;
  g2_719 = g2_706 + _718;
  _720 = (long unsigned int) h1_709;
  g1_721 = _720 & 2251799813685247;
  _722 = h4_714 >> 51;
  _723 = (long unsigned int) _722;
  _724 = _723 * 19;
  g0_725 = g0_711 + _724;
  _726 = (long unsigned int) h4_714;
  g4_727 = _726 & 2251799813685247;
  _728 = g2_719 >> 51;
  g3_729 = g3_716 + _728;
  g2_730 = g2_719 & 2251799813685247;
  _731 = g0_725 >> 51;
  g1_732 = g1_721 + _731;
  g0_733 = g0_725 & 2251799813685247;
  h0_582 = g0_733 w* g0_733;
  g0_583 = g0_733 * 2;
  h1_586 = g0_583 w* g1_732;
  h2_588 = g0_583 w* g2_730;
  h3_590 = g0_583 w* g3_729;
  h4_592 = g0_583 w* g4_727;
  g4_593 = g4_727 * 19;
  _595 = g4_727 w* g4_593;
  h3_596 = h3_590 + _595;
  _597 = g1_732 w* g1_732;
  h2_598 = h2_588 + _597;
  g1_599 = g1_732 * 2;
  _601 = g2_730 w* g1_599;
  h3_602 = h3_596 + _601;
  _603 = g3_729 w* g1_599;
  _605 = g4_593 w* g1_599;
  g3_607 = g3_729 * 19;
  _609 = g3_729 w* g3_607;
  _611 = g3_729 * 2;
  _613 = g4_593 w* _611;
  h2_614 = h2_598 + _613;
  _615 = g2_730 w* g2_730;
  _438 = h4_592 + _615;
  h4_616 = _438 + _603;
  g2_617 = g2_730 * 2;
  _619 = g3_607 w* g2_617;
  _16 = h0_582 + _619;
  h0_620 = _16 + _605;
  _621 = g4_593 w* g2_617;
  _424 = _609 + _621;
  h1_622 = _424 + h1_586;
  _623 = h2_614 >> 51;
  h3_625 = h3_602 + _623;
  _626 = (long unsigned int) h2_614;
  g2_627 = _626 & 2251799813685247;
  _628 = h0_620 >> 51;
  h1_630 = h1_622 + _628;
  _631 = (long unsigned int) h0_620;
  g0_632 = _631 & 2251799813685247;
  _633 = h3_625 >> 51;
  h4_635 = h4_616 + _633;
  _636 = (long unsigned int) h3_625;
  g3_637 = _636 & 2251799813685247;
  _638 = h1_630 >> 51;
  _639 = (long unsigned int) _638;
  g2_640 = g2_627 + _639;
  _641 = (long unsigned int) h1_630;
  g1_642 = _641 & 2251799813685247;
  _643 = h4_635 >> 51;
  _644 = (long unsigned int) _643;
  _645 = _644 * 19;
  g0_646 = g0_632 + _645;
  _647 = (long unsigned int) h4_635;
  g4_648 = _647 & 2251799813685247;
  _649 = g2_640 >> 51;
  g3_650 = g3_637 + _649;
  g2_651 = g2_640 & 2251799813685247;
  _652 = g0_646 >> 51;
  g1_653 = g1_642 + _652;
  g0_654 = g0_646 & 2251799813685247;
  h0_503 = g0_654 w* g0_654;
  g0_504 = g0_654 * 2;
  h1_507 = g0_504 w* g1_653;
  h2_509 = g0_504 w* g2_651;
  h3_511 = g0_504 w* g3_650;
  h4_513 = g0_504 w* g4_648;
  g4_514 = g4_648 * 19;
  _516 = g4_648 w* g4_514;
  h3_517 = h3_511 + _516;
  _518 = g1_653 w* g1_653;
  h2_519 = h2_509 + _518;
  g1_520 = g1_653 * 2;
  _522 = g2_651 w* g1_520;
  h3_523 = h3_517 + _522;
  _524 = g3_650 w* g1_520;
  _526 = g4_514 w* g1_520;
  g3_528 = g3_650 * 19;
  _530 = g3_650 w* g3_528;
  _532 = g3_650 * 2;
  _534 = g4_514 w* _532;
  h2_535 = h2_519 + _534;
  _536 = g2_651 w* g2_651;
  _2335 = h4_513 + _536;
  h4_537 = _524 + _2335;
  g2_538 = g2_651 * 2;
  _540 = g3_528 w* g2_538;
  _579 = h0_503 + _540;
  h0_541 = _526 + _579;
  _542 = g4_514 w* g2_538;
  _2328 = _530 + _542;
  h1_543 = h1_507 + _2328;
  _544 = h2_535 >> 51;
  h3_546 = h3_523 + _544;
  _547 = (long unsigned int) h2_535;
  g2_548 = _547 & 2251799813685247;
  _549 = h0_541 >> 51;
  h1_551 = h1_543 + _549;
  _552 = (long unsigned int) h0_541;
  g0_553 = _552 & 2251799813685247;
  _554 = h3_546 >> 51;
  h4_556 = h4_537 + _554;
  _557 = (long unsigned int) h3_546;
  g3_558 = _557 & 2251799813685247;
  _559 = h1_551 >> 51;
  _560 = (long unsigned int) _559;
  g2_561 = g2_548 + _560;
  _562 = (long unsigned int) h1_551;
  g1_563 = _562 & 2251799813685247;
  _564 = h4_556 >> 51;
  _565 = (long unsigned int) _564;
  _566 = _565 * 19;
  g0_567 = g0_553 + _566;
  _568 = (long unsigned int) h4_556;
  g4_569 = _568 & 2251799813685247;
  _570 = g2_561 >> 51;
  g3_571 = g3_558 + _570;
  g2_572 = g2_561 & 2251799813685247;
  _573 = g0_567 >> 51;
  g1_574 = g1_563 + _573;
  g0_575 = g0_567 & 2251799813685247;
  h0_396 = g0_575 w* g0_655;
  h1_399 = g1_574 w* g0_655;
  h2_402 = g2_572 w* g0_655;
  h3_405 = g3_571 w* g0_655;
  h4_408 = g4_569 w* g0_655;
  g4_411 = g4_569 * 19;
  _413 = g4_411 w* g1_656;
  _415 = g0_575 w* g1_656;
  _417 = g1_574 w* g1_656;
  _419 = g2_572 w* g1_656;
  _421 = g3_571 w* g1_656;
  g3_425 = g3_571 * 19;
  _427 = g3_425 w* g2_657;
  _429 = g4_411 w* g2_657;
  _431 = g0_575 w* g2_657;
  _433 = g1_574 w* g2_657;
  _435 = g2_572 w* g2_657;
  _40 = h4_408 + _435;
  _50 = _40 + _421;
  g2_439 = g2_572 * 19;
  _441 = g2_439 w* g3_658;
  _14583 = _413 + _441;
  _14582 = _427 + _14583;
  h0_442 = h0_396 + _14582;
  _443 = g3_425 w* g3_658;
  _445 = g4_411 w* g3_658;
  _14585 = h2_402 + _445;
  _447 = g0_575 w* g3_658;
  _449 = g1_574 w* g3_658;
  g1_453 = g1_574 * 19;
  _455 = g1_453 w* g4_659;
  h0_456 = h0_442 + _455;
  _457 = g2_439 w* g4_659;
  _14588 = _429 + _457;
  _14587 = _443 + _14588;
  _2361 = _415 + _14587;
  h1_458 = h1_399 + _2361;
  _459 = g3_425 w* g4_659;
  _14584 = _459 + _14585;
  _2356 = _431 + _14584;
  h2_460 = _417 + _2356;
  _461 = g4_411 w* g4_659;
  _14586 = h3_405 + _461;
  _2359 = _419 + _14586;
  _2358 = _447 + _2359;
  h3_462 = _433 + _2358;
  _463 = g0_575 w* g4_659;
  _58 = _50 + _463;
  h4_464 = _58 + _449;
  _465 = h2_460 >> 51;
  _466 = _465 & 18446744073709551615;
  h3_467 = h3_462 + _466;
  _468 = (long unsigned int) h2_460;
  g2_469 = _468 & 2251799813685247;
  _470 = h0_456 >> 51;
  _471 = _470 & 18446744073709551615;
  h1_472 = h1_458 + _471;
  _473 = (long unsigned int) h0_456;
  g0_474 = _473 & 2251799813685247;
  _475 = h3_467 >> 51;
  _476 = _475 & 18446744073709551615;
  h4_477 = h4_464 + _476;
  _478 = (long unsigned int) h3_467;
  g3_479 = _478 & 2251799813685247;
  _480 = h1_472 >> 51;
  _481 = (long unsigned int) _480;
  g2_482 = g2_469 + _481;
  _483 = (long unsigned int) h1_472;
  g1_484 = _483 & 2251799813685247;
  _485 = h4_477 >> 51;
  _486 = (long unsigned int) _485;
  _487 = _486 * 19;
  g0_488 = g0_474 + _487;
  _489 = (long unsigned int) h4_477;
  g4_490 = _489 & 2251799813685247;
  _491 = g2_482 >> 51;
  g3_492 = g3_479 + _491;
  g2_493 = g2_482 & 2251799813685247;
  _494 = g0_488 >> 51;
  g1_495 = g1_484 + _494;
  g0_496 = g0_488 & 2251799813685247;
  h0_303 = g0_496 w* g0_733;
  h1_305 = g1_495 w* g0_733;
  h2_307 = g2_493 w* g0_733;
  h3_309 = g3_492 w* g0_733;
  h4_311 = g4_490 w* g0_733;
  g4_312 = g4_490 * 19;
  _314 = g4_312 w* g1_732;
  _316 = g0_496 w* g1_732;
  _318 = g1_495 w* g1_732;
  _320 = g2_493 w* g1_732;
  h3_321 = h3_309 + _320;
  _322 = g3_492 w* g1_732;
  g3_324 = g3_492 * 19;
  _326 = g3_324 w* g2_730;
  _328 = g4_312 w* g2_730;
  _330 = g0_496 w* g2_730;
  _332 = g1_495 w* g2_730;
  _334 = g2_493 w* g2_730;
  _14592 = h4_311 + _322;
  _38 = _334 + _14592;
  g2_336 = g2_493 * 19;
  _338 = g2_336 w* g3_729;
  _14589 = _314 + _326;
  _30 = _338 + _14589;
  h0_339 = _30 + h0_303;
  _340 = g3_324 w* g3_729;
  _342 = g4_312 w* g3_729;
  _344 = g0_496 w* g3_729;
  _346 = g1_495 w* g3_729;
  g1_348 = g1_495 * 19;
  _350 = g1_348 w* g4_727;
  h0_351 = h0_339 + _350;
  _352 = g2_336 w* g4_727;
  _14591 = _328 + _340;
  _55 = _352 + _14591;
  _2 = _55 + _316;
  h1_353 = _2 + h1_305;
  _354 = g3_324 w* g4_727;
  _14590 = _342 + _354;
  _2351 = h2_307 + _14590;
  _2350 = _330 + _2351;
  h2_355 = _318 + _2350;
  _356 = g4_312 w* g4_727;
  _2354 = h3_321 + _356;
  _2353 = _344 + _2354;
  h3_357 = _332 + _2353;
  _358 = g0_496 w* g4_727;
  _47 = _38 + _358;
  h4_359 = _47 + _346;
  _360 = h2_355 >> 51;
  h3_362 = h3_357 + _360;
  _363 = (long unsigned int) h2_355;
  g2_364 = _363 & 2251799813685247;
  _365 = h0_351 >> 51;
  h1_367 = h1_353 + _365;
  _368 = (long unsigned int) h0_351;
  g0_369 = _368 & 2251799813685247;
  _370 = h3_362 >> 51;
  h4_372 = h4_359 + _370;
  _373 = (long unsigned int) h3_362;
  g3_374 = _373 & 2251799813685247;
  _375 = h1_367 >> 51;
  _376 = (long unsigned int) _375;
  g2_377 = g2_364 + _376;
  _378 = (long unsigned int) h1_367;
  g1_379 = _378 & 2251799813685247;
  _380 = h4_372 >> 51;
  _381 = (long unsigned int) _380;
  _382 = _381 * 19;
  g0_383 = g0_369 + _382;
  _384 = (long unsigned int) h4_372;
  g4_385 = _384 & 2251799813685247;
  _386 = g2_377 >> 51;
  g3_387 = g3_374 + _386;
  g2_388 = g2_377 & 2251799813685247;
  _389 = g0_383 >> 51;
  g1_390 = g1_379 + _389;
  g0_391 = g0_383 & 2251799813685247;
  h0_229 = g0_391 w* g0_391;
  g0_230 = g0_391 * 2;
  h1_233 = g0_230 w* g1_390;
  h2_235 = g0_230 w* g2_388;
  h3_237 = g0_230 w* g3_387;
  h4_239 = g0_230 w* g4_385;
  g4_240 = g4_385 * 19;
  _242 = g4_385 w* g4_240;
  h3_243 = h3_237 + _242;
  _244 = g1_390 w* g1_390;
  h2_245 = h2_235 + _244;
  g1_246 = g1_390 * 2;
  _248 = g2_388 w* g1_246;
  h3_249 = h3_243 + _248;
  _250 = g3_387 w* g1_246;
  _252 = g4_240 w* g1_246;
  g3_254 = g3_387 * 19;
  _256 = g3_387 w* g3_254;
  _258 = g3_387 * 2;
  _260 = g4_240 w* _258;
  h2_261 = h2_245 + _260;
  _262 = g2_388 w* g2_388;
  _2344 = h4_239 + _262;
  h4_263 = _250 + _2344;
  g2_264 = g2_388 * 2;
  _266 = g3_254 w* g2_264;
  _2341 = h0_229 + _266;
  h0_267 = _252 + _2341;
  _268 = g4_240 w* g2_264;
  _2343 = _256 + _268;
  h1_269 = h1_233 + _2343;
  _270 = h2_261 >> 51;
  h3_272 = h3_249 + _270;
  _273 = (long unsigned int) h2_261;
  g2_274 = _273 & 2251799813685247;
  _275 = h0_267 >> 51;
  h1_277 = h1_269 + _275;
  _278 = (long unsigned int) h0_267;
  g0_279 = _278 & 2251799813685247;
  _280 = h3_272 >> 51;
  h4_282 = h4_263 + _280;
  _283 = (long unsigned int) h3_272;
  g3_284 = _283 & 2251799813685247;
  _285 = h1_277 >> 51;
  _286 = (long unsigned int) _285;
  g2_287 = g2_274 + _286;
  _288 = (long unsigned int) h1_277;
  g1_289 = _288 & 2251799813685247;
  _290 = h4_282 >> 51;
  _291 = (long unsigned int) _290;
  _292 = _291 * 19;
  g0_293 = g0_279 + _292;
  _294 = (long unsigned int) h4_282;
  g4_295 = _294 & 2251799813685247;
  _296 = g2_287 >> 51;
  g3_297 = g3_284 + _296;
  g2_298 = g2_287 & 2251799813685247;
  _299 = g0_293 >> 51;
  g1_300 = g1_289 + _299;
  g0_301 = g0_293 & 2251799813685247;
  h0_139 = g0_301 w* g0_496;
  h1_141 = g1_300 w* g0_496;
  h2_143 = g2_298 w* g0_496;
  h3_145 = g3_297 w* g0_496;
  h4_147 = g4_295 w* g0_496;
  g4_148 = g4_295 * 19;
  _150 = g4_148 w* g1_495;
  _152 = g0_301 w* g1_495;
  _154 = g1_300 w* g1_495;
  _156 = g2_298 w* g1_495;
  _158 = g3_297 w* g1_495;
  g3_160 = g3_297 * 19;
  _162 = g3_160 w* g2_493;
  _164 = g4_148 w* g2_493;
  _166 = g0_301 w* g2_493;
  _168 = g1_300 w* g2_493;
  _170 = g2_298 w* g2_493;
  _2339 = h4_147 + _170;
  _2338 = _158 + _2339;
  g2_172 = g2_298 * 19;
  _174 = g2_172 w* g3_492;
  _14594 = _150 + _174;
  _14593 = _162 + _14594;
  h0_175 = h0_139 + _14593;
  _176 = g3_160 w* g3_492;
  _178 = g4_148 w* g3_492;
  _14596 = h2_143 + _178;
  _180 = g0_301 w* g3_492;
  _182 = g1_300 w* g3_492;
  g1_184 = g1_300 * 19;
  _186 = g1_184 w* g4_490;
  h0_187 = h0_175 + _186;
  _188 = g2_172 w* g4_490;
  _14599 = _164 + _188;
  _14598 = _176 + _14599;
  _2309 = _152 + _14598;
  h1_189 = h1_141 + _2309;
  _190 = g3_160 w* g4_490;
  _14595 = _190 + _14596;
  _2347 = _166 + _14595;
  h2_191 = _154 + _2347;
  _192 = g4_148 w* g4_490;
  _14597 = h3_145 + _192;
  _25 = _156 + _14597;
  _23 = _25 + _180;
  h3_193 = _23 + _168;
  _194 = g0_301 w* g4_490;
  _2337 = _194 + _2338;
  h4_195 = _182 + _2337;
  _196 = h2_191 >> 51;
  h3_198 = h3_193 + _196;
  _199 = (long unsigned int) h2_191;
  g2_200 = _199 & 2251799813685247;
  _201 = h0_187 >> 51;
  h1_203 = h1_189 + _201;
  _204 = (long unsigned int) h0_187;
  g0_205 = _204 & 2251799813685247;
  _206 = h3_198 >> 51;
  h4_208 = h4_195 + _206;
  _209 = (long unsigned int) h3_198;
  g3_210 = _209 & 2251799813685247;
  _211 = h1_203 >> 51;
  _212 = (long unsigned int) _211;
  g2_213 = g2_200 + _212;
  _214 = (long unsigned int) h1_203;
  g1_215 = _214 & 2251799813685247;
  _216 = h4_208 >> 51;
  _217 = (long unsigned int) _216;
  _218 = _217 * 19;
  g0_219 = g0_205 + _218;
  _220 = (long unsigned int) h4_208;
  g4_221 = _220 & 2251799813685247;
  _222 = g2_213 >> 51;
  g3_223 = g3_210 + _222;
  g2_224 = g2_213 & 2251799813685247;
  _225 = g0_219 >> 51;
  g1_226 = g1_215 + _225;
  g0_227 = g0_219 & 2251799813685247;
  h0_65 = g0_227 w* g0_227;
  g0_66 = g0_227 * 2;
  h1_69 = g0_66 w* g1_226;
  h2_71 = g0_66 w* g2_224;
  h3_73 = g0_66 w* g3_223;
  h4_75 = g0_66 w* g4_221;
  g4_76 = g4_221 * 19;
  _78 = g4_221 w* g4_76;
  h3_79 = h3_73 + _78;
  _80 = g1_226 w* g1_226;
  h2_81 = h2_71 + _80;
  g1_82 = g1_226 * 2;
  _84 = g2_224 w* g1_82;
  h3_85 = h3_79 + _84;
  _86 = g3_223 w* g1_82;
  _88 = g4_76 w* g1_82;
  g3_90 = g3_223 * 19;
  _92 = g3_223 w* g3_90;
  _94 = g3_223 * 2;
  _96 = g4_76 w* _94;
  h2_97 = h2_81 + _96;
  _98 = g2_224 w* g2_224;
  _59 = h4_75 + _98;
  h4_99 = _59 + _86;
  g2_100 = g2_224 * 2;
  _102 = g3_90 w* g2_100;
  _2340 = h0_65 + _102;
  h0_103 = _88 + _2340;
  _104 = g4_76 w* g2_100;
  _4 = _92 + _104;
  h1_105 = _4 + h1_69;
  _106 = h2_97 >> 51;
  h3_108 = h3_85 + _106;
  _109 = (long unsigned int) h2_97;
  g2_110 = _109 & 2251799813685247;
  _111 = h0_103 >> 51;
  h1_113 = h1_105 + _111;
  _114 = (long unsigned int) h0_103;
  g0_115 = _114 & 2251799813685247;
  _116 = h3_108 >> 51;
  h4_118 = h4_99 + _116;
  _119 = (long unsigned int) h3_108;
  g3_120 = _119 & 2251799813685247;
  _121 = h1_113 >> 51;
  _122 = (long unsigned int) _121;
  g2_123 = g2_110 + _122;
  _124 = (long unsigned int) h1_113;
  g1_125 = _124 & 2251799813685247;
  _126 = h4_118 >> 51;
  _127 = (long unsigned int) _126;
  _128 = _127 * 19;
  g0_129 = g0_115 + _128;
  _130 = (long unsigned int) h4_118;
  g4_131 = _130 & 2251799813685247;
  _132 = g2_123 >> 51;
  g3_133 = g3_120 + _132;
  g2_134 = g2_123 & 2251799813685247;
  _135 = g0_129 >> 51;
  g1_136 = g1_125 + _135;
  g0_137 = g0_129 & 2251799813685247;
  h0_14891 = g0_137 w* g0_137;
  g0_14890 = g0_137 * 2;
  h1_14887 = g1_136 w* g0_14890;
  h2_14885 = g2_134 w* g0_14890;
  h3_14883 = g3_133 w* g0_14890;
  h4_14881 = g4_131 w* g0_14890;
  g4_14880 = g4_131 * 19;
  _14878 = g4_14880 w* g4_131;
  h3_14877 = _14878 + h3_14883;
  _14876 = g1_136 w* g1_136;
  g1_14875 = g1_136 * 2;
  _14873 = g1_14875 w* g2_134;
  h3_14872 = _14873 + h3_14877;
  _14871 = g1_14875 w* g3_133;
  _14869 = g1_14875 w* g4_14880;
  g3_14868 = g3_133 * 19;
  _14866 = g3_14868 w* g3_133;
  _14864 = g3_133 * 2;
  _14862 = _14864 w* g4_14880;
  _14600 = _14876 + h2_14885;
  h2_14860 = _14600 + _14862;
  _14859 = g2_134 w* g2_134;
  _14603 = _14859 + h4_14881;
  h4_14858 = _14603 + _14871;
  g2_14857 = g2_134 * 2;
  _14855 = g2_14857 w* g3_14868;
  _14601 = _14855 + h0_14891;
  h0_14852 = _14601 + _14869;
  _14851 = g2_14857 w* g4_14880;
  _14602 = _14851 + _14866;
  h1_14850 = _14602 + h1_14887;
  _14849 = h2_14860 >> 51;
  h3_14848 = _14849 + h3_14872;
  _14847 = (long unsigned int) h2_14860;
  g2_14846 = _14847 & 2251799813685247;
  _14845 = h0_14852 >> 51;
  h1_14844 = _14845 + h1_14850;
  _14843 = (long unsigned int) h0_14852;
  g0_14842 = _14843 & 2251799813685247;
  _14841 = h3_14848 >> 51;
  h4_14840 = _14841 + h4_14858;
  _14839 = (long unsigned int) h3_14848;
  g3_14838 = _14839 & 2251799813685247;
  _14837 = h1_14844 >> 51;
  _14836 = (long unsigned int) _14837;
  g2_14835 = _14836 + g2_14846;
  _14834 = (long unsigned int) h1_14844;
  g1_14833 = _14834 & 2251799813685247;
  _14832 = h4_14840 >> 51;
  _14831 = (long unsigned int) _14832;
  _14830 = _14831 * 19;
  g0_14829 = _14830 + g0_14842;
  _14828 = (long unsigned int) h4_14840;
  g4_14827 = _14828 & 2251799813685247;
  _14826 = g2_14835 >> 51;
  g3_14825 = _14826 + g3_14838;
  g2_14824 = g2_14835 & 2251799813685247;
  _14823 = g0_14829 >> 51;
  g1_14822 = _14823 + g1_14833;
  g0_14821 = g0_14829 & 2251799813685247;
  h0_14812 = g0_14821 w* g0_14821;
  g0_14811 = g0_14821 * 2;
  h1_14808 = g1_14822 w* g0_14811;
  h2_14806 = g2_14824 w* g0_14811;
  h3_14804 = g3_14825 w* g0_14811;
  h4_14802 = g4_14827 w* g0_14811;
  g4_14801 = g4_14827 * 19;
  _14799 = g4_14801 w* g4_14827;
  h3_14798 = _14799 + h3_14804;
  _14797 = g1_14822 w* g1_14822;
  g1_14796 = g1_14822 * 2;
  _14794 = g1_14796 w* g2_14824;
  h3_14793 = _14794 + h3_14798;
  _14792 = g1_14796 w* g3_14825;
  _14790 = g1_14796 w* g4_14801;
  g3_14789 = g3_14825 * 19;
  _14786 = g3_14789 w* g3_14825;
  _14784 = g3_14825 * 2;
  _14782 = _14784 w* g4_14801;
  _14604 = _14797 + h2_14806;
  h2_14780 = _14604 + _14782;
  _14779 = g2_14824 w* g2_14824;
  _14607 = _14779 + h4_14802;
  h4_14778 = _14607 + _14792;
  g2_14777 = g2_14824 * 2;
  _14775 = g2_14777 w* g3_14789;
  _14605 = _14775 + h0_14812;
  h0_14773 = _14605 + _14790;
  _14772 = g2_14777 w* g4_14801;
  _14606 = _14772 + _14786;
  h1_14771 = _14606 + h1_14808;
  _14770 = h2_14780 >> 51;
  h3_14769 = _14770 + h3_14793;
  _14768 = (long unsigned int) h2_14780;
  g2_14767 = _14768 & 2251799813685247;
  _14766 = h0_14773 >> 51;
  h1_14765 = _14766 + h1_14771;
  _14764 = (long unsigned int) h0_14773;
  g0_14763 = _14764 & 2251799813685247;
  _14762 = h3_14769 >> 51;
  h4_14761 = _14762 + h4_14778;
  _14760 = (long unsigned int) h3_14769;
  g3_14759 = _14760 & 2251799813685247;
  _14758 = h1_14765 >> 51;
  _14757 = (long unsigned int) _14758;
  g2_14756 = _14757 + g2_14767;
  _14755 = (long unsigned int) h1_14765;
  g1_14754 = _14755 & 2251799813685247;
  _14753 = h4_14761 >> 51;
  _14752 = (long unsigned int) _14753;
  _14751 = _14752 * 19;
  g0_14750 = _14751 + g0_14763;
  _14749 = (long unsigned int) h4_14761;
  g4_14748 = _14749 & 2251799813685247;
  _14747 = g2_14756 >> 51;
  g3_14746 = _14747 + g3_14759;
  g2_14745 = g2_14756 & 2251799813685247;
  _14744 = g0_14750 >> 51;
  g1_14743 = _14744 + g1_14754;
  g0_14742 = g0_14750 & 2251799813685247;
  h0_14733 = g0_14742 w* g0_14742;
  g0_14732 = g0_14742 * 2;
  h1_14729 = g1_14743 w* g0_14732;
  h2_14727 = g2_14745 w* g0_14732;
  h3_14725 = g3_14746 w* g0_14732;
  h4_14723 = g4_14748 w* g0_14732;
  g4_14722 = g4_14748 * 19;
  _14719 = g4_14722 w* g4_14748;
  h3_14718 = _14719 + h3_14725;
  _14717 = g1_14743 w* g1_14743;
  g1_14716 = g1_14743 * 2;
  _14714 = g1_14716 w* g2_14745;
  h3_14713 = _14714 + h3_14718;
  _14712 = g1_14716 w* g3_14746;
  _14710 = g1_14716 w* g4_14722;
  g3_14709 = g3_14746 * 19;
  _14707 = g3_14709 w* g3_14746;
  _14705 = g3_14746 * 2;
  _14703 = _14705 w* g4_14722;
  _14608 = _14717 + h2_14727;
  h2_14701 = _14608 + _14703;
  _14700 = g2_14745 w* g2_14745;
  _14611 = _14700 + h4_14723;
  h4_14699 = _14611 + _14712;
  g2_14698 = g2_14745 * 2;
  _14696 = g2_14698 w* g3_14709;
  _14609 = _14696 + h0_14733;
  h0_14694 = _14609 + _14710;
  _14693 = g2_14698 w* g4_14722;
  _14610 = _14693 + _14707;
  h1_14692 = _14610 + h1_14729;
  _14691 = h2_14701 >> 51;
  h3_14690 = _14691 + h3_14713;
  _14689 = (long unsigned int) h2_14701;
  g2_14688 = _14689 & 2251799813685247;
  _14687 = h0_14694 >> 51;
  h1_14686 = _14687 + h1_14692;
  _14685 = (long unsigned int) h0_14694;
  g0_14684 = _14685 & 2251799813685247;
  _14683 = h3_14690 >> 51;
  h4_14682 = _14683 + h4_14699;
  _14681 = (long unsigned int) h3_14690;
  g3_14680 = _14681 & 2251799813685247;
  _14679 = h1_14686 >> 51;
  _14678 = (long unsigned int) _14679;
  g2_14677 = _14678 + g2_14688;
  _14676 = (long unsigned int) h1_14686;
  g1_14675 = _14676 & 2251799813685247;
  _14674 = h4_14682 >> 51;
  _14673 = (long unsigned int) _14674;
  _14672 = _14673 * 19;
  g0_14671 = _14672 + g0_14684;
  _14670 = (long unsigned int) h4_14682;
  g4_14669 = _14670 & 2251799813685247;
  _14668 = g2_14677 >> 51;
  g3_14667 = _14668 + g3_14680;
  g2_14666 = g2_14677 & 2251799813685247;
  _14665 = g0_14671 >> 51;
  g1_14664 = _14665 + g1_14675;
  g0_14663 = g0_14671 & 2251799813685247;
  h0_735 = g0_14663 w* g0_14663;
  g0_736 = g0_14663 * 2;
  h1_739 = g0_736 w* g1_14664;
  h2_741 = g0_736 w* g2_14666;
  h3_743 = g0_736 w* g3_14667;
  h4_745 = g0_736 w* g4_14669;
  g4_746 = g4_14669 * 19;
  _748 = g4_14669 w* g4_746;
  h3_749 = h3_743 + _748;
  _750 = g1_14664 w* g1_14664;
  g1_752 = g1_14664 * 2;
  _754 = g2_14666 w* g1_752;
  h3_755 = h3_749 + _754;
  _756 = g3_14667 w* g1_752;
  _758 = g4_746 w* g1_752;
  g3_760 = g3_14667 * 19;
  _762 = g3_14667 w* g3_760;
  _764 = g3_14667 * 2;
  _766 = g4_746 w* _764;
  _14612 = h2_741 + _750;
  h2_767 = _766 + _14612;
  _768 = g2_14666 w* g2_14666;
  _14615 = h4_745 + _768;
  h4_769 = _756 + _14615;
  g2_770 = g2_14666 * 2;
  _772 = g3_760 w* g2_770;
  _14613 = h0_735 + _772;
  h0_773 = _758 + _14613;
  _774 = g4_746 w* g2_770;
  _14614 = _762 + _774;
  h1_775 = h1_739 + _14614;
  _776 = h2_767 >> 51;
  h3_778 = h3_755 + _776;
  _779 = (long unsigned int) h2_767;
  g2_780 = _779 & 2251799813685247;
  _781 = h0_773 >> 51;
  h1_783 = h1_775 + _781;
  _784 = (long unsigned int) h0_773;
  g0_785 = _784 & 2251799813685247;
  _786 = h3_778 >> 51;
  h4_788 = h4_769 + _786;
  _789 = (long unsigned int) h3_778;
  g3_790 = _789 & 2251799813685247;
  _791 = h1_783 >> 51;
  _792 = (long unsigned int) _791;
  g2_793 = g2_780 + _792;
  _794 = (long unsigned int) h1_783;
  g1_795 = _794 & 2251799813685247;
  _796 = h4_788 >> 51;
  _797 = (long unsigned int) _796;
  _798 = _797 * 19;
  g0_799 = g0_785 + _798;
  _800 = (long unsigned int) h4_788;
  g4_801 = _800 & 2251799813685247;
  _802 = g2_793 >> 51;
  g3_803 = g3_790 + _802;
  g2_804 = g2_793 & 2251799813685247;
  _805 = g0_799 >> 51;
  g1_806 = g1_795 + _805;
  g0_807 = g0_799 & 2251799813685247;
  h0_883 = g0_227 w* g0_807;
  h1_884 = g1_226 w* g0_807;
  h2_885 = g2_224 w* g0_807;
  h3_886 = g3_223 w* g0_807;
  h4_887 = g4_221 w* g0_807;
  _889 = g4_76 w* g1_806;
  _891 = g0_227 w* g1_806;
  _893 = g1_226 w* g1_806;
  _895 = g2_224 w* g1_806;
  _897 = g3_223 w* g1_806;
  _900 = g3_90 w* g2_804;
  _902 = g4_76 w* g2_804;
  _904 = g0_227 w* g2_804;
  _906 = g1_226 w* g2_804;
  _908 = g2_224 w* g2_804;
  g2_911 = g2_224 * 19;
  _913 = g3_803 w* g2_911;
  _915 = g3_90 w* g3_803;
  _917 = g4_76 w* g3_803;
  _919 = g0_227 w* g3_803;
  _921 = g1_226 w* g3_803;
  g1_924 = g1_226 * 19;
  _926 = g4_801 w* g1_924;
  _2327 = _900 + _926;
  _28 = _913 + _2327;
  _35 = _28 + h0_883;
  h0_927 = _35 + _889;
  _928 = g2_911 w* g4_801;
  _45 = _902 + _928;
  _52 = _45 + _915;
  _63 = _52 + h1_884;
  h1_929 = _63 + _891;
  _930 = g3_90 w* g4_801;
  _2331 = _904 + _930;
  _2330 = _917 + _2331;
  _2329 = h2_885 + _2330;
  h2_931 = _893 + _2329;
  _932 = g4_76 w* g4_801;
  _5 = _906 + _932;
  _2333 = _5 + _919;
  _2332 = h3_886 + _2333;
  h3_933 = _895 + _2332;
  _934 = g0_227 w* g4_801;
  _423 = _908 + _934;
  _19 = _423 + _921;
  _36 = _19 + h4_887;
  h4_935 = _36 + _897;
  _936 = h2_931 >> 51;
  h3_938 = h3_933 + _936;
  _939 = (long unsigned int) h2_931;
  g2_940 = _939 & 2251799813685247;
  _941 = h0_927 >> 51;
  h1_943 = h1_929 + _941;
  _944 = (long unsigned int) h0_927;
  g0_945 = _944 & 2251799813685247;
  _946 = h3_938 >> 51;
  h4_948 = h4_935 + _946;
  _949 = (long unsigned int) h3_938;
  g3_950 = _949 & 2251799813685247;
  _951 = h1_943 >> 51;
  _952 = (long unsigned int) _951;
  g2_953 = g2_940 + _952;
  _954 = (long unsigned int) h1_943;
  g1_955 = _954 & 2251799813685247;
  _956 = h4_948 >> 51;
  _957 = (long unsigned int) _956;
  _958 = _957 * 19;
  g0_959 = g0_945 + _958;
  _960 = (long unsigned int) h4_948;
  g4_961 = _960 & 2251799813685247;
  _962 = g2_953 >> 51;
  g3_963 = g3_950 + _962;
  g2_964 = g2_953 & 2251799813685247;
  _965 = g0_959 >> 51;
  g1_966 = g1_955 + _965;
  g0_967 = g0_959 & 2251799813685247;
  h0_809 = g0_967 w* g0_967;
  g0_810 = g0_967 * 2;
  h1_813 = g0_810 w* g1_966;
  h2_815 = g0_810 w* g2_964;
  h3_817 = g0_810 w* g3_963;
  h4_819 = g0_810 w* g4_961;
  g4_820 = g4_961 * 19;
  _822 = g4_961 w* g4_820;
  h3_823 = h3_817 + _822;
  _824 = g1_966 w* g1_966;
  h2_825 = h2_815 + _824;
  g1_826 = g1_966 * 2;
  _828 = g2_964 w* g1_826;
  h3_829 = h3_823 + _828;
  _830 = g3_963 w* g1_826;
  _832 = g4_820 w* g1_826;
  g3_834 = g3_963 * 19;
  _836 = g3_963 w* g3_834;
  _838 = g3_963 * 2;
  _840 = g4_820 w* _838;
  h2_841 = h2_825 + _840;
  _842 = g2_964 w* g2_964;
  _501 = h4_819 + _842;
  h4_843 = _501 + _830;
  g2_844 = g2_964 * 2;
  _846 = g3_834 w* g2_844;
  _2318 = h0_809 + _846;
  h0_847 = _832 + _2318;
  _848 = g4_820 w* g2_844;
  _498 = _836 + _848;
  h1_849 = _498 + h1_813;
  _850 = h2_841 >> 51;
  h3_852 = h3_829 + _850;
  _853 = (long unsigned int) h2_841;
  g2_854 = _853 & 2251799813685247;
  _855 = h0_847 >> 51;
  h1_857 = h1_849 + _855;
  _858 = (long unsigned int) h0_847;
  g0_859 = _858 & 2251799813685247;
  _860 = h3_852 >> 51;
  h4_862 = h4_843 + _860;
  _863 = (long unsigned int) h3_852;
  g3_864 = _863 & 2251799813685247;
  _865 = h1_857 >> 51;
  _866 = (long unsigned int) _865;
  g2_867 = g2_854 + _866;
  _868 = (long unsigned int) h1_857;
  g1_869 = _868 & 2251799813685247;
  _870 = h4_862 >> 51;
  _871 = (long unsigned int) _870;
  _872 = _871 * 19;
  g0_873 = g0_859 + _872;
  _874 = (long unsigned int) h4_862;
  g4_875 = _874 & 2251799813685247;
  _876 = g2_867 >> 51;
  g3_877 = g3_864 + _876;
  g2_878 = g2_867 & 2251799813685247;
  _879 = g0_873 >> 51;
  g1_880 = g1_869 + _879;
  g0_881 = g0_873 & 2251799813685247;

  <bb 3> [local count: 96636760]:
  # t2$32_2389 = PHI <g4_875(2), g4_1035(3)>
  # t2$24_2395 = PHI <g3_877(2), g3_1037(3)>
  # t2$16_2402 = PHI <g2_878(2), g2_1038(3)>
  # t2_2408 = PHI <g0_881(2), g0_1041(3)>
  # t2$8_2409 = PHI <g1_880(2), g1_1040(3)>
  # ivtmp_15203 = PHI <9(2), ivtmp_15202(3)>
  h0_969 = t2_2408 w* t2_2408;
  g0_970 = t2_2408 * 2;
  h1_973 = g0_970 w* t2$8_2409;
  h2_975 = g0_970 w* t2$16_2402;
  h3_977 = g0_970 w* t2$24_2395;
  h4_979 = g0_970 w* t2$32_2389;
  g4_980 = t2$32_2389 * 19;
  _982 = t2$32_2389 w* g4_980;
  h3_983 = h3_977 + _982;
  _984 = t2$8_2409 w* t2$8_2409;
  g1_986 = t2$8_2409 * 2;
  _988 = t2$16_2402 w* g1_986;
  h3_989 = h3_983 + _988;
  _990 = t2$24_2395 w* g1_986;
  h4_991 = h4_979 + _990;
  _992 = g4_980 w* g1_986;
  g3_994 = t2$24_2395 * 19;
  _996 = t2$24_2395 w* g3_994;
  h1_997 = h1_973 + _996;
  _998 = t2$24_2395 * 2;
  _1000 = g4_980 w* _998;
  _2324 = h2_975 + _1000;
  h2_1001 = _984 + _2324;
  _1002 = t2$16_2402 w* t2$16_2402;
  h4_1003 = h4_991 + _1002;
  g2_1004 = t2$16_2402 * 2;
  _1006 = g3_994 w* g2_1004;
  _2326 = _992 + _1006;
  h0_1007 = h0_969 + _2326;
  _1008 = g4_980 w* g2_1004;
  h1_1009 = h1_997 + _1008;
  _1010 = h2_1001 >> 51;
  h3_1012 = h3_989 + _1010;
  _1013 = (long unsigned int) h2_1001;
  g2_1014 = _1013 & 2251799813685247;
  _1015 = h0_1007 >> 51;
  h1_1017 = h1_1009 + _1015;
  _1018 = (long unsigned int) h0_1007;
  g0_1019 = _1018 & 2251799813685247;
  _1020 = h3_1012 >> 51;
  h4_1022 = h4_1003 + _1020;
  _1023 = (long unsigned int) h3_1012;
  g3_1024 = _1023 & 2251799813685247;
  _1025 = h1_1017 >> 51;
  _1026 = (long unsigned int) _1025;
  g2_1027 = g2_1014 + _1026;
  _1028 = (long unsigned int) h1_1017;
  g1_1029 = _1028 & 2251799813685247;
  _1030 = h4_1022 >> 51;
  _1031 = (long unsigned int) _1030;
  _1032 = _1031 * 19;
  g0_1033 = g0_1019 + _1032;
  _1034 = (long unsigned int) h4_1022;
  g4_1035 = _1034 & 2251799813685247;
  _1036 = g2_1027 >> 51;
  g3_1037 = g3_1024 + _1036;
  g2_1038 = g2_1027 & 2251799813685247;
  _1039 = g0_1033 >> 51;
  g1_1040 = g1_1029 + _1039;
  g0_1041 = g0_1033 & 2251799813685247;
  ivtmp_15202 = ivtmp_15203 + 4294967295;
  if (ivtmp_15202 != 0)
    goto <bb 3>; [88.89%]
  else
    goto <bb 4>; [11.11%]

  <bb 4> [local count: 10737418]:
  h0_1117 = g0_967 w* g0_1041;
  h1_1118 = g1_966 w* g0_1041;
  h2_1119 = g2_964 w* g0_1041;
  h3_1120 = g3_963 w* g0_1041;
  h4_1121 = g4_961 w* g0_1041;
  _1123 = g4_820 w* g1_1040;
  _1125 = g0_967 w* g1_1040;
  _1127 = g1_966 w* g1_1040;
  _1129 = g2_964 w* g1_1040;
  _1131 = g3_963 w* g1_1040;
  _1134 = g3_834 w* g2_1038;
  _1136 = g4_820 w* g2_1038;
  _1138 = g0_967 w* g2_1038;
  _1140 = g1_966 w* g2_1038;
  _1142 = g2_964 w* g2_1038;
  g2_1145 = g2_964 * 19;
  _1147 = g3_1037 w* g2_1145;
  _1149 = g3_834 w* g3_1037;
  _1151 = g4_820 w* g3_1037;
  _1153 = g0_967 w* g3_1037;
  _1155 = g1_966 w* g3_1037;
  g1_1158 = g1_966 * 19;
  _1160 = g4_1035 w* g1_1158;
  _14618 = h0_1117 + _1123;
  _14617 = _1134 + _14618;
  _14616 = _1147 + _14617;
  h0_1161 = _1160 + _14616;
  _1162 = g2_1145 w* g4_1035;
  _14627 = h1_1118 + _1125;
  _14626 = _1136 + _14627;
  _14625 = _1149 + _14626;
  h1_1163 = _1162 + _14625;
  _1164 = g3_834 w* g4_1035;
  _14621 = h2_1119 + _1127;
  _14620 = _1138 + _14621;
  _14619 = _1151 + _14620;
  h2_1165 = _1164 + _14619;
  _1166 = g4_820 w* g4_1035;
  _14624 = h3_1120 + _1129;
  _14623 = _1140 + _14624;
  _14622 = _1153 + _14623;
  h3_1167 = _1166 + _14622;
  _1168 = g0_967 w* g4_1035;
  _14630 = h4_1121 + _1131;
  _14629 = _1142 + _14630;
  _14628 = _1155 + _14629;
  h4_1169 = _1168 + _14628;
  _1170 = h2_1165 >> 51;
  h3_1172 = h3_1167 + _1170;
  _1173 = (long unsigned int) h2_1165;
  g2_1174 = _1173 & 2251799813685247;
  _1175 = h0_1161 >> 51;
  h1_1177 = h1_1163 + _1175;
  _1178 = (long unsigned int) h0_1161;
  g0_1179 = _1178 & 2251799813685247;
  _1180 = h3_1172 >> 51;
  h4_1182 = h4_1169 + _1180;
  _1183 = (long unsigned int) h3_1172;
  g3_1184 = _1183 & 2251799813685247;
  _1185 = h1_1177 >> 51;
  _1186 = (long unsigned int) _1185;
  g2_1187 = g2_1174 + _1186;
  _1188 = (long unsigned int) h1_1177;
  g1_1189 = _1188 & 2251799813685247;
  _1190 = h4_1182 >> 51;
  _1191 = (long unsigned int) _1190;
  _1192 = _1191 * 19;
  g0_1193 = g0_1179 + _1192;
  _1194 = (long unsigned int) h4_1182;
  g4_1195 = _1194 & 2251799813685247;
  _1196 = g2_1187 >> 51;
  g3_1197 = g3_1184 + _1196;
  g2_1198 = g2_1187 & 2251799813685247;
  _1199 = g0_1193 >> 51;
  g1_1200 = g1_1189 + _1199;
  g0_1201 = g0_1193 & 2251799813685247;
  h0_1043 = g0_1201 w* g0_1201;
  g0_1044 = g0_1201 * 2;
  h1_1047 = g0_1044 w* g1_1200;
  h2_1049 = g0_1044 w* g2_1198;
  h3_1051 = g0_1044 w* g3_1197;
  h4_1053 = g0_1044 w* g4_1195;
  g4_1054 = g4_1195 * 19;
  _1056 = g4_1195 w* g4_1054;
  h3_1057 = h3_1051 + _1056;
  _1058 = g1_1200 w* g1_1200;
  h2_1059 = h2_1049 + _1058;
  g1_1060 = g1_1200 * 2;
  _1062 = g2_1198 w* g1_1060;
  h3_1063 = h3_1057 + _1062;
  _1064 = g3_1197 w* g1_1060;
  _1066 = g4_1054 w* g1_1060;
  g3_1068 = g3_1197 * 19;
  _1070 = g3_1197 w* g3_1068;
  _1072 = g3_1197 * 2;
  _1074 = g4_1054 w* _1072;
  h2_1075 = h2_1059 + _1074;
  _1076 = g2_1198 w* g2_1198;
  _20 = h4_1053 + _1076;
  h4_1077 = _20 + _1064;
  g2_1078 = g2_1198 * 2;
  _1080 = g3_1068 w* g2_1078;
  _42 = h0_1043 + _1080;
  h0_1081 = _42 + _1066;
  _1082 = g4_1054 w* g2_1078;
  _33 = _1070 + _1082;
  h1_1083 = _33 + h1_1047;
  _1084 = h2_1075 >> 51;
  h3_1086 = h3_1063 + _1084;
  _1087 = (long unsigned int) h2_1075;
  g2_1088 = _1087 & 2251799813685247;
  _1089 = h0_1081 >> 51;
  h1_1091 = h1_1083 + _1089;
  _1092 = (long unsigned int) h0_1081;
  g0_1093 = _1092 & 2251799813685247;
  _1094 = h3_1086 >> 51;
  h4_1096 = h4_1077 + _1094;
  _1097 = (long unsigned int) h3_1086;
  g3_1098 = _1097 & 2251799813685247;
  _1099 = h1_1091 >> 51;
  _1100 = (long unsigned int) _1099;
  g2_1101 = g2_1088 + _1100;
  _1102 = (long unsigned int) h1_1091;
  g1_1103 = _1102 & 2251799813685247;
  _1104 = h4_1096 >> 51;
  _1105 = (long unsigned int) _1104;
  _1106 = _1105 * 19;
  g0_1107 = g0_1093 + _1106;
  _1108 = (long unsigned int) h4_1096;
  g4_1109 = _1108 & 2251799813685247;
  _1110 = g2_1101 >> 51;
  g3_1111 = g3_1098 + _1110;
  g2_1112 = g2_1101 & 2251799813685247;
  _1113 = g0_1107 >> 51;
  g1_1114 = g1_1103 + _1113;
  g0_1115 = g0_1107 & 2251799813685247;

  <bb 5> [local count: 204010939]:
  # t3_2380 = PHI <g0_1115(4), g0_1275(5)>
  # t3$8_2382 = PHI <g1_1114(4), g1_1274(5)>
  # t3$16_2384 = PHI <g2_1112(4), g2_1272(5)>
  # t3$24_2414 = PHI <g3_1111(4), g3_1271(5)>
  # t3$32_2416 = PHI <g4_1109(4), g4_1269(5)>
  # ivtmp_15205 = PHI <19(4), ivtmp_15204(5)>
  h0_1203 = t3_2380 w* t3_2380;
  g0_1204 = t3_2380 * 2;
  h1_1207 = g0_1204 w* t3$8_2382;
  h2_1209 = g0_1204 w* t3$16_2384;
  h3_1211 = g0_1204 w* t3$24_2414;
  h4_1213 = g0_1204 w* t3$32_2416;
  g4_1214 = t3$32_2416 * 19;
  _1216 = t3$32_2416 w* g4_1214;
  h3_1217 = h3_1211 + _1216;
  _1218 = t3$8_2382 w* t3$8_2382;
  g1_1220 = t3$8_2382 * 2;
  _1222 = t3$16_2384 w* g1_1220;
  h3_1223 = h3_1217 + _1222;
  _1224 = t3$24_2414 w* g1_1220;
  h4_1225 = h4_1213 + _1224;
  _1226 = g4_1214 w* g1_1220;
  g3_1228 = t3$24_2414 * 19;
  _1230 = t3$24_2414 w* g3_1228;
  h1_1231 = h1_1207 + _1230;
  _1232 = t3$24_2414 * 2;
  _1234 = g4_1214 w* _1232;
  _397 = h2_1209 + _1234;
  h2_1235 = _397 + _1218;
  _1236 = t3$16_2384 w* t3$16_2384;
  h4_1237 = h4_1225 + _1236;
  g2_1238 = t3$16_2384 * 2;
  _1240 = g3_1228 w* g2_1238;
  _1709 = _1226 + _1240;
  h0_1241 = h0_1203 + _1709;
  _1242 = g4_1214 w* g2_1238;
  h1_1243 = h1_1231 + _1242;
  _1244 = h2_1235 >> 51;
  h3_1246 = h3_1223 + _1244;
  _1247 = (long unsigned int) h2_1235;
  g2_1248 = _1247 & 2251799813685247;
  _1249 = h0_1241 >> 51;
  h1_1251 = h1_1243 + _1249;
  _1252 = (long unsigned int) h0_1241;
  g0_1253 = _1252 & 2251799813685247;
  _1254 = h3_1246 >> 51;
  h4_1256 = h4_1237 + _1254;
  _1257 = (long unsigned int) h3_1246;
  g3_1258 = _1257 & 2251799813685247;
  _1259 = h1_1251 >> 51;
  _1260 = (long unsigned int) _1259;
  g2_1261 = g2_1248 + _1260;
  _1262 = (long unsigned int) h1_1251;
  g1_1263 = _1262 & 2251799813685247;
  _1264 = h4_1256 >> 51;
  _1265 = (long unsigned int) _1264;
  _1266 = _1265 * 19;
  g0_1267 = g0_1253 + _1266;
  _1268 = (long unsigned int) h4_1256;
  g4_1269 = _1268 & 2251799813685247;
  _1270 = g2_1261 >> 51;
  g3_1271 = g3_1258 + _1270;
  g2_1272 = g2_1261 & 2251799813685247;
  _1273 = g0_1267 >> 51;
  g1_1274 = g1_1263 + _1273;
  g0_1275 = g0_1267 & 2251799813685247;
  ivtmp_15204 = ivtmp_15205 + 4294967295;
  if (ivtmp_15204 != 0)
    goto <bb 5>; [94.74%]
  else
    goto <bb 6>; [5.26%]

  <bb 6> [local count: 10737418]:
  h0_1277 = g0_1201 w* g0_1275;
  h1_1278 = g1_1200 w* g0_1275;
  h2_1279 = g2_1198 w* g0_1275;
  h3_1280 = g3_1197 w* g0_1275;
  h4_1281 = g4_1195 w* g0_1275;
  _1283 = g4_1054 w* g1_1274;
  _1285 = g0_1201 w* g1_1274;
  _1287 = g1_1200 w* g1_1274;
  _1289 = g2_1198 w* g1_1274;
  _1291 = g3_1197 w* g1_1274;
  _1294 = g3_1068 w* g2_1272;
  _1296 = g4_1054 w* g2_1272;
  _1298 = g0_1201 w* g2_1272;
  _1300 = g1_1200 w* g2_1272;
  _1302 = g2_1198 w* g2_1272;
  g2_1305 = g2_1198 * 19;
  _1307 = g3_1271 w* g2_1305;
  _1309 = g3_1068 w* g3_1271;
  _1311 = g4_1054 w* g3_1271;
  _1313 = g0_1201 w* g3_1271;
  _1315 = g1_1200 w* g3_1271;
  g1_1318 = g1_1200 * 19;
  _1320 = g4_1269 w* g1_1318;
  _14633 = h0_1277 + _1283;
  _14632 = _1294 + _14633;
  _14631 = _1307 + _14632;
  h0_1321 = _1320 + _14631;
  _1322 = g2_1305 w* g4_1269;
  _14642 = h1_1278 + _1285;
  _14641 = _1296 + _14642;
  _14640 = _1309 + _14641;
  h1_1323 = _1322 + _14640;
  _1324 = g3_1068 w* g4_1269;
  _14636 = h2_1279 + _1287;
  _14635 = _1298 + _14636;
  _14634 = _1311 + _14635;
  h2_1325 = _1324 + _14634;
  _1326 = g4_1054 w* g4_1269;
  _14639 = h3_1280 + _1289;
  _14638 = _1300 + _14639;
  _14637 = _1313 + _14638;
  h3_1327 = _1326 + _14637;
  _1328 = g0_1201 w* g4_1269;
  _14645 = h4_1281 + _1291;
  _14644 = _1302 + _14645;
  _14643 = _1315 + _14644;
  h4_1329 = _1328 + _14643;
  _1330 = h2_1325 >> 51;
  h3_1332 = h3_1327 + _1330;
  _1333 = (long unsigned int) h2_1325;
  g2_1334 = _1333 & 2251799813685247;
  _1335 = h0_1321 >> 51;
  h1_1337 = h1_1323 + _1335;
  _1338 = (long unsigned int) h0_1321;
  g0_1339 = _1338 & 2251799813685247;
  _1340 = h3_1332 >> 51;
  h4_1342 = h4_1329 + _1340;
  _1343 = (long unsigned int) h3_1332;
  g3_1344 = _1343 & 2251799813685247;
  _1345 = h1_1337 >> 51;
  _1346 = (long unsigned int) _1345;
  g2_1347 = g2_1334 + _1346;
  _1348 = (long unsigned int) h1_1337;
  g1_1349 = _1348 & 2251799813685247;
  _1350 = h4_1342 >> 51;
  _1351 = (long unsigned int) _1350;
  _1352 = _1351 * 19;
  g0_1353 = g0_1339 + _1352;
  _1354 = (long unsigned int) h4_1342;
  g4_1355 = _1354 & 2251799813685247;
  _1356 = g2_1347 >> 51;
  g3_1357 = g3_1344 + _1356;
  g2_1358 = g2_1347 & 2251799813685247;
  _1359 = g0_1353 >> 51;
  g1_1360 = g1_1349 + _1359;
  g0_1361 = g0_1353 & 2251799813685247;

  <bb 7> [local count: 107385990]:
  # t2$32_2387 = PHI <g4_1355(6), g4_1429(7)>
  # t2$24_2392 = PHI <g3_1357(6), g3_1431(7)>
  # t2$16_2399 = PHI <g2_1358(6), g2_1432(7)>
  # t2$8_2407 = PHI <g1_1360(6), g1_1434(7)>
  # t2_2411 = PHI <g0_1361(6), g0_1435(7)>
  # ivtmp_15207 = PHI <10(6), ivtmp_15206(7)>
  h0_1363 = t2_2411 w* t2_2411;
  g0_1364 = t2_2411 * 2;
  h1_1367 = g0_1364 w* t2$8_2407;
  h2_1369 = g0_1364 w* t2$16_2399;
  h3_1371 = g0_1364 w* t2$24_2392;
  h4_1373 = g0_1364 w* t2$32_2387;
  g4_1374 = t2$32_2387 * 19;
  _1376 = t2$32_2387 w* g4_1374;
  h3_1377 = h3_1371 + _1376;
  _1378 = t2$8_2407 w* t2$8_2407;
  g1_1380 = t2$8_2407 * 2;
  _1382 = t2$16_2399 w* g1_1380;
  h3_1383 = h3_1377 + _1382;
  _1384 = t2$24_2392 w* g1_1380;
  h4_1385 = h4_1373 + _1384;
  _1386 = g4_1374 w* g1_1380;
  g3_1388 = t2$24_2392 * 19;
  _1390 = t2$24_2392 w* g3_1388;
  h1_1391 = h1_1367 + _1390;
  _1392 = t2$24_2392 * 2;
  _1394 = g4_1374 w* _1392;
  _112 = h2_1369 + _1394;
  h2_1395 = _112 + _1378;
  _1396 = t2$16_2399 w* t2$16_2399;
  h4_1397 = h4_1385 + _1396;
  g2_1398 = t2$16_2399 * 2;
  _1400 = g3_1388 w* g2_1398;
  _197 = _1386 + _1400;
  h0_1401 = _197 + h0_1363;
  _1402 = g4_1374 w* g2_1398;
  h1_1403 = h1_1391 + _1402;
  _1404 = h2_1395 >> 51;
  h3_1406 = h3_1383 + _1404;
  _1407 = (long unsigned int) h2_1395;
  g2_1408 = _1407 & 2251799813685247;
  _1409 = h0_1401 >> 51;
  h1_1411 = h1_1403 + _1409;
  _1412 = (long unsigned int) h0_1401;
  g0_1413 = _1412 & 2251799813685247;
  _1414 = h3_1406 >> 51;
  h4_1416 = h4_1397 + _1414;
  _1417 = (long unsigned int) h3_1406;
  g3_1418 = _1417 & 2251799813685247;
  _1419 = h1_1411 >> 51;
  _1420 = (long unsigned int) _1419;
  g2_1421 = g2_1408 + _1420;
  _1422 = (long unsigned int) h1_1411;
  g1_1423 = _1422 & 2251799813685247;
  _1424 = h4_1416 >> 51;
  _1425 = (long unsigned int) _1424;
  _1426 = _1425 * 19;
  g0_1427 = g0_1413 + _1426;
  _1428 = (long unsigned int) h4_1416;
  g4_1429 = _1428 & 2251799813685247;
  _1430 = g2_1421 >> 51;
  g3_1431 = g3_1418 + _1430;
  g2_1432 = g2_1421 & 2251799813685247;
  _1433 = g0_1427 >> 51;
  g1_1434 = g1_1423 + _1433;
  g0_1435 = g0_1427 & 2251799813685247;
  ivtmp_15206 = ivtmp_15207 + 4294967295;
  if (ivtmp_15206 != 0)
    goto <bb 7>; [90.00%]
  else
    goto <bb 8>; [10.00%]

  <bb 8> [local count: 10737418]:
  h0_1511 = g0_967 w* g0_1435;
  h1_1512 = g1_966 w* g0_1435;
  h2_1513 = g2_964 w* g0_1435;
  h3_1514 = g3_963 w* g0_1435;
  h4_1515 = g4_961 w* g0_1435;
  _1517 = g4_820 w* g1_1434;
  _1519 = g0_967 w* g1_1434;
  _1521 = g1_966 w* g1_1434;
  _1523 = g2_964 w* g1_1434;
  _1525 = g3_963 w* g1_1434;
  _1528 = g3_834 w* g2_1432;
  _1530 = g4_820 w* g2_1432;
  _1532 = g0_967 w* g2_1432;
  _1534 = g1_966 w* g2_1432;
  _1536 = g2_964 w* g2_1432;
  _1539 = g2_1145 w* g3_1431;
  _1541 = g3_834 w* g3_1431;
  _1543 = g4_820 w* g3_1431;
  _1545 = g0_967 w* g3_1431;
  _1547 = g1_966 w* g3_1431;
  _1550 = g1_1158 w* g4_1429;
  _14648 = h0_1511 + _1517;
  _14647 = _1528 + _14648;
  _14646 = _1539 + _14647;
  h0_1551 = _1550 + _14646;
  _1552 = g2_1145 w* g4_1429;
  _14657 = h1_1512 + _1519;
  _14656 = _1530 + _14657;
  _14655 = _1541 + _14656;
  h1_1553 = _1552 + _14655;
  _1554 = g3_834 w* g4_1429;
  _14651 = h2_1513 + _1521;
  _14650 = _1532 + _14651;
  _14649 = _1543 + _14650;
  h2_1555 = _1554 + _14649;
  _1556 = g4_820 w* g4_1429;
  _14654 = h3_1514 + _1523;
  _14653 = _1534 + _14654;
  _14652 = _1545 + _14653;
  h3_1557 = _1556 + _14652;
  _1558 = g0_967 w* g4_1429;
  _14660 = h4_1515 + _1525;
  _14659 = _1536 + _14660;
  _14658 = _1547 + _14659;
  h4_1559 = _1558 + _14658;
  _1560 = h2_1555 >> 51;
  h3_1562 = h3_1557 + _1560;
  _1563 = (long unsigned int) h2_1555;
  g2_1564 = _1563 & 2251799813685247;
  _1565 = h0_1551 >> 51;
  h1_1567 = h1_1553 + _1565;
  _1568 = (long unsigned int) h0_1551;
  g0_1569 = _1568 & 2251799813685247;
  _1570 = h3_1562 >> 51;
  h4_1572 = h4_1559 + _1570;
  _1573 = (long unsigned int) h3_1562;
  g3_1574 = _1573 & 2251799813685247;
  _1575 = h1_1567 >> 51;
  _1576 = (long unsigned int) _1575;
  g2_1577 = g2_1564 + _1576;
  _1578 = (long unsigned int) h1_1567;
  g1_1579 = _1578 & 2251799813685247;
  _1580 = h4_1572 >> 51;
  _1581 = (long unsigned int) _1580;
  _1582 = _1581 * 19;
  g0_1583 = g0_1569 + _1582;
  _1584 = (long unsigned int) h4_1572;
  g4_1585 = _1584 & 2251799813685247;
  _1586 = g2_1577 >> 51;
  g3_1587 = g3_1574 + _1586;
  g2_1588 = g2_1577 & 2251799813685247;
  _1589 = g0_1583 >> 51;
  g1_1590 = g1_1579 + _1589;
  g0_1591 = g0_1583 & 2251799813685247;
  h0_1437 = g0_1591 w* g0_1591;
  g0_1438 = g0_1591 * 2;
  h1_1441 = g0_1438 w* g1_1590;
  h2_1443 = g0_1438 w* g2_1588;
  h3_1445 = g0_1438 w* g3_1587;
  h4_1447 = g0_1438 w* g4_1585;
  g4_1448 = g4_1585 * 19;
  _1450 = g4_1585 w* g4_1448;
  h3_1451 = h3_1445 + _1450;
  _1452 = g1_1590 w* g1_1590;
  h2_1453 = h2_1443 + _1452;
  g1_1454 = g1_1590 * 2;
  _1456 = g2_1588 w* g1_1454;
  h3_1457 = h3_1451 + _1456;
  _1458 = g3_1587 w* g1_1454;
  _1460 = g4_1448 w* g1_1454;
  g3_1462 = g3_1587 * 19;
  _1464 = g3_1587 w* g3_1462;
  _1466 = g3_1587 * 2;
  _1468 = g4_1448 w* _1466;
  h2_1469 = h2_1453 + _1468;
  _1470 = g2_1588 w* g2_1588;
  _1955 = h4_1447 + _1470;
  h4_1471 = _1458 + _1955;
  g2_1472 = g2_1588 * 2;
  _1474 = g3_1462 w* g2_1472;
  _1965 = h0_1437 + _1474;
  h0_1475 = _1460 + _1965;
  _1476 = g4_1448 w* g2_1472;
  _1960 = _1464 + _1476;
  h1_1477 = h1_1441 + _1960;
  _1478 = h2_1469 >> 51;
  h3_1480 = h3_1457 + _1478;
  _1481 = (long unsigned int) h2_1469;
  g2_1482 = _1481 & 2251799813685247;
  _1483 = h0_1475 >> 51;
  h1_1485 = h1_1477 + _1483;
  _1486 = (long unsigned int) h0_1475;
  g0_1487 = _1486 & 2251799813685247;
  _1488 = h3_1480 >> 51;
  h4_1490 = h4_1471 + _1488;
  _1491 = (long unsigned int) h3_1480;
  g3_1492 = _1491 & 2251799813685247;
  _1493 = h1_1485 >> 51;
  _1494 = (long unsigned int) _1493;
  g2_1495 = g2_1482 + _1494;
  _1496 = (long unsigned int) h1_1485;
  g1_1497 = _1496 & 2251799813685247;
  _1498 = h4_1490 >> 51;
  _1499 = (long unsigned int) _1498;
  _1500 = _1499 * 19;
  g0_1501 = g0_1487 + _1500;
  _1502 = (long unsigned int) h4_1490;
  g4_1503 = _1502 & 2251799813685247;
  _1504 = g2_1495 >> 51;
  g3_1505 = g3_1492 + _1504;
  g2_1506 = g2_1495 & 2251799813685247;
  _1507 = g0_1501 >> 51;
  g1_1508 = g1_1497 + _1507;
  g0_1509 = g0_1501 & 2251799813685247;

  <bb 9> [local count: 526133483]:
  # t2$32_2378 = PHI <g4_1503(8), g4_1659(9)>
  # t2$24_2393 = PHI <g3_1505(8), g3_1661(9)>
  # t2$16_2400 = PHI <g2_1506(8), g2_1662(9)>
  # t2$8_2406 = PHI <g1_1508(8), g1_1664(9)>
  # t2_2413 = PHI <g0_1509(8), g0_1665(9)>
  # ivtmp_15209 = PHI <49(8), ivtmp_15208(9)>
  h0_1593 = t2_2413 w* t2_2413;
  g0_1594 = t2_2413 * 2;
  h1_1597 = g0_1594 w* t2$8_2406;
  h2_1599 = g0_1594 w* t2$16_2400;
  h3_1601 = g0_1594 w* t2$24_2393;
  h4_1603 = g0_1594 w* t2$32_2378;
  g4_1604 = t2$32_2378 * 19;
  _1606 = t2$32_2378 w* g4_1604;
  h3_1607 = h3_1601 + _1606;
  _1608 = t2$8_2406 w* t2$8_2406;
  g1_1610 = t2$8_2406 * 2;
  _1612 = t2$16_2400 w* g1_1610;
  h3_1613 = h3_1607 + _1612;
  _1614 = t2$24_2393 w* g1_1610;
  h4_1615 = h4_1603 + _1614;
  _1616 = g4_1604 w* g1_1610;
  g3_1618 = t2$24_2393 * 19;
  _1620 = t2$24_2393 w* g3_1618;
  h1_1621 = h1_1597 + _1620;
  _1622 = t2$24_2393 * 2;
  _1624 = g4_1604 w* _1622;
  _580 = h2_1599 + _1624;
  h2_1625 = _580 + _1608;
  _1626 = t2$16_2400 w* t2$16_2400;
  h4_1627 = h4_1615 + _1626;
  g2_1628 = t2$16_2400 * 2;
  _1630 = g3_1618 w* g2_1628;
  _437 = _1616 + _1630;
  h0_1631 = _437 + h0_1593;
  _1632 = g4_1604 w* g2_1628;
  h1_1633 = h1_1621 + _1632;
  _1634 = h2_1625 >> 51;
  h3_1636 = h3_1613 + _1634;
  _1637 = (long unsigned int) h2_1625;
  g2_1638 = _1637 & 2251799813685247;
  _1639 = h0_1631 >> 51;
  h1_1641 = h1_1633 + _1639;
  _1642 = (long unsigned int) h0_1631;
  g0_1643 = _1642 & 2251799813685247;
  _1644 = h3_1636 >> 51;
  h4_1646 = h4_1627 + _1644;
  _1647 = (long unsigned int) h3_1636;
  g3_1648 = _1647 & 2251799813685247;
  _1649 = h1_1641 >> 51;
  _1650 = (long unsigned int) _1649;
  g2_1651 = g2_1638 + _1650;
  _1652 = (long unsigned int) h1_1641;
  g1_1653 = _1652 & 2251799813685247;
  _1654 = h4_1646 >> 51;
  _1655 = (long unsigned int) _1654;
  _1656 = _1655 * 19;
  g0_1657 = g0_1643 + _1656;
  _1658 = (long unsigned int) h4_1646;
  g4_1659 = _1658 & 2251799813685247;
  _1660 = g2_1651 >> 51;
  g3_1661 = g3_1648 + _1660;
  g2_1662 = g2_1651 & 2251799813685247;
  _1663 = g0_1657 >> 51;
  g1_1664 = g1_1653 + _1663;
  g0_1665 = g0_1657 & 2251799813685247;
  ivtmp_15208 = ivtmp_15209 + 4294967295;
  if (ivtmp_15208 != 0)
    goto <bb 9>; [97.96%]
  else
    goto <bb 10>; [2.04%]

  <bb 10> [local count: 10737418]:
  h0_1741 = g0_1591 w* g0_1665;
  h1_1742 = g1_1590 w* g0_1665;
  h2_1743 = g2_1588 w* g0_1665;
  h3_1744 = g3_1587 w* g0_1665;
  h4_1745 = g4_1585 w* g0_1665;
  _1747 = g4_1448 w* g1_1664;
  _1749 = g0_1591 w* g1_1664;
  _1751 = g1_1590 w* g1_1664;
  _1753 = g2_1588 w* g1_1664;
  _1755 = g3_1587 w* g1_1664;
  _1758 = g3_1462 w* g2_1662;
  _1760 = g4_1448 w* g2_1662;
  _1762 = g0_1591 w* g2_1662;
  _1764 = g1_1590 w* g2_1662;
  _1766 = g2_1588 w* g2_1662;
  g2_1769 = g2_1588 * 19;
  _1771 = g3_1661 w* g2_1769;
  _1773 = g3_1462 w* g3_1661;
  _1775 = g4_1448 w* g3_1661;
  _1777 = g0_1591 w* g3_1661;
  _1779 = g1_1590 w* g3_1661;
  g1_1782 = g1_1590 * 19;
  _1784 = g4_1659 w* g1_1782;
  _14897 = h0_1741 + _1747;
  _14898 = _1758 + _14897;
  _14661 = _1771 + _14898;
  h0_1785 = _1784 + _14661;
  _1786 = g2_1769 w* g4_1659;
  _2365 = h1_1742 + _1749;
  _2366 = _1760 + _2365;
  _2367 = _1773 + _2366;
  h1_1787 = _1786 + _2367;
  _1788 = g3_1462 w* g4_1659;
  _14894 = h2_1743 + _1751;
  _14895 = _1762 + _14894;
  _14896 = _1775 + _14895;
  h2_1789 = _1788 + _14896;
  _1790 = g4_1448 w* g4_1659;
  _2368 = h3_1744 + _1753;
  _2369 = _1764 + _2368;
  _14893 = _1777 + _2369;
  h3_1791 = _1790 + _14893;
  _1792 = g0_1591 w* g4_1659;
  _14818 = h4_1745 + _1755;
  _14819 = _1766 + _14818;
  _2364 = _1779 + _14819;
  h4_1793 = _1792 + _2364;
  _1794 = h2_1789 >> 51;
  h3_1796 = h3_1791 + _1794;
  _1797 = (long unsigned int) h2_1789;
  g2_1798 = _1797 & 2251799813685247;
  _1799 = h0_1785 >> 51;
  h1_1801 = h1_1787 + _1799;
  _1802 = (long unsigned int) h0_1785;
  g0_1803 = _1802 & 2251799813685247;
  _1804 = h3_1796 >> 51;
  h4_1806 = h4_1793 + _1804;
  _1807 = (long unsigned int) h3_1796;
  g3_1808 = _1807 & 2251799813685247;
  _1809 = h1_1801 >> 51;
  _1810 = (long unsigned int) _1809;
  g2_1811 = g2_1798 + _1810;
  _1812 = (long unsigned int) h1_1801;
  g1_1813 = _1812 & 2251799813685247;
  _1814 = h4_1806 >> 51;
  _1815 = (long unsigned int) _1814;
  _1816 = _1815 * 19;
  g0_1817 = g0_1803 + _1816;
  _1818 = (long unsigned int) h4_1806;
  g4_1819 = _1818 & 2251799813685247;
  _1820 = g2_1811 >> 51;
  g3_1821 = g3_1808 + _1820;
  g2_1822 = g2_1811 & 2251799813685247;
  _1823 = g0_1817 >> 51;
  g1_1824 = g1_1813 + _1823;
  g0_1825 = g0_1817 & 2251799813685247;
  h0_1667 = g0_1825 w* g0_1825;
  g0_1668 = g0_1825 * 2;
  h1_1671 = g0_1668 w* g1_1824;
  h2_1673 = g0_1668 w* g2_1822;
  h3_1675 = g0_1668 w* g3_1821;
  h4_1677 = g0_1668 w* g4_1819;
  g4_1678 = g4_1819 * 19;
  _1680 = g4_1819 w* g4_1678;
  h3_1681 = h3_1675 + _1680;
  _1682 = g1_1824 w* g1_1824;
  h2_1683 = h2_1673 + _1682;
  g1_1684 = g1_1824 * 2;
  _1686 = g2_1822 w* g1_1684;
  h3_1687 = h3_1681 + _1686;
  _1688 = g3_1821 w* g1_1684;
  _1690 = g4_1678 w* g1_1684;
  g3_1692 = g3_1821 * 19;
  _1694 = g3_1821 w* g3_1692;
  _1696 = g3_1821 * 2;
  _1698 = g4_1678 w* _1696;
  h2_1699 = h2_1683 + _1698;
  _1700 = g2_1822 w* g2_1822;
  _1571 = h4_1677 + _1700;
  h4_1701 = _1571 + _1688;
  g2_1702 = g2_1822 * 2;
  _1704 = g3_1692 w* g2_1702;
  _1640 = h0_1667 + _1704;
  h0_1705 = _1640 + _1690;
  _1706 = g4_1678 w* g2_1702;
  _1635 = _1694 + _1706;
  h1_1707 = _1635 + h1_1671;
  _1708 = h2_1699 >> 51;
  h3_1710 = h3_1687 + _1708;
  _1711 = (long unsigned int) h2_1699;
  g2_1712 = _1711 & 2251799813685247;
  _1713 = h0_1705 >> 51;
  h1_1715 = h1_1707 + _1713;
  _1716 = (long unsigned int) h0_1705;
  g0_1717 = _1716 & 2251799813685247;
  _1718 = h3_1710 >> 51;
  h4_1720 = h4_1701 + _1718;
  _1721 = (long unsigned int) h3_1710;
  g3_1722 = _1721 & 2251799813685247;
  _1723 = h1_1715 >> 51;
  _1724 = (long unsigned int) _1723;
  g2_1725 = g2_1712 + _1724;
  _1726 = (long unsigned int) h1_1715;
  g1_1727 = _1726 & 2251799813685247;
  _1728 = h4_1720 >> 51;
  _1729 = (long unsigned int) _1728;
  _1730 = _1729 * 19;
  g0_1731 = g0_1717 + _1730;
  _1732 = (long unsigned int) h4_1720;
  g4_1733 = _1732 & 2251799813685247;
  _1734 = g2_1725 >> 51;
  g3_1735 = g3_1722 + _1734;
  g2_1736 = g2_1725 & 2251799813685247;
  _1737 = g0_1731 >> 51;
  g1_1738 = g1_1727 + _1737;
  g0_1739 = g0_1731 & 2251799813685247;

  <bb 11> [local count: 1063004407]:
  # t3_2381 = PHI <g0_1739(10), g0_1899(11)>
  # t3$8_2383 = PHI <g1_1738(10), g1_1898(11)>
  # t3$16_2385 = PHI <g2_1736(10), g2_1896(11)>
  # t3$24_2415 = PHI <g3_1735(10), g3_1895(11)>
  # t3$32_2417 = PHI <g4_1733(10), g4_1893(11)>
  # ivtmp_15211 = PHI <99(10), ivtmp_15210(11)>
  h0_1827 = t3_2381 w* t3_2381;
  g0_1828 = t3_2381 * 2;
  h1_1831 = g0_1828 w* t3$8_2383;
  h2_1833 = g0_1828 w* t3$16_2385;
  h3_1835 = g0_1828 w* t3$24_2415;
  h4_1837 = g0_1828 w* t3$32_2417;
  g4_1838 = t3$32_2417 * 19;
  _1840 = t3$32_2417 w* g4_1838;
  h3_1841 = h3_1835 + _1840;
  _1842 = t3$8_2383 w* t3$8_2383;
  g1_1844 = t3$8_2383 * 2;
  _1846 = t3$16_2385 w* g1_1844;
  h3_1847 = h3_1841 + _1846;
  _1848 = t3$24_2415 w* g1_1844;
  h4_1849 = h4_1837 + _1848;
  _1850 = g4_1838 w* g1_1844;
  g3_1852 = t3$24_2415 * 19;
  _1854 = t3$24_2415 w* g3_1852;
  h1_1855 = h1_1831 + _1854;
  _1856 = t3$24_2415 * 2;
  _1858 = g4_1838 w* _1856;
  _1566 = h2_1833 + _1858;
  h2_1859 = _1566 + _1842;
  _1860 = t3$16_2385 w* t3$16_2385;
  h4_1861 = h4_1849 + _1860;
  g2_1862 = t3$16_2385 * 2;
  _1864 = g3_1852 w* g2_1862;
  _1561 = _1850 + _1864;
  h0_1865 = _1561 + h0_1827;
  _1866 = g4_1838 w* g2_1862;
  h1_1867 = h1_1855 + _1866;
  _1868 = h2_1859 >> 51;
  h3_1870 = h3_1847 + _1868;
  _1871 = (long unsigned int) h2_1859;
  g2_1872 = _1871 & 2251799813685247;
  _1873 = h0_1865 >> 51;
  h1_1875 = h1_1867 + _1873;
  _1876 = (long unsigned int) h0_1865;
  g0_1877 = _1876 & 2251799813685247;
  _1878 = h3_1870 >> 51;
  h4_1880 = h4_1861 + _1878;
  _1881 = (long unsigned int) h3_1870;
  g3_1882 = _1881 & 2251799813685247;
  _1883 = h1_1875 >> 51;
  _1884 = (long unsigned int) _1883;
  g2_1885 = g2_1872 + _1884;
  _1886 = (long unsigned int) h1_1875;
  g1_1887 = _1886 & 2251799813685247;
  _1888 = h4_1880 >> 51;
  _1889 = (long unsigned int) _1888;
  _1890 = _1889 * 19;
  g0_1891 = g0_1877 + _1890;
  _1892 = (long unsigned int) h4_1880;
  g4_1893 = _1892 & 2251799813685247;
  _1894 = g2_1885 >> 51;
  g3_1895 = g3_1882 + _1894;
  g2_1896 = g2_1885 & 2251799813685247;
  _1897 = g0_1891 >> 51;
  g1_1898 = g1_1887 + _1897;
  g0_1899 = g0_1891 & 2251799813685247;
  ivtmp_15210 = ivtmp_15211 + 4294967295;
  if (ivtmp_15210 != 0)
    goto <bb 11>; [98.99%]
  else
    goto <bb 12>; [1.01%]

  <bb 12> [local count: 10737418]:
  h0_1901 = g0_1825 w* g0_1899;
  h1_1902 = g1_1824 w* g0_1899;
  h2_1903 = g2_1822 w* g0_1899;
  h3_1904 = g3_1821 w* g0_1899;
  h4_1905 = g4_1819 w* g0_1899;
  _1907 = g4_1678 w* g1_1898;
  _1909 = g0_1825 w* g1_1898;
  _1911 = g1_1824 w* g1_1898;
  _1913 = g2_1822 w* g1_1898;
  _1915 = g3_1821 w* g1_1898;
  _1918 = g3_1692 w* g2_1896;
  _1920 = g4_1678 w* g2_1896;
  _1922 = g0_1825 w* g2_1896;
  _1924 = g1_1824 w* g2_1896;
  _1926 = g2_1822 w* g2_1896;
  g2_1929 = g2_1822 * 19;
  _1931 = g3_1895 w* g2_1929;
  _1933 = g3_1692 w* g3_1895;
  _1935 = g4_1678 w* g3_1895;
  _1937 = g0_1825 w* g3_1895;
  _1939 = g1_1824 w* g3_1895;
  g1_1942 = g1_1824 * 19;
  _1944 = g4_1893 w* g1_1942;
  _14815 = h0_1901 + _1907;
  _14816 = _1918 + _14815;
  _14817 = _1931 + _14816;
  h0_1945 = _1944 + _14817;
  _1946 = g2_1929 w* g4_1893;
  _2396 = h1_1902 + _1909;
  _2388 = _1920 + _2396;
  _14735 = _1933 + _2388;
  h1_1947 = _1946 + _14735;
  _1948 = g3_1692 w* g4_1893;
  _14739 = h2_1903 + _1911;
  _14740 = _1922 + _14739;
  _14814 = _1935 + _14740;
  h2_1949 = _1948 + _14814;
  _1950 = g4_1678 w* g4_1893;
  _14736 = h3_1904 + _1913;
  _14737 = _1924 + _14736;
  _14738 = _1937 + _14737;
  h3_1951 = _1950 + _14738;
  _1952 = g0_1825 w* g4_1893;
  _2410 = h4_1905 + _1915;
  _2405 = _1926 + _2410;
  _2404 = _1939 + _2405;
  h4_1953 = _1952 + _2404;
  _1954 = h2_1949 >> 51;
  h3_1956 = h3_1951 + _1954;
  _1957 = (long unsigned int) h2_1949;
  g2_1958 = _1957 & 2251799813685247;
  _1959 = h0_1945 >> 51;
  h1_1961 = h1_1947 + _1959;
  _1962 = (long unsigned int) h0_1945;
  g0_1963 = _1962 & 2251799813685247;
  _1964 = h3_1956 >> 51;
  h4_1966 = h4_1953 + _1964;
  _1967 = (long unsigned int) h3_1956;
  g3_1968 = _1967 & 2251799813685247;
  _1969 = h1_1961 >> 51;
  _1970 = (long unsigned int) _1969;
  g2_1971 = g2_1958 + _1970;
  _1972 = (long unsigned int) h1_1961;
  g1_1973 = _1972 & 2251799813685247;
  _1974 = h4_1966 >> 51;
  _1975 = (long unsigned int) _1974;
  _1976 = _1975 * 19;
  g0_1977 = g0_1963 + _1976;
  _1978 = (long unsigned int) h4_1966;
  g4_1979 = _1978 & 2251799813685247;
  _1980 = g2_1971 >> 51;
  g3_1981 = g3_1968 + _1980;
  g2_1982 = g2_1971 & 2251799813685247;
  _1983 = g0_1977 >> 51;
  g1_1984 = g1_1973 + _1983;
  g0_1985 = g0_1977 & 2251799813685247;

  <bb 13> [local count: 537090037]:
  # t2$32_2379 = PHI <g4_1979(12), g4_2053(13)>
  # t2$24_2391 = PHI <g3_1981(12), g3_2055(13)>
  # t2$16_2398 = PHI <g2_1982(12), g2_2056(13)>
  # t2$8_2403 = PHI <g1_1984(12), g1_2058(13)>
  # t2_2412 = PHI <g0_1985(12), g0_2059(13)>
  # ivtmp_15213 = PHI <50(12), ivtmp_15212(13)>
  h0_1987 = t2_2412 w* t2_2412;
  g0_1988 = t2_2412 * 2;
  h1_1991 = g0_1988 w* t2$8_2403;
  h2_1993 = g0_1988 w* t2$16_2398;
  h3_1995 = g0_1988 w* t2$24_2391;
  h4_1997 = g0_1988 w* t2$32_2379;
  g4_1998 = t2$32_2379 * 19;
  _2000 = t2$32_2379 w* g4_1998;
  h3_2001 = h3_1995 + _2000;
  _2002 = t2$8_2403 w* t2$8_2403;
  g1_2004 = t2$8_2403 * 2;
  _2006 = t2$16_2398 w* g1_2004;
  h3_2007 = h3_2001 + _2006;
  _2008 = t2$24_2391 w* g1_2004;
  h4_2009 = h4_1997 + _2008;
  _2010 = g4_1998 w* g1_2004;
  g3_2012 = t2$24_2391 * 19;
  _2014 = t2$24_2391 w* g3_2012;
  h1_2015 = h1_1991 + _2014;
  _2016 = t2$24_2391 * 2;
  _2018 = g4_1998 w* _2016;
  _634 = h2_1993 + _2018;
  h2_2019 = _634 + _2002;
  _2020 = t2$16_2398 w* t2$16_2398;
  h4_2021 = h4_2009 + _2020;
  g2_2022 = t2$16_2398 * 2;
  _2024 = g3_2012 w* g2_2022;
  _1255 = _2010 + _2024;
  h0_2025 = _1255 + h0_1987;
  _2026 = g4_1998 w* g2_2022;
  h1_2027 = h1_2015 + _2026;
  _2028 = h2_2019 >> 51;
  h3_2030 = h3_2007 + _2028;
  _2031 = (long unsigned int) h2_2019;
  g2_2032 = _2031 & 2251799813685247;
  _2033 = h0_2025 >> 51;
  h1_2035 = h1_2027 + _2033;
  _2036 = (long unsigned int) h0_2025;
  g0_2037 = _2036 & 2251799813685247;
  _2038 = h3_2030 >> 51;
  h4_2040 = h4_2021 + _2038;
  _2041 = (long unsigned int) h3_2030;
  g3_2042 = _2041 & 2251799813685247;
  _2043 = h1_2035 >> 51;
  _2044 = (long unsigned int) _2043;
  g2_2045 = g2_2032 + _2044;
  _2046 = (long unsigned int) h1_2035;
  g1_2047 = _2046 & 2251799813685247;
  _2048 = h4_2040 >> 51;
  _2049 = (long unsigned int) _2048;
  _2050 = _2049 * 19;
  g0_2051 = g0_2037 + _2050;
  _2052 = (long unsigned int) h4_2040;
  g4_2053 = _2052 & 2251799813685247;
  _2054 = g2_2045 >> 51;
  g3_2055 = g3_2042 + _2054;
  g2_2056 = g2_2045 & 2251799813685247;
  _2057 = g0_2051 >> 51;
  g1_2058 = g1_2047 + _2057;
  g0_2059 = g0_2051 & 2251799813685247;
  ivtmp_15212 = ivtmp_15213 + 4294967295;
  if (ivtmp_15212 != 0)
    goto <bb 13>; [98.00%]
  else
    goto <bb 14>; [2.00%]

  <bb 14> [local count: 10737418]:
  h0_2061 = g0_1591 w* g0_2059;
  h1_2062 = g1_1590 w* g0_2059;
  h2_2063 = g2_1588 w* g0_2059;
  h3_2064 = g3_1587 w* g0_2059;
  h4_2065 = g4_1585 w* g0_2059;
  _2067 = g4_1448 w* g1_2058;
  _2069 = g0_1591 w* g1_2058;
  _2071 = g1_1590 w* g1_2058;
  _2073 = g2_1588 w* g1_2058;
  _2075 = g3_1587 w* g1_2058;
  _2078 = g3_1462 w* g2_2056;
  _2080 = g4_1448 w* g2_2056;
  _2082 = g0_1591 w* g2_2056;
  _2084 = g1_1590 w* g2_2056;
  _2086 = g2_1588 w* g2_2056;
  _2089 = g2_1769 w* g3_2055;
  _2091 = g3_1462 w* g3_2055;
  _2093 = g4_1448 w* g3_2055;
  _2095 = g0_1591 w* g3_2055;
  _2097 = g1_1590 w* g3_2055;
  _2100 = g1_1782 w* g4_2053;
  _15254 = h0_2061 + _2067;
  _15255 = _2078 + _15254;
  _15201 = _2089 + _15255;
  h0_2101 = _2100 + _15201;
  _2102 = g2_1769 w* g4_2053;
  _15131 = h1_2062 + _2069;
  _15132 = _2080 + _15131;
  _15133 = _2091 + _15132;
  h1_2103 = _2102 + _15133;
  _2104 = g3_1462 w* g4_2053;
  _15251 = h2_2063 + _2071;
  _15252 = _2082 + _15251;
  _15253 = _2093 + _15252;
  h2_2105 = _2104 + _15253;
  _2106 = g4_1448 w* g4_2053;
  _15134 = h3_2064 + _2073;
  _15135 = _2084 + _15134;
  _15136 = _2095 + _15135;
  h3_2107 = _2106 + _15136;
  _2108 = g0_1591 w* g4_2053;
  _15054 = h4_2065 + _2075;
  _15056 = _2086 + _15054;
  _15057 = _2097 + _15056;
  h4_2109 = _2108 + _15057;
  _2110 = h2_2105 >> 51;
  h3_2112 = h3_2107 + _2110;
  _2113 = (long unsigned int) h2_2105;
  g2_2114 = _2113 & 2251799813685247;
  _2115 = h0_2101 >> 51;
  h1_2117 = h1_2103 + _2115;
  _2118 = (long unsigned int) h0_2101;
  g0_2119 = _2118 & 2251799813685247;
  _2120 = h3_2112 >> 51;
  h4_2122 = h4_2109 + _2120;
  _2123 = (long unsigned int) h3_2112;
  g3_2124 = _2123 & 2251799813685247;
  _2125 = h1_2117 >> 51;
  _2126 = (long unsigned int) _2125;
  g2_2127 = g2_2114 + _2126;
  _2128 = (long unsigned int) h1_2117;
  g1_2129 = _2128 & 2251799813685247;
  _2130 = h4_2122 >> 51;
  _2131 = (long unsigned int) _2130;
  _2132 = _2131 * 19;
  g0_2133 = g0_2119 + _2132;
  _2134 = (long unsigned int) h4_2122;
  g4_2135 = _2134 & 2251799813685247;
  _2136 = g2_2127 >> 51;
  g3_2137 = g3_2124 + _2136;
  g2_2138 = g2_2127 & 2251799813685247;
  _2139 = g0_2133 >> 51;
  g1_2140 = g1_2129 + _2139;
  g0_2141 = g0_2133 & 2251799813685247;
  h0_2362 = g0_2141 w* g0_2141;
  g0_29 = g0_2141 * 2;
  h1_43 = g0_29 w* g1_2140;
  h2_53 = g0_29 w* g2_2138;
  h3_61 = g0_29 w* g3_2137;
  h4_15198 = g0_29 w* g4_2135;
  g4_15197 = g4_2135 * 19;
  _15195 = g4_15197 w* g4_2135;
  h3_15194 = h3_61 + _15195;
  _15193 = g1_2140 w* g1_2140;
  g1_15192 = g1_2140 * 2;
  _15190 = g2_2138 w* g1_15192;
  h3_15188 = _15190 + h3_15194;
  _15187 = g3_2137 w* g1_15192;
  _15185 = g1_15192 w* g4_15197;
  g3_15184 = g3_2137 * 19;
  _15182 = g3_2137 w* g3_15184;
  _15180 = g3_2137 * 2;
  _15178 = _15180 w* g4_15197;
  _15053 = h2_53 + _15193;
  h2_15176 = _15053 + _15178;
  _15175 = g2_2138 w* g2_2138;
  _14977 = _15175 + h4_15198;
  h4_15174 = _14977 + _15187;
  g2_15173 = g2_2138 * 2;
  _15171 = g2_15173 w* g3_15184;
  _15052 = h0_2362 + _15171;
  h0_15169 = _15052 + _15185;
  _15168 = g2_15173 w* g4_15197;
  _15051 = _15168 + _15182;
  h1_15167 = h1_43 + _15051;
  _15166 = h2_15176 >> 51;
  h3_15165 = _15166 + h3_15188;
  _15164 = (long unsigned int) h2_15176;
  g2_15163 = _15164 & 2251799813685247;
  _15162 = h0_15169 >> 51;
  h1_15161 = _15162 + h1_15167;
  _15160 = (long unsigned int) h0_15169;
  g0_15159 = _15160 & 2251799813685247;
  _15158 = h3_15165 >> 51;
  h4_15157 = _15158 + h4_15174;
  _15156 = (long unsigned int) h3_15165;
  g3_15155 = _15156 & 2251799813685247;
  _15154 = h1_15161 >> 51;
  _15153 = (long unsigned int) _15154;
  g2_15152 = _15153 + g2_15163;
  _15151 = (long unsigned int) h1_15161;
  g1_15150 = _15151 & 2251799813685247;
  _15149 = h4_15157 >> 51;
  _15148 = (long unsigned int) _15149;
  _15147 = _15148 * 19;
  g0_15146 = _15147 + g0_15159;
  _15145 = (long unsigned int) h4_15157;
  g4_15144 = _15145 & 2251799813685247;
  _15143 = g2_15152 >> 51;
  g3_15142 = _15143 + g3_15155;
  g2_15141 = g2_15152 & 2251799813685247;
  _15140 = g0_15146 >> 51;
  g1_15139 = _15140 + g1_15150;
  g0_15138 = g0_15146 & 2251799813685247;
  h0_15129 = g0_15138 w* g0_15138;
  g0_15128 = g0_15138 * 2;
  h1_15125 = g1_15139 w* g0_15128;
  h2_15123 = g2_15141 w* g0_15128;
  h3_15120 = g3_15142 w* g0_15128;
  h4_15118 = g4_15144 w* g0_15128;
  g4_15117 = g4_15144 * 19;
  _15115 = g4_15117 w* g4_15144;
  h3_15114 = _15115 + h3_15120;
  _15113 = g1_15139 w* g1_15139;
  g1_15112 = g1_15139 * 2;
  _15110 = g1_15112 w* g2_15141;
  h3_15109 = _15110 + h3_15114;
  _15108 = g1_15112 w* g3_15142;
  _15106 = g1_15112 w* g4_15117;
  g3_15105 = g3_15142 * 19;
  _15103 = g3_15105 w* g3_15142;
  _15101 = g3_15142 * 2;
  _15099 = _15101 w* g4_15117;
  _14976 = _15113 + h2_15123;
  h2_15097 = _14976 + _15099;
  _15096 = g2_15141 w* g2_15141;
  _14973 = _15096 + h4_15118;
  h4_15095 = _14973 + _15108;
  g2_15094 = g2_15141 * 2;
  _15092 = g2_15094 w* g3_15105;
  _14975 = _15092 + h0_15129;
  h0_15090 = _14975 + _15106;
  _15089 = g2_15094 w* g4_15117;
  _14974 = _15089 + _15103;
  h1_15088 = _14974 + h1_15125;
  _15087 = h2_15097 >> 51;
  h3_15086 = _15087 + h3_15109;
  _15085 = (long unsigned int) h2_15097;
  g2_15084 = _15085 & 2251799813685247;
  _15083 = h0_15090 >> 51;
  h1_15082 = _15083 + h1_15088;
  _15081 = (long unsigned int) h0_15090;
  g0_15080 = _15081 & 2251799813685247;
  _15079 = h3_15086 >> 51;
  h4_15078 = _15079 + h4_15095;
  _15077 = (long unsigned int) h3_15086;
  g3_15076 = _15077 & 2251799813685247;
  _15075 = h1_15082 >> 51;
  _15074 = (long unsigned int) _15075;
  g2_15073 = _15074 + g2_15084;
  _15072 = (long unsigned int) h1_15082;
  g1_15071 = _15072 & 2251799813685247;
  _15070 = h4_15078 >> 51;
  _15069 = (long unsigned int) _15070;
  _15068 = _15069 * 19;
  g0_15067 = _15068 + g0_15080;
  _15066 = (long unsigned int) h4_15078;
  g4_15065 = _15066 & 2251799813685247;
  _15064 = g2_15073 >> 51;
  g3_15063 = _15064 + g3_15076;
  g2_15062 = g2_15073 & 2251799813685247;
  _15061 = g0_15067 >> 51;
  g1_15060 = _15061 + g1_15071;
  g0_15059 = g0_15067 & 2251799813685247;
  h0_15049 = g0_15059 w* g0_15059;
  g0_15048 = g0_15059 * 2;
  h1_15045 = g1_15060 w* g0_15048;
  h2_15043 = g2_15062 w* g0_15048;
  h3_15041 = g3_15063 w* g0_15048;
  h4_15039 = g4_15065 w* g0_15048;
  g4_15038 = g4_15065 * 19;
  _15036 = g4_15038 w* g4_15065;
  h3_15035 = _15036 + h3_15041;
  _15034 = g1_15060 w* g1_15060;
  g1_15033 = g1_15060 * 2;
  _15031 = g1_15033 w* g2_15062;
  h3_15030 = _15031 + h3_15035;
  _15029 = g1_15033 w* g3_15063;
  _15027 = g1_15033 w* g4_15038;
  g3_15026 = g3_15063 * 19;
  _15024 = g3_15026 w* g3_15063;
  _15022 = g3_15063 * 2;
  _15020 = _15022 w* g4_15038;
  _14972 = _15034 + h2_15043;
  h2_15018 = _14972 + _15020;
  _15017 = g2_15062 w* g2_15062;
  _2394 = _15017 + h4_15039;
  h4_15016 = _2394 + _15029;
  g2_15015 = g2_15062 * 2;
  _15013 = g2_15015 w* g3_15026;
  _2386 = _15013 + h0_15049;
  h0_15011 = _2386 + _15027;
  _15010 = g2_15015 w* g4_15038;
  _2390 = _15010 + _15024;
  h1_15009 = _2390 + h1_15045;
  _15008 = h2_15018 >> 51;
  h3_15007 = _15008 + h3_15030;
  _15006 = (long unsigned int) h2_15018;
  g2_15005 = _15006 & 2251799813685247;
  _15004 = h0_15011 >> 51;
  h1_15003 = _15004 + h1_15009;
  _15002 = (long unsigned int) h0_15011;
  g0_15001 = _15002 & 2251799813685247;
  _15000 = h3_15007 >> 51;
  h4_14999 = _15000 + h4_15016;
  _14998 = (long unsigned int) h3_15007;
  g3_14997 = _14998 & 2251799813685247;
  _14996 = h1_15003 >> 51;
  _14995 = (long unsigned int) _14996;
  g2_14994 = _14995 + g2_15005;
  _14993 = (long unsigned int) h1_15003;
  g1_14992 = _14993 & 2251799813685247;
  _14991 = h4_14999 >> 51;
  _14990 = (long unsigned int) _14991;
  _14989 = _14990 * 19;
  g0_14987 = _14989 + g0_15001;
  _14986 = (long unsigned int) h4_14999;
  g4_14985 = _14986 & 2251799813685247;
  _14984 = g2_14994 >> 51;
  g3_14983 = _14984 + g3_14997;
  g2_14982 = g2_14994 & 2251799813685247;
  _14981 = g0_14987 >> 51;
  g1_14980 = _14981 + g1_14992;
  g0_14979 = g0_14987 & 2251799813685247;
  h0_14970 = g0_14979 w* g0_14979;
  g0_14969 = g0_14979 * 2;
  h1_14966 = g1_14980 w* g0_14969;
  h2_14964 = g2_14982 w* g0_14969;
  h3_14962 = g3_14983 w* g0_14969;
  h4_14960 = g4_14985 w* g0_14969;
  g4_14959 = g4_14985 * 19;
  _14957 = g4_14959 w* g4_14985;
  h3_14956 = _14957 + h3_14962;
  _14955 = g1_14980 w* g1_14980;
  g1_14954 = g1_14980 * 2;
  _14952 = g1_14954 w* g2_14982;
  h3_14951 = _14952 + h3_14956;
  _14950 = g1_14954 w* g3_14983;
  _14948 = g1_14954 w* g4_14959;
  g3_14947 = g3_14983 * 19;
  _14945 = g3_14947 w* g3_14983;
  _14943 = g3_14983 * 2;
  _14941 = _14943 w* g4_14959;
  _2397 = _14955 + h2_14964;
  h2_14939 = _2397 + _14941;
  _14938 = g2_14982 w* g2_14982;
  _15220 = _14938 + h4_14960;
  h4_14937 = _14950 + _15220;
  g2_14936 = g2_14982 * 2;
  _14934 = g2_14936 w* g3_14947;
  _2401 = _14934 + h0_14970;
  h0_14932 = _2401 + _14948;
  _14931 = g2_14936 w* g4_14959;
  _15215 = _14931 + _14945;
  h1_14930 = h1_14966 + _15215;
  _14929 = h2_14939 >> 51;
  h3_14928 = _14929 + h3_14951;
  _14927 = (long unsigned int) h2_14939;
  g2_14926 = _14927 & 2251799813685247;
  _14925 = h0_14932 >> 51;
  h1_14924 = _14925 + h1_14930;
  _14923 = (long unsigned int) h0_14932;
  g0_14922 = _14923 & 2251799813685247;
  _14920 = h3_14928 >> 51;
  h4_14919 = _14920 + h4_14937;
  _14918 = (long unsigned int) h3_14928;
  g3_14917 = _14918 & 2251799813685247;
  _14916 = h1_14924 >> 51;
  _14915 = (long unsigned int) _14916;
  g2_14914 = _14915 + g2_14926;
  _14913 = (long unsigned int) h1_14924;
  g1_14912 = _14913 & 2251799813685247;
  _14911 = h4_14919 >> 51;
  _14910 = (long unsigned int) _14911;
  _14909 = _14910 * 19;
  g0_14908 = _14909 + g0_14922;
  _14907 = (long unsigned int) h4_14919;
  g4_14906 = _14907 & 2251799813685247;
  _14905 = g2_14914 >> 51;
  g3_14904 = _14905 + g3_14917;
  g2_14903 = g2_14914 & 2251799813685247;
  _14902 = g0_14908 >> 51;
  g1_14901 = _14902 + g1_14912;
  g0_14900 = g0_14908 & 2251799813685247;
  h0_2143 = g0_14900 w* g0_14900;
  g0_2144 = g0_14900 * 2;
  h1_2147 = g0_2144 w* g1_14901;
  h2_2149 = g0_2144 w* g2_14903;
  h3_2151 = g0_2144 w* g3_14904;
  h4_2153 = g0_2144 w* g4_14906;
  g4_2154 = g4_14906 * 19;
  _2156 = g4_14906 w* g4_2154;
  h3_2157 = h3_2151 + _2156;
  _2158 = g1_14901 w* g1_14901;
  g1_2160 = g1_14901 * 2;
  _2162 = g2_14903 w* g1_2160;
  h3_2163 = h3_2157 + _2162;
  _2164 = g3_14904 w* g1_2160;
  _2166 = g4_2154 w* g1_2160;
  g3_2168 = g3_14904 * 19;
  _2170 = g3_14904 w* g3_2168;
  _2172 = g3_14904 * 2;
  _2174 = g4_2154 w* _2172;
  _15219 = h2_2149 + _2158;
  h2_2175 = _2174 + _15219;
  _2176 = g2_14903 w* g2_14903;
  _15216 = h4_2153 + _2176;
  h4_2177 = _2164 + _15216;
  g2_2178 = g2_14903 * 2;
  _2180 = g3_2168 w* g2_2178;
  _15218 = h0_2143 + _2180;
  h0_2181 = _2166 + _15218;
  _2182 = g4_2154 w* g2_2178;
  _15217 = _2170 + _2182;
  h1_2183 = h1_2147 + _15217;
  _2184 = h2_2175 >> 51;
  h3_2186 = h3_2163 + _2184;
  _2187 = (long unsigned int) h2_2175;
  g2_2188 = _2187 & 2251799813685247;
  _2189 = h0_2181 >> 51;
  h1_2191 = h1_2183 + _2189;
  _2192 = (long unsigned int) h0_2181;
  g0_2193 = _2192 & 2251799813685247;
  _2194 = h3_2186 >> 51;
  h4_2196 = h4_2177 + _2194;
  _2197 = (long unsigned int) h3_2186;
  g3_2198 = _2197 & 2251799813685247;
  _2199 = h1_2191 >> 51;
  _2200 = (long unsigned int) _2199;
  g2_2201 = g2_2188 + _2200;
  _2202 = (long unsigned int) h1_2191;
  g1_2203 = _2202 & 2251799813685247;
  _2204 = h4_2196 >> 51;
  _2205 = (long unsigned int) _2204;
  _2206 = _2205 * 19;
  g0_2207 = g0_2193 + _2206;
  _2208 = (long unsigned int) h4_2196;
  g4_2209 = _2208 & 2251799813685247;
  _2210 = g2_2201 >> 51;
  g3_2211 = g3_2198 + _2210;
  g2_2212 = g2_2201 & 2251799813685247;
  _2213 = g0_2207 >> 51;
  g1_2214 = g1_2203 + _2213;
  g0_2215 = g0_2207 & 2251799813685247;
  h0_2217 = g0_391 w* g0_2215;
  h1_2218 = g1_390 w* g0_2215;
  h2_2219 = g2_388 w* g0_2215;
  h3_2220 = g3_387 w* g0_2215;
  h4_2221 = g4_385 w* g0_2215;
  _2223 = g4_240 w* g1_2214;
  _2225 = g0_391 w* g1_2214;
  _2227 = g1_390 w* g1_2214;
  _2229 = g2_388 w* g1_2214;
  _2231 = g3_387 w* g1_2214;
  _2234 = g3_254 w* g2_2212;
  _2236 = g4_240 w* g2_2212;
  _2238 = g0_391 w* g2_2212;
  _2240 = g1_390 w* g2_2212;
  _2242 = g2_388 w* g2_2212;
  g2_2245 = g2_388 * 19;
  _2247 = g3_2211 w* g2_2245;
  _2249 = g3_254 w* g3_2211;
  _2251 = g4_240 w* g3_2211;
  _2253 = g0_391 w* g3_2211;
  _2255 = g1_390 w* g3_2211;
  g1_2258 = g1_390 * 19;
  _2260 = g4_2209 w* g1_2258;
  _2316 = _2234 + _2260;
  _2317 = _2247 + _2316;
  _499 = h0_2217 + _2317;
  h0_2261 = _499 + _2223;
  _2262 = g2_2245 w* g4_2209;
  _2374 = _2236 + _2262;
  _2373 = _2249 + _2374;
  _2372 = h1_2218 + _2373;
  h1_2263 = _2225 + _2372;
  _2264 = g3_254 w* g4_2209;
  _782 = _2238 + _2264;
  _787 = _782 + _2251;
  _276 = _787 + h2_2219;
  h2_2265 = _276 + _2227;
  _2266 = g4_240 w* g4_2209;
  _2371 = _2240 + _2266;
  _2370 = _2253 + _2371;
  _777 = h3_2220 + _2370;
  h3_2267 = _777 + _2229;
  _2268 = g0_391 w* g4_2209;
  _2377 = _2242 + _2268;
  _2376 = _2255 + _2377;
  _2375 = h4_2221 + _2376;
  h4_2269 = _2231 + _2375;
  _2270 = h2_2265 >> 51;
  h3_2272 = h3_2267 + _2270;
  _2273 = (long unsigned int) h2_2265;
  g2_2274 = _2273 & 2251799813685247;
  _2275 = h0_2261 >> 51;
  h1_2277 = h1_2263 + _2275;
  _2278 = (long unsigned int) h0_2261;
  g0_2279 = _2278 & 2251799813685247;
  _2280 = h3_2272 >> 51;
  h4_2282 = h4_2269 + _2280;
  _2283 = (long unsigned int) h3_2272;
  g3_2284 = _2283 & 2251799813685247;
  _2285 = h1_2277 >> 51;
  _2286 = (long unsigned int) _2285;
  g2_2287 = g2_2274 + _2286;
  _2288 = (long unsigned int) h1_2277;
  g1_2289 = _2288 & 2251799813685247;
  _2290 = h4_2282 >> 51;
  _2291 = (long unsigned int) _2290;
  _2292 = _2291 * 19;
  g0_2293 = g0_2279 + _2292;
  _2294 = (long unsigned int) h4_2282;
  g4_2295 = _2294 & 2251799813685247;
  _2296 = g2_2287 >> 51;
  g3_2297 = g3_2284 + _2296;
  g2_2298 = g2_2287 & 2251799813685247;
  _2299 = g0_2293 >> 51;
  g1_2300 = g1_2289 + _2299;
  g0_2301 = g0_2293 & 2251799813685247;
  *out_62(D) = g0_2301;
  MEM[(uint64_t *)out_62(D) + 8B] = g1_2300;
  MEM[(uint64_t *)out_62(D) + 16B] = g2_2298;
  MEM[(uint64_t *)out_62(D) + 24B] = g3_2297;
  MEM[(uint64_t *)out_62(D) + 32B] = g4_2295;
  return;

}



;; Function x25519_scalar_mult (x25519_scalar_mult, funcdef_no=374, decl_uid=10251, cgraph_uid=374, symbol_order=375)

x25519_scalar_mult (uint8_t * out, const uint8_t * scalar, const uint8_t * point)
{
  const vector(2) long unsigned int vect__54.474;
  const vector(2) long unsigned int vect__53.473;
  const vector(2) long unsigned int vect__53.472;
  const vector(2) long unsigned int vect__52.469;
  const vector(2) long unsigned int vect__52.468;
  vector(2) long unsigned int vect__70.463;
  const vector(2) long unsigned int vect__68.462;
  const vector(2) long unsigned int vect__68.461;
  const vector(2) long unsigned int vect__722.458;
  const vector(2) long unsigned int vect__67.457;
  const vector(2) long unsigned int vect__67.456;
  const vector(2) long unsigned int vect__99.451;
  vector(2) long unsigned int vect__88.448;
  const vector(2) long unsigned int vect__98.447;
  const vector(2) long unsigned int vect__98.446;
  const vector(2) long unsigned int vect__615.443;
  const vector(2) long unsigned int vect__97.442;
  const vector(2) long unsigned int vect__97.441;
  uint64_t h0;
  uint64_t h1;
  uint64_t h2;
  uint64_t h3;
  uint64_t h4;
  uint64_t q;
  uint64_t g4;
  uint64_t g3;
  uint64_t g2;
  uint64_t g1;
  uint64_t g0;
  u128 h4;
  u128 h3;
  u128 h2;
  u128 h1;
  u128 h0;
  uint64_t h0;
  uint64_t h1;
  uint64_t h2;
  uint64_t h3;
  uint64_t h4;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t mask;
  unsigned int b;
  int pos;
  unsigned int swap;
  uint8_t e[32];
  uint64_t tmp1[5];
  uint64_t tmp0[5];
  uint64_t z3[5];
  uint64_t x3[5];
  uint64_t z2[5];
  uint64_t x2[5];
  uint64_t x1[5];
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  int _8;
  int _9;
  int _10;
  unsigned int _11;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _83;
  long unsigned int _84;
  long unsigned int _86;
  long unsigned int _96;
  long unsigned int _109;
  long unsigned int _110;
  long unsigned int _111;
  long unsigned int _112;
  long unsigned int _113;
  long unsigned int _114;
  long unsigned int _115;
  long unsigned int _116;
  long unsigned int _117;
  long unsigned int _118;
  long unsigned int _119;
  long unsigned int _120;
  long unsigned int _121;
  long unsigned int _125;
  long unsigned int _129;
  long unsigned int _133;
  long unsigned int _137;
  long unsigned int _141;
  long unsigned int _142;
  long unsigned int _143;
  long unsigned int _145;
  long unsigned int _146;
  long unsigned int _147;
  long unsigned int _149;
  long unsigned int _150;
  long unsigned int _151;
  long unsigned int _153;
  long unsigned int _157;
  long unsigned int _161;
  long unsigned int _174;
  unsigned char _269;
  long unsigned int _270;
  long unsigned int _271;
  unsigned char _273;
  long unsigned int _274;
  long unsigned int _275;
  unsigned char _277;
  long unsigned int _278;
  long unsigned int _279;
  unsigned char _295;
  long unsigned int _296;
  long unsigned int _297;
  unsigned char _299;
  long unsigned int _300;
  long unsigned int _301;
  unsigned int _307;
  unsigned char _318;
  long unsigned int _319;
  long unsigned int _320;
  unsigned char _322;
  long unsigned int _323;
  long unsigned int _324;
  unsigned char _326;
  long unsigned int _327;
  long unsigned int _328;
  unsigned char _345;
  long unsigned int _346;
  long unsigned int _347;
  unsigned char _349;
  long unsigned int _350;
  long unsigned int _351;
  long unsigned int _363;
  long unsigned int _364;
  long unsigned int _365;
  long unsigned int _366;
  unsigned char _368;
  long unsigned int _369;
  long unsigned int _370;
  unsigned char _372;
  long unsigned int _373;
  long unsigned int _374;
  long unsigned int _376;
  long unsigned int _378;
  long unsigned int _381;
  long unsigned int _384;
  long unsigned int _387;
  long unsigned int _390;
  long unsigned int _393;
  long unsigned int _396;
  long unsigned int _399;
  long unsigned int _402;
  __int128 unsigned _405;
  long unsigned int _408;
  __int128 unsigned _410;
  long unsigned int _413;
  __int128 unsigned _415;
  long unsigned int _418;
  __int128 unsigned _420;
  long unsigned int _421;
  long unsigned int _423;
  __int128 unsigned _425;
  long unsigned int _426;
  long unsigned int _427;
  long unsigned int _429;
  long unsigned int _431;
  long unsigned int _434;
  long unsigned int _442;
  long unsigned int _444;
  long unsigned int _446;
  long unsigned int _448;
  long unsigned int _450;
  long unsigned int _452;
  long unsigned int _454;
  long unsigned int _457;
  long unsigned int _460;
  long unsigned int _463;
  long unsigned int _474;
  unsigned char _475;
  long unsigned int _476;
  unsigned char _477;
  long unsigned int _478;
  unsigned char _479;
  unsigned char _480;
  unsigned char _481;
  unsigned char _482;
  long unsigned int _483;
  unsigned char _484;
  long unsigned int _485;
  unsigned char _486;
  long unsigned int _487;
  unsigned char _488;
  long unsigned int _489;
  unsigned char _490;
  long unsigned int _491;
  unsigned char _492;
  long unsigned int _493;
  unsigned char _494;
  unsigned char _495;
  unsigned char _496;
  unsigned char _497;
  long unsigned int _498;
  unsigned char _499;
  long unsigned int _500;
  unsigned char _501;
  long unsigned int _502;
  unsigned char _503;
  long unsigned int _504;
  unsigned char _505;
  long unsigned int _506;
  unsigned char _507;
  long unsigned int _508;
  unsigned char _509;
  long unsigned int _510;
  unsigned char _511;
  unsigned char _512;
  unsigned char _513;
  unsigned char _514;
  long unsigned int _515;
  unsigned char _516;
  long unsigned int _517;
  unsigned char _518;
  long unsigned int _519;
  unsigned char _520;
  long unsigned int _521;
  unsigned char _522;
  long unsigned int _523;
  unsigned char _524;
  long unsigned int _525;
  unsigned char _526;
  unsigned char _527;
  unsigned char _528;
  unsigned char _529;
  long unsigned int _530;
  unsigned char _531;
  long unsigned int _532;
  unsigned char _533;
  long unsigned int _534;
  unsigned char _535;
  long unsigned int _536;
  unsigned char _537;
  long unsigned int _538;
  unsigned char _539;
  long unsigned int _540;
  unsigned char _541;
  long unsigned int _585;
  long unsigned int _589;
  long unsigned int _590;
  long unsigned int _591;
  long unsigned int _593;
  long unsigned int _604;
  long unsigned int _605;
  long unsigned int _606;
  long unsigned int _608;
  long unsigned int _617;
  long unsigned int _619;
  long unsigned int _620;
  long unsigned int _621;
  long unsigned int _623;
  long unsigned int _630;
  long unsigned int _632;
  long unsigned int _634;
  long unsigned int _635;
  long unsigned int _636;
  long unsigned int _638;
  long unsigned int _645;
  long unsigned int _647;
  long unsigned int _649;
  long unsigned int _650;
  long unsigned int _651;
  long unsigned int _653;
  long unsigned int _664;
  long unsigned int _665;
  long unsigned int _666;
  unsigned int load_dst_667;
  long unsigned int _668;
  long unsigned int prephitmp_671;
  long unsigned int pretmp_673;
  long unsigned int prephitmp_674;
  long unsigned int _679;
  long unsigned int _680;
  long unsigned int _681;
  unsigned int load_dst_682;
  long unsigned int _683;
  long unsigned int pretmp_685;
  long unsigned int prephitmp_688;
  long unsigned int pretmp_689;
  long unsigned int _692;
  long unsigned int _694;
  long unsigned int _695;
  long unsigned int _696;
  unsigned int load_dst_697;
  long unsigned int _698;
  long unsigned int prephitmp_700;
  long unsigned int pretmp_701;
  long unsigned int _709;
  long unsigned int _710;
  long unsigned int _711;
  unsigned int load_dst_712;
  long unsigned int _713;
  unsigned char prephitmp_715;
  unsigned char pretmp_716;
  int _718;
  long unsigned int _724;
  long unsigned int _725;
  long unsigned int _726;
  unsigned int load_dst_727;
  long unsigned int _728;
  long unsigned int pretmp_738;
  long unsigned int prephitmp_739;
  long unsigned int pretmp_740;
  long unsigned int prephitmp_741;
  long unsigned int pretmp_746;
  long unsigned int prephitmp_747;
  long unsigned int pretmp_748;
  long unsigned int prephitmp_749;
  long unsigned int pretmp_754;
  long unsigned int prephitmp_755;
  long unsigned int pretmp_756;
  long unsigned int prephitmp_757;
  long unsigned int pretmp_762;
  long unsigned int prephitmp_763;
  long unsigned int pretmp_764;
  long unsigned int prephitmp_765;
  long unsigned int pretmp_766;
  long unsigned int prephitmp_767;
  long unsigned int pretmp_768;
  long unsigned int prephitmp_769;
  long unsigned int pretmp_771;
  long unsigned int prephitmp_772;
  long unsigned int pretmp_773;
  long unsigned int prephitmp_774;
  long unsigned int pretmp_776;
  long unsigned int prephitmp_777;
  long unsigned int pretmp_778;
  long unsigned int prephitmp_779;
  long unsigned int pretmp_781;
  long unsigned int prephitmp_782;
  long unsigned int pretmp_783;
  long unsigned int prephitmp_784;

  <bb 2> [local count: 1808010]:
  MEM[(char * {ref-all})&e] = MEM[(char * {ref-all})scalar_16(D)];
  _1 = e[0];
  _2 = _1 & 248;
  e[0] = _2;
  _3 = e[31];
  _4 = _3 & 127;
  _5 = _4 | 64;
  e[31] = _5;
  load_dst_727 = MEM[(const uint8_t *)point_19(D)];
  result_268 = (uint64_t) load_dst_727;
  _269 = MEM[(const uint8_t *)point_19(D) + 4B];
  _270 = (long unsigned int) _269;
  _271 = _270 << 32;
  _273 = MEM[(const uint8_t *)point_19(D) + 5B];
  _274 = (long unsigned int) _273;
  _275 = _274 << 40;
  _366 = _271 | _275;
  result_276 = result_268 | _366;
  _277 = MEM[(const uint8_t *)point_19(D) + 6B];
  _278 = (long unsigned int) _277;
  _279 = _278 << 48;
  result_280 = result_276 | _279;
  load_dst_712 = MEM[(const uint8_t *)point_19(D) + 7B];
  result_294 = (uint64_t) load_dst_712;
  _295 = MEM[(const uint8_t *)point_19(D) + 11B];
  _296 = (long unsigned int) _295;
  _297 = _296 << 32;
  _299 = MEM[(const uint8_t *)point_19(D) + 12B];
  _300 = (long unsigned int) _299;
  _301 = _300 << 40;
  _365 = _297 | _301;
  result_302 = result_294 | _365;
  h1_303 = result_302 << 5;
  load_dst_697 = MEM[(const uint8_t *)point_19(D) + 13B];
  result_317 = (uint64_t) load_dst_697;
  _318 = MEM[(const uint8_t *)point_19(D) + 17B];
  _319 = (long unsigned int) _318;
  _320 = _319 << 32;
  _322 = MEM[(const uint8_t *)point_19(D) + 18B];
  _323 = (long unsigned int) _322;
  _324 = _323 << 40;
  _364 = _320 | _324;
  result_325 = result_317 | _364;
  _326 = MEM[(const uint8_t *)point_19(D) + 19B];
  _327 = (long unsigned int) _326;
  _328 = _327 << 48;
  result_329 = result_325 | _328;
  h2_330 = result_329 << 2;
  load_dst_682 = MEM[(const uint8_t *)point_19(D) + 20B];
  result_344 = (uint64_t) load_dst_682;
  _345 = MEM[(const uint8_t *)point_19(D) + 24B];
  _346 = (long unsigned int) _345;
  _347 = _346 << 32;
  _349 = MEM[(const uint8_t *)point_19(D) + 25B];
  _350 = (long unsigned int) _349;
  _351 = _350 << 40;
  _363 = _347 | _351;
  result_352 = result_344 | _363;
  h3_353 = result_352 << 7;
  load_dst_667 = MEM[(const uint8_t *)point_19(D) + 26B];
  result_367 = (uint64_t) load_dst_667;
  _368 = MEM[(const uint8_t *)point_19(D) + 30B];
  _369 = (long unsigned int) _368;
  _370 = _369 << 32;
  _372 = MEM[(const uint8_t *)point_19(D) + 31B];
  _373 = (long unsigned int) _372;
  _374 = _373 << 40;
  _151 = _370 | _374;
  result_375 = _151 | result_367;
  _376 = result_375 << 4;
  h4_377 = _376 & 2251799813685232;
  _378 = result_280 >> 51;
  h1_379 = h1_303 | _378;
  h0_380 = result_280 & 2251799813685247;
  _381 = h1_379 >> 51;
  h2_382 = h2_330 | _381;
  h1_383 = h1_379 & 2251799813685247;
  _384 = h2_382 >> 51;
  h3_385 = h3_353 | _384;
  h2_386 = h2_382 & 2251799813685247;
  _387 = h3_385 >> 51;
  h4_388 = h4_377 | _387;
  h3_389 = h3_385 & 2251799813685247;
  MEM[(uint64_t *)&x1] = h0_380;
  MEM[(uint64_t *)&x1 + 8B] = h1_383;
  MEM[(uint64_t *)&x1 + 16B] = h2_386;
  MEM[(uint64_t *)&x1 + 24B] = h3_389;
  MEM[(uint64_t *)&x1 + 32B] = h4_388;

  <bb 3> [local count: 178992763]:
  # swap_662 = PHI <0(2), b_21(4)>
  # pos_675 = PHI <254(2), pos_33(4)>
  # prephitmp_715 = PHI <_5(2), pretmp_716(4)>
  # prephitmp_700 = PHI <0(2), pretmp_701(4)>
  # prephitmp_688 = PHI <1(2), pretmp_689(4)>
  # prephitmp_674 = PHI <0(2), pretmp_685(4)>
  # prephitmp_671 = PHI <0(2), pretmp_673(4)>
  # prephitmp_739 = PHI <0(2), pretmp_738(4)>
  # prephitmp_741 = PHI <0(2), pretmp_740(4)>
  # prephitmp_747 = PHI <0(2), pretmp_746(4)>
  # prephitmp_749 = PHI <0(2), pretmp_748(4)>
  # prephitmp_755 = PHI <0(2), pretmp_754(4)>
  # prephitmp_757 = PHI <0(2), pretmp_756(4)>
  # prephitmp_763 = PHI <1(2), pretmp_762(4)>
  # prephitmp_765 = PHI <h0_380(2), pretmp_764(4)>
  # prephitmp_767 = PHI <0(2), pretmp_766(4)>
  # prephitmp_769 = PHI <h1_383(2), pretmp_768(4)>
  # prephitmp_772 = PHI <0(2), pretmp_771(4)>
  # prephitmp_774 = PHI <h2_386(2), pretmp_773(4)>
  # prephitmp_777 = PHI <0(2), pretmp_776(4)>
  # prephitmp_779 = PHI <h3_389(2), pretmp_778(4)>
  # prephitmp_782 = PHI <0(2), pretmp_781(4)>
  # prephitmp_784 = PHI <h4_388(2), pretmp_783(4)>
  _8 = (int) prephitmp_715;
  _9 = pos_675 & 7;
  _10 = _8 >> _9;
  _11 = (unsigned int) _10;
  b_21 = _11 & 1;
  swap_22 = b_21 ^ swap_662;
  _174 = (long unsigned int) swap_22;
  mask_175 = -_174;
  _664 = prephitmp_763 ^ prephitmp_765;
  _665 = mask_175 & _664;
  _666 = _665 ^ prephitmp_763;
  _668 = _665 ^ prephitmp_765;
  MEM[(uint64_t *)&x3] = _668;
  _679 = prephitmp_767 ^ prephitmp_769;
  _680 = mask_175 & _679;
  _681 = _680 ^ prephitmp_767;
  _683 = _680 ^ prephitmp_769;
  MEM[(uint64_t *)&x3 + 8B] = _683;
  _694 = prephitmp_772 ^ prephitmp_774;
  _695 = mask_175 & _694;
  _696 = _695 ^ prephitmp_772;
  _698 = _695 ^ prephitmp_774;
  MEM[(uint64_t *)&x3 + 16B] = _698;
  _709 = prephitmp_777 ^ prephitmp_779;
  _710 = mask_175 & _709;
  _711 = _710 ^ prephitmp_777;
  _713 = _710 ^ prephitmp_779;
  MEM[(uint64_t *)&x3 + 24B] = _713;
  _724 = prephitmp_782 ^ prephitmp_784;
  _725 = mask_175 & _724;
  _726 = _725 ^ prephitmp_782;
  _728 = _725 ^ prephitmp_784;
  MEM[(uint64_t *)&x3 + 32B] = _728;
  _589 = prephitmp_688 ^ prephitmp_700;
  _590 = mask_175 & _589;
  _591 = _590 ^ prephitmp_700;
  _593 = _590 ^ prephitmp_688;
  MEM[(uint64_t *)&z3] = _593;
  _604 = prephitmp_671 ^ prephitmp_674;
  _605 = mask_175 & _604;
  _606 = _605 ^ prephitmp_674;
  _608 = _605 ^ prephitmp_671;
  MEM[(uint64_t *)&z3 + 8B] = _608;
  _619 = prephitmp_739 ^ prephitmp_741;
  _620 = mask_175 & _619;
  _621 = _620 ^ prephitmp_739;
  _623 = _620 ^ prephitmp_741;
  MEM[(uint64_t *)&z3 + 16B] = _623;
  _634 = prephitmp_747 ^ prephitmp_749;
  _635 = mask_175 & _634;
  _636 = _635 ^ prephitmp_747;
  _638 = _635 ^ prephitmp_749;
  MEM[(uint64_t *)&z3 + 24B] = _638;
  _649 = prephitmp_755 ^ prephitmp_757;
  _650 = mask_175 & _649;
  _651 = _650 ^ prephitmp_755;
  _653 = _650 ^ prephitmp_757;
  MEM[(uint64_t *)&z3 + 32B] = _653;
  _150 = _668 + 4503599627370458;
  _145 = _150 - _593;
  MEM[(uint64_t *)&tmp0] = _145;
  _147 = _683 + 4503599627370494;
  _149 = _147 - _608;
  MEM[(uint64_t *)&tmp0 + 8B] = _149;
  _146 = _698 + 4503599627370494;
  _153 = _146 - _623;
  MEM[(uint64_t *)&tmp0 + 16B] = _153;
  _143 = _713 + 4503599627370494;
  _157 = _143 - _638;
  MEM[(uint64_t *)&tmp0 + 24B] = _157;
  _142 = _728 + 4503599627370494;
  _161 = _142 - _653;
  MEM[(uint64_t *)&tmp0 + 32B] = _161;
  _647 = _666 + 4503599627370458;
  _125 = _647 - _591;
  MEM[(uint64_t *)&tmp1] = _125;
  _645 = _681 + 4503599627370494;
  _129 = _645 - _606;
  MEM[(uint64_t *)&tmp1 + 8B] = _129;
  _632 = _696 + 4503599627370494;
  _133 = _632 - _621;
  MEM[(uint64_t *)&tmp1 + 16B] = _133;
  _630 = _711 + 4503599627370494;
  _137 = _630 - _636;
  MEM[(uint64_t *)&tmp1 + 24B] = _137;
  _617 = _726 + 4503599627370494;
  _141 = _617 - _651;
  MEM[(uint64_t *)&tmp1 + 32B] = _141;
  _117 = _591 + _666;
  MEM[(uint64_t *)&x2] = _117;
  _118 = _606 + _681;
  MEM[(uint64_t *)&x2 + 8B] = _118;
  _119 = _621 + _696;
  MEM[(uint64_t *)&x2 + 16B] = _119;
  _120 = _636 + _711;
  MEM[(uint64_t *)&x2 + 24B] = _120;
  _121 = _651 + _726;
  MEM[(uint64_t *)&x2 + 32B] = _121;
  _112 = _593 + _668;
  MEM[(uint64_t *)&z2] = _112;
  _113 = _608 + _683;
  MEM[(uint64_t *)&z2 + 8B] = _113;
  _114 = _623 + _698;
  MEM[(uint64_t *)&z2 + 16B] = _114;
  _115 = _638 + _713;
  MEM[(uint64_t *)&z2 + 24B] = _115;
  _116 = _653 + _728;
  MEM[(uint64_t *)&z2 + 32B] = _116;
  fe51_mul (&z3, &tmp0, &x2);
  fe51_mul (&z2, &z2, &tmp1);
  fe51_sq (&tmp0, &tmp1);
  fe51_sq (&tmp1, &x2);
  vect__97.441_257 = MEM[(const uint64_t *)&z3];
  vect__97.442_259 = MEM[(const uint64_t *)&z3 + 16B];
  vect__98.446_265 = MEM[(const uint64_t *)&z2];
  vect__98.447_267 = MEM[(const uint64_t *)&z2 + 16B];
  vect__99.451_288 = vect__97.441_257 + vect__98.446_265;
  vect__99.451_289 = vect__97.442_259 + vect__98.447_267;
  MEM[(uint64_t *)&x3] = vect__99.451_288;
  MEM[(uint64_t *)&x3 + 16B] = vect__99.451_289;
  _109 = MEM[(const uint64_t *)&z3 + 32B];
  _110 = MEM[(const uint64_t *)&z2 + 32B];
  _111 = _109 + _110;
  MEM[(uint64_t *)&x3 + 32B] = _111;
  vect__615.443_159 = vect__97.441_257 + { 4503599627370458, 4503599627370494 };
  vect__615.443_264 = vect__97.442_259 + { 4503599627370494, 4503599627370494 };
  vect__88.448_282 = vect__615.443_159 - vect__98.446_265;
  vect__88.448_283 = vect__615.443_264 - vect__98.447_267;
  MEM[(uint64_t *)&z2] = vect__88.448_282;
  MEM[(uint64_t *)&z2 + 16B] = vect__88.448_283;
  _585 = _109 + 4503599627370494;
  _96 = _585 - _110;
  MEM[(uint64_t *)&z2 + 32B] = _96;
  fe51_mul (&x2, &tmp1, &tmp0);
  vect__67.456_292 = MEM[(const uint64_t *)&tmp1];
  vect__67.457_304 = MEM[(const uint64_t *)&tmp1 + 16B];
  vect__68.461_311 = MEM[(const uint64_t *)&tmp0];
  vect__68.462_155 = MEM[(const uint64_t *)&tmp0 + 16B];
  vect__722.458_308 = vect__67.456_292 + { 4503599627370458, 4503599627370494 };
  vect__722.458_310 = vect__67.457_304 + { 4503599627370494, 4503599627370494 };
  vect__70.463_314 = vect__722.458_308 - vect__68.461_311;
  vect__70.463_315 = vect__722.458_310 - vect__68.462_155;
  MEM[(uint64_t *)&tmp1] = vect__70.463_314;
  MEM[(uint64_t *)&tmp1 + 16B] = vect__70.463_315;
  _83 = MEM[(const uint64_t *)&tmp1 + 32B];
  _84 = MEM[(const uint64_t *)&tmp0 + 32B];
  _692 = _83 + 4503599627370494;
  _86 = _692 - _84;
  MEM[(uint64_t *)&tmp1 + 32B] = _86;
  fe51_sq (&z2, &z2);
  _390 = MEM[(uint64_t *)&tmp1];
  h0_392 = _390 w* 121666;
  _393 = MEM[(uint64_t *)&tmp1 + 8B];
  h1_395 = _393 w* 121666;
  _396 = MEM[(uint64_t *)&tmp1 + 16B];
  h2_398 = _396 w* 121666;
  _399 = MEM[(uint64_t *)&tmp1 + 24B];
  h3_401 = _399 w* 121666;
  _402 = MEM[(uint64_t *)&tmp1 + 32B];
  h4_404 = _402 w* 121666;
  _405 = h2_398 >> 51;
  h3_407 = h3_401 + _405;
  _408 = (long unsigned int) h2_398;
  g2_409 = _408 & 2251799813685247;
  _410 = h0_392 >> 51;
  h1_412 = h1_395 + _410;
  _413 = (long unsigned int) h0_392;
  g0_414 = _413 & 2251799813685247;
  _415 = h3_407 >> 51;
  h4_417 = h4_404 + _415;
  _418 = (long unsigned int) h3_407;
  g3_419 = _418 & 2251799813685247;
  _420 = h1_412 >> 51;
  _421 = (long unsigned int) _420;
  g2_422 = g2_409 + _421;
  _423 = (long unsigned int) h1_412;
  g1_424 = _423 & 2251799813685247;
  _425 = h4_417 >> 51;
  _426 = (long unsigned int) _425;
  _427 = _426 * 19;
  g0_428 = g0_414 + _427;
  _429 = (long unsigned int) h4_417;
  g4_430 = _429 & 2251799813685247;
  _431 = g2_422 >> 51;
  g3_432 = g3_419 + _431;
  g2_433 = g2_422 & 2251799813685247;
  _434 = g0_428 >> 51;
  g1_435 = g1_424 + _434;
  g0_436 = g0_428 & 2251799813685247;
  MEM[(uint64_t *)&z3] = g0_436;
  MEM[(uint64_t *)&z3 + 8B] = g1_435;
  MEM[(uint64_t *)&z3 + 16B] = g2_433;
  MEM[(uint64_t *)&z3 + 24B] = g3_432;
  MEM[(uint64_t *)&z3 + 32B] = g4_430;
  fe51_sq (&x3, &x3);
  vect__52.468_333 = MEM[(const uint64_t *)&tmp0];
  vect__52.469_335 = MEM[(const uint64_t *)&tmp0 + 16B];
  vect__53.472_338 = MEM[(const uint64_t *)&z3];
  vect__53.473_154 = MEM[(const uint64_t *)&z3 + 16B];
  vect__54.474_341 = vect__52.468_333 + vect__53.472_338;
  vect__54.474_342 = vect__53.473_154 + vect__52.469_335;
  MEM[(uint64_t *)&tmp0] = vect__54.474_341;
  MEM[(uint64_t *)&tmp0 + 16B] = vect__54.474_342;
  _64 = MEM[(const uint64_t *)&tmp0 + 32B];
  _65 = MEM[(const uint64_t *)&z3 + 32B];
  _66 = _64 + _65;
  MEM[(uint64_t *)&tmp0 + 32B] = _66;
  fe51_mul (&z3, &x1, &z2);
  fe51_mul (&z2, &tmp1, &tmp0);
  pos_33 = pos_675 + -1;
  if (pos_33 != -1(OVF))
    goto <bb 4>; [98.99%]
  else
    goto <bb 5>; [1.01%]

  <bb 4> [local count: 177184756]:
  _718 = pos_33 >> 3;
  pretmp_716 = e[_718];
  pretmp_701 = MEM[(uint64_t *)&z2];
  pretmp_689 = MEM[(uint64_t *)&z3];
  pretmp_685 = MEM[(uint64_t *)&z2 + 8B];
  pretmp_673 = MEM[(uint64_t *)&z3 + 8B];
  pretmp_738 = MEM[(uint64_t *)&z2 + 16B];
  pretmp_740 = MEM[(uint64_t *)&z3 + 16B];
  pretmp_746 = MEM[(uint64_t *)&z2 + 24B];
  pretmp_748 = MEM[(uint64_t *)&z3 + 24B];
  pretmp_754 = MEM[(uint64_t *)&z2 + 32B];
  pretmp_756 = MEM[(uint64_t *)&z3 + 32B];
  pretmp_762 = MEM[(uint64_t *)&x2];
  pretmp_764 = MEM[(uint64_t *)&x3];
  pretmp_766 = MEM[(uint64_t *)&x2 + 8B];
  pretmp_768 = MEM[(uint64_t *)&x3 + 8B];
  pretmp_771 = MEM[(uint64_t *)&x2 + 16B];
  pretmp_773 = MEM[(uint64_t *)&x3 + 16B];
  pretmp_776 = MEM[(uint64_t *)&x2 + 24B];
  pretmp_778 = MEM[(uint64_t *)&x3 + 24B];
  pretmp_781 = MEM[(uint64_t *)&x2 + 32B];
  pretmp_783 = MEM[(uint64_t *)&x3 + 32B];
  goto <bb 3>; [100.00%]

  <bb 5> [local count: 1808008]:
  fe51_invert (&z2, &z2);
  fe51_mul (&x2, &x2, &z2);
  h0_437 = MEM[(const uint64_t *)&x2];
  h1_438 = MEM[(const uint64_t *)&x2 + 8B];
  h2_439 = MEM[(const uint64_t *)&x2 + 16B];
  h3_440 = MEM[(const uint64_t *)&x2 + 24B];
  h4_441 = MEM[(const uint64_t *)&x2 + 32B];
  _442 = h0_437 + 19;
  q_443 = _442 >> 51;
  _444 = h1_438 + q_443;
  q_445 = _444 >> 51;
  _446 = h2_439 + q_445;
  q_447 = _446 >> 51;
  _448 = h3_440 + q_447;
  q_449 = _448 >> 51;
  _450 = h4_441 + q_449;
  q_451 = _450 >> 51;
  _452 = q_451 * 19;
  h0_453 = h0_437 + _452;
  _454 = h0_453 >> 51;
  h1_455 = h1_438 + _454;
  h0_456 = h0_453 & 2251799813685247;
  _457 = h1_455 >> 51;
  h2_458 = h2_439 + _457;
  h1_459 = h1_455 & 2251799813685247;
  _460 = h2_458 >> 51;
  h3_461 = h3_440 + _460;
  h2_462 = h2_458 & 2251799813685247;
  _463 = h3_461 >> 51;
  h4_464 = h4_441 + _463;
  h3_465 = h3_461 & 2251799813685247;
  h4_466 = h4_464 & 2251799813685247;
  _307 = (unsigned int) h0_456;
  MEM[(uint8_t *)out_36(D)] = _307;
  _474 = h0_456 >> 32;
  _475 = (unsigned char) _474;
  MEM[(uint8_t *)out_36(D) + 4B] = _475;
  _476 = h0_456 >> 40;
  _477 = (unsigned char) _476;
  MEM[(uint8_t *)out_36(D) + 5B] = _477;
  _478 = h0_456 >> 48;
  _479 = (unsigned char) _478;
  _480 = (unsigned char) h1_459;
  _481 = _480 << 3;
  _482 = _479 | _481;
  MEM[(uint8_t *)out_36(D) + 6B] = _482;
  _483 = h1_459 >> 5;
  _484 = (unsigned char) _483;
  MEM[(uint8_t *)out_36(D) + 7B] = _484;
  _485 = h1_459 >> 13;
  _486 = (unsigned char) _485;
  MEM[(uint8_t *)out_36(D) + 8B] = _486;
  _487 = h1_459 >> 21;
  _488 = (unsigned char) _487;
  MEM[(uint8_t *)out_36(D) + 9B] = _488;
  _489 = h1_459 >> 29;
  _490 = (unsigned char) _489;
  MEM[(uint8_t *)out_36(D) + 10B] = _490;
  _491 = h1_459 >> 37;
  _492 = (unsigned char) _491;
  MEM[(uint8_t *)out_36(D) + 11B] = _492;
  _493 = h1_459 >> 45;
  _494 = (unsigned char) _493;
  _495 = (unsigned char) h2_462;
  _496 = _495 << 6;
  _497 = _494 | _496;
  MEM[(uint8_t *)out_36(D) + 12B] = _497;
  _498 = h2_462 >> 2;
  _499 = (unsigned char) _498;
  MEM[(uint8_t *)out_36(D) + 13B] = _499;
  _500 = h2_462 >> 10;
  _501 = (unsigned char) _500;
  MEM[(uint8_t *)out_36(D) + 14B] = _501;
  _502 = h2_462 >> 18;
  _503 = (unsigned char) _502;
  MEM[(uint8_t *)out_36(D) + 15B] = _503;
  _504 = h2_462 >> 26;
  _505 = (unsigned char) _504;
  MEM[(uint8_t *)out_36(D) + 16B] = _505;
  _506 = h2_462 >> 34;
  _507 = (unsigned char) _506;
  MEM[(uint8_t *)out_36(D) + 17B] = _507;
  _508 = h2_462 >> 42;
  _509 = (unsigned char) _508;
  MEM[(uint8_t *)out_36(D) + 18B] = _509;
  _510 = h2_462 >> 50;
  _511 = (unsigned char) _510;
  _512 = (unsigned char) h3_465;
  _513 = _512 << 1;
  _514 = _511 | _513;
  MEM[(uint8_t *)out_36(D) + 19B] = _514;
  _515 = h3_465 >> 7;
  _516 = (unsigned char) _515;
  MEM[(uint8_t *)out_36(D) + 20B] = _516;
  _517 = h3_465 >> 15;
  _518 = (unsigned char) _517;
  MEM[(uint8_t *)out_36(D) + 21B] = _518;
  _519 = h3_465 >> 23;
  _520 = (unsigned char) _519;
  MEM[(uint8_t *)out_36(D) + 22B] = _520;
  _521 = h3_465 >> 31;
  _522 = (unsigned char) _521;
  MEM[(uint8_t *)out_36(D) + 23B] = _522;
  _523 = h3_465 >> 39;
  _524 = (unsigned char) _523;
  MEM[(uint8_t *)out_36(D) + 24B] = _524;
  _525 = h3_465 >> 47;
  _526 = (unsigned char) _525;
  _527 = (unsigned char) h4_466;
  _528 = _527 << 4;
  _529 = _526 | _528;
  MEM[(uint8_t *)out_36(D) + 25B] = _529;
  _530 = h4_466 >> 4;
  _531 = (unsigned char) _530;
  MEM[(uint8_t *)out_36(D) + 26B] = _531;
  _532 = h4_466 >> 12;
  _533 = (unsigned char) _532;
  MEM[(uint8_t *)out_36(D) + 27B] = _533;
  _534 = h4_466 >> 20;
  _535 = (unsigned char) _534;
  MEM[(uint8_t *)out_36(D) + 28B] = _535;
  _536 = h4_466 >> 28;
  _537 = (unsigned char) _536;
  MEM[(uint8_t *)out_36(D) + 29B] = _537;
  _538 = h4_466 >> 36;
  _539 = (unsigned char) _538;
  MEM[(uint8_t *)out_36(D) + 30B] = _539;
  _540 = h4_466 >> 44;
  _541 = (unsigned char) _540;
  MEM[(uint8_t *)out_36(D) + 31B] = _541;
  OPENSSL_cleanse (&e, 32);
  x1 ={v} {CLOBBER};
  x2 ={v} {CLOBBER};
  z2 ={v} {CLOBBER};
  x3 ={v} {CLOBBER};
  z3 ={v} {CLOBBER};
  tmp0 ={v} {CLOBBER};
  tmp1 ={v} {CLOBBER};
  e ={v} {CLOBBER};
  return;

}



;; Function ED25519_sign (ED25519_sign, funcdef_no=418, decl_uid=9954, cgraph_uid=418, symbol_order=428)

ED25519_sign (uint8_t * out_sig, const uint8_t * message, size_t message_len, const uint8_t * public_key, const uint8_t * private_key)
{
  int32_t recip[10];
  int32_t x[10];
  int32_t y[10];
  uint8_t s[32];
  int64_t a0;
  int64_t a1;
  int64_t a2;
  int64_t a3;
  int64_t a4;
  int64_t a5;
  int64_t a6;
  int64_t a8;
  int64_t a9;
  int64_t a10;
  int64_t a11;
  int64_t b0;
  int64_t b1;
  int64_t b2;
  int64_t b3;
  int64_t b4;
  int64_t b5;
  int64_t b6;
  int64_t b8;
  int64_t b9;
  int64_t b10;
  int64_t b11;
  int64_t c0;
  int64_t c1;
  int64_t c2;
  int64_t c3;
  int64_t c4;
  int64_t c5;
  int64_t c6;
  int64_t c8;
  int64_t c9;
  int64_t c10;
  int64_t c11;
  int64_t s0;
  int64_t s1;
  int64_t s2;
  int64_t s3;
  int64_t s4;
  int64_t s5;
  int64_t s6;
  int64_t s7;
  int64_t s8;
  int64_t s9;
  int64_t s10;
  int64_t s11;
  int64_t s12;
  int64_t s13;
  int64_t s14;
  int64_t s15;
  int64_t s16;
  int64_t s17;
  int64_t s18;
  int64_t s19;
  int64_t s20;
  int64_t s21;
  int64_t s22;
  int64_t carry0;
  int64_t carry1;
  int64_t carry2;
  int64_t carry3;
  int64_t carry4;
  int64_t carry5;
  int64_t carry6;
  int64_t carry7;
  int64_t carry8;
  int64_t carry9;
  int64_t carry10;
  int64_t carry11;
  int64_t carry12;
  int64_t carry13;
  int64_t carry14;
  int64_t carry15;
  int64_t carry16;
  int64_t carry17;
  int64_t carry18;
  int64_t carry19;
  int64_t carry20;
  int64_t carry21;
  int64_t carry22;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  struct SHA512_CTX hash_ctx;
  uint8_t hram[64];
  struct ge_p3 R;
  uint8_t nonce[64];
  uint8_t az[64];
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  long unsigned int _23;
  unsigned char _40;
  unsigned char _42;
  long unsigned int _43;
  long unsigned int _44;
  unsigned int load_dst_45;
  unsigned char _46;
  long unsigned int _47;
  long unsigned int _48;
  long int _50;
  unsigned short _52;
  unsigned short _53;
  unsigned int load_dst_55;
  unsigned char _60;
  long unsigned int _61;
  long unsigned int _64;
  long int _65;
  unsigned char _67;
  long unsigned int _68;
  long unsigned int _69;
  unsigned int load_dst_70;
  unsigned char _71;
  long unsigned int _72;
  long unsigned int _73;
  long unsigned int _75;
  long int _76;
  unsigned int load_dst_81;
  long unsigned int _90;
  long int _91;
  unsigned int load_dst_96;
  unsigned char _101;
  long unsigned int _102;
  long unsigned int _105;
  long int _106;
  unsigned char _108;
  long unsigned int _109;
  long unsigned int _110;
  unsigned int load_dst_111;
  unsigned char _112;
  long unsigned int _113;
  long unsigned int _114;
  long unsigned int _116;
  long int _117;
  unsigned int load_dst_122;
  unsigned char _127;
  long unsigned int _128;
  long unsigned int _131;
  long int _132;
  unsigned char _134;
  long unsigned int _135;
  long unsigned int _136;
  unsigned int load_dst_137;
  unsigned char _138;
  long unsigned int _139;
  long unsigned int _140;
  long unsigned int _142;
  long int _143;
  unsigned char _144;
  unsigned char _146;
  long unsigned int _147;
  long unsigned int _148;
  unsigned int load_dst_149;
  unsigned char _150;
  long unsigned int _151;
  long unsigned int _152;
  long int _154;
  unsigned int load_dst_159;
  unsigned char _164;
  long unsigned int _165;
  long unsigned int _168;
  long int _169;
  unsigned char _171;
  long unsigned int _172;
  long unsigned int _173;
  unsigned int load_dst_174;
  unsigned char _175;
  long unsigned int _176;
  long unsigned int _177;
  long unsigned int _179;
  long int _180;
  unsigned int load_dst_185;
  long unsigned int _194;
  unsigned char _196;
  unsigned char _198;
  long unsigned int _199;
  long unsigned int _200;
  unsigned int load_dst_201;
  unsigned char _202;
  long unsigned int _203;
  long unsigned int _204;
  long int _206;
  unsigned int load_dst_211;
  unsigned char _216;
  long unsigned int _217;
  long unsigned int _220;
  long int _221;
  unsigned char _223;
  long unsigned int _224;
  long unsigned int _225;
  unsigned int load_dst_226;
  unsigned char _227;
  long unsigned int _228;
  long unsigned int _229;
  long unsigned int _231;
  long int _232;
  unsigned int load_dst_237;
  long unsigned int _246;
  long int _247;
  unsigned int load_dst_252;
  unsigned char _257;
  long unsigned int _258;
  long unsigned int _261;
  long int _262;
  unsigned char _264;
  long unsigned int _265;
  long unsigned int _266;
  unsigned int load_dst_267;
  unsigned char _268;
  long unsigned int _269;
  long unsigned int _270;
  long unsigned int _272;
  long int _273;
  unsigned char _283;
  long unsigned int _284;
  long unsigned int _287;
  long int _288;
  unsigned char _290;
  long unsigned int _291;
  long unsigned int _292;
  unsigned char _294;
  long unsigned int _295;
  long unsigned int _296;
  long unsigned int _298;
  long int _299;
  unsigned char _300;
  unsigned char _302;
  long unsigned int _303;
  long unsigned int _304;
  unsigned char _306;
  long unsigned int _307;
  long unsigned int _308;
  long int _310;
  unsigned char _320;
  long unsigned int _321;
  long unsigned int _324;
  long int _325;
  unsigned char _327;
  long unsigned int _328;
  long unsigned int _329;
  unsigned char _331;
  long unsigned int _332;
  long unsigned int _333;
  long unsigned int _335;
  long int _336;
  long unsigned int _350;
  unsigned char _352;
  unsigned char _354;
  long unsigned int _355;
  long unsigned int _356;
  unsigned char _358;
  long unsigned int _359;
  long unsigned int _360;
  long int _362;
  unsigned char _372;
  long unsigned int _373;
  long unsigned int _376;
  long int _377;
  unsigned char _379;
  long unsigned int _380;
  long unsigned int _381;
  unsigned char _383;
  long unsigned int _384;
  long unsigned int _385;
  long unsigned int _387;
  long int _388;
  long unsigned int _402;
  long int _403;
  unsigned char _413;
  long unsigned int _414;
  long unsigned int _417;
  long int _418;
  unsigned char _420;
  long unsigned int _421;
  long unsigned int _422;
  unsigned char _424;
  long unsigned int _425;
  long unsigned int _426;
  long unsigned int _428;
  long int _429;
  unsigned char _439;
  long unsigned int _440;
  long unsigned int _443;
  long int _444;
  unsigned char _446;
  long unsigned int _447;
  long unsigned int _448;
  unsigned char _450;
  long unsigned int _451;
  long unsigned int _452;
  long unsigned int _454;
  long int _455;
  unsigned char _456;
  unsigned char _458;
  long unsigned int _459;
  long unsigned int _460;
  unsigned char _462;
  long unsigned int _463;
  long unsigned int _464;
  long int _466;
  unsigned char _476;
  long unsigned int _477;
  long unsigned int _480;
  long int _481;
  unsigned char _483;
  long unsigned int _484;
  long unsigned int _485;
  unsigned char _487;
  long unsigned int _488;
  long unsigned int _489;
  long unsigned int _491;
  long int _492;
  long unsigned int _506;
  long int _508;
  long int _510;
  long int _511;
  long int _512;
  long int _514;
  long int _515;
  long int _516;
  long int _517;
  long int _518;
  long int _520;
  long int _521;
  long int _522;
  long int _523;
  long int _524;
  long int _525;
  long int _526;
  long int _528;
  long int _529;
  long int _530;
  long int _531;
  long int _532;
  long int _533;
  long int _534;
  long int _535;
  long int _536;
  long int _538;
  long int _539;
  long int _540;
  long int _541;
  long int _542;
  long int _543;
  long int _544;
  long int _545;
  long int _546;
  long int _547;
  long int _548;
  long int _550;
  long int _551;
  long int _552;
  long int _553;
  long int _554;
  long int _555;
  long int _556;
  long int _557;
  long int _558;
  long int _559;
  long int _560;
  long int _561;
  long int _562;
  long int _564;
  long int _565;
  long int _566;
  long int _567;
  long int _568;
  long int _569;
  long int _570;
  long int _571;
  long int _572;
  long int _573;
  long int _574;
  long int _575;
  long int _576;
  long int _577;
  long int _578;
  long int _580;
  long int _581;
  long int _582;
  long int _583;
  long int _584;
  long int _585;
  long int _586;
  long int _587;
  long int _588;
  long int _589;
  long int _590;
  long int _591;
  long int _592;
  long int _593;
  long int _594;
  long int _595;
  long int _596;
  long int _598;
  long int _599;
  long int _600;
  long int _601;
  long int _602;
  long int _603;
  long int _604;
  long int _605;
  long int _606;
  long int _607;
  long int _608;
  long int _609;
  long int _610;
  long int _611;
  long int _612;
  long int _613;
  long int _614;
  long int _615;
  long int _616;
  long int _618;
  long int _619;
  long int _620;
  long int _621;
  long int _622;
  long int _623;
  long int _624;
  long int _625;
  long int _626;
  long int _627;
  long int _628;
  long int _629;
  long int _630;
  long int _631;
  long int _632;
  long int _633;
  long int _634;
  long int _635;
  long int _636;
  long int _637;
  long int _638;
  long int _640;
  long int _641;
  long int _642;
  long int _643;
  long int _644;
  long int _645;
  long int _646;
  long int _647;
  long int _648;
  long int _649;
  long int _650;
  long int _651;
  long int _652;
  long int _653;
  long int _654;
  long int _655;
  long int _656;
  long int _657;
  long int _658;
  long int _659;
  long int _660;
  long int _661;
  long int _662;
  long int _664;
  long int _665;
  long int _666;
  long int _667;
  long int _668;
  long int _669;
  long int _670;
  long int _671;
  long int _672;
  long int _673;
  long int _674;
  long int _675;
  long int _676;
  long int _677;
  long int _678;
  long int _679;
  long int _680;
  long int _681;
  long int _682;
  long int _683;
  long int _685;
  long int _686;
  long int _687;
  long int _688;
  long int _689;
  long int _690;
  long int _691;
  long int _692;
  long int _693;
  long int _694;
  long int _695;
  long int _696;
  long int _697;
  long int _698;
  long int _699;
  long int _700;
  long int _701;
  long int _702;
  long int _704;
  long int _705;
  long int _706;
  long int _707;
  long int _708;
  long int _709;
  long int _710;
  long int _711;
  long int _712;
  long int _713;
  long int _714;
  long int _715;
  long int _716;
  long int _717;
  long int _718;
  long int _719;
  long int _721;
  long int _722;
  long int _723;
  long int _724;
  long int _725;
  long int _726;
  long int _727;
  long int _728;
  long int _729;
  long int _730;
  long int _731;
  long int _732;
  long int _733;
  long int _734;
  long int _736;
  long int _737;
  long int _738;
  long int _739;
  long int _740;
  long int _741;
  long int _742;
  long int _743;
  long int _744;
  long int _745;
  long int _746;
  long int _747;
  long int _749;
  long int _750;
  long int _751;
  long int _752;
  long int _753;
  long int _754;
  long int _755;
  long int _756;
  long int _757;
  long int _758;
  long int _760;
  long int _761;
  long int _762;
  long int _763;
  long int _764;
  long int _765;
  long int _766;
  long int _767;
  long int _769;
  long int _770;
  long int _771;
  long int _772;
  long int _773;
  long int _774;
  long int _776;
  long int _777;
  long int _778;
  long int _779;
  long int _781;
  long int _782;
  long int _785;
  long int _788;
  long int _790;
  long int _793;
  long int _795;
  long int _798;
  long int _800;
  long int _803;
  long int _805;
  long int _808;
  long int _810;
  long int _813;
  long int _815;
  long int _818;
  long int _820;
  long int _823;
  long int _825;
  long int _828;
  long int _830;
  long int _833;
  long int _835;
  long int _838;
  long int _840;
  long int _842;
  long int _844;
  long int _847;
  long int _849;
  long int _852;
  long int _854;
  long int _857;
  long int _859;
  long int _862;
  long int _864;
  long int _867;
  long int _869;
  long int _872;
  long int _874;
  long int _877;
  long int _879;
  long int _882;
  long int _884;
  long int _887;
  long int _889;
  long int _892;
  long int _894;
  long int _897;
  long int _899;
  long int _901;
  long int _903;
  long int _905;
  long int _907;
  long int _909;
  long int _911;
  long int _913;
  long int _915;
  long int _917;
  long int _919;
  long int _921;
  long int _923;
  long int _925;
  long int _927;
  long int _929;
  long int _931;
  long int _933;
  long int _935;
  long int _937;
  long int _939;
  long int _941;
  long int _943;
  long int _945;
  long int _947;
  long int _949;
  long int _951;
  long int _953;
  long int _955;
  long int _957;
  long int _959;
  long int _961;
  long int _963;
  long int _965;
  long int _967;
  long int _969;
  long int _971;
  long int _974;
  long int _976;
  long int _979;
  long int _981;
  long int _984;
  long int _986;
  long int _989;
  long int _991;
  long int _994;
  long int _996;
  long int _999;
  long int _1001;
  long int _1004;
  long int _1006;
  long int _1009;
  long int _1011;
  long int _1014;
  long int _1016;
  long int _1019;
  long int _1021;
  long int _1024;
  long int _1026;
  long int _1028;
  long int _1030;
  long int _1032;
  long int _1034;
  long int _1036;
  long int _1038;
  long int _1040;
  long int _1042;
  long int _1044;
  long int _1046;
  long int _1048;
  long int _1050;
  long int _1052;
  long int _1054;
  long int _1056;
  long int _1058;
  long int _1060;
  long int _1062;
  long int _1064;
  long int _1066;
  long int _1068;
  long int _1070;
  long int _1072;
  long int _1074;
  long int _1076;
  long int _1078;
  long int _1080;
  long int _1082;
  long int _1084;
  long int _1086;
  long int _1088;
  long int _1090;
  long int _1092;
  long int _1094;
  long int _1096;
  long int _1098;
  long int _1101;
  long int _1103;
  long int _1106;
  long int _1108;
  long int _1111;
  long int _1113;
  long int _1116;
  long int _1118;
  long int _1121;
  long int _1123;
  long int _1126;
  long int _1128;
  long int _1131;
  long int _1133;
  long int _1136;
  long int _1138;
  long int _1141;
  long int _1143;
  long int _1146;
  long int _1148;
  long int _1151;
  long int _1153;
  long int _1155;
  long int _1157;
  long int _1159;
  long int _1161;
  long int _1163;
  long int _1165;
  long int _1167;
  long int _1171;
  long int _1175;
  long int _1179;
  long int _1183;
  long int _1187;
  long int _1191;
  long int _1195;
  long int _1199;
  long int _1203;
  long int _1207;
  long int _1211;
  long int _1214;
  long int _1216;
  long int _1218;
  long int _1220;
  long int _1222;
  long int _1224;
  long int _1226;
  long int _1230;
  long int _1234;
  long int _1238;
  long int _1242;
  long int _1246;
  long int _1250;
  long int _1254;
  long int _1258;
  long int _1262;
  long int _1266;
  long int _1270;
  long int _1275;
  signed char _1276;
  long int _1277;
  signed char _1278;
  signed char _1279;
  unsigned char _1280;
  long int _1281;
  unsigned char _1282;
  long int _1283;
  unsigned char _1284;
  long int _1285;
  signed char _1286;
  long int _1287;
  signed char _1288;
  signed char _1289;
  unsigned char _1290;
  long int _1291;
  unsigned char _1292;
  long int _1293;
  signed char _1294;
  long int _1295;
  signed char _1296;
  signed char _1297;
  unsigned char _1298;
  long int _1299;
  unsigned char _1300;
  long int _1301;
  unsigned char _1302;
  long int _1303;
  signed char _1304;
  long int _1305;
  signed char _1306;
  signed char _1307;
  unsigned char _1308;
  long int _1309;
  unsigned char _1310;
  long int _1311;
  unsigned char _1312;
  long int _1313;
  signed char _1314;
  long int _1315;
  signed char _1316;
  signed char _1317;
  unsigned char _1318;
  long int _1319;
  unsigned char _1320;
  long int _1321;
  signed char _1322;
  long int _1323;
  signed char _1324;
  signed char _1325;
  unsigned char _1326;
  long int _1327;
  unsigned char _1328;
  long int _1329;
  unsigned char _1330;
  long int _1331;
  signed char _1332;
  long int _1333;
  signed char _1334;
  signed char _1335;
  unsigned char _1336;
  long int _1337;
  unsigned char _1338;
  long int _1339;
  unsigned char _1340;
  long int _1344;
  signed char _1345;
  long int _1346;
  signed char _1347;
  signed char _1348;
  unsigned char _1349;
  long int _1350;
  unsigned char _1351;
  long int _1352;
  unsigned char _1353;
  long int _1354;
  signed char _1355;
  long int _1356;
  signed char _1357;
  signed char _1358;
  unsigned char _1359;
  long int _1360;
  unsigned char _1361;
  long int _1362;
  signed char _1363;
  long int _1364;
  signed char _1365;
  signed char _1366;
  unsigned char _1367;
  long int _1368;
  unsigned char _1369;
  long int _1370;
  unsigned char _1371;
  long int _1372;
  unsigned char _1373;
  long unsigned int _1374;
  long unsigned int _1376;
  unsigned char _1377;
  unsigned char _1378;
  int _1379;
  int _1380;
  unsigned char _1381;
  signed char _1382;
  signed char _1383;
  signed char _1384;
  unsigned char _1385;
  long unsigned int _1428;
  long unsigned int _1431;
  long unsigned int _1433;
  long unsigned int _1435;
  long unsigned int _1437;
  long unsigned int _1438;
  long unsigned int _1440;
  long unsigned int _1443;
  long unsigned int _1445;
  long unsigned int _1447;
  long unsigned int _1449;
  long unsigned int _1450;
  long unsigned int _1452;
  long unsigned int _1455;
  long unsigned int _1457;

  <bb 2> [local count: 1073741825]:
  SHA512_Init (&hash_ctx);
  SHA512_Update (&hash_ctx, private_key_9(D), 32);
  SHA512_Final (&az, &hash_ctx);
  _1 = az[0];
  _2 = _1 & 248;
  az[0] = _2;
  _3 = az[31];
  _4 = _3 & 63;
  _5 = _4 | 64;
  az[31] = _5;
  SHA512_Init (&hash_ctx);
  SHA512_Update (&hash_ctx, &MEM[(void *)&az + 32B], 32);
  SHA512_Update (&hash_ctx, message_16(D), message_len_17(D));
  SHA512_Final (&nonce, &hash_ctx);
  x25519_sc_reduce (&nonce);
  ge_scalarmult_base (&R, &nonce);
  fe_invert (&recip, &R.Z);
  fe_mul (&x, &R.X, &recip);
  fe_mul (&y, &R.Y, &recip);
  fe_tobytes (out_sig_22(D), &y);
  fe_tobytes (&s, &x);
  _1377 = s[0];
  _1378 = _1377 & 1;
  _1379 = (int) _1378;
  s ={v} {CLOBBER};
  _1380 = _1379 << 7;
  _1381 = MEM[(uint8_t *)out_sig_22(D) + 31B];
  _1382 = (signed char) _1381;
  _1383 = (signed char) _1380;
  _1384 = _1382 ^ _1383;
  _1385 = (unsigned char) _1384;
  MEM[(uint8_t *)out_sig_22(D) + 31B] = _1385;
  recip ={v} {CLOBBER};
  x ={v} {CLOBBER};
  y ={v} {CLOBBER};
  SHA512_Init (&hash_ctx);
  SHA512_Update (&hash_ctx, out_sig_22(D), 32);
  SHA512_Update (&hash_ctx, public_key_26(D), 32);
  SHA512_Update (&hash_ctx, message_16(D), message_len_17(D));
  SHA512_Final (&hram, &hash_ctx);
  x25519_sc_reduce (&hram);
  _40 = MEM[(const uint8_t *)&hram];
  result_41 = (uint64_t) _40;
  _42 = MEM[(const uint8_t *)&hram + 1B];
  _43 = (long unsigned int) _42;
  _44 = _43 << 8;
  load_dst_267 = MEM[(const uint8_t *)&hram + 2B];
  result_63 = (uint64_t) load_dst_267;
  _46 = MEM[(const uint8_t *)&hram + 2B];
  _47 = (long unsigned int) _46;
  _48 = _47 << 16;
  _1457 = _44 | _48;
  result_49 = result_41 | _1457;
  _50 = (long int) result_49;
  a0_51 = _50 & 2097151;
  _60 = MEM[(const uint8_t *)&hram + 5B];
  _61 = (long unsigned int) _60;
  _64 = result_63 >> 5;
  _65 = (long int) _64;
  a1_66 = _65 & 2097151;
  _67 = MEM[(const uint8_t *)&hram + 6B];
  _68 = (long unsigned int) _67;
  _69 = _68 << 8;
  load_dst_252 = MEM[(const uint8_t *)&hram + 7B];
  result_89 = (uint64_t) load_dst_252;
  _71 = MEM[(const uint8_t *)&hram + 7B];
  _72 = (long unsigned int) _71;
  _73 = _72 << 16;
  _1455 = _69 | _73;
  result_74 = _61 | _1455;
  _75 = result_74 >> 2;
  _76 = (long int) _75;
  a2_77 = _76 & 2097151;
  load_dst_237 = MEM[(const uint8_t *)&hram + 10B];
  result_104 = (uint64_t) load_dst_237;
  _90 = result_89 >> 7;
  _91 = (long int) _90;
  a3_92 = _91 & 2097151;
  _101 = MEM[(const uint8_t *)&hram + 13B];
  _102 = (long unsigned int) _101;
  _105 = result_104 >> 4;
  _106 = (long int) _105;
  a4_107 = _106 & 2097151;
  _108 = MEM[(const uint8_t *)&hram + 14B];
  _109 = (long unsigned int) _108;
  _110 = _109 << 8;
  load_dst_226 = MEM[(const uint8_t *)&hram + 15B];
  result_130 = (uint64_t) load_dst_226;
  _112 = MEM[(const uint8_t *)&hram + 15B];
  _113 = (long unsigned int) _112;
  _114 = _113 << 16;
  _1452 = _110 | _114;
  result_115 = _102 | _1452;
  _116 = result_115 >> 1;
  _117 = (long int) _116;
  a5_118 = _117 & 2097151;
  _127 = MEM[(const uint8_t *)&hram + 18B];
  _128 = (long unsigned int) _127;
  _131 = result_130 >> 6;
  _132 = (long int) _131;
  a6_133 = _132 & 2097151;
  _134 = MEM[(const uint8_t *)&hram + 19B];
  _135 = (long unsigned int) _134;
  _136 = _135 << 8;
  _138 = MEM[(const uint8_t *)&hram + 20B];
  _139 = (long unsigned int) _138;
  _140 = _139 << 16;
  _1450 = _136 | _140;
  result_141 = _128 | _1450;
  _142 = result_141 >> 3;
  _143 = (long int) _142;
  _144 = MEM[(const uint8_t *)&hram + 21B];
  result_145 = (uint64_t) _144;
  _146 = MEM[(const uint8_t *)&hram + 22B];
  _147 = (long unsigned int) _146;
  _148 = _147 << 8;
  load_dst_211 = MEM[(const uint8_t *)&hram + 23B];
  result_167 = (uint64_t) load_dst_211;
  _150 = MEM[(const uint8_t *)&hram + 23B];
  _151 = (long unsigned int) _150;
  _152 = _151 << 16;
  _1449 = _148 | _152;
  result_153 = result_145 | _1449;
  _154 = (long int) result_153;
  a8_155 = _154 & 2097151;
  _164 = MEM[(const uint8_t *)&hram + 26B];
  _165 = (long unsigned int) _164;
  _168 = result_167 >> 5;
  _169 = (long int) _168;
  a9_170 = _169 & 2097151;
  _171 = MEM[(const uint8_t *)&hram + 27B];
  _172 = (long unsigned int) _171;
  _173 = _172 << 8;
  load_dst_201 = MEM[(const uint8_t *)&hram + 28B];
  result_193 = (uint64_t) load_dst_201;
  _175 = MEM[(const uint8_t *)&hram + 28B];
  _176 = (long unsigned int) _175;
  _177 = _176 << 16;
  _1447 = _173 | _177;
  result_178 = _165 | _1447;
  _179 = result_178 >> 2;
  _180 = (long int) _179;
  a10_181 = _180 & 2097151;
  _194 = result_193 >> 7;
  a11_195 = (int64_t) _194;
  _196 = MEM[(const uint8_t *)&az];
  result_197 = (uint64_t) _196;
  _198 = MEM[(const uint8_t *)&az + 1B];
  _199 = (long unsigned int) _198;
  _200 = _199 << 8;
  load_dst_185 = MEM[(const uint8_t *)&az + 2B];
  result_219 = (uint64_t) load_dst_185;
  _202 = MEM[(const uint8_t *)&az + 2B];
  _203 = (long unsigned int) _202;
  _204 = _203 << 16;
  _1445 = _200 | _204;
  result_205 = result_197 | _1445;
  _206 = (long int) result_205;
  b0_207 = _206 & 2097151;
  _216 = MEM[(const uint8_t *)&az + 5B];
  _217 = (long unsigned int) _216;
  _220 = result_219 >> 5;
  _221 = (long int) _220;
  b1_222 = _221 & 2097151;
  _223 = MEM[(const uint8_t *)&az + 6B];
  _224 = (long unsigned int) _223;
  _225 = _224 << 8;
  load_dst_174 = MEM[(const uint8_t *)&az + 7B];
  result_245 = (uint64_t) load_dst_174;
  _227 = MEM[(const uint8_t *)&az + 7B];
  _228 = (long unsigned int) _227;
  _229 = _228 << 16;
  _1443 = _225 | _229;
  result_230 = _217 | _1443;
  _231 = result_230 >> 2;
  _232 = (long int) _231;
  b2_233 = _232 & 2097151;
  load_dst_159 = MEM[(const uint8_t *)&az + 10B];
  result_260 = (uint64_t) load_dst_159;
  _246 = result_245 >> 7;
  _247 = (long int) _246;
  b3_248 = _247 & 2097151;
  _257 = MEM[(const uint8_t *)&az + 13B];
  _258 = (long unsigned int) _257;
  _261 = result_260 >> 4;
  _262 = (long int) _261;
  b4_263 = _262 & 2097151;
  _264 = MEM[(const uint8_t *)&az + 14B];
  _265 = (long unsigned int) _264;
  _266 = _265 << 8;
  load_dst_149 = MEM[(const uint8_t *)&az + 15B];
  result_286 = (uint64_t) load_dst_149;
  _268 = MEM[(const uint8_t *)&az + 15B];
  _269 = (long unsigned int) _268;
  _270 = _269 << 16;
  _1440 = _266 | _270;
  result_271 = _258 | _1440;
  _272 = result_271 >> 1;
  _273 = (long int) _272;
  b5_274 = _273 & 2097151;
  _283 = MEM[(const uint8_t *)&az + 18B];
  _284 = (long unsigned int) _283;
  _287 = result_286 >> 6;
  _288 = (long int) _287;
  b6_289 = _288 & 2097151;
  _290 = MEM[(const uint8_t *)&az + 19B];
  _291 = (long unsigned int) _290;
  _292 = _291 << 8;
  _294 = MEM[(const uint8_t *)&az + 20B];
  _295 = (long unsigned int) _294;
  _296 = _295 << 16;
  _1438 = _292 | _296;
  result_297 = _284 | _1438;
  _298 = result_297 >> 3;
  _299 = (long int) _298;
  _300 = MEM[(const uint8_t *)&az + 21B];
  result_301 = (uint64_t) _300;
  _302 = MEM[(const uint8_t *)&az + 22B];
  _303 = (long unsigned int) _302;
  _304 = _303 << 8;
  load_dst_137 = MEM[(const uint8_t *)&az + 23B];
  result_323 = (uint64_t) load_dst_137;
  _306 = MEM[(const uint8_t *)&az + 23B];
  _307 = (long unsigned int) _306;
  _308 = _307 << 16;
  _1437 = _304 | _308;
  result_309 = result_301 | _1437;
  _310 = (long int) result_309;
  b8_311 = _310 & 2097151;
  _320 = MEM[(const uint8_t *)&az + 26B];
  _321 = (long unsigned int) _320;
  _324 = result_323 >> 5;
  _325 = (long int) _324;
  b9_326 = _325 & 2097151;
  _327 = MEM[(const uint8_t *)&az + 27B];
  _328 = (long unsigned int) _327;
  _329 = _328 << 8;
  load_dst_122 = MEM[(const uint8_t *)&az + 28B];
  result_349 = (uint64_t) load_dst_122;
  _331 = MEM[(const uint8_t *)&az + 28B];
  _332 = (long unsigned int) _331;
  _333 = _332 << 16;
  _1435 = _329 | _333;
  result_334 = _321 | _1435;
  _335 = result_334 >> 2;
  _336 = (long int) _335;
  b10_337 = _336 & 2097151;
  _350 = result_349 >> 7;
  b11_351 = (int64_t) _350;
  _352 = MEM[(const uint8_t *)&nonce];
  result_353 = (uint64_t) _352;
  _354 = MEM[(const uint8_t *)&nonce + 1B];
  _355 = (long unsigned int) _354;
  _356 = _355 << 8;
  load_dst_111 = MEM[(const uint8_t *)&nonce + 2B];
  result_375 = (uint64_t) load_dst_111;
  _358 = MEM[(const uint8_t *)&nonce + 2B];
  _359 = (long unsigned int) _358;
  _360 = _359 << 16;
  _1433 = _356 | _360;
  result_361 = result_353 | _1433;
  _362 = (long int) result_361;
  c0_363 = _362 & 2097151;
  _372 = MEM[(const uint8_t *)&nonce + 5B];
  _373 = (long unsigned int) _372;
  _376 = result_375 >> 5;
  _377 = (long int) _376;
  c1_378 = _377 & 2097151;
  _379 = MEM[(const uint8_t *)&nonce + 6B];
  _380 = (long unsigned int) _379;
  _381 = _380 << 8;
  load_dst_96 = MEM[(const uint8_t *)&nonce + 7B];
  result_401 = (uint64_t) load_dst_96;
  _383 = MEM[(const uint8_t *)&nonce + 7B];
  _384 = (long unsigned int) _383;
  _385 = _384 << 16;
  _1431 = _381 | _385;
  result_386 = _373 | _1431;
  _387 = result_386 >> 2;
  _388 = (long int) _387;
  c2_389 = _388 & 2097151;
  load_dst_81 = MEM[(const uint8_t *)&nonce + 10B];
  result_416 = (uint64_t) load_dst_81;
  _402 = result_401 >> 7;
  _403 = (long int) _402;
  c3_404 = _403 & 2097151;
  _413 = MEM[(const uint8_t *)&nonce + 13B];
  _414 = (long unsigned int) _413;
  _417 = result_416 >> 4;
  _418 = (long int) _417;
  c4_419 = _418 & 2097151;
  _420 = MEM[(const uint8_t *)&nonce + 14B];
  _421 = (long unsigned int) _420;
  _422 = _421 << 8;
  _424 = MEM[(const uint8_t *)&nonce + 15B];
  _425 = (long unsigned int) _424;
  _426 = _425 << 16;
  _1428 = _422 | _426;
  result_427 = _414 | _1428;
  _428 = result_427 >> 1;
  _429 = (long int) _428;
  c5_430 = _429 & 2097151;
  load_dst_70 = MEM[(const uint8_t *)&nonce + 15B];
  result_442 = (uint64_t) load_dst_70;
  _439 = MEM[(const uint8_t *)&nonce + 18B];
  _440 = (long unsigned int) _439;
  _443 = result_442 >> 6;
  _444 = (long int) _443;
  c6_445 = _444 & 2097151;
  _446 = MEM[(const uint8_t *)&nonce + 19B];
  _447 = (long unsigned int) _446;
  _448 = _447 << 8;
  _450 = MEM[(const uint8_t *)&nonce + 20B];
  _451 = (long unsigned int) _450;
  _452 = _451 << 16;
  _23 = _448 | _452;
  result_453 = _23 | _440;
  _454 = result_453 >> 3;
  _455 = (long int) _454;
  _456 = MEM[(const uint8_t *)&nonce + 21B];
  result_457 = (uint64_t) _456;
  _458 = MEM[(const uint8_t *)&nonce + 22B];
  _459 = (long unsigned int) _458;
  _460 = _459 << 8;
  load_dst_55 = MEM[(const uint8_t *)&nonce + 23B];
  result_479 = (uint64_t) load_dst_55;
  _462 = MEM[(const uint8_t *)&nonce + 23B];
  _463 = (long unsigned int) _462;
  _464 = _463 << 16;
  _1376 = _460 | _464;
  result_465 = result_457 | _1376;
  _466 = (long int) result_465;
  c8_467 = _466 & 2097151;
  _476 = MEM[(const uint8_t *)&nonce + 26B];
  _477 = (long unsigned int) _476;
  _480 = result_479 >> 5;
  _481 = (long int) _480;
  c9_482 = _481 & 2097151;
  _483 = MEM[(const uint8_t *)&nonce + 27B];
  _484 = (long unsigned int) _483;
  _485 = _484 << 8;
  _487 = MEM[(const uint8_t *)&nonce + 28B];
  _488 = (long unsigned int) _487;
  _489 = _488 << 16;
  _1374 = _485 | _489;
  result_490 = _477 | _1374;
  _491 = result_490 >> 2;
  _492 = (long int) _491;
  c10_493 = _492 & 2097151;
  load_dst_45 = MEM[(const uint8_t *)&nonce + 28B];
  result_505 = (uint64_t) load_dst_45;
  _506 = result_505 >> 7;
  c11_507 = (int64_t) _506;
  _508 = a0_51 * b0_207;
  s0_509 = c0_363 + _508;
  _510 = a0_51 * b1_222;
  _511 = c1_378 + _510;
  _512 = a1_66 * b0_207;
  s1_513 = _511 + _512;
  _514 = a0_51 * b2_233;
  _515 = c2_389 + _514;
  _516 = a1_66 * b1_222;
  _517 = _515 + _516;
  _518 = a2_77 * b0_207;
  s2_519 = _517 + _518;
  _520 = a0_51 * b3_248;
  _521 = c3_404 + _520;
  _522 = a1_66 * b2_233;
  _523 = _521 + _522;
  _524 = a2_77 * b1_222;
  _525 = _523 + _524;
  _526 = a3_92 * b0_207;
  s3_527 = _525 + _526;
  _528 = a0_51 * b4_263;
  _529 = c4_419 + _528;
  _530 = a1_66 * b3_248;
  _531 = _529 + _530;
  _532 = a2_77 * b2_233;
  _533 = _531 + _532;
  _534 = a3_92 * b1_222;
  _535 = _533 + _534;
  _536 = a4_107 * b0_207;
  s4_537 = _535 + _536;
  _538 = a0_51 * b5_274;
  _539 = c5_430 + _538;
  _540 = a1_66 * b4_263;
  _541 = _539 + _540;
  _542 = a2_77 * b3_248;
  _543 = _541 + _542;
  _544 = a3_92 * b2_233;
  _545 = _543 + _544;
  _546 = a4_107 * b1_222;
  _547 = _545 + _546;
  _548 = a5_118 * b0_207;
  s5_549 = _547 + _548;
  _550 = a0_51 * b6_289;
  _551 = c6_445 + _550;
  _552 = a1_66 * b5_274;
  _553 = _551 + _552;
  _554 = a2_77 * b4_263;
  _555 = _553 + _554;
  _556 = a3_92 * b3_248;
  _557 = _555 + _556;
  _558 = a4_107 * b2_233;
  _559 = _557 + _558;
  _560 = a5_118 * b1_222;
  _561 = _559 + _560;
  _562 = a6_133 * b0_207;
  s6_563 = _561 + _562;
  _564 = a0_51 * _299;
  _565 = _455 + _564;
  _566 = a1_66 * b6_289;
  _567 = _565 + _566;
  _568 = a2_77 * b5_274;
  _569 = _567 + _568;
  _570 = a3_92 * b4_263;
  _571 = _569 + _570;
  _572 = a4_107 * b3_248;
  _573 = _571 + _572;
  _574 = a5_118 * b2_233;
  _575 = _573 + _574;
  _576 = a6_133 * b1_222;
  _577 = _575 + _576;
  _578 = _143 * b0_207;
  s7_579 = _577 + _578;
  _580 = a0_51 * b8_311;
  _581 = c8_467 + _580;
  _582 = a1_66 * _299;
  _583 = _581 + _582;
  _584 = a2_77 * b6_289;
  _585 = _583 + _584;
  _586 = a3_92 * b5_274;
  _587 = _585 + _586;
  _588 = a4_107 * b4_263;
  _589 = _587 + _588;
  _590 = a5_118 * b3_248;
  _591 = _589 + _590;
  _592 = a6_133 * b2_233;
  _593 = _591 + _592;
  _594 = _143 * b1_222;
  _595 = _593 + _594;
  _596 = a8_155 * b0_207;
  s8_597 = _595 + _596;
  _598 = a0_51 * b9_326;
  _599 = c9_482 + _598;
  _600 = a1_66 * b8_311;
  _601 = _599 + _600;
  _602 = a2_77 * _299;
  _603 = _601 + _602;
  _604 = a3_92 * b6_289;
  _605 = _603 + _604;
  _606 = a4_107 * b5_274;
  _607 = _605 + _606;
  _608 = a5_118 * b4_263;
  _609 = _607 + _608;
  _610 = a6_133 * b3_248;
  _611 = _609 + _610;
  _612 = _143 * b2_233;
  _613 = _611 + _612;
  _614 = a8_155 * b1_222;
  _615 = _613 + _614;
  _616 = a9_170 * b0_207;
  s9_617 = _615 + _616;
  _618 = a0_51 * b10_337;
  _619 = c10_493 + _618;
  _620 = a1_66 * b9_326;
  _621 = _619 + _620;
  _622 = a2_77 * b8_311;
  _623 = _621 + _622;
  _624 = a3_92 * _299;
  _625 = _623 + _624;
  _626 = a4_107 * b6_289;
  _627 = _625 + _626;
  _628 = a5_118 * b5_274;
  _629 = _627 + _628;
  _630 = a6_133 * b4_263;
  _631 = _629 + _630;
  _632 = _143 * b3_248;
  _633 = _631 + _632;
  _634 = a8_155 * b2_233;
  _635 = _633 + _634;
  _636 = a9_170 * b1_222;
  _637 = _635 + _636;
  _638 = a10_181 * b0_207;
  s10_639 = _637 + _638;
  _640 = a0_51 * b11_351;
  _641 = c11_507 + _640;
  _642 = a1_66 * b10_337;
  _643 = _641 + _642;
  _644 = a2_77 * b9_326;
  _645 = _643 + _644;
  _646 = a3_92 * b8_311;
  _647 = _645 + _646;
  _648 = a4_107 * _299;
  _649 = _647 + _648;
  _650 = a5_118 * b6_289;
  _651 = _649 + _650;
  _652 = a6_133 * b5_274;
  _653 = _651 + _652;
  _654 = _143 * b4_263;
  _655 = _653 + _654;
  _656 = a8_155 * b3_248;
  _657 = _655 + _656;
  _658 = a9_170 * b2_233;
  _659 = _657 + _658;
  _660 = a10_181 * b1_222;
  _661 = _659 + _660;
  _662 = a11_195 * b0_207;
  s11_663 = _661 + _662;
  _664 = a1_66 * b11_351;
  _665 = a2_77 * b10_337;
  _666 = _664 + _665;
  _667 = a3_92 * b9_326;
  _668 = _666 + _667;
  _669 = a4_107 * b8_311;
  _670 = _668 + _669;
  _671 = a5_118 * _299;
  _672 = _670 + _671;
  _673 = a6_133 * b6_289;
  _674 = _672 + _673;
  _675 = _143 * b5_274;
  _676 = _674 + _675;
  _677 = a8_155 * b4_263;
  _678 = _676 + _677;
  _679 = a9_170 * b3_248;
  _680 = _678 + _679;
  _681 = a10_181 * b2_233;
  _682 = _680 + _681;
  _683 = a11_195 * b1_222;
  s12_684 = _682 + _683;
  _685 = a2_77 * b11_351;
  _686 = a3_92 * b10_337;
  _687 = _685 + _686;
  _688 = a4_107 * b9_326;
  _689 = _687 + _688;
  _690 = a5_118 * b8_311;
  _691 = _689 + _690;
  _692 = a6_133 * _299;
  _693 = _691 + _692;
  _694 = _143 * b6_289;
  _695 = _693 + _694;
  _696 = a8_155 * b5_274;
  _697 = _695 + _696;
  _698 = a9_170 * b4_263;
  _699 = _697 + _698;
  _700 = a10_181 * b3_248;
  _701 = _699 + _700;
  _702 = a11_195 * b2_233;
  s13_703 = _701 + _702;
  _704 = a3_92 * b11_351;
  _705 = a4_107 * b10_337;
  _706 = _704 + _705;
  _707 = a5_118 * b9_326;
  _708 = _706 + _707;
  _709 = a6_133 * b8_311;
  _710 = _708 + _709;
  _711 = _143 * _299;
  _712 = _710 + _711;
  _713 = a8_155 * b6_289;
  _714 = _712 + _713;
  _715 = a9_170 * b5_274;
  _716 = _714 + _715;
  _717 = a10_181 * b4_263;
  _718 = _716 + _717;
  _719 = a11_195 * b3_248;
  s14_720 = _718 + _719;
  _721 = a4_107 * b11_351;
  _722 = a5_118 * b10_337;
  _723 = _721 + _722;
  _724 = a6_133 * b9_326;
  _725 = _723 + _724;
  _726 = _143 * b8_311;
  _727 = _725 + _726;
  _728 = a8_155 * _299;
  _729 = _727 + _728;
  _730 = a9_170 * b6_289;
  _731 = _729 + _730;
  _732 = a10_181 * b5_274;
  _733 = _731 + _732;
  _734 = a11_195 * b4_263;
  s15_735 = _733 + _734;
  _736 = a5_118 * b11_351;
  _737 = a6_133 * b10_337;
  _738 = _736 + _737;
  _739 = _143 * b9_326;
  _740 = _738 + _739;
  _741 = a8_155 * b8_311;
  _742 = _740 + _741;
  _743 = a9_170 * _299;
  _744 = _742 + _743;
  _745 = a10_181 * b6_289;
  _746 = _744 + _745;
  _747 = a11_195 * b5_274;
  s16_748 = _746 + _747;
  _749 = a6_133 * b11_351;
  _750 = _143 * b10_337;
  _751 = _749 + _750;
  _752 = a8_155 * b9_326;
  _753 = _751 + _752;
  _754 = a9_170 * b8_311;
  _755 = _753 + _754;
  _756 = a10_181 * _299;
  _757 = _755 + _756;
  _758 = a11_195 * b6_289;
  s17_759 = _757 + _758;
  _760 = _143 * b11_351;
  _761 = a8_155 * b10_337;
  _762 = _760 + _761;
  _763 = a9_170 * b9_326;
  _764 = _762 + _763;
  _765 = a10_181 * b8_311;
  _766 = _764 + _765;
  _767 = a11_195 * _299;
  s18_768 = _766 + _767;
  _769 = a8_155 * b11_351;
  _770 = a9_170 * b10_337;
  _771 = _769 + _770;
  _772 = a10_181 * b9_326;
  _773 = _771 + _772;
  _774 = a11_195 * b8_311;
  s19_775 = _773 + _774;
  _776 = a9_170 * b11_351;
  _777 = a10_181 * b10_337;
  _778 = _776 + _777;
  _779 = a11_195 * b9_326;
  s20_780 = _778 + _779;
  _781 = a10_181 * b11_351;
  _782 = a11_195 * b10_337;
  s21_783 = _781 + _782;
  s22_784 = a11_195 * b11_351;
  _785 = s0_509 + 1048576;
  carry0_786 = _785 >> 21;
  s1_787 = s1_513 + carry0_786;
  _788 = carry0_786 * 2097152;
  s0_789 = s0_509 - _788;
  _790 = s2_519 + 1048576;
  carry2_791 = _790 >> 21;
  s3_792 = s3_527 + carry2_791;
  _793 = carry2_791 * 2097152;
  s2_794 = s2_519 - _793;
  _795 = s4_537 + 1048576;
  carry4_796 = _795 >> 21;
  s5_797 = s5_549 + carry4_796;
  _798 = carry4_796 * 2097152;
  s4_799 = s4_537 - _798;
  _800 = s6_563 + 1048576;
  carry6_801 = _800 >> 21;
  s7_802 = s7_579 + carry6_801;
  _803 = carry6_801 * 2097152;
  s6_804 = s6_563 - _803;
  _805 = s8_597 + 1048576;
  carry8_806 = _805 >> 21;
  s9_807 = s9_617 + carry8_806;
  _808 = carry8_806 * 2097152;
  s8_809 = s8_597 - _808;
  _810 = s10_639 + 1048576;
  carry10_811 = _810 >> 21;
  s11_812 = s11_663 + carry10_811;
  _813 = carry10_811 * 2097152;
  s10_814 = s10_639 - _813;
  _815 = s12_684 + 1048576;
  carry12_816 = _815 >> 21;
  s13_817 = s13_703 + carry12_816;
  _818 = carry12_816 * 2097152;
  s12_819 = s12_684 - _818;
  _820 = s14_720 + 1048576;
  carry14_821 = _820 >> 21;
  s15_822 = s15_735 + carry14_821;
  _823 = carry14_821 * 2097152;
  s14_824 = s14_720 - _823;
  _825 = s16_748 + 1048576;
  carry16_826 = _825 >> 21;
  s17_827 = s17_759 + carry16_826;
  _828 = carry16_826 * 2097152;
  s16_829 = s16_748 - _828;
  _830 = s18_768 + 1048576;
  carry18_831 = _830 >> 21;
  s19_832 = s19_775 + carry18_831;
  _833 = carry18_831 * 2097152;
  s18_834 = s18_768 - _833;
  _835 = s20_780 + 1048576;
  carry20_836 = _835 >> 21;
  s21_837 = s21_783 + carry20_836;
  _838 = carry20_836 * 2097152;
  s20_839 = s20_780 - _838;
  _840 = s22_784 + 1048576;
  carry22_841 = _840 >> 21;
  _842 = carry22_841 * 2097152;
  s22_843 = s22_784 - _842;
  _844 = s1_787 + 1048576;
  carry1_845 = _844 >> 21;
  s2_846 = s2_794 + carry1_845;
  _847 = carry1_845 * 2097152;
  s1_848 = s1_787 - _847;
  _849 = s3_792 + 1048576;
  carry3_850 = _849 >> 21;
  s4_851 = s4_799 + carry3_850;
  _852 = carry3_850 * 2097152;
  s3_853 = s3_792 - _852;
  _854 = s5_797 + 1048576;
  carry5_855 = _854 >> 21;
  s6_856 = s6_804 + carry5_855;
  _857 = carry5_855 * 2097152;
  s5_858 = s5_797 - _857;
  _859 = s7_802 + 1048576;
  carry7_860 = _859 >> 21;
  s8_861 = s8_809 + carry7_860;
  _862 = carry7_860 * 2097152;
  s7_863 = s7_802 - _862;
  _864 = s9_807 + 1048576;
  carry9_865 = _864 >> 21;
  s10_866 = s10_814 + carry9_865;
  _867 = carry9_865 * 2097152;
  s9_868 = s9_807 - _867;
  _869 = s11_812 + 1048576;
  carry11_870 = _869 >> 21;
  s12_871 = s12_819 + carry11_870;
  _872 = carry11_870 * 2097152;
  s11_873 = s11_812 - _872;
  _874 = s13_817 + 1048576;
  carry13_875 = _874 >> 21;
  s14_876 = s14_824 + carry13_875;
  _877 = carry13_875 * 2097152;
  s13_878 = s13_817 - _877;
  _879 = s15_822 + 1048576;
  carry15_880 = _879 >> 21;
  s16_881 = s16_829 + carry15_880;
  _882 = carry15_880 * 2097152;
  s15_883 = s15_822 - _882;
  _884 = s17_827 + 1048576;
  carry17_885 = _884 >> 21;
  s18_886 = s18_834 + carry17_885;
  _887 = carry17_885 * 2097152;
  s17_888 = s17_827 - _887;
  _889 = s19_832 + 1048576;
  carry19_890 = _889 >> 21;
  s20_891 = s20_839 + carry19_890;
  _892 = carry19_890 * 2097152;
  s19_893 = s19_832 - _892;
  _894 = s21_837 + 1048576;
  carry21_895 = _894 >> 21;
  s22_896 = s22_843 + carry21_895;
  _897 = carry21_895 * 2097152;
  s21_898 = s21_837 - _897;
  _899 = carry22_841 * 666643;
  s11_900 = s11_873 + _899;
  _901 = carry22_841 * 470296;
  s12_902 = s12_871 + _901;
  _903 = carry22_841 * 654183;
  s13_904 = s13_878 + _903;
  _905 = carry22_841 * -997805;
  s14_906 = s14_876 + _905;
  _907 = carry22_841 * 136657;
  s15_908 = s15_883 + _907;
  _909 = carry22_841 * -683901;
  s16_910 = s16_881 + _909;
  _911 = s22_896 * 666643;
  s10_912 = s10_866 + _911;
  _913 = s22_896 * 470296;
  s11_914 = s11_900 + _913;
  _915 = s22_896 * 654183;
  s12_916 = s12_902 + _915;
  _917 = s22_896 * -997805;
  s13_918 = s13_904 + _917;
  _919 = s22_896 * 136657;
  s14_920 = s14_906 + _919;
  _921 = s22_896 * -683901;
  s15_922 = s15_908 + _921;
  _923 = s21_898 * 666643;
  s9_924 = s9_868 + _923;
  _925 = s21_898 * 470296;
  s10_926 = s10_912 + _925;
  _927 = s21_898 * 654183;
  s11_928 = s11_914 + _927;
  _929 = s21_898 * -997805;
  s12_930 = s12_916 + _929;
  _931 = s21_898 * 136657;
  s13_932 = s13_918 + _931;
  _933 = s21_898 * -683901;
  s14_934 = s14_920 + _933;
  _935 = s20_891 * 666643;
  s8_936 = s8_861 + _935;
  _937 = s20_891 * 470296;
  s9_938 = s9_924 + _937;
  _939 = s20_891 * 654183;
  s10_940 = s10_926 + _939;
  _941 = s20_891 * -997805;
  s11_942 = s11_928 + _941;
  _943 = s20_891 * 136657;
  s12_944 = s12_930 + _943;
  _945 = s20_891 * -683901;
  s13_946 = s13_932 + _945;
  _947 = s19_893 * 666643;
  s7_948 = s7_863 + _947;
  _949 = s19_893 * 470296;
  s8_950 = s8_936 + _949;
  _951 = s19_893 * 654183;
  s9_952 = s9_938 + _951;
  _953 = s19_893 * -997805;
  s10_954 = s10_940 + _953;
  _955 = s19_893 * 136657;
  s11_956 = s11_942 + _955;
  _957 = s19_893 * -683901;
  s12_958 = s12_944 + _957;
  _959 = s18_886 * 666643;
  s6_960 = s6_856 + _959;
  _961 = s18_886 * 470296;
  s7_962 = s7_948 + _961;
  _963 = s18_886 * 654183;
  s8_964 = s8_950 + _963;
  _965 = s18_886 * -997805;
  s9_966 = s9_952 + _965;
  _967 = s18_886 * 136657;
  s10_968 = s10_954 + _967;
  _969 = s18_886 * -683901;
  s11_970 = s11_956 + _969;
  _971 = s6_960 + 1048576;
  carry6_972 = _971 >> 21;
  s7_973 = s7_962 + carry6_972;
  _974 = carry6_972 * 2097152;
  s6_975 = s6_960 - _974;
  _976 = s8_964 + 1048576;
  carry8_977 = _976 >> 21;
  s9_978 = s9_966 + carry8_977;
  _979 = carry8_977 * 2097152;
  s8_980 = s8_964 - _979;
  _981 = s10_968 + 1048576;
  carry10_982 = _981 >> 21;
  s11_983 = s11_970 + carry10_982;
  _984 = carry10_982 * 2097152;
  s10_985 = s10_968 - _984;
  _986 = s12_958 + 1048576;
  carry12_987 = _986 >> 21;
  s13_988 = s13_946 + carry12_987;
  _989 = carry12_987 * 2097152;
  s12_990 = s12_958 - _989;
  _991 = s14_934 + 1048576;
  carry14_992 = _991 >> 21;
  s15_993 = s15_922 + carry14_992;
  _994 = carry14_992 * 2097152;
  s14_995 = s14_934 - _994;
  _996 = s16_910 + 1048576;
  carry16_997 = _996 >> 21;
  s17_998 = s17_888 + carry16_997;
  _999 = carry16_997 * 2097152;
  s16_1000 = s16_910 - _999;
  _1001 = s7_973 + 1048576;
  carry7_1002 = _1001 >> 21;
  s8_1003 = s8_980 + carry7_1002;
  _1004 = carry7_1002 * 2097152;
  s7_1005 = s7_973 - _1004;
  _1006 = s9_978 + 1048576;
  carry9_1007 = _1006 >> 21;
  s10_1008 = s10_985 + carry9_1007;
  _1009 = carry9_1007 * 2097152;
  s9_1010 = s9_978 - _1009;
  _1011 = s11_983 + 1048576;
  carry11_1012 = _1011 >> 21;
  s12_1013 = s12_990 + carry11_1012;
  _1014 = carry11_1012 * 2097152;
  s11_1015 = s11_983 - _1014;
  _1016 = s13_988 + 1048576;
  carry13_1017 = _1016 >> 21;
  s14_1018 = s14_995 + carry13_1017;
  _1019 = carry13_1017 * 2097152;
  s13_1020 = s13_988 - _1019;
  _1021 = s15_993 + 1048576;
  carry15_1022 = _1021 >> 21;
  s16_1023 = s16_1000 + carry15_1022;
  _1024 = carry15_1022 * 2097152;
  s15_1025 = s15_993 - _1024;
  _1026 = s17_998 * 666643;
  s5_1027 = s5_858 + _1026;
  _1028 = s17_998 * 470296;
  s6_1029 = s6_975 + _1028;
  _1030 = s17_998 * 654183;
  s7_1031 = s7_1005 + _1030;
  _1032 = s17_998 * -997805;
  s8_1033 = s8_1003 + _1032;
  _1034 = s17_998 * 136657;
  s9_1035 = s9_1010 + _1034;
  _1036 = s17_998 * -683901;
  s10_1037 = s10_1008 + _1036;
  _1038 = s16_1023 * 666643;
  s4_1039 = s4_851 + _1038;
  _1040 = s16_1023 * 470296;
  s5_1041 = s5_1027 + _1040;
  _1042 = s16_1023 * 654183;
  s6_1043 = s6_1029 + _1042;
  _1044 = s16_1023 * -997805;
  s7_1045 = s7_1031 + _1044;
  _1046 = s16_1023 * 136657;
  s8_1047 = s8_1033 + _1046;
  _1048 = s16_1023 * -683901;
  s9_1049 = s9_1035 + _1048;
  _1050 = s15_1025 * 666643;
  s3_1051 = s3_853 + _1050;
  _1052 = s15_1025 * 470296;
  s4_1053 = s4_1039 + _1052;
  _1054 = s15_1025 * 654183;
  s5_1055 = s5_1041 + _1054;
  _1056 = s15_1025 * -997805;
  s6_1057 = s6_1043 + _1056;
  _1058 = s15_1025 * 136657;
  s7_1059 = s7_1045 + _1058;
  _1060 = s15_1025 * -683901;
  s8_1061 = s8_1047 + _1060;
  _1062 = s14_1018 * 666643;
  s2_1063 = s2_846 + _1062;
  _1064 = s14_1018 * 470296;
  s3_1065 = s3_1051 + _1064;
  _1066 = s14_1018 * 654183;
  s4_1067 = s4_1053 + _1066;
  _1068 = s14_1018 * -997805;
  s5_1069 = s5_1055 + _1068;
  _1070 = s14_1018 * 136657;
  s6_1071 = s6_1057 + _1070;
  _1072 = s14_1018 * -683901;
  s7_1073 = s7_1059 + _1072;
  _1074 = s13_1020 * 666643;
  s1_1075 = s1_848 + _1074;
  _1076 = s13_1020 * 470296;
  s2_1077 = s2_1063 + _1076;
  _1078 = s13_1020 * 654183;
  s3_1079 = s3_1065 + _1078;
  _1080 = s13_1020 * -997805;
  s4_1081 = s4_1067 + _1080;
  _1082 = s13_1020 * 136657;
  s5_1083 = s5_1069 + _1082;
  _1084 = s13_1020 * -683901;
  s6_1085 = s6_1071 + _1084;
  _1086 = s12_1013 * 666643;
  s0_1087 = s0_789 + _1086;
  _1088 = s12_1013 * 470296;
  s1_1089 = s1_1075 + _1088;
  _1090 = s12_1013 * 654183;
  s2_1091 = s2_1077 + _1090;
  _1092 = s12_1013 * -997805;
  s3_1093 = s3_1079 + _1092;
  _1094 = s12_1013 * 136657;
  s4_1095 = s4_1081 + _1094;
  _1096 = s12_1013 * -683901;
  s5_1097 = s5_1083 + _1096;
  _1098 = s0_1087 + 1048576;
  carry0_1099 = _1098 >> 21;
  s1_1100 = s1_1089 + carry0_1099;
  _1101 = carry0_1099 * 2097152;
  s0_1102 = s0_1087 - _1101;
  _1103 = s2_1091 + 1048576;
  carry2_1104 = _1103 >> 21;
  s3_1105 = s3_1093 + carry2_1104;
  _1106 = carry2_1104 * 2097152;
  s2_1107 = s2_1091 - _1106;
  _1108 = s4_1095 + 1048576;
  carry4_1109 = _1108 >> 21;
  s5_1110 = s5_1097 + carry4_1109;
  _1111 = carry4_1109 * 2097152;
  s4_1112 = s4_1095 - _1111;
  _1113 = s6_1085 + 1048576;
  carry6_1114 = _1113 >> 21;
  s7_1115 = s7_1073 + carry6_1114;
  _1116 = carry6_1114 * 2097152;
  s6_1117 = s6_1085 - _1116;
  _1118 = s8_1061 + 1048576;
  carry8_1119 = _1118 >> 21;
  s9_1120 = s9_1049 + carry8_1119;
  _1121 = carry8_1119 * 2097152;
  s8_1122 = s8_1061 - _1121;
  _1123 = s10_1037 + 1048576;
  carry10_1124 = _1123 >> 21;
  s11_1125 = s11_1015 + carry10_1124;
  _1126 = carry10_1124 * 2097152;
  s10_1127 = s10_1037 - _1126;
  _1128 = s1_1100 + 1048576;
  carry1_1129 = _1128 >> 21;
  s2_1130 = s2_1107 + carry1_1129;
  _1131 = carry1_1129 * 2097152;
  s1_1132 = s1_1100 - _1131;
  _1133 = s3_1105 + 1048576;
  carry3_1134 = _1133 >> 21;
  s4_1135 = s4_1112 + carry3_1134;
  _1136 = carry3_1134 * 2097152;
  s3_1137 = s3_1105 - _1136;
  _1138 = s5_1110 + 1048576;
  carry5_1139 = _1138 >> 21;
  s6_1140 = s6_1117 + carry5_1139;
  _1141 = carry5_1139 * 2097152;
  s5_1142 = s5_1110 - _1141;
  _1143 = s7_1115 + 1048576;
  carry7_1144 = _1143 >> 21;
  s8_1145 = s8_1122 + carry7_1144;
  _1146 = carry7_1144 * 2097152;
  s7_1147 = s7_1115 - _1146;
  _1148 = s9_1120 + 1048576;
  carry9_1149 = _1148 >> 21;
  s10_1150 = s10_1127 + carry9_1149;
  _1151 = carry9_1149 * 2097152;
  s9_1152 = s9_1120 - _1151;
  _1153 = s11_1125 + 1048576;
  carry11_1154 = _1153 >> 21;
  _1155 = carry11_1154 * 2097152;
  s11_1156 = s11_1125 - _1155;
  _1157 = carry11_1154 * 666643;
  s0_1158 = s0_1102 + _1157;
  _1159 = carry11_1154 * 470296;
  s1_1160 = s1_1132 + _1159;
  _1161 = carry11_1154 * 654183;
  s2_1162 = s2_1130 + _1161;
  _1163 = carry11_1154 * -997805;
  s3_1164 = s3_1137 + _1163;
  _1165 = carry11_1154 * 136657;
  s4_1166 = s4_1135 + _1165;
  _1167 = carry11_1154 * -683901;
  s5_1168 = s5_1142 + _1167;
  carry0_1169 = s0_1158 >> 21;
  s1_1170 = s1_1160 + carry0_1169;
  _1171 = carry0_1169 * 2097152;
  s0_1172 = s0_1158 - _1171;
  carry1_1173 = s1_1170 >> 21;
  s2_1174 = s2_1162 + carry1_1173;
  _1175 = carry1_1173 * 2097152;
  s1_1176 = s1_1170 - _1175;
  carry2_1177 = s2_1174 >> 21;
  s3_1178 = s3_1164 + carry2_1177;
  _1179 = carry2_1177 * 2097152;
  s2_1180 = s2_1174 - _1179;
  carry3_1181 = s3_1178 >> 21;
  s4_1182 = s4_1166 + carry3_1181;
  _1183 = carry3_1181 * 2097152;
  s3_1184 = s3_1178 - _1183;
  carry4_1185 = s4_1182 >> 21;
  s5_1186 = s5_1168 + carry4_1185;
  _1187 = carry4_1185 * 2097152;
  s4_1188 = s4_1182 - _1187;
  carry5_1189 = s5_1186 >> 21;
  s6_1190 = s6_1140 + carry5_1189;
  _1191 = carry5_1189 * 2097152;
  s5_1192 = s5_1186 - _1191;
  carry6_1193 = s6_1190 >> 21;
  s7_1194 = s7_1147 + carry6_1193;
  _1195 = carry6_1193 * 2097152;
  s6_1196 = s6_1190 - _1195;
  carry7_1197 = s7_1194 >> 21;
  s8_1198 = s8_1145 + carry7_1197;
  _1199 = carry7_1197 * 2097152;
  s7_1200 = s7_1194 - _1199;
  carry8_1201 = s8_1198 >> 21;
  s9_1202 = s9_1152 + carry8_1201;
  _1203 = carry8_1201 * 2097152;
  s8_1204 = s8_1198 - _1203;
  carry9_1205 = s9_1202 >> 21;
  s10_1206 = s10_1150 + carry9_1205;
  _1207 = carry9_1205 * 2097152;
  s9_1208 = s9_1202 - _1207;
  carry10_1209 = s10_1206 >> 21;
  s11_1210 = s11_1156 + carry10_1209;
  _1211 = carry10_1209 * 2097152;
  s10_1212 = s10_1206 - _1211;
  carry11_1213 = s11_1210 >> 21;
  _1214 = carry11_1213 * 2097152;
  s11_1215 = s11_1210 - _1214;
  _1216 = carry11_1213 * 666643;
  s0_1217 = s0_1172 + _1216;
  _1218 = carry11_1213 * 470296;
  s1_1219 = s1_1176 + _1218;
  _1220 = carry11_1213 * 654183;
  s2_1221 = s2_1180 + _1220;
  _1222 = carry11_1213 * -997805;
  s3_1223 = s3_1184 + _1222;
  _1224 = carry11_1213 * 136657;
  s4_1225 = s4_1188 + _1224;
  _1226 = carry11_1213 * -683901;
  s5_1227 = s5_1192 + _1226;
  carry0_1228 = s0_1217 >> 21;
  s1_1229 = s1_1219 + carry0_1228;
  _1230 = carry0_1228 * 2097152;
  s0_1231 = s0_1217 - _1230;
  carry1_1232 = s1_1229 >> 21;
  s2_1233 = s2_1221 + carry1_1232;
  _1234 = carry1_1232 * 2097152;
  s1_1235 = s1_1229 - _1234;
  carry2_1236 = s2_1233 >> 21;
  s3_1237 = s3_1223 + carry2_1236;
  _1238 = carry2_1236 * 2097152;
  s2_1239 = s2_1233 - _1238;
  carry3_1240 = s3_1237 >> 21;
  s4_1241 = s4_1225 + carry3_1240;
  _1242 = carry3_1240 * 2097152;
  s3_1243 = s3_1237 - _1242;
  carry4_1244 = s4_1241 >> 21;
  s5_1245 = s5_1227 + carry4_1244;
  _1246 = carry4_1244 * 2097152;
  s4_1247 = s4_1241 - _1246;
  carry5_1248 = s5_1245 >> 21;
  s6_1249 = s6_1196 + carry5_1248;
  _1250 = carry5_1248 * 2097152;
  s5_1251 = s5_1245 - _1250;
  carry6_1252 = s6_1249 >> 21;
  s7_1253 = s7_1200 + carry6_1252;
  _1254 = carry6_1252 * 2097152;
  s6_1255 = s6_1249 - _1254;
  carry7_1256 = s7_1253 >> 21;
  s8_1257 = s8_1204 + carry7_1256;
  _1258 = carry7_1256 * 2097152;
  s7_1259 = s7_1253 - _1258;
  carry8_1260 = s8_1257 >> 21;
  s9_1261 = s9_1208 + carry8_1260;
  _1262 = carry8_1260 * 2097152;
  s8_1263 = s8_1257 - _1262;
  carry9_1264 = s9_1261 >> 21;
  s10_1265 = s10_1212 + carry9_1264;
  _1266 = carry9_1264 * 2097152;
  s9_1267 = s9_1261 - _1266;
  carry10_1268 = s10_1265 >> 21;
  s11_1269 = s11_1215 + carry10_1268;
  _1270 = carry10_1268 * 2097152;
  s10_1271 = s10_1265 - _1270;
  _52 = (unsigned short) s0_1231;
  MEM[(uint8_t *)out_sig_22(D) + 32B] = _52;
  _1275 = s0_1231 >> 16;
  _1276 = (signed char) _1275;
  _1277 = s1_1235 << 5;
  _1278 = (signed char) _1277;
  _1279 = _1276 | _1278;
  _1280 = (unsigned char) _1279;
  MEM[(uint8_t *)out_sig_22(D) + 34B] = _1280;
  _1281 = s1_1235 >> 3;
  _1282 = (unsigned char) _1281;
  MEM[(uint8_t *)out_sig_22(D) + 35B] = _1282;
  _1283 = s1_1235 >> 11;
  _1284 = (unsigned char) _1283;
  MEM[(uint8_t *)out_sig_22(D) + 36B] = _1284;
  _1285 = s1_1235 >> 19;
  _1286 = (signed char) _1285;
  _1287 = s2_1239 << 2;
  _1288 = (signed char) _1287;
  _1289 = _1286 | _1288;
  _1290 = (unsigned char) _1289;
  MEM[(uint8_t *)out_sig_22(D) + 37B] = _1290;
  _1291 = s2_1239 >> 6;
  _1292 = (unsigned char) _1291;
  MEM[(uint8_t *)out_sig_22(D) + 38B] = _1292;
  _1293 = s2_1239 >> 14;
  _1294 = (signed char) _1293;
  _1295 = s3_1243 << 7;
  _1296 = (signed char) _1295;
  _1297 = _1294 | _1296;
  _1298 = (unsigned char) _1297;
  MEM[(uint8_t *)out_sig_22(D) + 39B] = _1298;
  _1299 = s3_1243 >> 1;
  _1300 = (unsigned char) _1299;
  MEM[(uint8_t *)out_sig_22(D) + 40B] = _1300;
  _1301 = s3_1243 >> 9;
  _1302 = (unsigned char) _1301;
  MEM[(uint8_t *)out_sig_22(D) + 41B] = _1302;
  _1303 = s3_1243 >> 17;
  _1304 = (signed char) _1303;
  _1305 = s4_1247 << 4;
  _1306 = (signed char) _1305;
  _1307 = _1304 | _1306;
  _1308 = (unsigned char) _1307;
  MEM[(uint8_t *)out_sig_22(D) + 42B] = _1308;
  _1309 = s4_1247 >> 4;
  _1310 = (unsigned char) _1309;
  MEM[(uint8_t *)out_sig_22(D) + 43B] = _1310;
  _1311 = s4_1247 >> 12;
  _1312 = (unsigned char) _1311;
  MEM[(uint8_t *)out_sig_22(D) + 44B] = _1312;
  _1313 = s4_1247 >> 20;
  _1314 = (signed char) _1313;
  _1315 = s5_1251 << 1;
  _1316 = (signed char) _1315;
  _1317 = _1314 | _1316;
  _1318 = (unsigned char) _1317;
  MEM[(uint8_t *)out_sig_22(D) + 45B] = _1318;
  _1319 = s5_1251 >> 7;
  _1320 = (unsigned char) _1319;
  MEM[(uint8_t *)out_sig_22(D) + 46B] = _1320;
  _1321 = s5_1251 >> 15;
  _1322 = (signed char) _1321;
  _1323 = s6_1255 << 6;
  _1324 = (signed char) _1323;
  _1325 = _1322 | _1324;
  _1326 = (unsigned char) _1325;
  MEM[(uint8_t *)out_sig_22(D) + 47B] = _1326;
  _1327 = s6_1255 >> 2;
  _1328 = (unsigned char) _1327;
  MEM[(uint8_t *)out_sig_22(D) + 48B] = _1328;
  _1329 = s6_1255 >> 10;
  _1330 = (unsigned char) _1329;
  MEM[(uint8_t *)out_sig_22(D) + 49B] = _1330;
  _1331 = s6_1255 >> 18;
  _1332 = (signed char) _1331;
  _1333 = s7_1259 << 3;
  _1334 = (signed char) _1333;
  _1335 = _1332 | _1334;
  _1336 = (unsigned char) _1335;
  MEM[(uint8_t *)out_sig_22(D) + 50B] = _1336;
  _1337 = s7_1259 >> 5;
  _1338 = (unsigned char) _1337;
  MEM[(uint8_t *)out_sig_22(D) + 51B] = _1338;
  _1339 = s7_1259 >> 13;
  _1340 = (unsigned char) _1339;
  MEM[(uint8_t *)out_sig_22(D) + 52B] = _1340;
  _53 = (unsigned short) s8_1263;
  MEM[(uint8_t *)out_sig_22(D) + 53B] = _53;
  _1344 = s8_1263 >> 16;
  _1345 = (signed char) _1344;
  _1346 = s9_1267 << 5;
  _1347 = (signed char) _1346;
  _1348 = _1345 | _1347;
  _1349 = (unsigned char) _1348;
  MEM[(uint8_t *)out_sig_22(D) + 55B] = _1349;
  _1350 = s9_1267 >> 3;
  _1351 = (unsigned char) _1350;
  MEM[(uint8_t *)out_sig_22(D) + 56B] = _1351;
  _1352 = s9_1267 >> 11;
  _1353 = (unsigned char) _1352;
  MEM[(uint8_t *)out_sig_22(D) + 57B] = _1353;
  _1354 = s9_1267 >> 19;
  _1355 = (signed char) _1354;
  _1356 = s10_1271 << 2;
  _1357 = (signed char) _1356;
  _1358 = _1355 | _1357;
  _1359 = (unsigned char) _1358;
  MEM[(uint8_t *)out_sig_22(D) + 58B] = _1359;
  _1360 = s10_1271 >> 6;
  _1361 = (unsigned char) _1360;
  MEM[(uint8_t *)out_sig_22(D) + 59B] = _1361;
  _1362 = s10_1271 >> 14;
  _1363 = (signed char) _1362;
  _1364 = s11_1269 << 7;
  _1365 = (signed char) _1364;
  _1366 = _1363 | _1365;
  _1367 = (unsigned char) _1366;
  MEM[(uint8_t *)out_sig_22(D) + 60B] = _1367;
  _1368 = s11_1269 >> 1;
  _1369 = (unsigned char) _1368;
  MEM[(uint8_t *)out_sig_22(D) + 61B] = _1369;
  _1370 = s11_1269 >> 9;
  _1371 = (unsigned char) _1370;
  MEM[(uint8_t *)out_sig_22(D) + 62B] = _1371;
  _1372 = s11_1269 >> 17;
  _1373 = (unsigned char) _1372;
  MEM[(uint8_t *)out_sig_22(D) + 63B] = _1373;
  OPENSSL_cleanse (&hash_ctx, 216);
  OPENSSL_cleanse (&nonce, 64);
  OPENSSL_cleanse (&az, 64);
  az ={v} {CLOBBER};
  nonce ={v} {CLOBBER};
  R ={v} {CLOBBER};
  hram ={v} {CLOBBER};
  hash_ctx ={v} {CLOBBER};
  return 1;

}



;; Function ED25519_verify (ED25519_verify, funcdef_no=419, decl_uid=9959, cgraph_uid=419, symbol_order=429)

ED25519_verify (const uint8_t * message, size_t message_len, const uint8_t * signature, const uint8_t * public_key)
{
  sizetype ivtmp.896;
  unsigned long ivtmp.885;
  sizetype ivtmp.884;
  const vector(4) int vect__1267.877;
  const vector(4) int vect__1267.876;
  const vector(4) int vect__1265.875;
  const vector(4) int vect__1265.874;
  const vector(4) int vect__1265.873;
  const vector(4) int vect__1263.862;
  const vector(4) int vect__1263.861;
  const vector(4) int vect__1263.860;
  const vector(4) int vect__1263.856;
  const vector(4) int vect__1263.855;
  const vector(4) int vect__1263.854;
  const vector(4) int vect__1263.853;
  const vector(4) int vect__1263.852;
  const vector(4) int vect__1607.847;
  const vector(4) int vect__1607.846;
  const vector(4) int vect__1605.845;
  const vector(4) int vect__1605.844;
  const vector(4) int vect__1605.843;
  const vector(4) int vect__1603.835;
  const vector(4) int vect__1603.834;
  const vector(4) int vect__1603.833;
  const vector(4) int vect__1603.832;
  const vector(4) int vect__1603.831;
  const vector(4) int vect__1603.830;
  const vector(4) int vect__1603.829;
  const vector(4) int vect__1603.828;
  vector(4) int vect__1837.823;
  vector(4) int vect__1837.822;
  const vector(4) int vect__1835.821;
  const vector(4) int vect__1835.820;
  const vector(4) int vect__1835.819;
  const vector(4) int vect__2185.806;
  const vector(4) int vect__2183.805;
  const vector(4) int vect__2183.804;
  const vector(4) int vect__2183.803;
  const vector(4) int vect__2183.802;
  const vector(4) int vect__2183.801;
  const vector(4) int vect__2183.800;
  const vector(4) int vect__2183.799;
  const vector(4) int vect__2183.798;
  const vector(4) int vect__2183.797;
  const vector(4) int vect__2183.796;
  const vector(4) int vect__2183.795;
  const vector(4) int vect__2183.794;
  const vector(4) int vect__2183.793;
  const vector(4) int vect__2067.788;
  const vector(4) int vect__2067.787;
  const vector(4) int vect__2065.786;
  const vector(4) int vect__2065.785;
  const vector(4) int vect__2065.784;
  const vector(4) int vect__2063.771;
  const vector(4) int vect__2063.770;
  const vector(4) int vect__2063.769;
  const vector(4) int vect__2407.754;
  const vector(4) int vect__2407.753;
  const vector(4) int vect__2405.752;
  const vector(4) int vect__2405.751;
  const vector(4) int vect__2405.750;
  const vector(4) int vect__2403.742;
  const vector(4) int vect__2403.741;
  const vector(4) int vect__2403.740;
  const vector(4) int vect__2403.739;
  const vector(4) int vect__2403.738;
  const vector(4) int vect__2403.737;
  const vector(4) int vect__2403.736;
  const vector(4) int vect__2403.735;
  const vector(4) int vect__62.730;
  const vector(4) int vect__61.729;
  const vector(4) int vect__59.726;
  const vector(4) int vect__71.719;
  const vector(4) int vect__68.715;
  const vector(4) int vect__82.708;
  const vector(4) int vect__80.707;
  const vector(4) int vect__78.704;
  const vector(4) int vect__93.697;
  const vector(4) int vect__91.696;
  const vector(4) int vect__89.693;
  const vector(4) int vect__105.686;
  const vector(4) int vect__104.685;
  const vector(4) int vect__44.678;
  const vector(4) int vect__43.677;
  const vector(4) int vect__37.670;
  const vector(4) int vect__36.669;
  const vector(4) int vect__649.662;
  const vector(4) int vect__647.661;
  const vector(4) int vect__645.658;
  const vector(4) int vect__660.651;
  const vector(4) int vect__595.640;
  const vector(4) int vect__593.639;
  const vector(4) int vect__591.636;
  const vector(4) int vect__606.629;
  const vector(4) int vect__558.618;
  const vector(4) int vect__556.617;
  const vector(4) int vect__554.614;
  const vector(4) int vect__569.607;
  const vector(4) int vect__521.596;
  const vector(4) int vect__519.595;
  const vector(4) int vect__517.592;
  const vector(4) int vect__532.585;
  const vector(4) int vect__484.574;
  const vector(4) int vect__482.573;
  const vector(4) int vect__480.570;
  const vector(4) int vect__495.563;
  const vector(4) int vect__447.552;
  const vector(4) int vect__445.551;
  const vector(4) int vect__443.548;
  const vector(4) int vect__458.541;
  const vector(4) int vect__410.530;
  const vector(4) int vect__408.529;
  const vector(4) int vect__406.526;
  const vector(4) int vect__421.519;
  const vector(4) int vect__373.508;
  const vector(4) int vect__371.507;
  const vector(4) int vect__369.504;
  const vector(4) int vect__384.497;
  signed char aslide[256];
  signed char bslide[256];
  struct ge_cached Ai[8];
  struct ge_p1p1 t;
  struct ge_p3 u;
  struct ge_p3 A2;
  int i;
  struct ge_p2 q;
  int32_t recip[10];
  int32_t x[10];
  int32_t y[10];
  uint8_t s[32];
  uint8_t s[32];
  static const uint8_t zero[32] = {0};
  uint8_t s[32];
  static const uint8_t zero[32] = {0};
  int32_t t0[10];
  int32_t t1[10];
  int32_t t2[10];
  int64_t h0;
  int64_t h1;
  int64_t h2;
  int64_t h3;
  int64_t h4;
  int64_t h5;
  int64_t h6;
  int64_t h7;
  int64_t h8;
  int64_t h9;
  int64_t carry0;
  int64_t carry1;
  int64_t carry2;
  int64_t carry3;
  int64_t carry4;
  int64_t carry5;
  int64_t carry6;
  int64_t carry7;
  int64_t carry8;
  int64_t carry9;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  uint64_t result;
  int32_t u[10];
  int32_t v[10];
  int32_t v3[10];
  int32_t vxx[10];
  int32_t check[10];
  uint8_t s[32];
  uint8_t h[64];
  uint8_t rcheck[32];
  struct ge_p2 R;
  struct SHA512_CTX hash_ctx;
  uint8_t scopy[32];
  uint8_t rcopy[32];
  struct ge_p3 A;
  unsigned char _1;
  int _3;
  _Bool _4;
  int _5;
  int _21;
  int _23;
  unsigned char _31;
  int _46;
  unsigned short _52;
  int _55;
  int _74;
  int _93;
  unsigned char _96;
  unsigned char _97;
  unsigned char _98;
  unsigned char _99;
  int _102;
  unsigned int load_dst_114;
  unsigned int _115;
  int _118;
  unsigned char _124;
  unsigned char _126;
  long unsigned int _127;
  long unsigned int _128;
  unsigned int load_dst_129;
  unsigned char _130;
  long unsigned int _131;
  long unsigned int _132;
  long unsigned int _134;
  unsigned char _136;
  unsigned char _138;
  long unsigned int _139;
  long unsigned int _140;
  sizetype _141;
  unsigned char _142;
  long unsigned int _143;
  long unsigned int _144;
  long unsigned int _146;
  unsigned char _148;
  unsigned char _150;
  long unsigned int _151;
  long unsigned int _152;
  sizetype _153;
  unsigned char _154;
  long unsigned int _155;
  long unsigned int _156;
  long unsigned int _158;
  unsigned char _160;
  unsigned char _162;
  long unsigned int _163;
  long unsigned int _164;
  sizetype _165;
  unsigned char _166;
  long unsigned int _167;
  long unsigned int _168;
  long unsigned int _170;
  sizetype _177;
  unsigned char _187;
  unsigned char _189;
  long unsigned int _190;
  long unsigned int _191;
  sizetype _192;
  unsigned char _193;
  long unsigned int _194;
  long unsigned int _195;
  long unsigned int _197;
  unsigned char _199;
  unsigned char _201;
  long unsigned int _202;
  long unsigned int _203;
  unsigned char _205;
  long unsigned int _206;
  long unsigned int _207;
  long unsigned int _209;
  unsigned char _211;
  unsigned char _213;
  long unsigned int _214;
  long unsigned int _215;
  unsigned char _217;
  long unsigned int _218;
  long unsigned int _219;
  long unsigned int _221;
  unsigned char _223;
  unsigned char _225;
  long unsigned int _226;
  long unsigned int _227;
  unsigned char _229;
  long unsigned int _230;
  long unsigned int _231;
  long unsigned int _233;
  long int _234;
  long int _237;
  long int _238;
  long int _240;
  long int _243;
  long int _245;
  long int _248;
  long int _250;
  long int _253;
  long int _255;
  long int _258;
  long int _260;
  long int _263;
  long int _265;
  long int _268;
  long int _270;
  long int _273;
  long int _275;
  long int _278;
  long int _280;
  long int _283;
  long int _285;
  int _287;
  int _288;
  int _289;
  int _290;
  int _291;
  int _292;
  int _293;
  int _294;
  int _295;
  int _296;
  int _301;
  int _313;
  int _316;
  unsigned char _322;
  unsigned char _323;
  int _324;
  int _325;
  unsigned char _326;
  signed char _327;
  signed char _328;
  signed char _329;
  unsigned char _330;
  signed char _332;
  signed char _333;
  signed char _336;
  signed char _337;
  signed char _338;
  struct ge_cached * _340;
  signed char _341;
  int _342;
  int _343;
  signed char _345;
  signed char _346;
  signed char _347;
  const struct ge_precomp * _349;
  signed char _350;
  int _351;
  int _352;
  int _359;
  int _361;
  int _362;
  int _364;
  int _366;
  int _368;
  int _392;
  int _400;
  int _422;
  int _424;
  int _426;
  int _429;
  int _431;
  int _434;
  int _436;
  int _450;
  int _456;
  int _464;
  int _465;
  int _481;
  int _483;
  int _485;
  unsigned int _486;
  int _499;
  int _501;
  int _505;
  int _511;
  int _515;
  unsigned int _548;
  vector(4) int _573;
  int _574;
  int _580;
  unsigned short patt_582;
  unsigned int _583;
  int _586;
  int _599;
  int _601;
  int _603;
  int _608;
  int _618;
  int _619;
  unsigned short patt_626;
  unsigned int _627;
  int _628;
  int _634;
  int _649;
  int _651;
  int _668;
  int _669;
  int _671;
  int _675;
  int _687;
  const int32_t[10] * _699;
  int _700;
  const int32_t[10] * _701;
  const int32_t[10] * _703;
  const int32_t[10] * _705;
  int _706;
  int _717;
  int _718;
  int _733;
  int _746;
  int _758;
  int _759;
  vector(4) int _761;
  int _763;
  int _765;
  int _767;
  int _769;
  int _787;
  int _788;
  const int32_t[10] * _793;
  const int32_t[10] * _795;
  const int32_t[10] * _797;
  vector(4) int _812;
  int _822;
  int _824;
  unsigned int _827;
  int _852;
  int _855;
  int _860;
  int _872;
  int _875;
  int _879;
  int _898;
  unsigned int _902;
  sizetype _910;
  int _1007;
  int _1016;
  int _1025;
  int _1098;
  int _1135;
  int _1143;
  int _1145;
  unsigned int _1147;
  void * _1168;
  signed char[256] * _1179;
  int _1199;
  int _1202;
  int _1206;
  int _1209;
  int _1237;
  int _1248;
  int _1276;
  int _1290;
  int _1300;
  int _1357;
  int _1365;
  int _1368;
  int _1383;
  int _1385;
  long unsigned int _1386;
  int _1393;
  int _1395;
  long unsigned int _1396;
  int _1403;
  int _1405;
  long unsigned int _1406;
  int _1413;
  int _1415;
  long unsigned int _1416;
  int _1423;
  int _1425;
  int _1429;
  int _1433;
  int _1435;
  long unsigned int _1436;
  int _1439;
  int _1443;
  int _1445;
  long unsigned int _1446;
  int _1453;
  int _1455;
  long unsigned int _1456;
  int _1463;
  int _1465;
  long unsigned int _1466;
  int _1473;
  int _1475;
  unsigned short _1479;
  int _1482;
  int _1498;
  int _1508;
  int _1579;
  int _1590;
  int _1592;
  int _1599;
  int _1647;
  int _1659;
  int _1666;
  unsigned int _1707;
  unsigned int _1710;
  unsigned int _1725;
  unsigned short _1741;
  unsigned short _1746;
  unsigned short patt_1757;
  unsigned short _1767;
  unsigned short patt_1774;
  int _1779;
  int _1788;
  unsigned int _1818;
  unsigned short _1822;
  unsigned short patt_1823;
  unsigned int _1824;
  unsigned short patt_1833;
  int _1841;
  int _1848;
  int _1858;
  int _1865;
  int _1868;
  unsigned int ivtmp_1905;
  unsigned int _1913;
  unsigned int ivtmp_1917;
  unsigned short _1925;
  unsigned int ivtmp_1929;
  unsigned short patt_1937;
  unsigned int ivtmp_1941;
  unsigned int ivtmp_1954;
  int _1955;
  unsigned int _1971;
  unsigned int ivtmp_1976;
  unsigned int ivtmp_1977;
  unsigned int ivtmp_1986;
  unsigned int ivtmp_1987;
  unsigned int ivtmp_1988;
  unsigned int ivtmp_1997;
  unsigned int ivtmp_1998;
  unsigned int ivtmp_1999;
  unsigned short _2004;
  unsigned int ivtmp_2008;
  vector(4) int _2010;
  int _2019;
  vector(4) int _2090;
  int _2114;
  unsigned short patt_2131;
  unsigned int _2167;
  int _2194;
  sizetype _2196;
  int _2204;
  int _2209;
  int _2214;
  sizetype _2226;
  int _2229;
  sizetype _2236;
  sizetype _2246;
  int _2249;
  sizetype _2256;
  sizetype _2266;
  sizetype _2276;
  int _2286;
  int _2404;
  int _2414;
  int _2418;
  int _2483;

  <bb 2> [local count: 302544054]:
  _1 = MEM[(const uint8_t *)signature_8(D) + 63B];
  _31 = _1 & 224;
  if (_31 != 0)
    goto <bb 37>; [51.12%]
  else
    goto <bb 3>; [48.88%]

  <bb 3> [local count: 147883538]:
  load_dst_129 = MEM[(const uint8_t *)public_key_10(D)];
  h0_123 = (int64_t) load_dst_129;
  _124 = MEM[(const uint8_t *)public_key_10(D) + 4B];
  result_125 = (uint64_t) _124;
  _126 = MEM[(const uint8_t *)public_key_10(D) + 5B];
  _127 = (long unsigned int) _126;
  _128 = _127 << 8;
  _130 = MEM[(const uint8_t *)public_key_10(D) + 6B];
  _131 = (long unsigned int) _130;
  _132 = _131 << 16;
  _1466 = _128 | _132;
  result_133 = result_125 | _1466;
  _134 = result_133 << 6;
  h1_135 = (int64_t) _134;
  _136 = MEM[(const uint8_t *)public_key_10(D) + 7B];
  result_137 = (uint64_t) _136;
  _138 = MEM[(const uint8_t *)public_key_10(D) + 8B];
  _139 = (long unsigned int) _138;
  _140 = _139 << 8;
  _142 = MEM[(const uint8_t *)public_key_10(D) + 9B];
  _143 = (long unsigned int) _142;
  _144 = _143 << 16;
  _1456 = _140 | _144;
  result_145 = result_137 | _1456;
  _146 = result_145 << 5;
  h2_147 = (int64_t) _146;
  _148 = MEM[(const uint8_t *)public_key_10(D) + 10B];
  result_149 = (uint64_t) _148;
  _150 = MEM[(const uint8_t *)public_key_10(D) + 11B];
  _151 = (long unsigned int) _150;
  _152 = _151 << 8;
  _154 = MEM[(const uint8_t *)public_key_10(D) + 12B];
  _155 = (long unsigned int) _154;
  _156 = _155 << 16;
  _1446 = _152 | _156;
  result_157 = result_149 | _1446;
  _158 = result_157 << 3;
  h3_159 = (int64_t) _158;
  _160 = MEM[(const uint8_t *)public_key_10(D) + 13B];
  result_161 = (uint64_t) _160;
  _162 = MEM[(const uint8_t *)public_key_10(D) + 14B];
  _163 = (long unsigned int) _162;
  _164 = _163 << 8;
  _166 = MEM[(const uint8_t *)public_key_10(D) + 15B];
  _167 = (long unsigned int) _166;
  _168 = _167 << 16;
  _1436 = _164 | _168;
  result_169 = result_161 | _1436;
  _170 = result_169 << 2;
  h4_171 = (int64_t) _170;
  load_dst_114 = MEM[(const uint8_t *)public_key_10(D) + 16B];
  h5_186 = (int64_t) load_dst_114;
  _187 = MEM[(const uint8_t *)public_key_10(D) + 20B];
  result_188 = (uint64_t) _187;
  _189 = MEM[(const uint8_t *)public_key_10(D) + 21B];
  _190 = (long unsigned int) _189;
  _191 = _190 << 8;
  _193 = MEM[(const uint8_t *)public_key_10(D) + 22B];
  _194 = (long unsigned int) _193;
  _195 = _194 << 16;
  _1416 = _191 | _195;
  result_196 = result_188 | _1416;
  _197 = result_196 << 7;
  h6_198 = (int64_t) _197;
  _199 = MEM[(const uint8_t *)public_key_10(D) + 23B];
  result_200 = (uint64_t) _199;
  _201 = MEM[(const uint8_t *)public_key_10(D) + 24B];
  _202 = (long unsigned int) _201;
  _203 = _202 << 8;
  _205 = MEM[(const uint8_t *)public_key_10(D) + 25B];
  _206 = (long unsigned int) _205;
  _207 = _206 << 16;
  _1406 = _203 | _207;
  result_208 = result_200 | _1406;
  _209 = result_208 << 5;
  h7_210 = (int64_t) _209;
  _211 = MEM[(const uint8_t *)public_key_10(D) + 26B];
  result_212 = (uint64_t) _211;
  _213 = MEM[(const uint8_t *)public_key_10(D) + 27B];
  _214 = (long unsigned int) _213;
  _215 = _214 << 8;
  _217 = MEM[(const uint8_t *)public_key_10(D) + 28B];
  _218 = (long unsigned int) _217;
  _219 = _218 << 16;
  _1396 = _215 | _219;
  result_220 = result_212 | _1396;
  _221 = result_220 << 4;
  h8_222 = (int64_t) _221;
  _223 = MEM[(const uint8_t *)public_key_10(D) + 29B];
  result_224 = (uint64_t) _223;
  _225 = MEM[(const uint8_t *)public_key_10(D) + 30B];
  _226 = (long unsigned int) _225;
  _227 = _226 << 8;
  _229 = MEM[(const uint8_t *)public_key_10(D) + 31B];
  _230 = (long unsigned int) _229;
  _231 = _230 << 16;
  _1386 = _227 | _231;
  result_232 = result_224 | _1386;
  _233 = result_232 << 2;
  _234 = (long int) _233;
  h9_235 = _234 & 33554428;
  carry9_236 = h9_235 + 16777216;
  _237 = carry9_236 >> 25;
  _238 = _237 * 19;
  h0_239 = h0_123 + _238;
  _240 = carry9_236 & -33554432;
  h9_241 = h9_235 - _240;
  carry1_242 = h1_135 + 16777216;
  _243 = carry1_242 >> 25;
  h2_244 = h2_147 + _243;
  _245 = carry1_242 & -33554432;
  h1_246 = h1_135 - _245;
  carry3_247 = h3_159 + 16777216;
  _248 = carry3_247 >> 25;
  h4_249 = h4_171 + _248;
  _250 = carry3_247 & -33554432;
  h3_251 = h3_159 - _250;
  carry5_252 = h5_186 + 16777216;
  _253 = carry5_252 >> 25;
  h6_254 = h6_198 + _253;
  _255 = carry5_252 & -33554432;
  h5_256 = h5_186 - _255;
  carry7_257 = h7_210 + 16777216;
  _258 = carry7_257 >> 25;
  h8_259 = h8_222 + _258;
  _260 = carry7_257 & -33554432;
  h7_261 = h7_210 - _260;
  carry0_262 = h0_239 + 33554432;
  _263 = carry0_262 >> 26;
  h1_264 = h1_246 + _263;
  _265 = carry0_262 & -67108864;
  h0_266 = h0_239 - _265;
  carry2_267 = h2_244 + 33554432;
  _268 = carry2_267 >> 26;
  h3_269 = h3_251 + _268;
  _270 = carry2_267 & -67108864;
  h2_271 = h2_244 - _270;
  carry4_272 = h4_249 + 33554432;
  _273 = carry4_272 >> 26;
  h5_274 = h5_256 + _273;
  _275 = carry4_272 & -67108864;
  h4_276 = h4_249 - _275;
  carry6_277 = h6_254 + 33554432;
  _278 = carry6_277 >> 26;
  h7_279 = h7_261 + _278;
  _280 = carry6_277 & -67108864;
  h6_281 = h6_254 - _280;
  carry8_282 = h8_259 + 33554432;
  _283 = carry8_282 >> 26;
  h9_284 = h9_241 + _283;
  _285 = carry8_282 & -67108864;
  h8_286 = h8_259 - _285;
  _287 = (int) h0_266;
  MEM[(int32_t *)&A + 40B] = _287;
  _288 = (int) h1_264;
  MEM[(int32_t *)&A + 44B] = _288;
  _289 = (int) h2_271;
  MEM[(int32_t *)&A + 48B] = _289;
  _290 = (int) h3_269;
  MEM[(int32_t *)&A + 52B] = _290;
  _291 = (int) h4_276;
  MEM[(int32_t *)&A + 56B] = _291;
  _292 = (int) h5_274;
  MEM[(int32_t *)&A + 60B] = _292;
  _293 = (int) h6_281;
  MEM[(int32_t *)&A + 64B] = _293;
  _294 = (int) h7_279;
  MEM[(int32_t *)&A + 68B] = _294;
  _295 = (int) h8_286;
  MEM[(int32_t *)&A + 72B] = _295;
  _296 = (int) h9_284;
  MEM[(int32_t *)&A + 76B] = _296;
  __builtin_memset (&MEM[(void *)&A + 84B], 0, 36);
  MEM[(int32_t *)&A + 80B] = 1;
  fe_sq (&u, &A.Y);
  fe_mul (&v, &u, &d);
  vect__59.726_1332 = MEM[(const int32_t *)&u];
  vect__61.729_1330 = MEM[(const int32_t *)&A + 80B];
  vect__62.730_1329 = vect__59.726_1332 - vect__61.729_1330;
  MEM[(int32_t *)&u] = vect__62.730_1329;
  vect__59.726_724 = MEM[(const int32_t *)&u + 16B];
  vect__61.729_711 = MEM[(const int32_t *)&A + 96B];
  vect__62.730_712 = vect__59.726_724 - vect__61.729_711;
  MEM[(int32_t *)&u + 16B] = vect__62.730_712;
  _1368 = MEM[(const int32_t *)&u + 32B];
  _1365 = MEM[(const int32_t *)&A + 112B];
  _1357 = _1368 - _1365;
  MEM[(int32_t *)&u + 32B] = _1357;
  _733 = MEM[(const int32_t *)&u + 36B];
  _717 = MEM[(const int32_t *)&A + 116B];
  _718 = _733 - _717;
  MEM[(int32_t *)&u + 36B] = _718;
  vect__68.715_1173 = MEM[(const int32_t *)&v];
  vect__71.719_1170 = vect__68.715_1173 + vect__61.729_1330;
  MEM[(int32_t *)&v] = vect__71.719_1170;
  vect__68.715_752 = MEM[(const int32_t *)&v + 16B];
  vect__71.719_739 = vect__61.729_711 + vect__68.715_752;
  MEM[(int32_t *)&v + 16B] = vect__71.719_739;
  _1206 = MEM[(const int32_t *)&v + 32B];
  _1202 = _1206 + _1365;
  MEM[(int32_t *)&v + 32B] = _1202;
  _1599 = MEM[(const int32_t *)&v + 36B];
  _746 = _717 + _1599;
  MEM[(int32_t *)&v + 36B] = _746;
  fe_sq (&v3, &v);
  fe_mul (&v3, &v3, &v);
  fe_sq (&A.X, &v3);
  fe_mul (&A.X, &A.X, &v);
  fe_mul (&A.X, &A.X, &u);
  fe_sq (&t0, &A.X);
  fe_sq (&t1, &t0);
  fe_sq (&t1, &t1);
  fe_mul (&t1, &A.X, &t1);
  fe_mul (&t0, &t0, &t1);
  fe_sq (&t0, &t0);
  fe_mul (&t0, &t1, &t0);
  fe_sq (&t1, &t0);

  <bb 4> [local count: 591534132]:
  # ivtmp_1917 = PHI <4(3), ivtmp_1905(4)>
  fe_sq (&t1, &t1);
  ivtmp_1905 = ivtmp_1917 + 4294967295;
  if (ivtmp_1905 != 0)
    goto <bb 4>; [75.00%]
  else
    goto <bb 5>; [25.00%]

  <bb 5> [local count: 147883537]:
  fe_mul (&t0, &t1, &t0);
  fe_sq (&t1, &t0);

  <bb 6> [local count: 1330951787]:
  # ivtmp_1941 = PHI <9(5), ivtmp_1929(6)>
  fe_sq (&t1, &t1);
  ivtmp_1929 = ivtmp_1941 + 4294967295;
  if (ivtmp_1929 != 0)
    goto <bb 6>; [88.89%]
  else
    goto <bb 7>; [11.11%]

  <bb 7> [local count: 147883537]:
  fe_mul (&t1, &t1, &t0);
  fe_sq (&t2, &t1);

  <bb 8> [local count: 2809787125]:
  # ivtmp_1976 = PHI <19(7), ivtmp_1954(8)>
  fe_sq (&t2, &t2);
  ivtmp_1954 = ivtmp_1976 + 4294967295;
  if (ivtmp_1954 != 0)
    goto <bb 8>; [94.74%]
  else
    goto <bb 9>; [5.26%]

  <bb 9> [local count: 147883537]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t1, &t1);

  <bb 10> [local count: 1330951801]:
  # ivtmp_1986 = PHI <9(9), ivtmp_1977(10)>
  fe_sq (&t1, &t1);
  ivtmp_1977 = ivtmp_1986 + 4294967295;
  if (ivtmp_1977 != 0)
    goto <bb 10>; [88.89%]
  else
    goto <bb 11>; [11.11%]

  <bb 11> [local count: 147883537]:
  fe_mul (&t0, &t1, &t0);
  fe_sq (&t1, &t0);

  <bb 12> [local count: 7246293290]:
  # ivtmp_1988 = PHI <49(11), ivtmp_1987(12)>
  fe_sq (&t1, &t1);
  ivtmp_1987 = ivtmp_1988 + 4294967295;
  if (ivtmp_1987 != 0)
    goto <bb 12>; [97.96%]
  else
    goto <bb 13>; [2.04%]

  <bb 13> [local count: 147883537]:
  fe_mul (&t1, &t1, &t0);
  fe_sq (&t2, &t1);

  <bb 14> [local count: 14640470460]:
  # ivtmp_1998 = PHI <99(13), ivtmp_1997(14)>
  fe_sq (&t2, &t2);
  ivtmp_1997 = ivtmp_1998 + 4294967295;
  if (ivtmp_1997 != 0)
    goto <bb 14>; [98.99%]
  else
    goto <bb 15>; [1.01%]

  <bb 15> [local count: 147883537]:
  fe_mul (&t1, &t2, &t1);
  fe_sq (&t1, &t1);

  <bb 16> [local count: 300248402]:
  # ivtmp_2008 = PHI <49(15), ivtmp_1999(16)>
  fe_sq (&t1, &t1);
  ivtmp_1999 = ivtmp_2008 + 4294967295;
  if (ivtmp_1999 != 0)
    goto <bb 16>; [50.75%]
  else
    goto <bb 17>; [49.25%]

  <bb 17> [local count: 147883537]:
  fe_mul (&t0, &t1, &t0);
  fe_sq (&t0, &t0);
  fe_sq (&t0, &t0);
  fe_mul (&A.X, &t0, &A.X);
  t0 ={v} {CLOBBER};
  t1 ={v} {CLOBBER};
  t2 ={v} {CLOBBER};
  fe_mul (&A.X, &A.X, &v3);
  fe_mul (&A.X, &A.X, &u);
  fe_sq (&vxx, &A.X);
  fe_mul (&vxx, &vxx, &v);
  vect__78.704_1247 = MEM[(const int32_t *)&vxx];
  vect__80.707_1246 = MEM[(const int32_t *)&u];
  vect__82.708_1239 = vect__78.704_1247 - vect__80.707_1246;
  MEM[(int32_t *)&check] = vect__82.708_1239;
  vect__78.704_2363 = MEM[(const int32_t *)&vxx + 16B];
  vect__80.707_2327 = MEM[(const int32_t *)&u + 16B];
  vect__82.708_2315 = vect__78.704_2363 - vect__80.707_2327;
  MEM[(int32_t *)&check + 16B] = vect__82.708_2315;
  _392 = MEM[(const int32_t *)&vxx + 32B];
  _400 = MEM[(const int32_t *)&u + 32B];
  _434 = _392 - _400;
  MEM[(int32_t *)&check + 32B] = _434;
  _2249 = MEM[(const int32_t *)&vxx + 36B];
  _2229 = MEM[(const int32_t *)&u + 36B];
  _2209 = _2249 - _2229;
  MEM[(int32_t *)&check + 36B] = _2209;
  fe_tobytes (&s, &check);
  _313 = CRYPTO_memcmp (&s, &zero, 32);
  s ={v} {CLOBBER};
  if (_313 != 0)
    goto <bb 18>; [67.00%]
  else
    goto <bb 20>; [33.00%]

  <bb 18> [local count: 99081971]:
  vect__89.693_704 = MEM[(const int32_t *)&vxx];
  vect__91.696_702 = MEM[(const int32_t *)&u];
  vect__93.697_688 = vect__91.696_702 + vect__89.693_704;
  MEM[(int32_t *)&check] = vect__93.697_688;
  vect__89.693_1982 = MEM[(const int32_t *)&vxx + 16B];
  vect__91.696_1949 = MEM[(const int32_t *)&u + 16B];
  vect__93.697_897 = vect__91.696_1949 + vect__89.693_1982;
  MEM[(int32_t *)&check + 16B] = vect__93.697_897;
  _1135 = MEM[(const int32_t *)&vxx + 32B];
  _855 = MEM[(const int32_t *)&u + 32B];
  _767 = _855 + _1135;
  MEM[(int32_t *)&check + 32B] = _767;
  _1865 = MEM[(const int32_t *)&vxx + 36B];
  _1841 = MEM[(const int32_t *)&u + 36B];
  _898 = _1841 + _1865;
  MEM[(int32_t *)&check + 36B] = _898;
  fe_tobytes (&s, &check);
  _316 = CRYPTO_memcmp (&s, &zero, 32);
  s ={v} {CLOBBER};
  if (_316 != 0)
    goto <bb 23>; [2.09%]
  else
    goto <bb 19>; [97.91%]

  <bb 19> [local count: 97011156]:
  fe_mul (&A.X, &A.X, &sqrtm1);

  <bb 20> [local count: 145812724]:
  fe_tobytes (&s, &A.X);
  _96 = s[0];
  _97 = _96 & 1;
  s ={v} {CLOBBER};
  _98 = MEM[(const uint8_t *)public_key_10(D) + 31B];
  _99 = _98 >> 7;
  if (_97 != _99)
    goto <bb 22>; [66.00%]
  else
    goto <bb 21>; [34.00%]

  <bb 21> [local count: 145812725]:
  fe_mul (&A.T, &A.X, &A.Y);
  u ={v} {CLOBBER};
  v ={v} {CLOBBER};
  v3 ={v} {CLOBBER};
  vxx ={v} {CLOBBER};
  check ={v} {CLOBBER};
  vect__43.677_523 = MEM[(const int32_t *)&A];
  vect__44.678_543 = -vect__43.677_523;
  MEM[(int32_t *)&A] = vect__44.678_543;
  vect__43.677_1587 = MEM[(const int32_t *)&A + 16B];
  vect__44.678_1575 = -vect__43.677_1587;
  MEM[(int32_t *)&A + 16B] = vect__44.678_1575;
  _465 = MEM[(const int32_t *)&A + 32B];
  _501 = -_465;
  MEM[(int32_t *)&A + 32B] = _501;
  _1439 = MEM[(const int32_t *)&A + 36B];
  _1429 = -_1439;
  MEM[(int32_t *)&A + 36B] = _1429;
  vect__36.669_775 = MEM[(const int32_t *)&A + 120B];
  vect__37.670_776 = -vect__36.669_775;
  MEM[(int32_t *)&A + 120B] = vect__37.670_776;
  vect__36.669_1149 = MEM[(const int32_t *)&A + 136B];
  vect__37.670_905 = -vect__36.669_1149;
  MEM[(int32_t *)&A + 136B] = vect__37.670_905;
  _787 = MEM[(const int32_t *)&A + 152B];
  _788 = -_787;
  MEM[(int32_t *)&A + 152B] = _788;
  _1248 = MEM[(const int32_t *)&A + 156B];
  _1237 = -_1248;
  MEM[(int32_t *)&A + 156B] = _1237;
  MEM[(char * {ref-all})&rcopy] = MEM[(char * {ref-all})signature_8(D)];
  MEM[(char * {ref-all})&scopy] = MEM[(char * {ref-all})signature_8(D) + 32B];
  SHA512_Init (&hash_ctx);
  SHA512_Update (&hash_ctx, signature_8(D), 32);
  SHA512_Update (&hash_ctx, public_key_10(D), 32);
  SHA512_Update (&hash_ctx, message_15(D), message_len_16(D));
  SHA512_Final (&h, &hash_ctx);
  x25519_sc_reduce (&h);
  slide (&aslide, &h);
  slide (&bslide, &scopy);
  vect__645.658_816 = MEM[(const int32_t *)&A + 40B];
  vect__647.661_1097 = MEM[(const int32_t *)&A];
  vect__649.662_817 = vect__645.658_816 + vect__647.661_1097;
  MEM[(int32_t *)&Ai] = vect__649.662_817;
  vect__645.658_547 = MEM[(const int32_t *)&A + 56B];
  vect__647.661_621 = MEM[(const int32_t *)&A + 16B];
  vect__649.662_665 = vect__645.658_547 + vect__647.661_621;
  MEM[(int32_t *)&Ai + 16B] = vect__649.662_665;
  _822 = MEM[(const int32_t *)&A + 72B];
  _824 = MEM[(const int32_t *)&A + 32B];
  _1098 = _822 + _824;
  MEM[(int32_t *)&Ai + 32B] = _1098;
  _2418 = MEM[(const int32_t *)&A + 76B];
  _2414 = MEM[(const int32_t *)&A + 36B];
  _2404 = _2414 + _2418;
  MEM[(int32_t *)&Ai + 36B] = _2404;
  vect__660.651_829 = vect__645.658_816 - vect__647.661_1097;
  MEM[(int32_t *)&Ai + 40B] = vect__660.651_829;
  vect__660.651_2478 = vect__645.658_547 - vect__647.661_621;
  MEM[(int32_t *)&Ai + 56B] = vect__660.651_2478;
  _687 = _822 - _824;
  MEM[(int32_t *)&Ai + 72B] = _687;
  _2286 = _2418 - _2414;
  MEM[(int32_t *)&Ai + 76B] = _2286;
  MEM[(char * {ref-all})&Ai + 80B] = MEM[(char * {ref-all})&A + 80B];
  fe_mul (&MEM[(struct ge_cached *)&Ai].T2d, &A.T, &d2);
  MEM[(char * {ref-all})&q] = MEM[(char * {ref-all})&A];
  MEM[(char * {ref-all})&q + 40B] = MEM[(char * {ref-all})&A + 40B];
  MEM[(char * {ref-all})&q + 80B] = MEM[(char * {ref-all})&A + 80B];
  ge_p2_dbl (&t, &q);
  q ={v} {CLOBBER};
  fe_mul (&A2.X, &t.X, &t.T);
  fe_mul (&A2.Y, &t.Y, &t.Z);
  fe_mul (&A2.Z, &t.Z, &t.T);
  fe_mul (&A2.T, &t.X, &t.Y);
  ge_add (&t, &A2, &Ai[0]);
  fe_mul (&u.X, &t.X, &t.T);
  fe_mul (&u.Y, &t.Y, &t.Z);
  fe_mul (&u.Z, &t.Z, &t.T);
  fe_mul (&u.T, &t.X, &t.Y);
  vect__591.636_1062 = MEM[(const int32_t *)&u + 40B];
  vect__593.639_692 = MEM[(const int32_t *)&u];
  vect__595.640_693 = vect__593.639_692 + vect__591.636_1062;
  MEM[(int32_t *)&Ai + 160B] = vect__595.640_693;
  vect__591.636_2380 = MEM[(const int32_t *)&u + 56B];
  vect__593.639_2368 = MEM[(const int32_t *)&u + 16B];
  vect__595.640_2366 = vect__593.639_2368 + vect__591.636_2380;
  MEM[(int32_t *)&Ai + 176B] = vect__595.640_2366;
  _1007 = MEM[(const int32_t *)&u + 72B];
  _1016 = MEM[(const int32_t *)&u + 32B];
  _1025 = _1007 + _1016;
  MEM[(int32_t *)&Ai + 192B] = _1025;
  _2214 = MEM[(const int32_t *)&u + 76B];
  _2204 = MEM[(const int32_t *)&u + 36B];
  _2194 = _2204 + _2214;
  MEM[(int32_t *)&Ai + 196B] = _2194;
  vect__606.629_1503 = vect__591.636_1062 - vect__593.639_692;
  MEM[(int32_t *)&Ai + 200B] = vect__606.629_1503;
  vect__606.629_2066 = vect__591.636_2380 - vect__593.639_2368;
  MEM[(int32_t *)&Ai + 216B] = vect__606.629_2066;
  _1955 = _1007 - _1016;
  MEM[(int32_t *)&Ai + 232B] = _1955;
  _2114 = _2214 - _2204;
  MEM[(int32_t *)&Ai + 236B] = _2114;
  MEM[(char * {ref-all})&Ai + 240B] = MEM[(char * {ref-all})&u + 80B];
  fe_mul (&MEM[(struct ge_cached *)&Ai + 160B].T2d, &u.T, &d2);
  ge_add (&t, &A2, &Ai[1]);
  fe_mul (&u.X, &t.X, &t.T);
  fe_mul (&u.Y, &t.Y, &t.Z);
  fe_mul (&u.Z, &t.Z, &t.T);
  fe_mul (&u.T, &t.X, &t.Y);
  vect__554.614_378 = MEM[(const int32_t *)&u + 40B];
  vect__556.617_379 = MEM[(const int32_t *)&u];
  vect__558.618_380 = vect__554.614_378 + vect__556.617_379;
  MEM[(int32_t *)&Ai + 320B] = vect__558.618_380;
  vect__554.614_2029 = MEM[(const int32_t *)&u + 56B];
  vect__556.617_1996 = MEM[(const int32_t *)&u + 16B];
  vect__558.618_1985 = vect__556.617_1996 + vect__554.614_2029;
  MEM[(int32_t *)&Ai + 336B] = vect__558.618_1985;
  _422 = MEM[(const int32_t *)&u + 72B];
  _366 = MEM[(const int32_t *)&u + 32B];
  _368 = _366 + _422;
  MEM[(int32_t *)&Ai + 352B] = _368;
  _1868 = MEM[(const int32_t *)&u + 76B];
  _1858 = MEM[(const int32_t *)&u + 36B];
  _1848 = _1858 + _1868;
  MEM[(int32_t *)&Ai + 356B] = _1848;
  vect__569.607_409 = vect__554.614_378 - vect__556.617_379;
  MEM[(int32_t *)&Ai + 360B] = vect__569.607_409;
  vect__569.607_1928 = vect__554.614_2029 - vect__556.617_1996;
  MEM[(int32_t *)&Ai + 376B] = vect__569.607_1928;
  _456 = _422 - _366;
  MEM[(int32_t *)&Ai + 392B] = _456;
  _1788 = _1868 - _1858;
  MEM[(int32_t *)&Ai + 396B] = _1788;
  MEM[(char * {ref-all})&Ai + 400B] = MEM[(char * {ref-all})&u + 80B];
  fe_mul (&MEM[(struct ge_cached *)&Ai + 320B].T2d, &u.T, &d2);
  ge_add (&t, &A2, &Ai[2]);
  fe_mul (&u.X, &t.X, &t.T);
  fe_mul (&u.Y, &t.Y, &t.Z);
  fe_mul (&u.Z, &t.Z, &t.T);
  fe_mul (&u.T, &t.X, &t.Y);
  vect__517.592_495 = MEM[(const int32_t *)&u + 40B];
  vect__519.595_496 = MEM[(const int32_t *)&u];
  vect__521.596_178 = vect__517.592_495 + vect__519.595_496;
  MEM[(int32_t *)&Ai + 480B] = vect__521.596_178;
  vect__517.592_463 = MEM[(const int32_t *)&u + 56B];
  vect__519.595_358 = MEM[(const int32_t *)&u + 16B];
  vect__521.596_356 = vect__519.595_358 + vect__517.592_463;
  MEM[(int32_t *)&Ai + 496B] = vect__521.596_356;
  _481 = MEM[(const int32_t *)&u + 72B];
  _483 = MEM[(const int32_t *)&u + 32B];
  _485 = _481 + _483;
  MEM[(int32_t *)&Ai + 512B] = _485;
  _758 = MEM[(const int32_t *)&u + 76B];
  _706 = MEM[(const int32_t *)&u + 36B];
  _668 = _706 + _758;
  MEM[(int32_t *)&Ai + 516B] = _668;
  vect__532.585_527 = vect__517.592_495 - vect__519.595_496;
  MEM[(int32_t *)&Ai + 520B] = vect__532.585_527;
  vect__532.585_1196 = vect__517.592_463 - vect__519.595_358;
  MEM[(int32_t *)&Ai + 536B] = vect__532.585_1196;
  _515 = _481 - _483;
  MEM[(int32_t *)&Ai + 552B] = _515;
  _1290 = _758 - _706;
  MEM[(int32_t *)&Ai + 556B] = _1290;
  MEM[(char * {ref-all})&Ai + 560B] = MEM[(char * {ref-all})&u + 80B];
  fe_mul (&MEM[(struct ge_cached *)&Ai + 480B].T2d, &u.T, &d2);
  ge_add (&t, &A2, &Ai[3]);
  fe_mul (&u.X, &t.X, &t.T);
  fe_mul (&u.Y, &t.Y, &t.Z);
  fe_mul (&u.Z, &t.Z, &t.T);
  fe_mul (&u.T, &t.X, &t.Y);
  vect__480.570_554 = MEM[(const int32_t *)&u + 40B];
  vect__482.573_555 = MEM[(const int32_t *)&u];
  vect__484.574_556 = vect__480.570_554 + vect__482.573_555;
  MEM[(int32_t *)&Ai + 640B] = vect__484.574_556;
  vect__480.570_1434 = MEM[(const int32_t *)&u + 56B];
  vect__482.573_1422 = MEM[(const int32_t *)&u + 16B];
  vect__484.574_1414 = vect__482.573_1422 + vect__480.570_1434;
  MEM[(int32_t *)&Ai + 656B] = vect__484.574_1414;
  _599 = MEM[(const int32_t *)&u + 72B];
  _601 = MEM[(const int32_t *)&u + 32B];
  _603 = _599 + _601;
  MEM[(int32_t *)&Ai + 672B] = _603;
  _1508 = MEM[(const int32_t *)&u + 76B];
  _1498 = MEM[(const int32_t *)&u + 36B];
  _1482 = _1498 + _1508;
  MEM[(int32_t *)&Ai + 676B] = _1482;
  vect__495.563_661 = vect__480.570_554 - vect__482.573_555;
  MEM[(int32_t *)&Ai + 680B] = vect__495.563_661;
  vect__495.563_1582 = vect__480.570_1434 - vect__482.573_1422;
  MEM[(int32_t *)&Ai + 696B] = vect__495.563_1582;
  _649 = _599 - _601;
  MEM[(int32_t *)&Ai + 712B] = _649;
  _1666 = _1508 - _1498;
  MEM[(int32_t *)&Ai + 716B] = _1666;
  MEM[(char * {ref-all})&Ai + 720B] = MEM[(char * {ref-all})&u + 80B];
  fe_mul (&MEM[(struct ge_cached *)&Ai + 640B].T2d, &u.T, &d2);
  ge_add (&t, &A2, &Ai[4]);
  fe_mul (&u.X, &t.X, &t.T);
  fe_mul (&u.Y, &t.Y, &t.Z);
  fe_mul (&u.Z, &t.Z, &t.T);
  fe_mul (&u.T, &t.X, &t.Y);
  vect__443.548_43 = MEM[(const int32_t *)&u + 40B];
  vect__445.551_44 = MEM[(const int32_t *)&u];
  vect__447.552_45 = vect__443.548_43 + vect__445.551_44;
  MEM[(int32_t *)&Ai + 800B] = vect__447.552_45;
  vect__443.548_2379 = MEM[(const int32_t *)&u + 56B];
  vect__445.551_84 = MEM[(const int32_t *)&u + 16B];
  vect__447.552_312 = vect__445.551_84 + vect__443.548_2379;
  MEM[(int32_t *)&Ai + 816B] = vect__447.552_312;
  _93 = MEM[(const int32_t *)&u + 72B];
  _2019 = MEM[(const int32_t *)&u + 32B];
  _102 = _93 + _2019;
  MEM[(int32_t *)&Ai + 832B] = _102;
  _74 = MEM[(const int32_t *)&u + 76B];
  _55 = MEM[(const int32_t *)&u + 36B];
  _46 = _55 + _74;
  MEM[(int32_t *)&Ai + 836B] = _46;
  vect__458.541_80 = vect__443.548_43 - vect__445.551_44;
  MEM[(int32_t *)&Ai + 840B] = vect__458.541_80;
  vect__458.541_331 = vect__443.548_2379 - vect__445.551_84;
  MEM[(int32_t *)&Ai + 856B] = vect__458.541_331;
  _301 = _93 - _2019;
  MEM[(int32_t *)&Ai + 872B] = _301;
  _450 = _74 - _55;
  MEM[(int32_t *)&Ai + 876B] = _450;
  MEM[(char * {ref-all})&Ai + 880B] = MEM[(char * {ref-all})&u + 80B];
  fe_mul (&MEM[(struct ge_cached *)&Ai + 800B].T2d, &u.T, &d2);
  ge_add (&t, &A2, &Ai[5]);
  fe_mul (&u.X, &t.X, &t.T);
  fe_mul (&u.Y, &t.Y, &t.Z);
  fe_mul (&u.Z, &t.Z, &t.T);
  fe_mul (&u.T, &t.X, &t.Y);
  vect__406.526_57 = MEM[(const int32_t *)&u + 40B];
  vect__408.529_58 = MEM[(const int32_t *)&u];
  vect__410.530_59 = vect__406.526_57 + vect__408.529_58;
  MEM[(int32_t *)&Ai + 960B] = vect__410.530_59;
  vect__406.526_864 = MEM[(const int32_t *)&u + 56B];
  vect__408.529_861 = MEM[(const int32_t *)&u + 16B];
  vect__410.530_857 = vect__408.529_861 + vect__406.526_864;
  MEM[(int32_t *)&Ai + 976B] = vect__410.530_857;
  _1209 = MEM[(const int32_t *)&u + 72B];
  _1199 = MEM[(const int32_t *)&u + 32B];
  _2483 = _1199 + _1209;
  MEM[(int32_t *)&Ai + 992B] = _2483;
  _879 = MEM[(const int32_t *)&u + 76B];
  _875 = MEM[(const int32_t *)&u + 36B];
  _872 = _875 + _879;
  MEM[(int32_t *)&Ai + 996B] = _872;
  vect__421.519_1197 = vect__406.526_57 - vect__408.529_58;
  MEM[(int32_t *)&Ai + 1000B] = vect__421.519_1197;
  vect__421.519_974 = vect__406.526_864 - vect__408.529_861;
  MEM[(int32_t *)&Ai + 1016B] = vect__421.519_974;
  _700 = _1209 - _1199;
  MEM[(int32_t *)&Ai + 1032B] = _700;
  _1300 = _879 - _875;
  MEM[(int32_t *)&Ai + 1036B] = _1300;
  MEM[(char * {ref-all})&Ai + 1040B] = MEM[(char * {ref-all})&u + 80B];
  fe_mul (&MEM[(struct ge_cached *)&Ai + 960B].T2d, &u.T, &d2);
  ge_add (&t, &A2, &Ai[6]);
  fe_mul (&u.X, &t.X, &t.T);
  fe_mul (&u.Y, &t.Y, &t.Z);
  fe_mul (&u.Z, &t.Z, &t.T);
  fe_mul (&u.T, &t.X, &t.Y);
  vect__369.504_876 = MEM[(const int32_t *)&u + 40B];
  vect__371.507_412 = MEM[(const int32_t *)&u];
  vect__373.508_2160 = vect__371.507_412 + vect__369.504_876;
  MEM[(int32_t *)&Ai + 1120B] = vect__373.508_2160;
  vect__369.504_1533 = MEM[(const int32_t *)&u + 56B];
  vect__371.507_1530 = MEM[(const int32_t *)&u + 16B];
  vect__373.508_1522 = vect__371.507_1530 + vect__369.504_1533;
  MEM[(int32_t *)&Ai + 1136B] = vect__373.508_1522;
  _1276 = MEM[(const int32_t *)&u + 72B];
  _464 = MEM[(const int32_t *)&u + 32B];
  _619 = _464 + _1276;
  MEM[(int32_t *)&Ai + 1152B] = _619;
  _1592 = MEM[(const int32_t *)&u + 76B];
  _1590 = MEM[(const int32_t *)&u + 36B];
  _1579 = _1590 + _1592;
  MEM[(int32_t *)&Ai + 1156B] = _1579;
  vect__384.497_877 = vect__369.504_876 - vect__371.507_412;
  MEM[(int32_t *)&Ai + 1160B] = vect__384.497_877;
  vect__384.497_1735 = vect__369.504_1533 - vect__371.507_1530;
  MEM[(int32_t *)&Ai + 1176B] = vect__384.497_1735;
  _118 = _1276 - _464;
  MEM[(int32_t *)&Ai + 1192B] = _118;
  _1779 = _1592 - _1590;
  MEM[(int32_t *)&Ai + 1196B] = _1779;
  MEM[(char * {ref-all})&Ai + 1200B] = MEM[(char * {ref-all})&u + 80B];
  fe_mul (&MEM[(struct ge_cached *)&Ai + 1120B].T2d, &u.T, &d2);
  __builtin_memset (&R.X, 0, 40);
  __builtin_memset (&MEM[(void *)&R + 44B], 0, 36);
  MEM[(int32_t *)&R + 40B] = 1;
  __builtin_memset (&MEM[(void *)&R + 84B], 0, 36);
  MEM[(int32_t *)&R + 80B] = 1;
  goto <bb 24>; [100.00%]

  <bb 22> [local count: 96236397]:
  vect__104.685_629 = MEM[(const int32_t *)&A];
  vect__105.686_666 = -vect__104.685_629;
  MEM[(int32_t *)&A] = vect__105.686_666;
  vect__104.685_1796 = MEM[(const int32_t *)&A + 16B];
  vect__105.686_1785 = -vect__104.685_1796;
  MEM[(int32_t *)&A + 16B] = vect__105.686_1785;
  _608 = MEM[(const int32_t *)&A + 32B];
  _618 = -_608;
  MEM[(int32_t *)&A + 32B] = _618;
  _1659 = MEM[(const int32_t *)&A + 36B];
  _1647 = -_1659;
  MEM[(int32_t *)&A + 36B] = _1647;
  goto <bb 21>; [100.00%]

  <bb 23> [local count: 2070813]:
  u ={v} {CLOBBER};
  v ={v} {CLOBBER};
  v3 ={v} {CLOBBER};
  vxx ={v} {CLOBBER};
  check ={v} {CLOBBER};
  goto <bb 37>; [100.00%]

  <bb 24> [local count: 1190841923]:
  # ivtmp.896_1352 = PHI <255(21), ivtmp.896_1340(27)>
  i_1221 = (int) ivtmp.896_1352;
  _332 = MEM[symbol: aslide, index: ivtmp.896_1352, offset: 0B];
  if (_332 != 0)
    goto <bb 38>; [3.66%]
  else
    goto <bb 26>; [96.34%]

  <bb 25> [local count: 97603124]:
  aslide ={v} {CLOBBER};
  bslide ={v} {CLOBBER};
  Ai ={v} {CLOBBER};
  t ={v} {CLOBBER};
  u ={v} {CLOBBER};
  A2 ={v} {CLOBBER};
  fe_invert (&recip, &R.Z);
  fe_mul (&x, &R.X, &recip);
  fe_mul (&y, &R.Y, &recip);
  fe_tobytes (&rcheck, &y);
  fe_tobytes (&s, &x);
  _322 = s[0];
  _323 = _322 & 1;
  _324 = (int) _323;
  s ={v} {CLOBBER};
  _325 = _324 << 7;
  _326 = MEM[(uint8_t *)&rcheck + 31B];
  _327 = (signed char) _326;
  _328 = (signed char) _325;
  _329 = _327 ^ _328;
  _330 = (unsigned char) _329;
  MEM[(uint8_t *)&rcheck + 31B] = _330;
  recip ={v} {CLOBBER};
  x ={v} {CLOBBER};
  y ={v} {CLOBBER};
  _3 = CRYPTO_memcmp (&rcheck, &rcopy, 32);
  _4 = _3 == 0;
  _23 = (int) _4;
  goto <bb 37>; [100.00%]

  <bb 26> [local count: 1147257106]:
  _333 = MEM[symbol: bslide, index: ivtmp.896_1352, offset: 0B];
  if (_333 != 0)
    goto <bb 38>; [3.66%]
  else
    goto <bb 27>; [96.34%]

  <bb 27> [local count: 1105267488]:
  ivtmp.896_1340 = ivtmp.896_1352 + 18446744073709551615;
  if (ivtmp.896_1340 != 18446744073709551615)
    goto <bb 24>; [98.91%]
  else
    goto <bb 25>; [1.09%]

  <bb 28> [local count: 789698015]:
  # ivtmp.884_1256 = PHI <ivtmp.884_1234(38), ivtmp.884_1245(36)>
  # ivtmp.885_1223 = PHI <ivtmp.885_1201(38), ivtmp.885_1212(36)>
  ge_p2_dbl (&t, &R);
  _1168 = (void *) ivtmp.885_1223;
  _336 = MEM[base: _1168, offset: 0B];
  if (_336 > 0)
    goto <bb 29>; [41.48%]
  else
    goto <bb 30>; [58.52%]

  <bb 29> [local count: 327566732]:
  fe_mul (&u.X, &t.X, &t.T);
  fe_mul (&u.Y, &t.Y, &t.Z);
  fe_mul (&u.Z, &t.Z, &t.T);
  fe_mul (&u.T, &t.X, &t.Y);
  _337 = MEM[base: _1168, offset: 0B];
  _338 = _337 / 2;
  _141 = (sizetype) _338;
  _153 = _141 * 160;
  _340 = &Ai + _153;
  ge_add (&t, &u, _340);
  goto <bb 32>; [100.00%]

  <bb 30> [local count: 462131283]:
  if (_336 != 0)
    goto <bb 31>; [25.50%]
  else
    goto <bb 32>; [74.50%]

  <bb 31> [local count: 117843482]:
  fe_mul (&u.X, &t.X, &t.T);
  fe_mul (&u.Y, &t.Y, &t.Z);
  fe_mul (&u.Z, &t.Z, &t.T);
  fe_mul (&u.T, &t.X, &t.Y);
  _341 = MEM[base: _1168, offset: 0B];
  _342 = (int) _341;
  _343 = _342 / -2;
  vect__2403.735_1638 = MEM[(const int32_t *)&u];
  vect__2403.736_1642 = MEM[(const int32_t *)&u + 16B];
  vect__2403.737_1546 = MEM[(const int32_t *)&u + 32B];
  vect__2403.738_1497 = MEM[(const int32_t *)&u + 48B];
  vect__2403.739_1532 = MEM[(const int32_t *)&u + 64B];
  vect__2403.740_1545 = VEC_PERM_EXPR <vect__2403.737_1546, vect__2403.738_1497, { 2, 3, 4, 5 }>;
  vect__2403.741_504 = VEC_PERM_EXPR <vect__2403.738_1497, vect__2403.739_1532, { 2, 3, 4, 5 }>;
  vect__2403.742_1834 = VEC_PERM_EXPR <vect__2403.739_1532, vect__2403.737_1546, { 2, 3, 6, 7 }>;
  vect__2405.750_2345 = VEC_PERM_EXPR <vect__2403.737_1546, vect__2403.735_1638, { 0, 1, 4, 5 }>;
  vect__2405.751_889 = VEC_PERM_EXPR <vect__2403.735_1638, vect__2403.736_1642, { 2, 3, 4, 5 }>;
  vect__2405.752_892 = VEC_PERM_EXPR <vect__2403.736_1642, vect__2403.737_1546, { 2, 3, 4, 5 }>;
  vect__2407.753_983 = vect__2403.740_1545 + vect__2403.735_1638;
  vect__2407.753_1154 = vect__2403.741_504 + vect__2403.736_1642;
  vect__2407.753_503 = vect__2403.742_1834 + vect__2405.750_2345;
  vect__2407.754_1283 = vect__2403.742_1834 - vect__2405.750_2345;
  vect__2407.754_883 = vect__2403.738_1497 - vect__2405.751_889;
  vect__2407.754_884 = vect__2403.739_1532 - vect__2405.752_892;
  _2010 = VEC_PERM_EXPR <vect__2407.753_503, vect__2407.754_1283, { 0, 1, 6, 7 }>;
  MEM[(int32_t *)&t] = vect__2407.753_983;
  MEM[(int32_t *)&t + 16B] = vect__2407.753_1154;
  MEM[(int32_t *)&t + 32B] = _2010;
  MEM[(int32_t *)&t + 48B] = vect__2407.754_883;
  MEM[(int32_t *)&t + 64B] = vect__2407.754_884;
  _165 = (sizetype) _343;
  _177 = _165 * 160;
  _192 = _177 + 40;
  _699 = &Ai + _192;
  fe_mul (&t.Z, &t.X, _699);
  _701 = &Ai + _177;
  fe_mul (&t.Y, &t.Y, _701);
  _2196 = _177 + 120;
  _703 = &Ai + _2196;
  fe_mul (&t.T, _703, &u.T);
  _2226 = _177 + 80;
  _705 = &Ai + _2226;
  fe_mul (&t.X, &u.Z, _705);
  vect__2183.793_1142 = MEM[(const int32_t *)&t];
  vect__2183.794_1240 = MEM[(const int32_t *)&t + 16B];
  vect__2183.795_572 = MEM[(const int32_t *)&t + 32B];
  vect__2183.796_522 = MEM[(const int32_t *)&t + 48B];
  vect__2183.797_520 = MEM[(const int32_t *)&t + 64B];
  vect__2183.798_849 = MEM[(const int32_t *)&t + 80B];
  vect__2183.799_859 = MEM[(const int32_t *)&t + 96B];
  vect__2183.800_181 = MEM[(const int32_t *)&t + 112B];
  vect__2183.801_204 = MEM[(const int32_t *)&t + 128B];
  vect__2183.802_363 = MEM[(const int32_t *)&t + 144B];
  vect__2183.803_560 = VEC_PERM_EXPR <vect__2183.795_572, vect__2183.793_1142, { 0, 1, 4, 5 }>;
  vect__2183.804_571 = VEC_PERM_EXPR <vect__2183.793_1142, vect__2183.794_1240, { 2, 3, 4, 5 }>;
  vect__2183.805_494 = VEC_PERM_EXPR <vect__2183.794_1240, vect__2183.795_572, { 2, 3, 4, 5 }>;
  vect__2185.806_2216 = vect__2183.793_1142 * { 2, 2, 2, 2 };
  vect__2185.806_2206 = vect__2183.794_1240 * { 2, 2, 2, 2 };
  vect__2185.806_447 = vect__2183.803_560 * { 2, 2, 2, 2 };
  vect__2185.806_446 = vect__2183.804_571 * { 2, 2, 2, 2 };
  vect__2185.806_445 = vect__2183.805_494 * { 2, 2, 2, 2 };
  vect__2063.769_88 = VEC_PERM_EXPR <vect__2183.800_181, vect__2183.798_849, { 0, 1, 4, 5 }>;
  vect__2063.770_87 = VEC_PERM_EXPR <vect__2183.798_849, vect__2183.799_859, { 2, 3, 4, 5 }>;
  vect__2063.771_1965 = VEC_PERM_EXPR <vect__2183.799_859, vect__2183.800_181, { 2, 3, 4, 5 }>;
  vect__2065.784_658 = VEC_PERM_EXPR <vect__2183.795_572, vect__2183.796_522, { 2, 3, 4, 5 }>;
  vect__2065.785_657 = VEC_PERM_EXPR <vect__2183.796_522, vect__2183.797_520, { 2, 3, 4, 5 }>;
  vect__2065.786_656 = VEC_PERM_EXPR <vect__2183.797_520, vect__2183.795_572, { 2, 3, 6, 7 }>;
  vect__2067.787_655 = vect__2183.798_849 - vect__2065.784_658;
  vect__2067.787_654 = vect__2183.799_859 - vect__2065.785_657;
  vect__2067.787_1534 = vect__2063.769_88 - vect__2065.786_656;
  vect__2067.788_592 = vect__2063.769_88 + vect__2065.786_656;
  vect__2067.788_1384 = vect__2063.770_87 + vect__2183.796_522;
  vect__2067.788_1402 = vect__2183.797_520 + vect__2063.771_1965;
  _573 = VEC_PERM_EXPR <vect__2067.787_1534, vect__2067.788_592, { 0, 1, 6, 7 }>;
  MEM[(int32_t *)&t] = vect__2067.787_655;
  MEM[(int32_t *)&t + 16B] = vect__2067.787_654;
  MEM[(int32_t *)&t + 32B] = _573;
  MEM[(int32_t *)&t + 48B] = vect__2067.788_1384;
  MEM[(int32_t *)&t + 64B] = vect__2067.788_1402;
  vect__1835.819_578 = VEC_PERM_EXPR <vect__2183.800_181, vect__2183.801_204, { 2, 3, 4, 5 }>;
  vect__1835.820_377 = VEC_PERM_EXPR <vect__2183.801_204, vect__2183.802_363, { 2, 3, 4, 5 }>;
  vect__1835.821_1476 = VEC_PERM_EXPR <vect__2183.802_363, vect__2183.800_181, { 2, 3, 6, 7 }>;
  vect__1837.822_374 = vect__2185.806_2216 - vect__1835.819_578;
  vect__1837.822_373 = vect__2185.806_2206 - vect__1835.820_377;
  vect__1837.822_372 = vect__2185.806_447 - vect__1835.821_1476;
  vect__1837.823_2452 = vect__2185.806_447 + vect__1835.821_1476;
  vect__1837.823_116 = vect__2183.801_204 + vect__2185.806_446;
  vect__1837.823_2264 = vect__2183.802_363 + vect__2185.806_445;
  _2090 = VEC_PERM_EXPR <vect__1837.822_372, vect__1837.823_2452, { 0, 1, 6, 7 }>;
  MEM[(int32_t *)&t + 80B] = vect__1837.822_374;
  MEM[(int32_t *)&t + 96B] = vect__1837.822_373;
  MEM[(int32_t *)&t + 112B] = _2090;
  MEM[(int32_t *)&t + 128B] = vect__1837.823_116;
  MEM[(int32_t *)&t + 144B] = vect__1837.823_2264;

  <bb 32> [local count: 789698015]:
  _345 = MEM[symbol: bslide, index: ivtmp.884_1256, offset: 0B];
  if (_345 > 0)
    goto <bb 33>; [41.48%]
  else
    goto <bb 34>; [58.52%]

  <bb 33> [local count: 327566732]:
  fe_mul (&u.X, &t.X, &t.T);
  fe_mul (&u.Y, &t.Y, &t.Z);
  fe_mul (&u.Z, &t.Z, &t.T);
  fe_mul (&u.T, &t.X, &t.Y);
  _346 = MEM[symbol: bslide, index: ivtmp.884_1256, offset: 0B];
  _347 = _346 / 2;
  _2236 = (sizetype) _347;
  _2246 = _2236 * 120;
  _349 = &Bi + _2246;
  ge_madd (&t, &u, _349);
  goto <bb 36>; [100.00%]

  <bb 34> [local count: 462131283]:
  if (_345 != 0)
    goto <bb 35>; [25.50%]
  else
    goto <bb 36>; [74.50%]

  <bb 35> [local count: 117843482]:
  fe_mul (&u.X, &t.X, &t.T);
  fe_mul (&u.Y, &t.Y, &t.Z);
  fe_mul (&u.Z, &t.Z, &t.T);
  fe_mul (&u.T, &t.X, &t.Y);
  _350 = MEM[symbol: bslide, index: ivtmp.884_1256, offset: 0B];
  _351 = (int) _350;
  _352 = _351 / -2;
  vect__1603.828_585 = MEM[(const int32_t *)&u];
  vect__1603.829_1053 = MEM[(const int32_t *)&u + 16B];
  vect__1603.830_1044 = MEM[(const int32_t *)&u + 32B];
  vect__1603.831_2320 = MEM[(const int32_t *)&u + 48B];
  vect__1603.832_2330 = MEM[(const int32_t *)&u + 64B];
  vect__1603.833_680 = VEC_PERM_EXPR <vect__1603.830_1044, vect__1603.831_2320, { 2, 3, 4, 5 }>;
  vect__1603.834_679 = VEC_PERM_EXPR <vect__1603.831_2320, vect__1603.832_2330, { 2, 3, 4, 5 }>;
  vect__1603.835_698 = VEC_PERM_EXPR <vect__1603.832_2330, vect__1603.830_1044, { 2, 3, 6, 7 }>;
  vect__1605.843_841 = VEC_PERM_EXPR <vect__1603.830_1044, vect__1603.828_585, { 0, 1, 4, 5 }>;
  vect__1605.844_2438 = VEC_PERM_EXPR <vect__1603.828_585, vect__1603.829_1053, { 2, 3, 4, 5 }>;
  vect__1605.845_2440 = VEC_PERM_EXPR <vect__1603.829_1053, vect__1603.830_1044, { 2, 3, 4, 5 }>;
  vect__1607.846_2442 = vect__1603.828_585 + vect__1603.833_680;
  vect__1607.846_836 = vect__1603.834_679 + vect__1603.829_1053;
  vect__1607.846_1099 = vect__1603.835_698 + vect__1605.843_841;
  vect__1607.847_535 = vect__1603.835_698 - vect__1605.843_841;
  vect__1607.847_620 = vect__1603.831_2320 - vect__1605.844_2438;
  vect__1607.847_815 = vect__1603.832_2330 - vect__1605.845_2440;
  _812 = VEC_PERM_EXPR <vect__1607.846_1099, vect__1607.847_535, { 0, 1, 6, 7 }>;
  MEM[(int32_t *)&t] = vect__1607.846_2442;
  MEM[(int32_t *)&t + 16B] = vect__1607.846_836;
  MEM[(int32_t *)&t + 32B] = _812;
  MEM[(int32_t *)&t + 48B] = vect__1607.847_620;
  MEM[(int32_t *)&t + 64B] = vect__1607.847_815;
  _2256 = (sizetype) _352;
  _2266 = _2256 * 120;
  _2276 = _2266 + 40;
  _793 = &Bi + _2276;
  fe_mul (&t.Z, &t.X, _793);
  _795 = &Bi + _2266;
  fe_mul (&t.Y, &t.Y, _795);
  _910 = _2266 + 80;
  _797 = &Bi + _910;
  fe_mul (&t.T, _797, &u.T);
  _1383 = MEM[(const int32_t *)&u + 80B];
  _1385 = _1383 * 2;
  _1393 = MEM[(const int32_t *)&u + 84B];
  _1395 = _1393 * 2;
  _1403 = MEM[(const int32_t *)&u + 88B];
  _1405 = _1403 * 2;
  _1413 = MEM[(const int32_t *)&u + 92B];
  _1415 = _1413 * 2;
  _1423 = MEM[(const int32_t *)&u + 96B];
  _1425 = _1423 * 2;
  _1433 = MEM[(const int32_t *)&u + 100B];
  _1435 = _1433 * 2;
  _1443 = MEM[(const int32_t *)&u + 104B];
  _1445 = _1443 * 2;
  _1453 = MEM[(const int32_t *)&u + 108B];
  _1455 = _1453 * 2;
  _1463 = MEM[(const int32_t *)&u + 112B];
  _1465 = _1463 * 2;
  _1473 = MEM[(const int32_t *)&u + 116B];
  _1475 = _1473 * 2;
  vect__1263.852_773 = MEM[(const int32_t *)&t + 40B];
  vect__1263.853_1092 = MEM[(const int32_t *)&t + 56B];
  vect__1263.854_1259 = MEM[(const int32_t *)&t + 72B];
  vect__1263.855_837 = MEM[(const int32_t *)&t + 88B];
  vect__1263.856_1091 = MEM[(const int32_t *)&t + 104B];
  vect__1263.860_387 = VEC_PERM_EXPR <vect__1263.854_1259, vect__1263.855_837, { 2, 3, 4, 5 }>;
  vect__1263.861_389 = VEC_PERM_EXPR <vect__1263.855_837, vect__1263.856_1091, { 2, 3, 4, 5 }>;
  vect__1263.862_390 = VEC_PERM_EXPR <vect__1263.856_1091, vect__1263.854_1259, { 2, 3, 6, 7 }>;
  vect__1265.873_1180 = VEC_PERM_EXPR <vect__1263.854_1259, vect__1263.852_773, { 0, 1, 4, 5 }>;
  vect__1265.874_1181 = VEC_PERM_EXPR <vect__1263.852_773, vect__1263.853_1092, { 2, 3, 4, 5 }>;
  vect__1265.875_1183 = VEC_PERM_EXPR <vect__1263.853_1092, vect__1263.854_1259, { 2, 3, 4, 5 }>;
  vect__1267.876_1184 = vect__1263.860_387 - vect__1263.852_773;
  vect__1267.876_1191 = vect__1263.861_389 - vect__1263.853_1092;
  vect__1267.876_730 = vect__1263.862_390 - vect__1265.873_1180;
  vect__1267.877_1151 = vect__1263.862_390 + vect__1265.873_1180;
  vect__1267.877_690 = vect__1263.855_837 + vect__1265.874_1181;
  vect__1267.877_713 = vect__1263.856_1091 + vect__1265.875_1183;
  _761 = VEC_PERM_EXPR <vect__1267.876_730, vect__1267.877_1151, { 0, 1, 6, 7 }>;
  MEM[(int32_t *)&t] = vect__1267.876_1184;
  MEM[(int32_t *)&t + 16B] = vect__1267.876_1191;
  MEM[(int32_t *)&t + 32B] = _761;
  MEM[(int32_t *)&t + 48B] = vect__1267.877_690;
  MEM[(int32_t *)&t + 64B] = vect__1267.877_713;
  _429 = MEM[(const int32_t *)&t + 120B];
  _431 = _1385 - _429;
  MEM[(int32_t *)&t + 80B] = _431;
  _424 = MEM[(const int32_t *)&t + 124B];
  _426 = _1395 - _424;
  MEM[(int32_t *)&t + 84B] = _426;
  _362 = MEM[(const int32_t *)&t + 128B];
  _364 = _1405 - _362;
  MEM[(int32_t *)&t + 88B] = _364;
  _359 = MEM[(const int32_t *)&t + 132B];
  _361 = _1415 - _359;
  MEM[(int32_t *)&t + 92B] = _361;
  _759 = MEM[(const int32_t *)&t + 136B];
  _675 = _1425 - _759;
  MEM[(int32_t *)&t + 96B] = _675;
  _669 = MEM[(const int32_t *)&t + 140B];
  _671 = _1435 - _669;
  MEM[(int32_t *)&t + 100B] = _671;
  _852 = MEM[(const int32_t *)&t + 144B];
  _769 = _1445 - _852;
  MEM[(int32_t *)&t + 104B] = _769;
  _763 = MEM[(const int32_t *)&t + 148B];
  _765 = _1455 - _763;
  MEM[(int32_t *)&t + 108B] = _765;
  _860 = MEM[(const int32_t *)&t + 152B];
  _21 = _1465 - _860;
  MEM[(int32_t *)&t + 112B] = _21;
  _1143 = MEM[(const int32_t *)&t + 156B];
  _1145 = _1475 - _1143;
  MEM[(int32_t *)&t + 116B] = _1145;
  _651 = _429 + _1385;
  MEM[(int32_t *)&t + 120B] = _651;
  _634 = _424 + _1395;
  MEM[(int32_t *)&t + 124B] = _634;
  _628 = _362 + _1405;
  MEM[(int32_t *)&t + 128B] = _628;
  _586 = _359 + _1415;
  MEM[(int32_t *)&t + 132B] = _586;
  _580 = _759 + _1425;
  MEM[(int32_t *)&t + 136B] = _580;
  _574 = _669 + _1435;
  MEM[(int32_t *)&t + 140B] = _574;
  _511 = _852 + _1445;
  MEM[(int32_t *)&t + 144B] = _511;
  _505 = _763 + _1455;
  MEM[(int32_t *)&t + 148B] = _505;
  _499 = _860 + _1465;
  MEM[(int32_t *)&t + 152B] = _499;
  _436 = _1143 + _1475;
  MEM[(int32_t *)&t + 156B] = _436;

  <bb 36> [local count: 789698019]:
  fe_mul (&R.X, &t.X, &t.T);
  fe_mul (&R.Y, &t.Y, &t.Z);
  fe_mul (&R.Z, &t.Z, &t.T);
  ivtmp.884_1245 = ivtmp.884_1256 + 18446744073709551615;
  ivtmp.885_1212 = ivtmp.885_1223 + 18446744073709551615;
  i_1364 = (int) ivtmp.884_1245;
  if (i_1364 >= 0)
    goto <bb 28>; [90.22%]
  else
    goto <bb 25>; [9.78%]

  <bb 37> [local count: 302544054]:
  # _5 = PHI <0(23), _23(25), 0(2)>
  A ={v} {CLOBBER};
  rcopy ={v} {CLOBBER};
  scopy ={v} {CLOBBER};
  hash_ctx ={v} {CLOBBER};
  R ={v} {CLOBBER};
  rcheck ={v} {CLOBBER};
  h ={v} {CLOBBER};
  return _5;

  <bb 38> [local count: 77207910]:
  ivtmp.884_1234 = (sizetype) i_1221;
  _1179 = &aslide + ivtmp.884_1234;
  ivtmp.885_1201 = (unsigned long) _1179;
  goto <bb 28>; [100.00%]

}



;; Function ED25519_public_from_private (ED25519_public_from_private, funcdef_no=420, decl_uid=9962, cgraph_uid=420, symbol_order=430)

ED25519_public_from_private (uint8_t * out_public_key, const uint8_t * private_key)
{
  int32_t recip[10];
  int32_t x[10];
  int32_t y[10];
  uint8_t s[32];
  struct ge_p3 A;
  uint8_t az[64];
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  unsigned char _20;
  unsigned char _21;
  int _22;
  int _23;
  unsigned char _24;
  signed char _25;
  signed char _26;
  signed char _27;
  unsigned char _28;

  <bb 2> [local count: 1073741825]:
  SHA512 (private_key_7(D), 32, &az);
  _1 = az[0];
  _2 = _1 & 248;
  az[0] = _2;
  _3 = az[31];
  _4 = _3 & 63;
  _5 = _4 | 64;
  az[31] = _5;
  ge_scalarmult_base (&A, &az);
  fe_invert (&recip, &A.Z);
  fe_mul (&x, &A.X, &recip);
  fe_mul (&y, &A.Y, &recip);
  fe_tobytes (out_public_key_12(D), &y);
  fe_tobytes (&s, &x);
  _20 = s[0];
  _21 = _20 & 1;
  _22 = (int) _21;
  s ={v} {CLOBBER};
  _23 = _22 << 7;
  _24 = MEM[(uint8_t *)out_public_key_12(D) + 31B];
  _25 = (signed char) _24;
  _26 = (signed char) _23;
  _27 = _25 ^ _26;
  _28 = (unsigned char) _27;
  MEM[(uint8_t *)out_public_key_12(D) + 31B] = _28;
  recip ={v} {CLOBBER};
  x ={v} {CLOBBER};
  y ={v} {CLOBBER};
  OPENSSL_cleanse (&az, 64);
  az ={v} {CLOBBER};
  A ={v} {CLOBBER};
  return;

}



;; Function X25519 (X25519, funcdef_no=421, decl_uid=9966, cgraph_uid=421, symbol_order=431)

X25519 (uint8_t * out_shared_key, const uint8_t * private_key, const uint8_t * peer_public_value)
{
  static const uint8_t kZeros[32] = {0};
  int _1;
  _Bool _2;
  int _9;

  <bb 2> [local count: 1073741825]:
  x25519_scalar_mult (out_shared_key_4(D), private_key_5(D), peer_public_value_6(D));
  _1 = CRYPTO_memcmp (&kZeros, out_shared_key_4(D), 32);
  _2 = _1 != 0;
  _9 = (int) _2;
  return _9;

}



;; Function X25519_public_from_private (X25519_public_from_private, funcdef_no=422, decl_uid=9969, cgraph_uid=422, symbol_order=432)

X25519_public_from_private (uint8_t * out_public_value, const uint8_t * private_key)
{
  const vector(4) int vect__39.956;
  const vector(4) int vect__37.955;
  const vector(4) int vect__35.952;
  const vector(4) int vect__29.945;
  int32_t zminusy_inv[10];
  int32_t zminusy[10];
  int32_t zplusy[10];
  struct ge_p3 A;
  uint8_t e[32];
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  unsigned char _5;
  int _34;
  int _42;
  int _89;
  int _91;
  int _93;
  int _113;
  int _115;
  int _117;

  <bb 2> [local count: 97603132]:
  MEM[(char * {ref-all})&e] = MEM[(char * {ref-all})private_key_7(D)];
  _1 = e[0];
  _2 = _1 & 248;
  e[0] = _2;
  _3 = e[31];
  _4 = _3 & 127;
  _5 = _4 | 64;
  e[31] = _5;
  ge_scalarmult_base (&A, &e);
  vect__35.952_126 = MEM[(const int32_t *)&A + 80B];
  vect__37.955_127 = MEM[(const int32_t *)&A + 40B];
  vect__39.956_128 = vect__35.952_126 + vect__37.955_127;
  MEM[(int32_t *)&zplusy] = vect__39.956_128;
  vect__35.952_101 = MEM[(const int32_t *)&A + 96B];
  vect__37.955_105 = MEM[(const int32_t *)&A + 56B];
  vect__39.956_106 = vect__35.952_101 + vect__37.955_105;
  MEM[(int32_t *)&zplusy + 16B] = vect__39.956_106;
  _113 = MEM[(const int32_t *)&A + 112B];
  _115 = MEM[(const int32_t *)&A + 72B];
  _117 = _113 + _115;
  MEM[(int32_t *)&zplusy + 32B] = _117;
  _89 = MEM[(const int32_t *)&A + 116B];
  _91 = MEM[(const int32_t *)&A + 76B];
  _93 = _89 + _91;
  MEM[(int32_t *)&zplusy + 36B] = _93;
  vect__29.945_25 = vect__35.952_126 - vect__37.955_127;
  MEM[(int32_t *)&zminusy] = vect__29.945_25;
  vect__29.945_64 = vect__35.952_101 - vect__37.955_105;
  MEM[(int32_t *)&zminusy + 16B] = vect__29.945_64;
  _34 = _113 - _115;
  MEM[(int32_t *)&zminusy + 32B] = _34;
  _42 = _89 - _91;
  MEM[(int32_t *)&zminusy + 36B] = _42;
  fe_invert (&zminusy_inv, &zminusy);
  fe_mul (&zplusy, &zplusy, &zminusy_inv);
  fe_tobytes (out_public_value_13(D), &zplusy);
  OPENSSL_cleanse (&e, 32);
  e ={v} {CLOBBER};
  A ={v} {CLOBBER};
  zplusy ={v} {CLOBBER};
  zminusy ={v} {CLOBBER};
  zminusy_inv ={v} {CLOBBER};
  return;

}


